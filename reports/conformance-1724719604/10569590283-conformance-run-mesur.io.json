{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "4f037cee-4a97-4f24-8ddb-97ebb096c5cc",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2d55f532-7e7d-4662-8a02-84ed1823e9b7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e95c8a4e-1f09-4d22-ace1-838992a70ef0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ae96d5bf-a3e5-4fd4-a580-dc2d86b53864"
                }
              }
            ]
          },
          {
            "id": "7ba91821-8512-434a-a2f0-758dea021eba",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "48182113-cca0-4ebd-b6a1-ea0fb3e521b6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4c053e83-b40a-4f06-b153-15e8568777eb"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a8aee2cf-db69-4611-bb35-46535340bd6c",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "34c4946b-a643-4e87-aa58-290251c9776c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7fd0cef4-ca84-4ee1-bb52-45fdfb951f6e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e105cb76-fff3-4f62-a6a5-d2634ed4c53c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8f56df97-e49b-45ab-8211-10d9a5bca2f2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "13cc259b-e462-4473-99fa-62f2bc0a3057",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "09850774-bc03-411a-be25-6a5b7d34ea9b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e791c5fd-5059-4a9b-b403-eeffe28ca7e5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9b79398c-5a0a-4f68-9f4e-4f184234e605"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eb598704-d685-4759-8f8b-59f62e976373",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "bcd0ad80-fe23-4350-8caa-a8c65dc0aebb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eae4cda9-cfe7-4c1a-880d-2e056c12fd02",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5b56734a-0e98-4a32-bdb1-c7276b3cf785"
            }
          }
        ]
      },
      {
        "id": "2a145c49-a147-4282-8f02-0f6f4d2b3510",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "58840934-590f-48c7-9577-9e3d3ee300b8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ad13f8b3-361c-4e7a-880d-14508e9bb260",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d1f5901a-ec3f-4e37-8173-728d04ace74c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "645f9808-7c0c-464a-b52a-60a03a1b283a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "85124601-5ad9-4865-8c31-9c82e624c7b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a9d079-960b-40e5-9bd9-5f040a4117e7",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24032320-0ea6-4a01-86d6-4061888bee9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d6d5c7f2-e859-4b6c-8c48-573263563eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d77f6558-104a-4c00-a39c-17eda9ebaa78",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24dc9b6-5f3d-4528-8197-6cbea0cc9578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ac56383c-608a-49fe-a1bd-58761a1445e9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3c8f9cad-2629-4a57-9d74-5de690e50b42",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b55e9020-441a-4cb6-adbd-527ac85a2dd2",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6fcae22-f101-4bdf-bde4-ebac5e7d7c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1bccae5f-2f0d-4bec-a1a7-6109fea27e2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129056fc-f79f-4b4c-92fa-b224b868125b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22763c2c-1677-44e0-9f99-6fc6730d1453"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4879e3dc-b58d-40ee-beb1-e12932d7dd1e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f4ca4a48-3566-4245-b549-4ea8956e1c73",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "71dd1b7f-f32d-4d8a-918f-f6a9ade9da56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f9cd2709-2978-4eef-957a-4c31c30747b0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6a7d845a-d307-4a44-add4-22c91d95164d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "422ba7a0-e44e-429e-a1bd-5329c90e5533"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bd3b27a2-893a-4084-b960-0d282b8b7a2d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b97c6ae4-fa0f-475e-b386-cc77fcbec1fd"
            }
          }
        ]
      },
      {
        "id": "2e695266-ddb4-4a12-b5c9-847698f5cc5c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c7689e5e-4767-4bcd-b94c-36f67be07131",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d191cd9e-e028-41a9-89fd-ef9641f1dcee",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a7f3773b-448f-45ac-8aaa-080b361e10b6",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e09ebf-58ee-4621-8979-099525fcf286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b24f9d9c-2b7a-4917-856a-dbb5953ffaa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c33f73a-5cf9-4cfa-b1df-99951b4ee20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "edf2d6a6-c404-4d87-a052-2c7382a54855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36e6ce3-4ef5-4182-b813-193e9965face",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f84a3e-2cae-4775-bc6e-ea20a610cad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac477a65-cf7f-4690-8bef-945aa83731b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1b9efa-3902-4975-a3bc-5d30cef897c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10cd5aa8-47f8-4f2e-ae40-b70a5559b369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d792086b-057a-419d-9c83-4116602c7891",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56088f7c-4a92-4ffb-9b1f-a0a04ccf9150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ae868eb-d5f5-4287-a0a3-da75e0d1a2e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04f7d770-6aab-485e-a33d-d976b05c2be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ed4263a-a2ab-434c-8e25-c0727e8ebf4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae44dc9-8954-4d59-bea0-9fee19cb0589",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "913c9512-9cbc-4c1b-b23f-53ddcfa97659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7f20eb2-d49c-4688-a928-02f36cf5efbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8cb54a-d22c-4570-aeb5-cbea54824bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36a8e6aa-2cf6-4ac0-b9ec-e8f210a5b570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3549298-28e5-447c-acf0-ec92050caf76",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d42dee4d-4c9e-497a-8bc7-c27e37cf498e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f45833f8-4abe-467a-ad1c-e483745d713f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60526b2e-701a-456b-a856-9d5b0febcd70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ce123be-e1de-459a-9a6e-5f4a7d7e6d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f5a01c6-0ea2-4aa2-891a-4d01ee53426b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a38d7a27-551d-4f12-8196-bc5202922cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c110739d-92ab-4afe-9263-f4a893c7402e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f8e6e26-44ec-4877-917b-ee7f85b24314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7beb128a-0cfc-4849-bd94-084f2e5d16ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdae4ad0-497d-4eb6-9cac-8b468898d9a4",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f0fe8d-7429-4135-a2ea-12ab1b858c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "917fcc50-1b79-47de-85f1-ae65cfc8c6d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eaa0bb7-8bcb-49db-b27d-5c388d439ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4b0e88e-d8a9-47d4-aed5-9a2b1b76ea4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e569f31c-2a3e-48a5-a4ec-da87acf982eb",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa8be6b6-5fff-4a39-8443-11798812fffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b6ab47e-71c7-420b-8055-9e139cd190f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "053a56e0-de17-4914-b5ae-738b2954e8df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8609569-41f9-45a0-81da-547df5398719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c7ddcfc-9717-4432-87b0-b6a3929b5069",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed24a569-b7ee-4ee7-9fde-13ddc93880de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37bd95d6-38f9-4f53-a839-059ee663b048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d4cabf-4cae-4306-93a4-04d40d5328e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f418c705-3024-4ecc-a9cc-c933fca8d15f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd8e2b31-9179-46c2-9eb0-1839b1716b04",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05cf80eb-d929-4c7e-8f95-307cf471fbdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84bccbcb-0831-47e0-a482-63668d00d1f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03767ed7-3d2a-448d-b718-12d94a5adb3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7c14b2f-12e1-4b7f-b04f-0687c3ce126c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcde348f-8cbd-429b-81fe-7b25f9ad779b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66cae59f-5747-4217-9ada-0c47baa83e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efbf628f-ae55-4a16-bd18-a519d1eca393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5deea0f2-16ff-413a-839d-3bef138b572f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc071812-8dc7-41d9-abb9-e7e605cb9523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e5f627d-a616-40e1-9113-2d3c35b098e4",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5445c9ab-463f-4f09-9637-e760981ea6ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ed7895e-b01b-423d-ae8e-9e97618162a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f9ffa3-3b1b-4a54-90bc-565477e5e459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bedc095c-b1cb-42da-a95c-4d9bf71a323a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c49c50-e58a-427c-a0c7-e82550722d30",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6550285c-8019-4ecb-80ed-0fd7bc426376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f7c7fbd-94a0-4dfa-b627-58473fa11e9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7f665b-83d4-42ca-8a68-96bccdad6ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e03457c-d134-4aca-9a7c-5196f8e3c2c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12728395-e0c7-4f3e-9855-bc44468229c1",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b0a1a7-cd60-44bc-af4d-50adca057d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a6d9037-0526-45f3-9b67-5fdf144f4215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a215b26c-31ec-4de5-bd3e-ae832beed812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5ed110f-51d9-424a-b817-1defeda64fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa4070f5-72bb-462e-93a8-6b7de8e41a08",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f8c72eb-84dc-4224-9216-ac09b38510ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca503d3b-d0ec-4efb-9473-a68b3cc380f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da5a23ce-cce7-411e-8789-4457c65f0f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e536a063-e141-44ea-b991-4a29cf5fedb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5091bd84-f1af-4ee9-9e35-0f593db93bf1",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f4e35d-23fb-4ebe-80b2-34f3695321e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59dd8b99-97cd-4c32-ac89-6de83ed4cb11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b07b6b-28f6-4763-b2ec-77bb36c674cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "298b3fa7-8ab6-4304-8b8b-31dfbe3059fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d1ccdd-8a57-41c5-bb46-c4ec7d945a45",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "757ecf90-21c8-4340-b38a-5a75d8d2b75a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c4b5bdb-0205-477f-97fe-ceff53bc7e15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404bb710-de97-4b3c-b4b3-99c44c03d3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c09c29f-f78e-4325-acd1-a7ad1214825f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b787df0-9281-4e88-8606-95ee85609892",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df412d4-44f2-4b5a-b5c1-9aafe8742cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97c0d3ab-1919-4569-abf6-fbc2bbcc02a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8fb7165-b17e-42b0-bd56-3e00e53bac66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2efd50e8-b9d5-444b-ad40-1b24b1cf5919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3abfa3b1-8016-43a0-bcf8-0ac781715ffe",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6252ab0-5bb1-4bf6-b7e6-4ca9ab7ff34f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c076bd5-c0a8-47aa-bf01-4cada28214f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eac8ab7-0c1b-4cfd-8816-665fdeaac980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "691e45dc-0e6a-433a-933c-a4a2c0c851b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec857bb-179d-4bf3-953b-c8c1ff498b47",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c681d07-59ce-43fe-9cf2-1d535cf6d3dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82e51830-c438-4412-8bf5-6505558b3b4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69702b54-84a3-452d-ad9e-cc548ac08c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "87c4b660-328c-43eb-b743-8055d00e8016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b187c633-15bf-4a59-866b-8e7df4010211",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c56522a7-d47e-4d9b-9294-f884a6a74ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "259b883e-e299-40b2-8608-a143df0257ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4819f98a-ce69-402a-898f-e647048d5520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "41712dde-af54-48d6-9582-4525dbd9fcd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4c2189-5210-4f80-b129-b21f8d3de372",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85da82e3-4dcc-4d42-924b-054bfde1e7ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42664234-5835-4353-8d21-10e9f89923b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72e2910-290c-4e7f-ae3e-3292d2b2eca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef692c6b-f961-43d0-a0b0-16343e00fe13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4579afe-ba6b-401a-b95c-b7bf1e192711",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b90ff85a-eb00-41bd-86d1-5c201c58f756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96b9b75b-c54e-42f2-a6fa-78cbbbecdfa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa8aec0-fef8-49eb-842b-db3db6461182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "99694cdb-7380-4350-a41c-077d94eff36a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3572fbd3-62ec-4448-9c58-25001b4c1741",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54703b98-1bb7-44f8-a69f-4789f20a9584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b13565e-7e6e-4901-a9d5-8bf05da4d5b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "570c141f-6b64-4150-be4d-db655d568c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "87ed2257-7d50-4ed4-9683-3406623de589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2667e32-7987-4a6a-9469-0f73d8bfbe58",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c889ccf9-03dc-4d9d-9e0c-2e185ae8b60b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bc482e3-1f5e-4271-aacf-81b244c26a4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e1f18f-794a-42d5-9ea7-449c505e7d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "febe9cb2-3230-4790-acda-17f30b514e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1fd24db-ac00-4683-aea0-b93f0e3cc167",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaaa61b9-867a-40fd-ad3c-c887fc2c06ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74f008dc-5939-438b-b5f8-8fdf2d3971e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a964ad0-36d6-49ac-afd6-b4e4586e4e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc471d4e-d395-4b94-b081-4cb710148598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82818a55-a3de-4c66-b9e7-64ee97977fdc",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c7c13c-d8a1-40a0-b513-4af76fbd097a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd5eb970-5bda-4282-8f5b-664c4a020025"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a46db99-3c2b-46c9-9c82-de00b1597298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d79068a-79eb-4b83-9ddc-4139ccb698b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12640064-f141-4cf8-af21-29b4d772d12b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94234539-9f62-42d7-af9f-22f2a5c0ff28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e53e9dd1-a995-4295-a567-c937a8ef4107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d211baaf-40aa-4515-b103-ecf575789eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "22e1e1ea-8474-46c1-870a-55a2f9208f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b121594a-eb89-4985-bb4c-1e16d362d40a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "277b3440-f782-429a-a2d4-01543f177240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0a1acaa-8344-4adf-ac87-94b88bed6135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b64d08-2c68-4094-879c-a2e4da7ca0ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "97f42071-062b-42e5-9062-a5fb68729109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f392644-f8db-426e-aa84-bc0e890cf0eb",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63fdb172-7619-408a-94a4-c22744f77d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05ff82ad-83d0-478a-abbe-6accbacdca4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c9345f-19e7-4110-8874-f85a14044e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0899364c-0f09-41cb-8fb2-967e80e08799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba96245-c5cc-4c65-8d3c-8623f11932a1",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e73f15-7f98-4168-9a3b-b72b9cead1ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "281d4b44-76cd-40ae-b90c-20097416a433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a899191-0953-4986-a776-5c9d0c10abaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "33f7385e-9803-4e2d-b112-aca7feedb2e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae49b61d-84b1-45aa-97d7-60dec3b29d27",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8417f07f-cced-4ccb-a3d0-786fa4e6bc85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9938dd9e-1f49-4596-a060-318d31463470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85200f3c-ce14-46cb-8fc7-b3d14c85312f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "92620384-69ca-4334-a18a-ca6cf0829be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0211135-79b7-4c24-9438-348df9cb274b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a1f7c02-9329-496e-a038-2e057c39dbe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed41c70e-1a0d-49b5-8ef8-37496421b4e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d6398b-b274-4098-8a19-ba2465235f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b237860f-62a6-4125-8783-52dc13f5af64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ef5387-f842-44f7-9620-eb8e29fa48d8",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7fde113-3f81-47a3-ac7c-1f86fe79c726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d03d994-7768-457e-82f9-090c8c95cc7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5284a57-1f3f-4470-bf9d-2f7e9441b6df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bf063ef-29fe-44dd-af73-ed8eca0901e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7dba240-0952-4733-b0b8-e2a0455b31d7",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1521531b-ba4e-4215-b951-b5f313b32f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "476e7525-d3e1-4f29-8c6a-70f31c0e2830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc3fa254-e1d2-426b-8159-0f4c18e0be75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "deb44bcf-add7-4cc5-82be-9130e4f80208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac70e40-dac3-448d-9a9c-95a11d556160",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f712f61b-31cb-497d-a3a3-ce68eec16cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd4be311-4dd6-4a9b-abda-658a47e14e85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f37c4a-20ca-496f-b9ba-561708620b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "05da8284-3751-401b-a800-91a5424dc3ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d70fcd4-287c-404f-839a-f8c4259bef57",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c5279e-99fd-4500-bbb7-6aa8b024baf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6eca740-9566-4370-8950-3d70f92f65d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c359dd3c-ed18-4a3f-aecd-24cccb06381c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4fbcf3c-5405-462c-95e9-5339916a99b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d68af4-a4ed-47ef-a99c-52b2b3ab233e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c39a7ec7-4f0b-44cc-ad54-40fdacc91711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc36b43b-6eab-430b-ab96-7b5a229e1efb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a39a406-411b-44c1-9b86-29b5eac5d432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3623e440-0c7d-4a12-9cca-71e0d401f4aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c70955d-8f9b-48c4-8a7d-9d458fe044b9",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17b98ce-2b4c-4771-a687-a3c389812d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d6b95cd-be6d-4cbb-ad60-c9f9f0ab5bdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb74631-e638-4949-9bbe-f7d5ce1df979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ee2578c-6936-4ea3-9454-bd8fa9b5b250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b568f1-ca40-4962-a815-b143f3ed8e5b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b3d985c-c114-48ad-b1ea-5fc8ae96c0e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d04b4ad0-96b3-40e9-b0a1-41f54226b261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "244700bf-f358-485f-9f07-caf9b1575d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "17ec4f53-852c-4de5-a159-bd26a84198b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c47dc1b2-e45c-4d97-bb32-cf7774f74e4d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7fc7659-a634-4401-99ee-42a3fc3ca859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee7ff886-cb69-4de2-a7cd-7a452fd9e00e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07452fc7-8e2a-4831-9e40-cc50a8013165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3b72c80-8dcf-4494-8f67-1624ea77259e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57484c7-edf3-4145-a006-3052ec89289f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e30e1366-23fb-4c40-b9f8-2981154b7d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23c64a4b-2ff5-4e05-b3cd-ef764f7ea5f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d41a95-0208-4dc8-98b9-e582974aef7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e8e513bb-3f79-43bb-8d84-a860fbf11e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13694a0c-6cc2-4ef8-8e6b-5e0ca84d471e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd67a3d-fed7-41d4-b299-ab4610d55a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48b86e5a-8a0f-40d2-93fa-ba3de1a78a56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48210771-eda2-48d4-8fd4-66b848d423ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "106c8970-0c37-4710-be01-3b1cb51ec4a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8a60194-b03a-4e17-8062-6b05a8119071",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f30fd5-5284-458e-9369-46849c9497bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e62eeedb-15b1-4bb8-a466-93f9c0f89bf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "112261cc-d3b2-40c8-977e-4d0a51d54092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac9e4ea0-b991-41b8-923c-9633b17b5a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc9d38a6-61a5-495d-9c4c-9456fe369eea",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bad39dc6-22b9-4451-9a39-448c61ddb2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f270a760-0566-4106-aed2-5daaf4e24fc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1c7dd5-ba7a-4386-8d7e-cbfb28f41606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3d5014c-b0d1-48f8-bd1c-a9b74230dc6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbfdc4d8-5fd4-48c8-b782-4f0936942fd8",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "316d529d-ab81-4da3-9818-ea601a559571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b07b540-b9bf-4800-bccb-3baf66dd9ad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4a20c0-82c3-42eb-8a13-9f67ce46238e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4c343c9-58fa-4707-9b75-8f073d2b8e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2451209a-53a5-4b6b-8168-0c565da14d93",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac432ea-a819-4977-ab41-d553e5aff627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0c1ee12-3151-480e-9bb1-b559d73bb826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "579c3761-e31f-4916-91cc-d358d89bd042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a6b5024-399a-4e3f-acf8-22b067c60641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "205c8822-0262-4f6b-ac20-d6b29ecd1e5a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd398054-2b97-4f20-a3ec-4894e95bb28f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dda5d2e1-903a-48ef-bc43-48e3e042e30e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ccfd1e-6150-4ea7-8dc6-4019bea42858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "766460d4-7118-44cf-bffb-02a97384232b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb12f230-e217-44e3-acc4-6f902f3a251c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20fbc398-d805-42b5-8a4f-e80c36bb9394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d45211c-c65e-48a7-94cd-f39eb1e194ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb567c44-a951-4637-807e-5983d6089bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca344d00-724c-470d-8a6d-d1a360b245b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212c1458-6fa2-4099-ba30-d8bfff23bea8",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22a8969-ba18-43e5-b595-21102dcb7a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed79a1b4-60e0-47bf-bee2-ed64e54d6463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd0320f9-d433-47f5-9a5a-8ca94faed75b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db5a1fa0-098d-4df1-a193-e5988c4f86ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca312890-b10f-4e67-9212-8760082f1718",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a244798-141b-4590-842a-f1e08b04a433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b6069a-52f4-435c-ad0d-ed551225d1e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873cc039-bb0c-40e7-b551-c6d4cc3e93ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "47093614-e119-47ef-bae2-fec6cafc7ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6b09c95-305b-49d1-82b3-5436cc98ce87",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db7a31b-c4bc-40f2-bc36-f108490bbd0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca657681-7b54-4185-8363-3225e8783479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55dda665-2444-4410-84d8-a16bab24b76c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6638a6df-6716-4686-aeb1-287ecb070e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9999a72-facc-4646-b10f-25185f4410df",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da3ed8f9-09be-4ed6-8c25-2c619a97b4be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5bd5669-c898-4340-b212-9acd84e8c716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f942dc-b2cc-4bdd-b266-36d41ade20d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4a1b847-c7b5-4e1c-9a2e-3144a9a1d07e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c6f8c3-0943-413e-940e-1edfcddf11f9",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab028653-0186-4d5f-9b89-28e20bdfe831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "646e2eeb-4fd0-4e68-a7f9-46f1917e720e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc521233-6397-4dcd-a843-36c30b792bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a619eb74-120f-435b-8553-363e65d68912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db47aada-42a4-4dee-8183-07f83e925fb7",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa9e6d6-3892-40fc-9798-6fa74ea25ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "218efa99-e15b-4ea7-b48e-f56f59922b96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cfcfac9-5800-459f-97a5-edd7ab686eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dbab38b-b17f-4889-9a93-70ec76be8cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81fd5768-eaa4-4e20-bde6-53488e7a2c9a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2cb7a00-7509-47ea-baf8-0e73b3251e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50cdeef3-8bf3-4665-a4f2-0750d2056e4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b677be73-6d98-45c2-8ecb-b5fe373ba8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "7951cec5-31e8-4682-babd-81a6bff80e77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f67a7ce-8c46-4293-a407-f18c447b11b1",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f0baa65-59a1-4f2f-b8df-7bf0372219cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b032ca4f-8b5c-47a3-8115-b4ea30fd5741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8ef0fb-9c6a-45e9-b703-9873019e724e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b29f226-96ea-40cc-912e-37bdc95b38ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3569776e-e1dd-490f-97c6-dc90c2a5e7d0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "353863b9-72b7-49f1-8523-4c8b4333e1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49e7fc85-851f-484e-b3ba-860dbcb4cbea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3f458f-303a-4978-965e-14381166cc19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "266c911a-67ba-4e95-8950-a743d1696d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f21bc94-764b-4aa5-9700-27cc2d07b6d5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce441b76-2185-411f-85f1-2e193b9c8766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9191edcf-865c-4d21-a77b-c610ef816097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33735210-95a2-4a40-93dd-889d0be27268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce06306a-1ac4-4d66-a8b4-3a5b3542b3e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090817fc-841b-4841-88c2-11f509e74f78",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4678af1-82e8-4880-b6fc-81903abc04d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be57b2ea-bba4-43be-a673-3709c8b644fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b6eedd4-185d-4c2e-a6b2-2662e420030e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "45ad702d-a110-455b-9cd4-aac620e6a1bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb16e6e-eb5a-468c-9751-a3d7a0cda275",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a5d8bd-d288-4dd8-ba23-9042e7970687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "827f7555-5e46-4f59-bb39-ed7dd294180f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa959d8-556f-41c7-9ba0-8745a528be5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "920b9298-b350-4280-94e9-6a8374846ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86dc124c-b1b0-43b1-ad9d-6f5e01790b6a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9556bed8-e49e-4861-8337-c3b3e8929d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e31eb46-a160-4f3c-b2d2-e19a8544830b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1a8500-d345-4a3f-80e6-f5902402e256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe85a881-ce13-4d22-b2c6-f43ca6157d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c802d6d1-5422-47ad-9db7-8eab026c4dae",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb99dca-c15e-4bae-a8b5-9a319bea9d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "811ac597-0367-446f-9399-c2a5439e9fe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa9f291-3f01-44ac-a4af-7f3dc5192899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd891ccc-8ee0-4878-89a8-23f5e790f4c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e860d75-24d0-41eb-85ab-afe52bf2b217",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebcbfe35-783f-4fb9-bcb6-b89ee4c9739b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94909bb4-6bed-4593-b185-8983b6613866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c66f565-e2b1-402a-a4e8-9260354257b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37fc111c-8a81-4311-a7c6-515b0d78d0b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e55d9f65-6638-48c5-ae6d-d7dd3ac8434d",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "603d796a-ca11-4466-bb84-381525842af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f8e02dd-50a0-4d6d-94fb-d06a2dac8c69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35906314-8cb6-4285-ae37-8371934a409a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5606d4f5-987b-4c99-b4a1-55eea3d6a332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7487d39a-2170-40e3-92d4-0d25b8ed46e4",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c05dcc49-01f2-4873-8edc-04b33e952c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c92d208-54fe-42c9-babc-9086cc076fa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c25dfb0c-5a69-4812-8cd6-37a65237288c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9219354e-36a6-482a-aed4-382fe1a25da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ddf24fa-b3b5-416f-b673-8ad2a795c852",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65aa21c0-5edf-453b-a4f9-585a4eedd979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16fdbbc8-e844-4f83-85e3-80004d7dfaab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a38bf2-95e9-44fe-bde0-b4e1bcb59996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4b708935-cf79-43c1-8d1e-ef5409cbd952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca5e366b-c618-4180-b2db-d953bd7b3cd6",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "368c6785-7892-419a-94ba-7089d92598b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d7975a5-a448-43de-a1fa-0fa194e99894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924629fa-8360-4d04-9204-d7b4e3416158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2610a522-ee42-495a-ae03-6a013ab9eced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b555c222-18d5-4564-88ed-e6bb8a4b4836",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afaef45e-62fe-4a46-a276-45a8f2e02663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77614271-10aa-4a7f-b807-1ff2ac298402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8fe120d-f400-4f94-a48d-ff80c679e0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6af3862c-f79c-451f-aeb9-ba80680e971a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c02a396-f637-4059-ba0a-eaa593f8e653",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "833720ea-b285-4f11-a347-7158ffe5ff1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c54eb12-bb05-4542-b598-111d9ec4d3c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d60f210-9a99-47d4-b5b9-7a6150595481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0524f2f-87a5-4961-a602-49a700e2f515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5d24fc-5738-4589-86ef-53f010e1fbb6",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd907988-93c1-469f-83e8-81f661a506c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c06cd72c-1035-4cc7-811d-7c279d51019d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e34780d-de98-42e4-9928-66809e301d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "94883daf-6057-44d2-bf64-e6a7bbecaf20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d73a3e2-9be1-4668-832b-8793a81b5a1c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00001c5-3d16-46f2-aea3-892c281c9ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "033a4c48-883d-4620-b50e-6207d87b69f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ba3308-61e6-47fb-87c1-c0b5ea3a630d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2917736a-1423-42df-8455-822646579a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d011ef22-c910-4fdb-bf72-62c6d0939b14",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0508c7a4-c7a0-407a-8ea2-f733554b3423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b6d0523-0ce0-4a57-9493-dcb0a25167b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f2e70a0-d6c3-4dda-b696-a4e892d03fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b9fd675-f784-40e7-b1c0-963b96b986be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4554d50-d365-46c5-87d5-4c25d6a9a8c9",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e66c933-5c5a-4160-8728-379696a04af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87082277-393b-4bf3-bd06-3e98c751b2f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4698dad-2aa9-4fc8-bec8-26b51197fc5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2c9b4eb0-38aa-4629-9de4-e089f0993ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c51c90e-71cd-4971-b5a8-307ebf54414f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e8f763-68e1-4b85-a4a2-f3f8b26ad6ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9df945e8-67fc-4320-b823-db374cfd0608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33833535-9021-4a35-a413-a51821c4fda1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "791c3303-e7b0-49ae-b955-84a9b3956906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e01c3cac-d65c-4d14-8049-b9ad4ac5ade9",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48cfd661-7028-4a3f-bf00-86517380290b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1a462aa-d45b-42b1-a0ac-83559a11e8d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e0294b8-b4fd-49e9-a13c-6b6ea3f78ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4aefa5f-24aa-4dcb-b0bb-eabdd9be1d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6107af8f-62d1-47cf-9b44-ac0e9df76e69",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7d652c-ae92-4cd8-9f6e-d3c7cf379cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dbc0f59-b868-46e9-8c43-79e526501ce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aef4d62-45f5-4dfe-adf1-1ea1c2aacd9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0e0aa3a-8e9e-4ef7-be4a-b32b37a8453c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9d09a8-49b4-407d-87ac-163a32d972d7",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a331de-705f-4437-a5cf-c83e964cd15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb66d633-4261-46be-9faa-d8e2b7872fa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea32a32-39a0-4f40-bbaa-fa5b32e9e9ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7a06a66-cc04-4f58-84a6-52080ca3a47a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848c7434-e09d-4527-bef9-c910bcca9159",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b01b2f-6fa6-462b-99ff-cb6a80b0f81a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5d1b6ef-ff65-4214-a923-0287a6fcc693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e3d055-46e3-4f77-b5d4-6d1e85aaedbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5feab9e5-a73d-418c-87f3-f6ebfb7867d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106b541b-d5e5-4d76-ac9a-f2574fde32c6",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c1f899e-739f-4522-ba5b-0a34f8ea3316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0097f87-e4c6-40ce-9e0c-d597d2742e1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b72fd6b4-44b7-44e1-b119-db927526133a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ac994e13-660c-4b28-b6b5-bdc3ae09ee57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6823e204-5264-42d6-b9d2-dfb3fd9da1ba",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23eb863d-895d-4aeb-a1c3-121373b0ccee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baee59a7-5152-49ef-bd15-1492b3b36bee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb25190-0fd4-4aca-8809-5fdcb7d389c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3bfaba3-d2ed-4052-8570-0f251c755ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a7fa65-1b3b-4d74-bce2-67006f8438cf",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eceed5a-d822-4a3f-9aed-d943da83e895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40f3de0f-f33b-4718-8212-c82738bdf9a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206e74d3-b6ca-4603-b30d-51d57f3caf39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab93e1ce-c74b-4662-9054-045129ec276f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1adb8f23-e3bf-4733-830b-f18bf6b612c0",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c09806a-81e2-46ee-9409-85692a8d3ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "961a105c-0d6d-452d-a2d5-8299dff45b09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5fa40ac-a8a0-4642-aed2-34103613aac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "86486c66-077d-4751-a81f-c1885496a6e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3dc69a4-cc12-4112-bee2-78c917b655b8",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4145ebe-789a-4e56-99cb-b33b915674c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2185a310-ef96-4e56-93d7-cf2ec4bdcd11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceafc5e4-b12d-4478-b26f-3b98ba03c441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "949a5bcf-d142-4d50-92ef-1b0d850576d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80efe9f7-fa5f-4bbf-ac14-981608e518fc",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd56cc7-c258-4df7-b9da-c86c0ddfb730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4445a37d-eabc-4f50-84d5-8cc59b367913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d30aa0ab-cc80-4f44-b771-3318e022a5c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "95262154-7871-4120-a448-b83aba4fbf6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2236610a-85ea-40c8-a080-85d18e40520e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "151b6899-96ff-40d0-9bc3-0e20693e4d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a6178b6-c503-4f65-803d-86bffc136d41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe552eed-199c-4c33-b761-57d74a0b0b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff3dd608-c2f3-4f68-83de-2a6190033b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ccdaf0-adbc-4b35-a03e-95c2fa2765be",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e46aaca-b68f-4ebc-b78c-22fa6245c906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1680e25-ee73-413a-a73a-917f3a8cc2cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d998048f-b36c-4995-b16a-414a723f8447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8e72fdb-9e50-4260-bffa-34abd611fefd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b136144-3a2b-4ed3-a1db-232986c324b8",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2adae3d-9041-44fa-903c-eb23163fb5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7b5601a-24df-48d3-a658-98fb27b858fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721b64e5-31cf-49ae-9325-18bf13af1964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "40cf567b-ce20-4674-bba2-4cb6bdfb7b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850b377a-d881-4dc6-bade-36959cbc2f67",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af843092-9c42-4f0e-a5ff-0eadd8bbcf59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d04fec57-a738-4b1e-864a-dff9fb8e8f8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73dd770d-927f-48d3-92f1-e66a980b302a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0818b36-43c1-499c-b981-4af824c86e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2357be6b-9c2d-49d7-b2b7-17c44fa8c4cb",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ff2b02-179b-4e27-b505-c80c28866a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99aaa3ea-0316-460a-bf78-32ad93440def"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "254aca0a-12f4-4eef-a792-14baa95cb8e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7fb8eed-2b53-406a-82f9-abf9a1a0563e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77501d46-5631-42f9-8680-2bcd7803a3b8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd2811e-aa7a-41b0-89b5-66b3fe70cebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b9b8295-fe29-4f82-a3a7-81e695c057eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b59dfa6-b5f1-4e12-98bf-533b5e2a812c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d3e9eef-a8fa-4f25-9d56-9e356fbd22fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b632d3ca-7ec0-4a21-9daf-c3b6e7457401",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab62c006-5762-4e98-a43e-3ce311d93e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "87d74b9d-66b2-4018-9173-c79d7c9919c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69af24b5-ff55-4fe8-a959-2d4edf9f89b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "00b3bf0d-d9ed-48f9-98e4-d4dc641ec7c4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fbe6a7b7-645f-463b-9d57-5d78a9eedd6f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "34dc8bf9-7ce3-4643-86b0-6085bbcc0b96",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e22ac6-3428-4af6-a863-2c453c9d50c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "45617476-b594-4474-99ef-3eaa73bdad0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "109152aa-8034-480c-b253-d3a253a85047",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f541b16-19e1-4774-b7a4-58d5547ced69"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "735f6e18-f66d-44ef-996c-8339c656a188",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c58e1b08-c126-4de3-91ea-55292e26e656"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "290e0d01-deef-4af9-a082-35e79be89c6e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3959cb25-7042-44d6-97f9-073fe2cde8af"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cd0e8e2f-ec9d-4dfd-845c-675b3cc8ea96",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a7239dd7-289a-4eaa-989c-a047f01c1cdb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "699b4ef4-ad95-4e35-8fc7-d40e79f10ce3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ec9d292c-f4b7-4261-ba6a-2702630938bb"
                }
              }
            ]
          },
          {
            "id": "92e8135f-5686-47b8-933a-f196c4877908",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c65fe6f0-e96d-42b0-b81e-550c9ac41a04",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "6a444bee-7928-4f40-85c4-8bba85480e00",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd725161-0763-4616-a3a8-52f5cf1f0f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f2f585a3-0b10-468a-90d4-403448a885a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4756a1b0-688e-4446-8c5e-b5e3e11fb572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "217816a4-d834-4775-a94d-efce7bc89530"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "47d735c2-c11f-46d7-94ba-8db821980907",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c1c730e-5698-4ce3-8902-4f4bf13a6f3d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0990a8cc-8a92-45d6-bc5d-23d4360364dd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f64f8be7-7416-42a4-b69d-7554ae806e17",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1997b990-0e57-40cc-a24c-a0309ff12ebb"
                    }
                  }
                ]
              },
              {
                "id": "73872180-bed0-43df-991c-f63515f32b42",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6253914c-4e41-4e2f-80c5-cfc0059a2cd2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "58f0f0cf-5b9b-4d1e-9ad2-fdc4aa6fb2f5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "609f65d8-67e0-4da2-ae26-27c1585defeb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d3c2071c-6eeb-46b0-9fed-9324d9e24856"
                    }
                  }
                ]
              },
              {
                "id": "4a750373-d10f-43dd-be46-4a65fa12e0e1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "26f7caec-6bb7-4c89-9447-30aba7126e06",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5c2589b0-5af0-4a6b-83e3-cbdd2fb00755"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d833a64-6018-4fdf-a00f-3d37326b1eb1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a781fa83-de4d-4fd9-b125-64e80fe9db26"
                    }
                  }
                ]
              },
              {
                "id": "9a08ae57-6467-40a8-97b8-25e1d3e57ef2",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4dcdf218-d34a-4de5-8490-ed11392fc3b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "733d7b56-bf6f-4e2f-ae88-defa911f4afb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3912d0b7-94b4-4828-bfef-58f9728602c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "918bc854-3884-4bf4-b0b6-0d9bf0e652aa"
                    }
                  }
                ]
              },
              {
                "id": "24655b2a-503a-42bc-bd04-01867133d738",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d2aa894-ea79-4144-9ac4-d8db194b2a9b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ac103303-2f21-49ad-b132-ef4b3369e5a1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ebd9ed2-5aa0-4e21-be8a-c1a0bca89fe6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "502e240f-e600-49fd-8ad4-86d7a53a6ae6"
                    }
                  }
                ]
              },
              {
                "id": "6a0269fd-a12b-4dfa-ac60-e8b4bfd7a3d5",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5baa8e72-d661-4c76-9166-0603ccbf4455",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "02ad71cc-8c33-4091-af61-3e19d7a6ac98"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b3b76aa-8833-43fb-8aed-d019b453e19d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "04784189-9346-4462-b23e-48662de2b51c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "39b64800-f00d-4f82-87fd-e6f47486df7e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6af65b68-b04b-4e6e-ab9f-3bba3f661236"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fd8973e9-c1b3-4f40-bf5a-d7812089dca7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a8b6e90d-dc75-4877-b51d-60365285ec5a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3dfd3193-c7c1-4c4c-b30d-db3eb5af94b3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "68174a23-2c4a-4046-8aaf-b843eed1f244"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ae359b63-97d7-41b4-b132-dba02322196d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b04c5a81-2321-4fec-b628-0fd83e5a8877"
            }
          }
        ]
      },
      {
        "id": "fbb0ecc3-fa8b-4067-84b9-46d899dfa6fc",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c6f05e92-9cf9-47b7-8640-eea44b353815",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6ff8d49d-569d-4a9a-9756-006332841f00",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "221a9cbf-7f6d-4cb3-8588-0f95fadebf56",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e500531a-864f-443f-b3a4-098d99688b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fedf27d3-edaa-43bc-ac33-8bba619cb596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2422b5e6-e908-4671-9eae-aa2a133ca6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "de17c514-8e71-46ac-8e97-fd65af05188f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "485b1811-b651-4900-83e8-dc4110f3b6d9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83ae94e-2ac0-486f-b771-bef20cae1f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47756e96-aef2-49c2-a30b-9e7536135712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c1981c-7f9e-440c-aa23-e22f30fefa66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9abd7148-a6c3-4837-bf2f-3defb0208862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d34c3883-b681-4e7e-af0b-675d99b729de",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf85fb7f-ef5e-4d69-bcb4-0260980a2e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d922c92-6098-44b6-8573-697a9cbb5f19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f0e6a2d-5fcb-4a67-b2b3-344a585d460b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6221bc94-3a88-4aa3-9436-fd1ca0d785d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "481c3aaa-93f3-4926-86b2-04deee9608de",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d877e2f7-333d-4da6-80d2-328671141084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dbfa00c-2265-4d4b-986a-18006e2359ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "818bc42f-c4f2-4783-bc8e-a8fcfd96a3fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "438feff5-2632-47a5-82ef-a77a13e28c85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1530f789-641a-4b26-a38c-82a0b51d3c6b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f15c315-814b-44fe-9831-103da329907b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b76a9141-53dc-41ab-94f0-701e72b84a77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6910049-cff1-41e2-a638-c5aacb418026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "19eb6e3f-4061-4d61-a8b3-87bb371049e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a707ea-aef7-4f33-b9b0-06ea2e152aa1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "558d7477-df51-4289-966e-73a652d0422f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92bcfcb4-749e-453a-bd65-793924aa7aa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9942b56-2291-44f1-ae29-e1e177f08c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b3113fa-0bf0-4a13-be50-cdb12711eedf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc52274-3f0b-45ef-8e28-9d25c78e08a1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "737238f9-353e-4479-a2fb-909f93068de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1abd8dcb-f30a-4490-92ac-9b54b0e90e05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6080133c-5722-4c6e-9aa4-60e4dc732d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "69d7e377-6037-49c9-b996-45b27ced499f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b69cc380-5015-4ec7-a746-71ff75729ae7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b4641e-66ea-45b5-bf8c-5d1f644acb2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "054b7e02-501e-4d3e-99f3-68b7c44c7807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad029546-6136-4363-a296-78f81b7287c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "99bd69d1-cd75-49d3-a9a7-0806d8d1f95d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74bb44cf-aeb0-4dc2-9135-60cd7b4d2a0e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c78533a-d481-43e5-8062-45ed354e5b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea5a4e5d-85fb-45f2-afc7-c02c7a401bcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d9dcbb7-3497-4d90-ba35-9dc3cf7e597a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b6552b5-f399-43dc-99f1-9396124bd781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340eb75b-c88c-48cd-81f6-fc02d4314a0c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99066e16-917e-4dbb-afe8-567dc7be828d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "855fbfcc-da66-4c9b-92b2-8778ce1a2cc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb4a26a-89ec-4734-99d1-85cc826f327c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bd7b100-cab4-4f37-80c5-47fcadf8d487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bbc7e77-b04b-4e54-9563-d0244af19873",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20250c00-c87b-4636-b426-8f2708f6d26f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf21a860-0a7a-44a7-9518-e4fd924dbfd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7407d910-7d7a-4d5f-af17-96cb5275c42c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8c955b93-f659-498e-ac3f-517d00ab28cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d36078-1982-4667-9e73-752d649aabcd",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96660674-090e-4f10-b12d-e9c61a7af19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3da1dc4d-c77b-4f17-a4d7-d65329c35c61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d01627c-f4a2-4b9c-afd0-ce0accbd1bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2f3da998-86a3-43cb-b2b9-ba32eda6bc98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3983ba3c-0632-486f-878f-e68f06370ddb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5757511d-c70b-45a3-93be-12f76ad4969a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ea5a4d8-a5c8-4084-aa50-bbdde6266c09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f87a5bcf-043b-4785-9334-0bcce9c9a03b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5622338-3089-4f71-8149-7b3ab26ae90f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c27d3bcf-f889-48a9-906a-6dfef6acd61b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f049e62-e29e-4419-b08a-88f5a9980668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a813ad47-db25-4519-a84c-5bf827b423b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc2100e7-f5dd-465a-814f-4f5efed0ca99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "10764883-1aec-4f52-9b2e-d7debeefabc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1274c9e-cc10-4f9c-9d4a-99ac98941436",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3abfb3-cd2f-45b9-8b6d-e3b9f953ffa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1431ddc8-c9da-4846-8344-59696f68f085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e3c376-0e90-4cb1-a852-eabebb82e360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a246ba1d-09a1-4dc2-b11f-cea736087155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da1e8b94-f912-44cd-bee0-5caaf75f177c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f9b50f-7c32-41fa-87dd-c7199a95f369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a135472-9575-4585-8c2d-1c663a999343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d94dae1e-7099-479d-a79c-5c600c2e141a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4e92925-785f-478a-8da1-b322cb415837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc726b17-764b-40a9-842c-57bb5cb28445",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75204262-507e-4d3a-8638-cdee80741332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2571d630-330c-4598-b46a-254c182e477e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e46e4b0-2172-45b1-9db4-5eda767a0882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a9df960-11f1-466b-9673-8fa4b9d55387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e5c689-8869-421b-87d4-a5f62905e745",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2add46e-929d-471d-8382-8c202d058b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29f1af7a-83ac-4e3e-b5a8-90c591d27d2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1b54088-f11f-4f2e-bf6c-29688417670d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "59f06d83-2f0e-40dc-ab72-6cf39664c774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e9ec76d-7dea-4834-aa4d-943041651047",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c4630a-3534-47e8-9957-d0c5f579c773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "491e0567-52f4-4a4f-a4b0-a593102cec47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc974c94-5fdf-4efe-a5a9-d1a4836c1b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9611f591-e1e7-4510-80f5-367e80d84116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd90e8c-2c80-4019-a42d-2d16320de6af",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "418da561-30a2-410a-85a6-b4df132a3944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af7c20bf-3339-4ddb-99a1-925e49454d57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ac84aa-047b-4756-88b4-c058ead64926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5da11a5d-58a2-4156-b90f-5054a6935ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "639324a5-1a94-4a30-9926-e1196e919eed",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa97fc4c-6551-4564-b6f0-041bd2f1cbd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a10c1eb3-2858-41b0-8635-fc981b7df2f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abcd1e2a-3a53-4827-8bc9-fa8f9a9e119d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5c72008-169d-4185-94fb-2d545dcdab5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af932b3-9696-4885-b779-40efd2f16762",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d433da18-9da0-4e2d-88e6-a8cdd02cbdf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15dac18e-fe43-4c4e-bedb-69595a4447c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11962546-e9c0-41ff-b613-544c22efa288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd938f42-c157-4e79-ba31-50ba87432c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6efadcb-3f6d-4352-afa9-e483edc08e12",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c1d88d7-e6ec-4194-ab62-6587d3866190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3095dd98-d425-4f62-803e-23d292ee5a19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb4595b-765b-43f3-b4f8-d097186a80a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "820e1987-9ae0-44e7-a892-fbb9b506a8eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37469f9f-4ffc-49ff-8ef5-741aeb0af1da",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c095bae-ab36-4162-be7b-77bd190eb081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca6cb928-aea7-48a8-b253-68d947b44ca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd9521d-3b4d-47ad-bf3a-c77c1f94a380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2131457a-9d05-4e12-a378-05a8e3cdc710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a90bbbe-2f4e-437c-be6b-a4a01656a021",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca903d7c-fdb0-445e-9b99-303618335049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95c2b0e2-d458-450e-9aed-1a38b7440199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cdc05a0-972d-4559-b001-cf5c85a8bd11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59974378-8a93-4bf7-a385-01615d321f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fecb9fa-22d0-461f-996d-f996b9250571",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90dd855-f8e3-4277-ae7b-09bf80d5a6fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fb49bba-d350-44ee-afdd-cd13f829511d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f23662-485c-4e89-bb33-6cb70f95725f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55e69f55-91c5-4329-be1d-659466040744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ce2fc5-c10e-4daa-ad4e-f5a753eaebb5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b514e4b4-f7a0-4a34-92ee-025952b94a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b336ab64-ed4d-48bd-922f-3eaafa26627c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14301b52-3b2c-40eb-b252-c0e6e5536d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a99a351a-db03-4e88-ba67-5d47f6f1e9f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed269f72-6f22-404c-be68-12287fbc197f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "352a62df-bd13-439e-bc2b-705e9e20248a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90e9cec9-4a4a-4e88-9dc4-f1cbd1ed5d39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d11aa244-8da6-4cb4-a4f8-9ec5fa73e469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bd1ad06-6837-45a2-81a3-7874837b9f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a02154f-8424-4f2e-9eab-49878693ca9e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a896426a-c975-42fa-82ee-07d66a735dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b41005f6-d33a-42ab-9a44-48530cf5cc26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d72ab4b-f7c2-4df8-8a4b-6896a708449d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9b7bf46-4e9b-4de2-8ee1-22e8a04c2120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf9d4a6-14d3-4bf0-90a3-ecd7461eb412",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c49425-97e6-454e-860f-18661eb9fced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba1fe440-fad9-42e2-9991-39ad02aa9364"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cdd06f0-6cc2-4d94-83d3-1fe3fdac0c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11d4e07d-11c0-4c7b-94c5-34dd3b14ba99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c035b1-6a7e-456b-b67a-e2b8c6991ba9",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db0762da-ee71-48a3-a2de-95515ddfc79e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca5df463-fa0f-44af-9768-52dbc6ddcace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd1bab3-a2e1-4189-8340-02183f4d6970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44a63927-7c47-4dcb-9aeb-06f339939d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb89f824-3dac-4b4b-8bdf-25b3ee54cfb6",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d3af5a-2e5f-41ba-8eb8-108011df0771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2a118da-1ac9-4817-b959-8135e943ccab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e4025f-60af-4c82-8e4e-68f112f5d19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9686a1c7-ea4d-45ad-af99-c741eb88542b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96579488-e603-48ac-844a-0c0e3c8529b7",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a380c9-f33a-4631-869e-7aff9954aa41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ab4ad5c-10f0-43a0-b525-3b07894c793c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f72939-0167-4ff0-a420-12e57c143c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b7be244-3a1c-4457-9ae2-4ff650e2f601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b2c406a-fca3-4ccf-a033-ed8bdd34df74",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d71fd28-a834-402d-a049-631c8f378750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a197fdb0-cb4f-4980-8e55-3ce56da1b613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c9188f-c8c9-4f86-95ee-e395be48da1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82b30baa-56fb-48d2-b81a-867bcdabfa91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c68a903-fe5b-4db6-ad32-56299a30403f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e9e829-70ac-4c00-bd0d-af5d9addbbce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc38e9e6-d3e1-4fd9-82ac-fb711e0d535f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160cd064-54cf-4100-99ae-51e0c6173979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a4d6bb3-a0e9-456d-9dca-fe7110ad6917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db4e5b42-1ad6-439c-b428-3e6919c001d6",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1f971b-e0b2-4471-9bc8-5fbc1d00efe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "684f4337-7048-49d4-8330-535a40d36756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb1acce-dc27-4d9d-9de7-239912f7bbad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2eacfb8a-bb7c-4fb3-9368-6ea1b1ea5d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e52ea9f-6035-4470-b03e-a326c067398f",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e3d185-f46d-478e-b5a3-f49260cc5023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c96a512f-e0a1-4144-a332-fc14fb8177df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a401290-bfc3-4fe4-b12c-04e671392b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a16e150-d36f-48a7-909e-6b144a92632f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "013e1603-7a4e-432b-9bca-633f304ee88b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a0648a8e-1be1-44b3-974c-bd0a164d1ef7",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b449f0e7-b756-4f7d-8726-b49d65d2e85d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ff807022-0ca7-46ab-af7a-4827fabebc2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b831fd0-582b-4535-8367-9403d2f416da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46e4fcf4-8f13-4e8b-8a32-21e3af645ad4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06f8df71-6bb6-4b81-84b7-b87764522753",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ed5cd51-8802-40a2-bc0e-2a1e3956b25f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a4e8953-6703-4df4-933d-5acbfe2240e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b9a51ca-f94e-429c-a5e5-ea9952766fb6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fbe24931-e035-4e71-a1df-1923e5a8d773",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c165dcc7-8b93-46cd-bcaf-aa43b7f5de8f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2f11efa0-9dcf-4bc3-b7a2-77b9d6a2c32d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2618af43-7e78-4275-b349-183bb3893cdc"
            }
          }
        ]
      },
      {
        "id": "2883f2a9-851c-4d62-a57b-b650e1a60b05",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ca8e6253-fd10-4ba3-bd3a-ddd952e43e6a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f20e0f8d-cba7-46fd-b9a8-0b831ff41f7d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5c289d02-549d-4cf8-afb7-3500ce64e65f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "750cf959-e5dd-49a2-8a74-f5686c6bcf46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efbcf5e0-597b-4dfc-bd50-661c507edf3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a5bdca-ad65-482a-9615-c31b94ba1622",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "606c9a4a-3622-43dd-b12e-aa3f358a5b07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "955d741e-c815-4dc6-87b2-f0451cbd7353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83c602c-a27a-4fd6-bb44-f12eb049fee9",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "990c3424-0ccd-4d14-823b-864daa253355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c255a0f-8cf8-452b-a61f-9ef7e6ab88de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dca1934-0cb8-40de-8534-47af91ddc872",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f818c1bb-d1f9-4020-8bd9-7720db4067fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "348cdbc4-a9c6-49e6-a9f7-c8bc9ec44a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ef7883-5b32-473f-a71b-a9fab6b9a671",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1170da4c-211b-4887-bf72-1c00340a03fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47057d41-106c-4c90-be9d-6a64bf2ca0cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d36602f0-d59a-4593-8608-246ec801cf15",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c40fe14a-0927-4d66-84e2-1639466417a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e37e828-d880-424c-994f-e01859ea60fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2971e0dc-328f-4f4e-8e6f-dd550ce4afe0",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5edc1b-518d-4504-bbf9-1bca0eebaf24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27966e93-a0eb-402d-bebe-5150e628fcb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d8be1f-3c86-4f4e-b89b-652ec7837b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86aaca05-59af-4f13-a9c2-94019391d404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2492825c-2705-439e-a5de-b1953c088a7b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb67e10-13b4-48ef-9ab6-5c54cdc0f31c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a5d9cae-4419-4b84-a70b-f55d239ce42c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36561c9f-7957-487a-904e-4257d6c79ac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1beb4d5-bf84-417e-9a9b-f5ccddf129d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29809cc6-2dba-4db5-affa-96be01e0bdba",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ea68af-ae6d-4cf1-86f3-0c78505df756",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbdc5e64-face-404d-b26e-48e6bf52dc3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "498ac585-bb02-4480-ad4b-8fd96a85e713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4adfbe33-11d3-4310-aecc-6502244fc1e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2297a86b-2968-407b-b410-a912fa2d03a9",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d17ab421-85c4-4298-bd28-bfbb7cd5c98e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95580b28-732a-4ba4-a36a-d43ee8735b36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a29e26-c172-46a2-b897-79f238da541c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "232b0a2b-07e6-4c8a-9afd-af68644c4870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4676916-7048-444c-9964-e4ae61297ff2",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9767b5cf-ae32-4980-8fa3-ca5e4a1637dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69669cf2-4473-4e0f-9aa3-a45b88c85885"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "141560d8-5aff-4739-b7f8-6b496706f287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b3a7574-12d4-4c60-bd5e-ccbac16f7306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c8dc987-9f7b-4304-9c5d-30877081f3a2",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f344f644-1693-424d-9c75-187af232e405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc33826b-7842-4e49-861f-7ebdaf94583f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa912bb4-a4cb-4f27-a6f5-9ebdf79e7f4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa8185b7-0384-488a-85da-41681e45e3f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e43575b-a1f8-4fe7-8680-9ef8d73d9f25",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132ae5ed-9038-4fd3-a2d9-aedae823eefc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fd6df22-3542-4a04-80bc-03ca08987cf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaae35cf-4d2a-4b02-869e-656f3ec16c21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3c8eb21-1b8d-4453-a04f-63e092a5d8f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e9ec97d-2b67-4a3b-bfde-436340a15388",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0c9393-994f-4287-8695-b9629c7bb561",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8629e2a3-5898-41a4-ae4d-b814010702db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f36b78-3f81-44ae-b846-7f5b5c0c04e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "821f8d18-3712-4482-b17e-acf2cfaa362d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "466488fa-7916-43b9-a78d-0f7cb048d7ef",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44cdc13-6877-49b2-ab7d-b31dec2df469",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ba7a5e7-2f9c-442f-afe3-a17571edc1c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73753ec6-5789-4e8f-a911-822453a0984e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e460cbd0-b8dc-41ef-b2d1-b5c7b2397faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b57bff3-a57a-4bd5-a3f6-6744236a0fa4",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c8437a3-4d3b-4303-a7a7-22786ac4ef79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3249a8f1-c810-4659-b185-1668489323e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a0adca-383a-4e4e-86de-90d22a357380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cf11dd8-7660-4a76-891b-bf94968782d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79639ea3-cb22-4208-91cb-c3cf90553ee6",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9195672b-0d3b-4353-be50-3d10782b1af1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2c75f15-42b0-4ec7-9f68-2e256e528370"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47aa1b4-c22b-47af-a8e3-1a10057a9e8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e84c3c13-e097-4c78-a71b-cec08b0eaca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5978dfb8-51c3-4c30-8379-599d6467123d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc534586-e0fc-4d8f-941e-17cd63c3bd3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "003b6ff3-bbb8-479e-a993-0cf620d7c432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0794e291-28f7-43be-b64c-b9bb16a13076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7632bc33-4fc3-49ee-9cc3-ff55e536b563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad08768-faa8-4d6e-b246-e9e1692d6197",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeb2820a-ff85-4fda-8d77-d32cbcde43d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9edcf00e-80ab-49db-a1c8-b9d877c64945"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7678e847-6324-4bdb-b336-909028c207a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d9ce562-1889-47bf-af98-f42099d65023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49894a1a-5e22-46be-a998-0cd4fcdda50e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b46de213-d453-44ca-b13b-55646740688f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1de63590-43b4-4695-9447-3e160b0c4781"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7efbc76-477e-4b2b-9da1-583d3dcae22d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef5cca06-2800-4d01-bd60-7a7f44081193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74abc9ec-e409-4110-bd5e-e330bfa701c0",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da228e1b-3f82-41c5-b92b-9a08e8dfee93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f037570-5819-4de8-ad05-b03bf6114eff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c93465-0982-4226-a2fc-3f3142fbf194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10b424f1-0dab-470b-b069-43e266477738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8e4131-66d5-4f70-827c-7ee346e643ed",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "341b07d7-6041-48b1-b79d-93e3663be689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ac05a82-2fdf-4ba9-8800-fe5c536699cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c21e815-28cc-4e6f-9d2b-ba93d0344632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df0035ee-8421-498c-9749-5e262c303dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1302e6df-bd4c-4011-9c00-3188795a6239",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e5d80c-1315-41ac-b831-3b42a7450b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "488357cd-9593-46a5-b2ca-1c820a65bf91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf310e01-e347-4cbb-8065-c56cd2106422",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eac9ede-0455-45bb-b0d1-1090bb6c4cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "996b9214-c90b-4c84-a574-f95320356d8a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d4cc8f-7377-4e9e-916f-39ee5d526513",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9b4a789-7a41-4cd1-9a3b-16361dc0f089"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b5b0dd-65e0-417b-9831-2eeb09df21cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64b3ef6e-94e2-4614-83ab-2062e5b48939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aff7f60-2c42-4968-b5e7-a89e2b0e469d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b2543f6-5a98-48ae-ba0a-d246239c8a66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d7ea4a4-79f6-4e03-a17d-f9b17fc622a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ee33cc-5b76-4c0d-84cf-c442bc724fe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9300481a-e194-4043-b601-94c0719c19e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e558a688-0bb7-4fff-b9ca-39e5f5be0e8e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a682470d-eeac-4f2e-a351-6ffba8f89bbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74abae75-ac53-470d-b329-d3f7a5d69ab6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c2f60b-426e-4221-85f0-887dfcabad65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf41279f-9ade-43dd-85bf-8e25b96cda7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee948b78-f36a-4394-bb75-265c15be7baa",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f69ac4b5-c956-4c70-b9c9-8233f007d9e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e202dcb2-4300-4c3b-ba57-7770d2b499e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a28e6f08-3235-4e0f-bb0d-bf66999e46bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b85360c-658f-41d9-bdce-b341b3fc26b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26600074-16af-4f83-8ad1-fb91536006c8",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca197c92-0ce5-472b-8e7b-65392711e745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0fab1cf-d560-410e-aab9-16cb9846fa74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d92bbfc-8519-4565-a972-4fb87e613b93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "635b2d2f-402e-4e98-8141-2b5fbd2cb9cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa1bb931-55d2-4353-a10b-b2ed783d44d7",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f929222-7e2a-4fce-bb3d-c38cf1684e7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "352061fc-173d-43db-8e9f-34bc2884487c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "019101d9-7267-4726-8dd4-8cc58bb10fab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f490dc9-6d16-48f2-8811-be687b44cfd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa2eba3-2a3f-4ca6-86e0-73394ff10c42",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b645a04-8649-4097-ba57-48937eac3475",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd3136bc-badf-4d47-af7e-13a3c9239c82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a971b118-5797-4960-be2d-9701d5443410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "130cc130-c4c1-4259-96a2-2557c035c03f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b3f274e-a62a-4226-a980-ed82fa3f1a93",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d6f7be-cc14-4646-9555-3449743d9fd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d70928c-6801-400a-a5f8-068b22e5547b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f8e209-3bc2-40b6-a25d-1e2463545287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dfdbcff-3ec6-4bc0-8534-cc478c85217e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c5c57cb-26a4-4b03-971d-958f7aeedc7b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f270b8a-e5fd-4260-af12-9bbe95eb775b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d46f8bcc-d2ce-4975-863a-5a0d2d710a4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1677c250-be58-46d9-ba5b-80e979cc56bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66c091a9-81e7-45d0-be2d-53c8c5b9d49f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f3aa63d-5bdc-4514-b24f-08a18018a948",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f26a31-19e3-430d-8171-770e00d666b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbcd37a4-b525-4446-8e2d-f13bee35ed9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c19cfe-b8ea-4798-b12c-4f0bb0947938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5489bea9-ff2d-405d-9f2a-afd7ed151d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d5fc43-1af2-4d7b-996f-467eb30a974c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15da8266-cd76-419c-b509-862536f3b1d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0923b03-9d11-4bbf-a69c-4f23f44a520e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a72ea40e-21c4-482e-9661-df89763a5847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb439875-10e3-4ee0-ac1a-046f25012bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "615dac5c-b9e3-469b-a6c7-38774be765ea",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b1abdd-d77c-49a4-8ae3-64a45dc38d84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4cd30d9-6d78-4419-9e8f-a88a85daf534"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fff2933-7d41-4008-9dd5-b1a33943c51f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61c17fcd-c8e3-4ced-91fa-bafaa438b2ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba86c9c-86ac-40d3-9aa4-f53840b88804",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a9967d8-a29d-4e4c-8f88-31834b21a7fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d800af8-1af2-4d68-a72b-ecb2ec0e9814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f811c0-1627-4d03-817b-54e5cf985cc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a3cca4d-e767-4c5d-bfda-be0ffe6ff114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6ec1fd-14d2-471d-b279-c549b7dfe2b5",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d320205b-c46e-4c74-82e4-75b5abffd413",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a87f4b46-835f-4b01-9ce6-54969456b0e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c898f806-2299-40dd-861e-25ec18fae15f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8710ecfe-8dcd-48db-a6e8-ddad4e3948c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4055e91-66ed-4247-b095-b1985a642007",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daf07c60-cfac-4c4d-a75f-7d6163a4cdf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ea354d5-9dd4-40ef-b94d-82109c56c510"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f48ef1c-a05d-489a-a980-2da25dcf59da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbbc6e5d-b97f-4a75-b262-36037f1261a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c53eb0-5c21-43ea-b84d-75206893f988",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08fa08be-31d8-403e-bd4a-7decf61ff744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8359869-eab5-40d6-a132-240f55f1ceda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e56d2c-5d8f-41d2-abac-e986419bbbe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab659234-8aee-4f86-8195-6764afb52ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee9a887-205e-4669-86f9-bc415dd68350",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b19ffb-de44-4255-8fcc-42814f7bf476",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1187efd8-ad5a-4dcd-8fa1-1ab927a3609c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcba6b68-7466-4ae6-bd5b-e94da22bec2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b747af4e-1631-4741-8f81-02bdde3827cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a58d75d-46e0-43c9-bfd0-7f8302f7be87",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e2ce287-83ce-4b1e-8cee-0096d0ba7541",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aee644c-c02b-498b-80d8-c0126b5842a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c484de-c9a0-4c10-bdbe-8b0e93ae6028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1fc992f-3888-42e9-a5eb-fc11942d7345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca483a6-6248-46f7-8f7d-cb9ac6bb65ad",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9908f7a7-c70c-41f5-a3d8-fc477708d1a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8868953-c6ce-4541-bd20-3f1367af704d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "465531d1-e4c1-499c-a66d-979558d4ce73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f7ccb44-d340-432c-924a-d832fdd21980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8788305d-f704-41c4-9c9d-af1f89eba85d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76a45bf2-6e41-4910-8cd6-e7dadd706a69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baf88c5c-483a-4e49-b05e-f3b0a7a1c391"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce758cdd-096c-4e5c-83c1-7cd31350c529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bf4fe9f-5a27-400b-9628-8bf919515dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b082e8d6-c083-406a-8890-9edf12f12245",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc67e3af-1709-441a-b6a3-dd2036d12ff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7192d11-045e-4da6-9ea5-d49e1d41bc31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f0ee56-8301-445c-ad03-16f1ec1f79a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad617b7b-594f-49f4-8b96-4fce4c3c5092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8145cc5-7496-43e9-8e32-a3116bce6a05",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9209b3-5bbc-474f-ab00-0eb18b70e3a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48a79dcf-497e-4417-84d9-a3af732c96ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccbe6b1f-fc4b-439c-b270-fcbe3c5fd11e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f34520f-cc9d-47c2-b638-77985441bcc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c677282f-b6cc-447b-8c44-e64a54c54df8",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "438d480f-304d-4eee-8f2f-28005bd46701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f341218-5d06-425a-96b2-84c47452a402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f827df9f-567e-462e-9dd3-c3c1441400ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfa2a812-b57c-4065-8b05-a3f29eec0dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d47d3455-13ce-4b69-85ca-557aeecd0eb2",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f711d03a-afea-4955-8214-7306bd8d8fac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b4572ce-485f-4b58-8fca-b73e342598fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "543a7f87-9dde-4744-b8e1-eb58a9d5eaa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f74db591-92db-4e45-a348-40030202226d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f5c2b5-7464-47c2-81bd-a5edb06f00df",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1969569-fb3b-4b57-a548-82129ebe86cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d85af4-307e-4534-89d2-66bd8f654d66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58220f7f-b941-471d-a95d-e9659decaad4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e735d8dd-1fc6-4e02-b705-6e3ea3cddfd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2059ecdd-cedd-404b-bd6f-690732b74591",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f94b0e54-0a23-49ab-b830-d36847707ec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "180a6a72-c13e-4487-96fc-fa258a7e4676"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a016b840-bb22-4299-9b7b-c1da4b81f83e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5319c0f-584a-414b-8870-32c0e073b50a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb039b12-6e56-45e5-b80b-65c8181bcfe7",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314a9b08-9b58-4e80-aa26-1b3d2be5f2a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e59493a4-d1a1-4d41-aa01-e39b56991e27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1907d064-3b18-4f45-b319-afc82dcf4f71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69461fec-40e4-4984-a3e3-b928922e51b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "996ef4d3-cc55-436d-bff9-3a4186ccb47d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0960c7-295d-452d-bf4e-86450c6811b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c82b3745-7c98-41ae-a621-0096cda80238"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4222517-24d0-4c84-87e0-f58090c79b5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cd06ef3-8c95-4aa2-9a70-34ff66a818a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da4dfef8-44a8-4c84-a0f3-9f62b5317e15",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b923d2-b252-4bec-8d5c-15d3787cff75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2de209a-8e19-4351-9cb9-8e3a5a2cf33c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "817f8db3-e419-4a25-9660-f63411b93cf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9842baf8-8bac-40eb-b5ba-7083686cbaa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb85b2ba-3785-40e9-a2c8-02c803f73a8b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f25d52b-40d3-4724-ad3c-b82e0ae8c70c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca64064e-89e9-4c69-ad23-763fcfab1212"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de590780-2a61-456a-8e8d-35bca239576e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a02e8daf-216b-4b97-9b7b-a45985e29047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a32eaf-5f81-46d3-aadb-253c469a283b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91fe7088-65d5-452b-b0d5-c0172818e1d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57076aa8-ce80-455d-a81c-2fb551bf04e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8466613-c7b5-421e-82e0-15c1da4e0dbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bc0dd04-63fe-469e-85ce-2d42d8f4d419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c31342-ff0c-405a-b0b2-6b85ee3bb289",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b4b92e-ee91-4108-9ce3-c7354befed96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a591e21-3c50-420f-a857-8d10b2d48ad6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd60536-0197-48cb-811d-3d8616ead4d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ba466f4-cfa8-4482-a101-ea1374c8f505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a7e60fb-5a69-49b4-b2ec-05051b7f914f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0185af03-8e78-4a59-b9d7-436be9ea0af5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4a9636c-af01-425e-9089-1d12ec3570a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a581f2e-d8b6-49ad-b87c-0345cb6eb84b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c2750ce-e402-445b-bcbc-731a3bc3aac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efcb8e04-f11b-45c7-890a-3872641e44c6",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d6ff6db-4671-455b-9726-22f074eb6a26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a26ef3e-1dca-4d7b-9b81-3257085b3d12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "583665a0-38d0-4ae7-85f7-1aa492803e1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d47eb35-4210-48df-bcbb-9ad61417d7ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db93f732-d371-4cdf-b03f-136c682d1a3d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ceb0ed9-2171-437c-9b92-dd36faf53a5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "747f496e-1b12-40b6-851c-d36fc2b3c2fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae3164d-be20-4335-bec8-9fb5b47d0eaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92aca97c-17af-46e8-a8af-208dbe2e4ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79b19f8-57bf-4e95-be53-7d4adf6a4a9f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78237b9-45ef-4bfb-9b7d-94c40a28969e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3d6b430-0904-4813-8958-359983e836a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b222dbdd-0819-49b6-8ee6-3ece46f7e2f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b27c749-be63-4a02-a484-b90e0109df04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80dec295-71f2-4073-aefc-0678aaf00e49",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3965ae3c-78c0-4efa-afcd-76a13b29b648",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74de2a5b-c46d-40c8-b640-553b4e39ad4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab1c6c1-dde8-4c5e-b143-7c6fcb629a51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "937714a9-066d-4ec1-916f-f655201930ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a3ebb7e-cb3b-4647-a925-8ddd10e5b8a2",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30e4035-f208-423a-b4ef-426ec7c68e4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a2c3292-281e-42a4-8045-4419673c02d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e07411c-9052-4d0a-8be5-6e48088d8c76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16e58561-add1-4f18-aced-bcc22daf5ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f58993-da25-4d05-8a94-a5e7c99dac83",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e1e125-0b25-4d4b-a1d6-fbf04ccc5ccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59fa0863-283c-433e-ac55-4508a6b881f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "638a5deb-79bc-416d-87ee-79fcf5144664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aba7bfa0-b8e8-453a-b311-46cf7f04db24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09fecde7-82ed-481e-ad5e-319cf7cc612b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b4b1919-a95e-4356-8099-bf7ddc506076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ec788fd-b9b2-4e6d-8f1f-bab81ad277d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "090d51d8-242c-4893-921b-574f6e2a297d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9a34d8d-4afa-454b-aa1f-7d300febc6cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "966efbee-867c-4a72-bbc1-2a3f65c8a956",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b41ff3-69b5-4475-a627-56fe6391b755",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e258ec0e-61e8-4f31-8853-d3b817c1043d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40acb852-821b-4d2c-8b38-860ffdafafed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "862b3cb4-ade0-4b41-97d7-80ffdee95094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b2cd13-776c-4dbf-8a31-f7f42a4c3a4f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c88e63e-20a4-417b-8320-9b75df8044e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d518a61-7311-4812-8b28-910a3ca75d74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8affb20a-256b-4af1-89f1-798af9938178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e905788-eb8c-43e9-a9f8-f61bf95766ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b527d0-f71e-45b7-8385-b9cfd723e596",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2507549-4a26-4a1f-a5a9-7fe4aacb489e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50f1b14c-27a8-4c0f-af6d-8ed3824fc346"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50563cf4-ce5b-4ce5-9603-9ca47eb4be6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1b1f1dd-7866-4050-81ea-743a47312d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97314e53-facb-4e31-bf25-67055dd18ac7",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "681324a6-8a41-43e9-a094-9368866150aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e560e14-fd5b-4093-9eaa-ef59695d2c0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f43f481-928b-48c5-92fe-01738e86014d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b0da3b1-a25f-46b6-b3a5-0b06688e86b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e3af49-31f3-4e47-8c31-523c747c4afa",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2982809e-bc79-43a6-9ba3-d8926f07d7ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb73eee2-8fda-4167-a5f8-3ce34f45879d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc0deebd-9115-449a-a9f9-dc65fce006eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb9b504e-ce21-45d0-8d7a-a81914c4bad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8eb1236-cf0e-4157-ac58-491f61e82ad6",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9edbc1cc-d38c-4c8c-aaa8-69d1755b362c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c333259-c074-45e8-bf1e-884a26ddd888"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e79d766b-4721-48f7-af56-0566290b6ce1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdf90132-4050-434d-973c-7560890c86cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c29e826b-9b98-46d3-8e50-0d1c61133b49",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af46be0e-5333-417d-a813-c9c3ad706ac6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36f3e1f1-a789-447a-96ef-f36df5a55129"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f8d0e2-4ead-496b-8a41-3c416e693e25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e3b4079-7638-45e9-b497-326fbccc14b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb0e336-362b-4387-843e-1a8e00bf0b8f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5c9537-981d-43ce-9fec-a4e8544420f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1391f0a-cab1-411f-bb50-7309a5fc2f59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58de3ceb-8c70-43bd-80cb-3ed63b6c040f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af58237f-ca5c-4029-aed6-1f6e70f303f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13cc60d8-76c0-44d2-893d-3bda601bd3d6",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f26dc818-65e8-4247-b7cb-874a6e475652",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb46a1f7-3140-4b15-970b-8dcfa3f73bcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53e51e5-cc25-4990-84ce-0640e6595abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ac334a0-84bc-4206-8518-534e9313c290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea365421-7498-4c3d-be70-16355c991073",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1705ccc9-21e2-4a04-a349-2a2e280341f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d01ff2b6-06e7-4c52-8a44-6ae1e4882068"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e4ef2c-c352-4490-9b00-3f1f4cf646ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2136c89-0d0c-457d-9386-92791ea8a68a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00b10dc-ebcf-4a0b-8d1b-d9c676bd2585",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2810fc65-27e0-42e1-b8d9-8d3305e1c2fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4199d194-0ab8-4a2a-9e9a-b346594467be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee0d1b8-4a7c-4e0c-8f37-e340ab14df28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8df0754c-ecfa-4ad4-8945-8e7e24aa29ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6234f1f3-2c48-4242-a08e-fe5434f9e3b4",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f9441d-4487-4a64-a3bb-f93b8c6a2fdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ae52546-39a5-4837-9bd8-198dab62ad90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85fda3c2-12f5-4cfa-b410-e91ccecf0f66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34a0a61b-94c4-4f5a-80db-9bc3511aebdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf313401-4cb3-412b-9beb-44a72f3060c1",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298f1df9-7b72-49bc-8b62-9cbd694583ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6efccdb9-8148-48ca-a582-07f8eab0898d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00edb572-b210-4615-a9d8-9d837e484c13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1754ed19-1167-4e73-97d8-7a7b51d6f037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df8cd518-800d-4d94-bc50-744ad3f131be",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95da89d5-11a4-4151-9248-f904d6ff5b39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ad727ad-fa6a-4466-b129-9515a149a3c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90476cdb-a5ee-462a-8e13-0ffa14a678fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4808be68-2f01-4644-b5b8-7b803e13bc2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff327e2-a173-4e66-b67f-4d229edbffca",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80297b05-b987-4eda-a097-db321bd07f20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98185920-82ac-45a9-8bc1-39bae94ee65f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bff37d1-4ccd-4e67-bfd4-887928392899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26bce7bf-1311-48bd-9b89-8850920c5a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a42395-b4c1-47ea-b264-381dfa65de4a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5cb404d-687c-43dc-92a8-e19f8f06351c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ca633b5-afde-4c3c-98be-6df0c899b073"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4201f817-8857-4ac8-b882-e29ce1183efc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18df5a1a-aa89-44ab-b791-52c5e8d0b6c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e782b8-a010-4f53-8e77-edf7df0d791a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a01a7d8-df6b-4949-8480-6491ce51ae68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27da9b93-f2f0-47cc-96c2-fa9ad612c797"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17b0b67-480a-4772-9329-9e16fe797e9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecfeaeb9-4381-416e-bb4d-9df54ad05147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f730c6f6-2886-427d-929a-445e624b3d18",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86032587-347d-46f0-9176-457603a44a1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70e75694-f56d-4ef6-8478-8254dd050bad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6865fe98-66a4-47af-87ae-0b8a76bddba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23447244-63cf-403c-b5f7-109c49d9a12f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf97c51-642d-42d4-ac69-4c2220f926a9",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "525ed26f-f645-4b92-87ab-bbc15fc92afb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ffee040-abdf-42ea-9676-dd85806d941e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c08da1a-0d12-4819-8e4a-0f1aaccac332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d114651-50c4-4a70-8e51-2b90f8e1ed4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c75a748-9210-4b85-9c4e-53608f912a73",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2616147c-6493-45b5-abfc-05121a5819fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33c36563-279e-468f-848b-98719ac17415"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff65e6d-441d-48f1-b158-9cd92b3d9a19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11c9dced-3140-4f05-b562-85ed38b2eafe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de93da6-dfbe-4259-8cb9-c73b2b49c9d7",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe2b1c25-1dcc-4222-8c41-e21b7f3ed17c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7ea54f0-5224-4f38-956f-e7f452386cf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3dde9f-1acf-4a10-a74c-f7b5b06b03c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c67b81b-f8f9-4518-a2a6-c33eabf6642e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d69a080f-4e94-45d3-b2c5-bdcf230fe19a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe54de3-7eaf-44bc-9138-b1d26671eceb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28fa91df-cf73-4c22-beb3-40bf18bf5c32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36738167-3a11-4b73-aa5b-907fd9815e6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2974a98a-acfe-4f09-ba5f-fa4c04e5df3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97499d5c-09cf-4f01-9141-9df441e24ba2",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beff53bc-1b82-44f5-9871-11eee9422e93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf967b6c-e8fd-4f35-8bab-e4a1e0f91434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda88f90-61f7-452a-85b7-31a1e4229365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c37d2c7-d702-4946-9573-e5e5b1d964ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79954e7f-4d4d-41da-ae75-edab8cb83d06",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d68460-5877-4797-97a3-5884f4d7897c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89404eaf-aa4f-4585-9e89-6ae749cc5006"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04ca4a6-250c-4333-90f5-9eed72a4177b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04eed30b-f8f6-484b-97eb-0f1f5ab0ee4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4aa96af-8686-4c17-a9f6-8d78de091f38",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6cda3f2-7530-45f8-9926-c2c3da61e4eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fbfe63d-d7a4-4900-9c52-98ef90f4fef2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0656e271-fc25-4a96-9707-6bfdeb92ebe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5555bb6-820d-41cb-9025-4bc5ac75bfed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbdc59be-b0e2-4afb-94cf-d288c530d04d",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f80177-a825-4ae3-be41-c335bff6d8ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ec753f8-c5c3-48af-80cf-4c28680fef1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62b8f1ed-2c11-46f7-badf-fcabaca7feaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "200ad19f-f894-4ec9-a7b5-686fb8f9d1dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69699f2c-91fd-416b-bc42-afbcbef71610",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "960f568d-7f3c-448a-a887-905e2b3a90af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d48dc21c-3483-403c-9cd3-b70508c5b2be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acde7473-2929-4c97-b524-61720d995d68",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fba07155-cddc-4766-8196-43c82c3d0b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca7e9662-affa-4539-9ea0-c21ae813212d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db600277-f44e-47f2-8d18-4309ac4cd027",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "888ce3b5-f6bc-486b-9205-95dac9112915"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee8bc85-8deb-471b-bc7b-0fa0f2968923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed5fa56d-aed2-4cba-a380-7ac7893f617d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdff6e91-fd34-4527-ae42-9c9f9e3bdaaf",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed4b25e-c448-4406-9871-9d53023019d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32dd06f8-2ae6-40d6-b0b2-2a0cdc57dc17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "584b1601-6ac7-4f1b-9315-7f8526d2a86e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02eb6448-2e56-4fd3-bb5d-c16445a72316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9357be4-e973-4074-8a96-7ed69d856577",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bed40b3-e100-4506-a490-5a7f445e5eb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f23afae-6b96-4ffc-9976-afa934a97d66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f932502-cd43-49cc-a90f-9369e9191b95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "703d49be-1867-4fdd-a42c-41f87e898d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c77fafe1-fbe0-417f-9d69-0f818746415f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2271ed4-c187-4eeb-9f10-51ba207861d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ae8c600-256e-411a-836e-30324085cc07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "668db327-24a2-47b6-9087-864d6ee71446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c3b229b-42bb-43df-8a58-5f42bb4466a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba37c4d-6913-40be-9825-88f31bb8d6c1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a533b4c4-2021-4fcf-a137-d715275d5567",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef775065-a70a-4494-b58a-c7e3ff43d1ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaca7c85-578f-4b61-b879-d6903d4353a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "463cfa70-8704-47e8-8b72-b86dc3b248f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc2c789d-8e14-4772-ba54-f4cb9106ae33",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56920ec5-fb67-4bcf-9a8e-0b13e3c92551",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8abc856-fae8-42cf-ade9-eec973315a13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9b9817-b4bf-4ebd-8a6a-a84bca528eb4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8d59f4d-c525-4287-a43d-cd9582f3b7f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e07cd20-76b3-4fa2-997c-9414f99f19ca",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c670ec2-6120-44dc-bafc-4107b36ad856",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "222b52c6-f6ea-4a3d-9c84-4fb23c2944e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a56fa8-46c2-4b8a-ad33-46f7ec765ee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0de6263e-1989-4a3d-939b-c5bf3639889d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6c12b1b-ee4b-4f27-9d83-91d4e2f89e0e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e7f5992-e7ca-4c3e-b39c-fdd5516419e2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "80baf879-9d2b-4506-9805-30d128819096",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d3ae0e14-e590-4ad7-9752-2c162b00b35e"
                    }
                  }
                ]
              },
              {
                "id": "2294ac20-a9b6-4a70-b8fc-579a107963ee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0f1122f3-0fd0-4988-9635-9ae6f29b0738",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6078cc44-7b46-4108-a406-3327c7200401",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "920d43cf-40b9-48b1-8f94-56112c914796"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "618a15f0-fc05-4765-9e7e-1423c8236eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "65e944e3-899d-47ef-abed-9bfdb22db05e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a38f714-bd60-4230-8d86-06617cc4471a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64e7c1ea-a164-463c-a49b-6b46874b59ae"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e152d839-894a-4cce-8c43-fe88fba4dda4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "645b778a-3cb0-433c-9067-00bc245865fd"
                    }
                  }
                ]
              },
              {
                "id": "fcb2171a-28ae-417b-b47e-115365e8c027",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "8ff00ec3-a099-4271-83f3-1e2589a24e93",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23738043-0f86-48e3-a10e-6bbe9048a7b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "1a7804c7-da28-4118-944a-512f197aba72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b49208-e056-4686-b4c2-2643b2bbbc21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0cd516a-0e43-42c2-8c1a-3a3da73b7d44"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ab3647df-5e67-40b3-b3ad-03d42a2f3bc3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a58c36f8-f452-4a88-b278-62e4c033017a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cdac9f3a-c6a4-4c35-9820-6ab55f6f9f4b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "21eee9c1-0c0c-4665-aa85-37282057b23d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1dc41e80-1b57-4370-862f-dd074f640f30",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fed9cf1a-c3ab-4a75-bffe-8c6c562f3249"
                    }
                  }
                ]
              },
              {
                "id": "6baf72e4-c9ad-49fc-bc9b-d6f123587beb",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f38a3ef-ef81-42a1-9cb1-4efabde56fa8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ba2adf07-e97f-47d2-84b6-61dea8546fb0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d28917db-dcf5-4014-9cb5-c57bca855a8c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7296f9e5-6fbc-4fc4-a713-1f591d33e52e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "750eedd3-82d1-45c5-8c9b-e9fb18bb4b03",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9ffdb69d-e4bc-45e7-b069-643cd0a525f3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "977f2a3e-ac8f-4719-9552-82a45b7de57d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e5b01c24-15c1-4399-9d08-cfdcb27a27c7"
            }
          }
        ]
      },
      {
        "id": "7d2426d1-a286-4a1a-b27a-117be59241a2",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9e728c08-d0c7-4caf-a153-0c9104426c1d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eac719fb-4d37-4084-841e-a0e9550f0fc9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dddf167c-d722-4154-b071-bc291cb10f66",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8775342a-e666-44b5-bc62-e20229e744ee",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "349302e3-ecb0-484a-9921-490fc60bf68b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae57df6d-2016-4fe9-90a2-0018be55acc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "24be113f-dbf8-4705-aa62-91adba606deb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8623c035-8f13-4be7-8965-d7d73b599553",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f6471dd-5a26-433f-a974-abedc0c80c1f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa35f395-ddea-4f38-ab24-72112e89be58",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc50b9d9-7443-40a1-b7f6-adc8c6b50554"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f6733110-56c6-4637-9a6c-e116c9700f3d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1ffbed18-4788-4012-a58e-0b5660635698"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "58322c05-903c-4afa-bd95-8f132fca2da6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8d6b02e4-fedc-4b0e-b875-33e09eba6477"
            }
          }
        ]
      },
      {
        "id": "cd395bf7-cdde-4009-bd5a-b86d969eb956",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "00b388e9-dc2c-4acf-aa7b-0b0e5dc0ada9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "693a8009-af13-4aec-b464-b67ffc657274",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "82681249-431e-422c-90f4-2a25258cf8d0",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "917606f2-b6d7-4632-a9a0-ddd36669e7b8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9edcdd9-a97a-41dd-a741-81900c6cb18a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6aaed74-3fa7-4b4d-958c-9e9495c6563d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "39a577c9-7858-4ac3-8ed2-bdbb3b2e9397"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "09e0fe11-da64-44f3-9e80-c4f1a0d34670",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16f5efda-3e02-4826-a914-4f8cd121405b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "65601e88-48f2-410d-9742-9db66619070e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1c68a40-068b-4426-a80a-ca59b3a4f851"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "231758fa-98cf-45ec-9332-723797a6209f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2d089bb7-5617-4067-9c9f-6512f02e2fcc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b65f6448-4286-4165-b5ba-8fa62dca8262",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a6bf12d9-7f9e-4441-b9da-5c188d708016"
            }
          }
        ]
      },
      {
        "id": "74182934-e4af-4485-94d3-1267903564c1",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "93aaa79d-d8d1-45e8-9f58-c7cfb612b8b6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "216eacc8-25a6-4916-bc37-00963af7adb9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "760f8424-195b-474b-b000-7419415ebd37",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b9b1efe-88c6-482d-bf40-ee45e936b371",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91b3c347-974a-4dde-acd3-8b2bee2f09d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a465a64-8c86-4982-a8d4-9cde7a23926f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "865daddf-7868-4103-9b7d-a71bef21ba7a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7cdb86dc-0003-41be-8c0b-6dd3a2f65d8c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46a3b5e9-db0e-44ac-9a94-287f08d4ab39"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "215f5b87-a6cf-4831-8a75-0615b84a1293",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61ee78ae-041d-4b1a-a31a-e3fcef5ff311"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d617fda9-7f39-4440-b4a2-6b9b39b2e1f2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0f264e89-afd8-4831-9ef1-71e86ab0ca31"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c9bdd4cf-393e-440f-9ae8-d272d27f0b93",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8ec47156-e847-4926-940b-305731b8a0b0"
            }
          }
        ]
      },
      {
        "id": "390746df-5cf9-4d1f-99c1-871f4ac40859",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0ce6a32f-48b9-4a00-81c9-31f3ff667342",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a1e2a503-e7d3-437b-a7c3-226ff1404301",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "01e96dac-8354-442f-abcc-634415bbd5c6",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "09d2b136-7098-4788-b141-2e8b0fdf7efc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "38c12bca-517f-4ee2-b1bc-ea5f7f792b40",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 30.98412698412696,
      "responseMin": 12,
      "responseMax": 705,
      "responseSd": 46.07343760573198,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1724719289488,
      "completed": 1724719305619
    },
    "executions": [
      {
        "id": "2d55f532-7e7d-4662-8a02-84ed1823e9b7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8392bb0c-ff9d-4676-8b7a-67a982905ab3",
          "httpRequestId": "0cb346fb-ee54-404e-84b8-afa5e2a492ee"
        },
        "item": {
          "id": "2d55f532-7e7d-4662-8a02-84ed1823e9b7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "88801769-52c0-47d9-b842-8361194da7dc",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 0
        }
      },
      {
        "id": "7ba91821-8512-434a-a2f0-758dea021eba",
        "cursor": {
          "ref": "d302f02e-d5ed-464d-8615-2cf8c9624f83",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "bae7cb7c-2a24-4f45-ba2b-566f33f1baa7"
        },
        "item": {
          "id": "7ba91821-8512-434a-a2f0-758dea021eba",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a29eb092-d296-422e-9a37-aa6064dd163b",
          "status": "OK",
          "code": 200,
          "responseTime": 12,
          "responseSize": 0
        }
      },
      {
        "id": "7fd0cef4-ca84-4ee1-bb52-45fdfb951f6e",
        "cursor": {
          "ref": "b33dac1c-2580-494a-821e-8574153ee6a1",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "82c46150-466b-4fc4-b4d2-5d5d438714a2"
        },
        "item": {
          "id": "7fd0cef4-ca84-4ee1-bb52-45fdfb951f6e",
          "name": "did_json"
        },
        "response": {
          "id": "5114c5e8-4e60-4691-84df-d1b407fe9aa8",
          "status": "OK",
          "code": 200,
          "responseTime": 253,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f5901a-ec3f-4e37-8173-728d04ace74c",
        "cursor": {
          "ref": "3020adfe-2541-48da-a9cc-19d3de09d4b8",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ab97de0a-b771-44c2-be65-50a8bb51819c"
        },
        "item": {
          "id": "d1f5901a-ec3f-4e37-8173-728d04ace74c",
          "name": "did:invalid"
        },
        "response": {
          "id": "cee88f9c-2607-418b-ba0c-d62eec523977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f5901a-ec3f-4e37-8173-728d04ace74c",
        "cursor": {
          "ref": "3020adfe-2541-48da-a9cc-19d3de09d4b8",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ab97de0a-b771-44c2-be65-50a8bb51819c"
        },
        "item": {
          "id": "d1f5901a-ec3f-4e37-8173-728d04ace74c",
          "name": "did:invalid"
        },
        "response": {
          "id": "cee88f9c-2607-418b-ba0c-d62eec523977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a9d079-960b-40e5-9bd9-5f040a4117e7",
        "cursor": {
          "ref": "8434afa9-0224-4757-8a4b-038dc2a24aac",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7a618e80-0907-48f5-8734-cdcfb37b8f25"
        },
        "item": {
          "id": "d4a9d079-960b-40e5-9bd9-5f040a4117e7",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a433dc62-6fb8-49a9-a3ef-0f49338c618c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 66,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d77f6558-104a-4c00-a39c-17eda9ebaa78",
        "cursor": {
          "ref": "9db875c2-311d-4249-9d37-f8bc588bdb30",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f4622c8c-a4e3-481b-9e63-8289c51bbe96"
        },
        "item": {
          "id": "d77f6558-104a-4c00-a39c-17eda9ebaa78",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "8468ba70-3452-4ace-af50-563efe577579",
          "status": "Not Found",
          "code": 404,
          "responseTime": 27,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b55e9020-441a-4cb6-adbd-527ac85a2dd2",
        "cursor": {
          "ref": "9b6033e5-5d7e-49c3-8d14-a6479c428f96",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "2d1ebad0-6229-4212-a389-0dee8915e319"
        },
        "item": {
          "id": "b55e9020-441a-4cb6-adbd-527ac85a2dd2",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1b51badb-475f-4311-a26a-03873ef8fe02",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ca4a48-3566-4245-b549-4ea8956e1c73",
        "cursor": {
          "ref": "3eca82d6-e2b7-40d1-855d-666008837629",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "47766400-8246-4ff2-8200-6f267890f489"
        },
        "item": {
          "id": "f4ca4a48-3566-4245-b549-4ea8956e1c73",
          "name": "identifiers"
        },
        "response": {
          "id": "8c9bf69d-caf4-4bb6-b585-0f094c53cd18",
          "status": "OK",
          "code": 200,
          "responseTime": 186,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f3773b-448f-45ac-8aaa-080b361e10b6",
        "cursor": {
          "ref": "b9c508f1-50d8-46e8-92bf-fc372ad5fb16",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "47fb0cdb-e118-45aa-b642-060a5be3d31d"
        },
        "item": {
          "id": "a7f3773b-448f-45ac-8aaa-080b361e10b6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2ef8b18d-ca22-4002-b9d2-222879f1b4a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36e6ce3-4ef5-4182-b813-193e9965face",
        "cursor": {
          "ref": "df29f062-d6e6-4203-8b5f-259eeb27b410",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "bb75c07b-c099-4895-8291-a287e88e3426"
        },
        "item": {
          "id": "e36e6ce3-4ef5-4182-b813-193e9965face",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "fd2182cb-5e3b-4511-92c6-3d39c586f21c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d792086b-057a-419d-9c83-4116602c7891",
        "cursor": {
          "ref": "b1bd0678-6daa-4e9d-945c-960e44c1376d",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "336e77f4-d8c2-4268-8bfc-4a81acfa7eea"
        },
        "item": {
          "id": "d792086b-057a-419d-9c83-4116602c7891",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f67c6fcb-0808-4091-9a87-dfd61f63e3bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae44dc9-8954-4d59-bea0-9fee19cb0589",
        "cursor": {
          "ref": "0d1747cf-1f4a-4373-a5b0-d97546641e10",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e69df5ad-5293-4ad3-8fe3-60c21b333215"
        },
        "item": {
          "id": "1ae44dc9-8954-4d59-bea0-9fee19cb0589",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "72c1628a-52c3-48d9-be9a-03c267a57da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3549298-28e5-447c-acf0-ec92050caf76",
        "cursor": {
          "ref": "1f0a0e4f-3f71-4706-8cb7-8191f09c8cbc",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d8ef29d7-d808-4474-8852-c8178e8c038f"
        },
        "item": {
          "id": "f3549298-28e5-447c-acf0-ec92050caf76",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a3f8eeb2-4333-4671-8100-15921b60a1e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f5a01c6-0ea2-4aa2-891a-4d01ee53426b",
        "cursor": {
          "ref": "12faaa03-d2ec-43c8-8f8c-4808d5b3ce55",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "37cc0f2b-5567-4bda-bfb7-f00d9eab34a4"
        },
        "item": {
          "id": "5f5a01c6-0ea2-4aa2-891a-4d01ee53426b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "610cf3f7-8dda-4231-b060-684a6080bf50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdae4ad0-497d-4eb6-9cac-8b468898d9a4",
        "cursor": {
          "ref": "bcd040db-23a5-4ed8-bf7a-06ceb523ee25",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "5583773c-0b27-4f1a-bc4b-18dce2f3f44d"
        },
        "item": {
          "id": "bdae4ad0-497d-4eb6-9cac-8b468898d9a4",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f8f84060-ba2c-4c80-a133-8895a175e833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e569f31c-2a3e-48a5-a4ec-da87acf982eb",
        "cursor": {
          "ref": "f758a64b-9758-48b7-8a4a-85e388a64eb0",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1162b113-abe1-4fc5-96d7-df6b302c6559"
        },
        "item": {
          "id": "e569f31c-2a3e-48a5-a4ec-da87acf982eb",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "166f1ce4-921f-48de-aa3a-df8873d1c078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c7ddcfc-9717-4432-87b0-b6a3929b5069",
        "cursor": {
          "ref": "fd3d21ae-9b7c-47d4-890d-3b2836b74fda",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5c8c9a44-1f4f-4a05-8025-6b3d75e642e9"
        },
        "item": {
          "id": "8c7ddcfc-9717-4432-87b0-b6a3929b5069",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c4b50348-3475-4bb1-bd87-9be53a2854ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd8e2b31-9179-46c2-9eb0-1839b1716b04",
        "cursor": {
          "ref": "b126c0b1-147f-4e8b-bbf4-c3ee890533e8",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "fb3af3f6-ae78-43fe-81fc-32a619a5c6c2"
        },
        "item": {
          "id": "bd8e2b31-9179-46c2-9eb0-1839b1716b04",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f1a43343-28bf-4fe8-a32c-f9351c0cc66a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcde348f-8cbd-429b-81fe-7b25f9ad779b",
        "cursor": {
          "ref": "fe1e0ce6-a0a9-4a69-8fb0-ba22493dea41",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b758a0f2-3b2c-4c81-9797-4ddb7d1fe9ca"
        },
        "item": {
          "id": "dcde348f-8cbd-429b-81fe-7b25f9ad779b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "cfd44c19-5576-4a06-81fd-da4f47eb6b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5f627d-a616-40e1-9113-2d3c35b098e4",
        "cursor": {
          "ref": "0924393e-88c2-401f-82fd-c57cb6c6af35",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "053d0843-1f15-4057-8e6e-d22a74e52707"
        },
        "item": {
          "id": "1e5f627d-a616-40e1-9113-2d3c35b098e4",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e7892e3b-5840-4b8f-935a-e7ffb571f475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c49c50-e58a-427c-a0c7-e82550722d30",
        "cursor": {
          "ref": "93051098-b18e-42f7-acf0-797bdf798770",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "de1da4d1-3d15-4b83-979c-0cf3405dde86"
        },
        "item": {
          "id": "66c49c50-e58a-427c-a0c7-e82550722d30",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d6121c3d-0284-4443-836e-a9c89e1ca42f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12728395-e0c7-4f3e-9855-bc44468229c1",
        "cursor": {
          "ref": "49af6653-d5a5-43c6-8c21-e9be1f4704f9",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7d8de02b-296b-48f0-a209-1f40858f6949"
        },
        "item": {
          "id": "12728395-e0c7-4f3e-9855-bc44468229c1",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "80539d3f-a2df-458d-b63c-e593b1ee74c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa4070f5-72bb-462e-93a8-6b7de8e41a08",
        "cursor": {
          "ref": "4409ec96-b87b-44a2-8d85-bc08afc81f7a",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "58906c86-2b1e-4b09-ac20-c9f4c58abef8"
        },
        "item": {
          "id": "aa4070f5-72bb-462e-93a8-6b7de8e41a08",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "6dda0d79-df2e-40dc-a869-9fc32589ae73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5091bd84-f1af-4ee9-9e35-0f593db93bf1",
        "cursor": {
          "ref": "2882650a-542d-4b83-abb6-99992437f5e6",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c645cff0-73c8-4276-9fcd-b82b5138de1e"
        },
        "item": {
          "id": "5091bd84-f1af-4ee9-9e35-0f593db93bf1",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b101d2c3-3029-41ac-ac91-a93a0b17a158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d1ccdd-8a57-41c5-bb46-c4ec7d945a45",
        "cursor": {
          "ref": "04b68a33-9277-4c13-a685-862d5aa85092",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "bbdc5929-de2a-4b40-8310-5c67cbb32e56"
        },
        "item": {
          "id": "d2d1ccdd-8a57-41c5-bb46-c4ec7d945a45",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "681cb7d5-30e1-48d4-b18a-a997cdaf88c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b787df0-9281-4e88-8606-95ee85609892",
        "cursor": {
          "ref": "27e96478-3e04-4f6f-8aa3-6acddc8da74e",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7ea4c479-e9a9-4b26-88f1-d16e46cd2489"
        },
        "item": {
          "id": "6b787df0-9281-4e88-8606-95ee85609892",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8ce0be4a-6087-42ca-b4e8-4d34a4a5e595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3abfa3b1-8016-43a0-bcf8-0ac781715ffe",
        "cursor": {
          "ref": "d1eede46-0e7b-4c5c-bddd-4b8e950808e1",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "16c2047f-cda1-4a87-8b13-5ed4f7987209"
        },
        "item": {
          "id": "3abfa3b1-8016-43a0-bcf8-0ac781715ffe",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "732c454e-7362-4cae-a663-584c53fecc9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec857bb-179d-4bf3-953b-c8c1ff498b47",
        "cursor": {
          "ref": "6e28f209-34f6-41fb-b82c-71142ae91349",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "5a62b0c5-55e8-4d60-991e-58def222416d"
        },
        "item": {
          "id": "bec857bb-179d-4bf3-953b-c8c1ff498b47",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a8ef3c9f-53c7-47f4-98dd-284bb0ce425a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b187c633-15bf-4a59-866b-8e7df4010211",
        "cursor": {
          "ref": "1ffc2099-ac97-4294-9037-ccf6518fefc2",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "97eab36e-2c46-4eee-8ca9-9b1f9cd1c4ad"
        },
        "item": {
          "id": "b187c633-15bf-4a59-866b-8e7df4010211",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "233d138b-a114-4b01-9a32-1c879ea7c8d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4c2189-5210-4f80-b129-b21f8d3de372",
        "cursor": {
          "ref": "530b6040-ac78-438c-b107-7479ab9ab0ae",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b88b028d-ccbc-4fd7-9779-5f181294a43a"
        },
        "item": {
          "id": "0e4c2189-5210-4f80-b129-b21f8d3de372",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "65bad9e0-4923-4840-aa00-f593c625f5c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4579afe-ba6b-401a-b95c-b7bf1e192711",
        "cursor": {
          "ref": "dbb0e640-7c33-4e6a-ab05-27bab5df323e",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5562489c-9ba7-4f5d-ae62-b8e0cdf2c029"
        },
        "item": {
          "id": "d4579afe-ba6b-401a-b95c-b7bf1e192711",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ba9e98ca-712f-4f29-8a2c-17fe81ddd0eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3572fbd3-62ec-4448-9c58-25001b4c1741",
        "cursor": {
          "ref": "c150cbb6-ffb4-481f-b9ea-c92cae975cf5",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "efb6aa1d-be25-4308-a291-4220c7268b30"
        },
        "item": {
          "id": "3572fbd3-62ec-4448-9c58-25001b4c1741",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "8f8d1c9a-8bc5-4172-a49e-edf414199cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2667e32-7987-4a6a-9469-0f73d8bfbe58",
        "cursor": {
          "ref": "a1529001-2b74-46a2-aeb5-a0bac37b44f4",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "43a371b6-09b1-4c82-a267-4c6f0a1e3309"
        },
        "item": {
          "id": "f2667e32-7987-4a6a-9469-0f73d8bfbe58",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5937fc11-39d2-483b-9822-6adad775d961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1fd24db-ac00-4683-aea0-b93f0e3cc167",
        "cursor": {
          "ref": "3bf86579-8e44-40fa-9bf1-432a2e63eca8",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "fb2f063f-c9ce-4b50-96eb-d88fe14529a9"
        },
        "item": {
          "id": "f1fd24db-ac00-4683-aea0-b93f0e3cc167",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "3d911ccb-fd25-4716-b140-c4528cdbc63e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82818a55-a3de-4c66-b9e7-64ee97977fdc",
        "cursor": {
          "ref": "01485b17-f8d4-41d6-9f59-ada90cedae88",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "69593c15-e213-4101-8de2-a89dacc10ced"
        },
        "item": {
          "id": "82818a55-a3de-4c66-b9e7-64ee97977fdc",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d8887bff-4487-4c61-b5d7-3038be41acd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12640064-f141-4cf8-af21-29b4d772d12b",
        "cursor": {
          "ref": "a091c4fd-1948-4fb5-a458-b3966b1e1c61",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7b41facd-5491-4e5a-957b-de975ac18bdd"
        },
        "item": {
          "id": "12640064-f141-4cf8-af21-29b4d772d12b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "089cc2df-8dc3-4b6b-8bc4-f3eac279288e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b121594a-eb89-4985-bb4c-1e16d362d40a",
        "cursor": {
          "ref": "71a27b70-ba81-44cb-a1ce-5cf07cca408d",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "0140e0e1-6bbd-47a3-9497-a203e10e27fd"
        },
        "item": {
          "id": "b121594a-eb89-4985-bb4c-1e16d362d40a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "5488ea78-34be-4b94-bb3c-a9da917ac1ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f392644-f8db-426e-aa84-bc0e890cf0eb",
        "cursor": {
          "ref": "534b39e5-9328-4909-b6f0-c1d4e7824248",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "3419d364-aa4d-4aa3-9f01-2e65216af087"
        },
        "item": {
          "id": "3f392644-f8db-426e-aa84-bc0e890cf0eb",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2df25922-ed77-4acc-b9c2-6a58e41c98c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba96245-c5cc-4c65-8d3c-8623f11932a1",
        "cursor": {
          "ref": "732b1979-27da-495c-82b7-28cebd71a4cd",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "069a63fb-19ad-4c2f-8442-13d1f4e00b6f"
        },
        "item": {
          "id": "eba96245-c5cc-4c65-8d3c-8623f11932a1",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "357d9d56-4bf1-458a-8fc1-ed1ecfb9b610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae49b61d-84b1-45aa-97d7-60dec3b29d27",
        "cursor": {
          "ref": "6d46fd69-3b9a-42b3-87df-aab3ddfa6d76",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "cd64478b-5375-410f-a09c-e692f323f3fd"
        },
        "item": {
          "id": "ae49b61d-84b1-45aa-97d7-60dec3b29d27",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "32f6ecca-b3f1-484d-a4ac-d86496479881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0211135-79b7-4c24-9438-348df9cb274b",
        "cursor": {
          "ref": "b07d51db-742c-4831-bfcd-793bc467c64e",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "94ab5d2b-3226-41bd-ac1d-a0ef7e764c55"
        },
        "item": {
          "id": "a0211135-79b7-4c24-9438-348df9cb274b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "adfabcf3-ee48-4138-b410-cf8b35f61afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ef5387-f842-44f7-9620-eb8e29fa48d8",
        "cursor": {
          "ref": "e9bef8ff-5860-4e9b-8348-e1ca1913550c",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "1c32a7d3-9435-4756-be7a-a391b6589749"
        },
        "item": {
          "id": "e2ef5387-f842-44f7-9620-eb8e29fa48d8",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "baf05fcb-15a1-4009-b011-9db45471cd8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7dba240-0952-4733-b0b8-e2a0455b31d7",
        "cursor": {
          "ref": "f2ac57c3-8b1d-4f09-ae19-e0e72850c1ee",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e2319073-d253-4cf4-a21c-3cb840b0dbce"
        },
        "item": {
          "id": "a7dba240-0952-4733-b0b8-e2a0455b31d7",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b25228e8-fdfc-457d-be22-bc58fcc5d086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac70e40-dac3-448d-9a9c-95a11d556160",
        "cursor": {
          "ref": "eeaca006-a5b8-4d14-8a4f-e881f87cbecc",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "8f6f7746-5fb3-4585-8bb0-9186d05cb68b"
        },
        "item": {
          "id": "8ac70e40-dac3-448d-9a9c-95a11d556160",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ff231bdc-13a8-4223-8290-2feb351b5f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d70fcd4-287c-404f-839a-f8c4259bef57",
        "cursor": {
          "ref": "51c1462d-4719-4d39-b3dd-5b0961d42b56",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "05a283e7-03ba-4518-9aa7-e53c11fac9ba"
        },
        "item": {
          "id": "1d70fcd4-287c-404f-839a-f8c4259bef57",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c6533c01-e11a-4b3b-9c19-04f0a9bb79eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d68af4-a4ed-47ef-a99c-52b2b3ab233e",
        "cursor": {
          "ref": "c84fedb3-7a7e-404b-855a-eee31a1174f9",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d0753972-88c0-40e2-b4d6-15b339e1f155"
        },
        "item": {
          "id": "f9d68af4-a4ed-47ef-a99c-52b2b3ab233e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a0c205cc-9f51-498a-b9ee-69df96dc6581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c70955d-8f9b-48c4-8a7d-9d458fe044b9",
        "cursor": {
          "ref": "9a71ea36-5ccc-44a4-b3eb-ea78768ce847",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5183f58d-9c36-48e4-9429-2962f87ee73b"
        },
        "item": {
          "id": "0c70955d-8f9b-48c4-8a7d-9d458fe044b9",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "75bb4d8c-96ae-4fe7-b8d9-1b07e3e98bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b568f1-ca40-4962-a815-b143f3ed8e5b",
        "cursor": {
          "ref": "7c842008-9423-4191-acde-d96412d85be9",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "48b77c2f-5732-48b8-81e9-eba336d80feb"
        },
        "item": {
          "id": "38b568f1-ca40-4962-a815-b143f3ed8e5b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "29946ee0-f1c4-43a7-a227-5a015d247765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c47dc1b2-e45c-4d97-bb32-cf7774f74e4d",
        "cursor": {
          "ref": "1f65e3e8-1269-452b-962c-0403d190f49e",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8280a331-4046-432d-8713-b6cc81010acf"
        },
        "item": {
          "id": "c47dc1b2-e45c-4d97-bb32-cf7774f74e4d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "827c6ea5-8803-4611-b0d3-844729f1b73f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57484c7-edf3-4145-a006-3052ec89289f",
        "cursor": {
          "ref": "0f0f0893-cbfe-43d7-8df7-f722c8a0c82e",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "973a2481-9d6a-4395-95fd-5d0342252102"
        },
        "item": {
          "id": "f57484c7-edf3-4145-a006-3052ec89289f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "89168b43-a57d-4f0c-bbf0-872cb0e47a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13694a0c-6cc2-4ef8-8e6b-5e0ca84d471e",
        "cursor": {
          "ref": "30a2155a-2e04-479d-a052-d6b77d294dc3",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b066d7c0-97fe-4f5d-92c7-004c15e9df94"
        },
        "item": {
          "id": "13694a0c-6cc2-4ef8-8e6b-5e0ca84d471e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "04ffe51d-d78b-4098-ba79-a88863056cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a60194-b03a-4e17-8062-6b05a8119071",
        "cursor": {
          "ref": "75b9d24c-e00e-41a5-8a79-d10a05c7004a",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "87e475fd-d6fb-4175-958d-184c037015f6"
        },
        "item": {
          "id": "d8a60194-b03a-4e17-8062-6b05a8119071",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a362951b-9c88-4666-82f6-d570fe275922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc9d38a6-61a5-495d-9c4c-9456fe369eea",
        "cursor": {
          "ref": "21fa17dc-f70c-41c3-8962-f481960cd15a",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1ecb11ce-e245-416c-ae42-8e6996802382"
        },
        "item": {
          "id": "cc9d38a6-61a5-495d-9c4c-9456fe369eea",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e18d3062-8da8-4e61-943b-64c62f371070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbfdc4d8-5fd4-48c8-b782-4f0936942fd8",
        "cursor": {
          "ref": "8e19e66b-3cc0-48da-ae93-93f530275945",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "cc9298c6-ab52-46a7-a5f0-f0afa6c6dbb8"
        },
        "item": {
          "id": "dbfdc4d8-5fd4-48c8-b782-4f0936942fd8",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f8ae146a-a41b-489b-a8a5-d4c243c547d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2451209a-53a5-4b6b-8168-0c565da14d93",
        "cursor": {
          "ref": "70d74a72-d50d-433d-a202-b98366ddf837",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "bd1a2897-bd49-4e31-96c4-877662d26d1d"
        },
        "item": {
          "id": "2451209a-53a5-4b6b-8168-0c565da14d93",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "37139228-34c4-474c-b724-f28973256725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "205c8822-0262-4f6b-ac20-d6b29ecd1e5a",
        "cursor": {
          "ref": "d4735e4f-c06a-4a33-86b7-2b30eb46d1af",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a3024cdc-de8a-4d3f-b458-85a51d4d6429"
        },
        "item": {
          "id": "205c8822-0262-4f6b-ac20-d6b29ecd1e5a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2d21fde6-8d2e-461a-bcc8-9d888eb1dd96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb12f230-e217-44e3-acc4-6f902f3a251c",
        "cursor": {
          "ref": "a1e69ac3-7f55-449b-ac9e-23728b5cfc90",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "38bb6fe1-e254-4723-b0d2-76cf44d21ea5"
        },
        "item": {
          "id": "eb12f230-e217-44e3-acc4-6f902f3a251c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "12e2c7ba-0df6-488c-8e7e-285234f10149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212c1458-6fa2-4099-ba30-d8bfff23bea8",
        "cursor": {
          "ref": "09afd0cb-c444-4600-8107-afa3f02f7003",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c34088fe-15a2-491c-8d5f-18f8d73ee1ba"
        },
        "item": {
          "id": "212c1458-6fa2-4099-ba30-d8bfff23bea8",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "8dcd4720-5828-478f-9e32-94c75d9606df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca312890-b10f-4e67-9212-8760082f1718",
        "cursor": {
          "ref": "40066939-a228-4dda-9587-18c6b1067f21",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c7de795d-8282-4ec2-9c7d-8708789d575c"
        },
        "item": {
          "id": "ca312890-b10f-4e67-9212-8760082f1718",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2a6f3c25-837d-4cda-a00d-f469fbcee661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b09c95-305b-49d1-82b3-5436cc98ce87",
        "cursor": {
          "ref": "88e1c6fc-8b82-411d-b435-8a17d8d2138b",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "eed5d6e4-8116-4c4c-abe8-2c1d1d442bd1"
        },
        "item": {
          "id": "e6b09c95-305b-49d1-82b3-5436cc98ce87",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "cb00926f-2a0f-464c-adac-32e3a7f11d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9999a72-facc-4646-b10f-25185f4410df",
        "cursor": {
          "ref": "2bbcdd09-5ac7-41ca-af9e-f9f3fed7e579",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "6b244f8e-4092-4f73-939b-ff7bcca425ee"
        },
        "item": {
          "id": "e9999a72-facc-4646-b10f-25185f4410df",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d58f14e0-f441-4ec7-b6d7-081fba8f38b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c6f8c3-0943-413e-940e-1edfcddf11f9",
        "cursor": {
          "ref": "831750dc-9c3e-40f7-86f0-58ffdad60e0e",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d6d32e28-9f99-44be-a0f1-4899d6a4d4c9"
        },
        "item": {
          "id": "96c6f8c3-0943-413e-940e-1edfcddf11f9",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "3e172fd5-7f97-4da4-ba8b-ef551d201e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db47aada-42a4-4dee-8183-07f83e925fb7",
        "cursor": {
          "ref": "d5f20624-8dd4-413c-9b32-ffc908e256bd",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "63d09e81-e686-4202-9fe4-8bc8a50d72d3"
        },
        "item": {
          "id": "db47aada-42a4-4dee-8183-07f83e925fb7",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ea0aed82-1633-4055-8db3-d354727298ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81fd5768-eaa4-4e20-bde6-53488e7a2c9a",
        "cursor": {
          "ref": "0e9b2274-763c-4164-aeb0-498d08afc62e",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a020705c-c63f-40fa-abc9-c9b1fcd625de"
        },
        "item": {
          "id": "81fd5768-eaa4-4e20-bde6-53488e7a2c9a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e6b690d6-37b0-406d-adee-af3b3e99817b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f67a7ce-8c46-4293-a407-f18c447b11b1",
        "cursor": {
          "ref": "97b15f9e-4c5c-4696-900c-a8cc905fca6b",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "cf4c240a-0e96-4204-94ed-db1f5b341fdf"
        },
        "item": {
          "id": "4f67a7ce-8c46-4293-a407-f18c447b11b1",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "92b10a75-1155-4a22-a5bc-ab30122bb519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3569776e-e1dd-490f-97c6-dc90c2a5e7d0",
        "cursor": {
          "ref": "5b2a83b1-c7d2-44fd-957e-2257b8eb78db",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c4cf9f82-e8b0-42fb-889c-2c26c9147d8f"
        },
        "item": {
          "id": "3569776e-e1dd-490f-97c6-dc90c2a5e7d0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "be0356e5-c5dd-498b-95cf-e9d42aa704b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f21bc94-764b-4aa5-9700-27cc2d07b6d5",
        "cursor": {
          "ref": "8a3ad56c-3a99-4f0f-84f8-84c0a1be655a",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ac8a46fb-ef06-455d-acd9-e15c7de8e000"
        },
        "item": {
          "id": "3f21bc94-764b-4aa5-9700-27cc2d07b6d5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f2ce72de-be6e-46c6-b011-4cbcca03e4e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090817fc-841b-4841-88c2-11f509e74f78",
        "cursor": {
          "ref": "a01f118b-9428-44c9-bd69-8a00076a1b71",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6238c556-3899-4c9d-95c3-e8e0ddb1de8b"
        },
        "item": {
          "id": "090817fc-841b-4841-88c2-11f509e74f78",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "954a3993-971a-4ea1-8856-0d6e272b1ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb16e6e-eb5a-468c-9751-a3d7a0cda275",
        "cursor": {
          "ref": "c2cfd795-7609-4ef3-8384-a5602f13f853",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f242cb9d-cfbb-4e5b-85ec-3704aeec8268"
        },
        "item": {
          "id": "5cb16e6e-eb5a-468c-9751-a3d7a0cda275",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d8f8d3f5-4da3-488f-944f-3521d7c6df22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86dc124c-b1b0-43b1-ad9d-6f5e01790b6a",
        "cursor": {
          "ref": "e15cc94b-6e95-472e-a44a-0abb04d6ed1f",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d0a86a61-2ce1-4081-94a8-f083b4481eff"
        },
        "item": {
          "id": "86dc124c-b1b0-43b1-ad9d-6f5e01790b6a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ea58bdbd-c571-494b-bd47-ae2c2e5a0e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c802d6d1-5422-47ad-9db7-8eab026c4dae",
        "cursor": {
          "ref": "a859efd1-6f48-40d5-9a4a-b61493ea5c3a",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "fce1e351-f7ea-415f-9b04-c703cfaa73bc"
        },
        "item": {
          "id": "c802d6d1-5422-47ad-9db7-8eab026c4dae",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "07587f7d-9760-4db3-bea6-9aec61924084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e860d75-24d0-41eb-85ab-afe52bf2b217",
        "cursor": {
          "ref": "8b335add-080d-4375-8e8b-b3b1fdf871f5",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b2397321-9b95-42ae-83d5-70dd4d5f9b14"
        },
        "item": {
          "id": "8e860d75-24d0-41eb-85ab-afe52bf2b217",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "16b73f9b-8143-4e47-8059-2884919a10c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e55d9f65-6638-48c5-ae6d-d7dd3ac8434d",
        "cursor": {
          "ref": "006157f8-49ec-4146-9545-816a468345f6",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9a272766-1368-41d3-9964-73efb7b57f69"
        },
        "item": {
          "id": "e55d9f65-6638-48c5-ae6d-d7dd3ac8434d",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c26ec862-afa3-4fd8-9a14-3a80407a5690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7487d39a-2170-40e3-92d4-0d25b8ed46e4",
        "cursor": {
          "ref": "136484ed-d11f-4ebc-8729-d8b02cd020a7",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f7e8bef5-7364-4c7e-817a-ba33c56ea513"
        },
        "item": {
          "id": "7487d39a-2170-40e3-92d4-0d25b8ed46e4",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "076bab12-a256-4d32-86ab-7d9639e79994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ddf24fa-b3b5-416f-b673-8ad2a795c852",
        "cursor": {
          "ref": "32731f5c-9370-4d5b-b6de-be10c2349d71",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f14a6614-303d-4a45-8e58-b83b57d0aba5"
        },
        "item": {
          "id": "0ddf24fa-b3b5-416f-b673-8ad2a795c852",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e0342052-1bb0-4a42-99b2-6a54b1fc8e61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca5e366b-c618-4180-b2db-d953bd7b3cd6",
        "cursor": {
          "ref": "2de579be-e7f5-4795-ad75-70e8c641af46",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1c8d7113-1fad-4007-a79f-4473610642e1"
        },
        "item": {
          "id": "ca5e366b-c618-4180-b2db-d953bd7b3cd6",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "29cf8071-70df-4d4b-86f2-239915851301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b555c222-18d5-4564-88ed-e6bb8a4b4836",
        "cursor": {
          "ref": "c1e5368c-c2e7-463a-95f3-2a3ff752bec7",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f61cd7c3-f523-4782-8eed-7b3f026760c1"
        },
        "item": {
          "id": "b555c222-18d5-4564-88ed-e6bb8a4b4836",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "84f32ae0-815c-4648-a7d5-695cab2880e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c02a396-f637-4059-ba0a-eaa593f8e653",
        "cursor": {
          "ref": "5b8fd940-dcc5-4b9e-9f1f-3fe31c000fe7",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5664cb1a-2b07-4f52-a9eb-f4ff4fce319f"
        },
        "item": {
          "id": "7c02a396-f637-4059-ba0a-eaa593f8e653",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c021ec2d-04e2-4d5a-829a-681afd131fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5d24fc-5738-4589-86ef-53f010e1fbb6",
        "cursor": {
          "ref": "13c20ca3-c803-45a0-a684-0d98e3f901ab",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "694608fd-c75f-49fc-a7ea-b5b2eaf3f522"
        },
        "item": {
          "id": "fd5d24fc-5738-4589-86ef-53f010e1fbb6",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "cbc0b955-a972-4a74-bcde-48ff3760eb18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d73a3e2-9be1-4668-832b-8793a81b5a1c",
        "cursor": {
          "ref": "d9529f94-be31-4191-93d6-2fbd27a4dd64",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e43bfff9-c2eb-4d2b-a643-83322fc56334"
        },
        "item": {
          "id": "7d73a3e2-9be1-4668-832b-8793a81b5a1c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "65c6b4fa-3a45-4688-84d7-4279db746684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d011ef22-c910-4fdb-bf72-62c6d0939b14",
        "cursor": {
          "ref": "5cad756b-e88f-47e0-97f3-22f660b39eba",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "cf0cb797-d46c-4c41-91a5-d79db20318a0"
        },
        "item": {
          "id": "d011ef22-c910-4fdb-bf72-62c6d0939b14",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b3163a5c-5a30-4d6a-b076-b5de28552dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4554d50-d365-46c5-87d5-4c25d6a9a8c9",
        "cursor": {
          "ref": "046f0d91-c384-4dbf-9284-ba7da7a2911c",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c02a38bc-50ac-4225-8ed8-bf390d5c9c71"
        },
        "item": {
          "id": "a4554d50-d365-46c5-87d5-4c25d6a9a8c9",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ddbb9fba-9472-4876-8f67-2e7fc5aeacbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c51c90e-71cd-4971-b5a8-307ebf54414f",
        "cursor": {
          "ref": "b18a13e4-6194-4262-ada1-f31e2fa19033",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5686da0b-c2e3-4550-b9c1-920b32c9b854"
        },
        "item": {
          "id": "5c51c90e-71cd-4971-b5a8-307ebf54414f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "865b498f-93bd-4d86-8e53-52dfa708bdb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e01c3cac-d65c-4d14-8049-b9ad4ac5ade9",
        "cursor": {
          "ref": "c8c62627-8da0-46eb-a9bd-648da304baf4",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "45912404-24f8-4c2f-a370-c08ed068546f"
        },
        "item": {
          "id": "e01c3cac-d65c-4d14-8049-b9ad4ac5ade9",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0b607c29-e6cb-4ac5-924a-6207faa9d690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6107af8f-62d1-47cf-9b44-ac0e9df76e69",
        "cursor": {
          "ref": "8c57bb2b-9ddf-4c8b-8aa9-22436285773f",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "620994b7-7be4-4c83-a4cd-d94b356d2ca7"
        },
        "item": {
          "id": "6107af8f-62d1-47cf-9b44-ac0e9df76e69",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2078a2e5-93d7-45b7-b1f0-5d17983aaaaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9d09a8-49b4-407d-87ac-163a32d972d7",
        "cursor": {
          "ref": "130f1cdc-e879-4e8d-8701-9a500bc8e038",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4fb08db2-10e9-4ef2-8e22-917601cd1f4f"
        },
        "item": {
          "id": "8d9d09a8-49b4-407d-87ac-163a32d972d7",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "dec94377-e3ca-4648-88db-f6c002fa9095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848c7434-e09d-4527-bef9-c910bcca9159",
        "cursor": {
          "ref": "77618527-84c9-4e8f-9db1-74402ccabf21",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "56b02463-8fe9-42f3-9814-22c028255a2e"
        },
        "item": {
          "id": "848c7434-e09d-4527-bef9-c910bcca9159",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "16969937-11c8-4ccf-9806-0fbd6aabfdd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106b541b-d5e5-4d76-ac9a-f2574fde32c6",
        "cursor": {
          "ref": "89b95308-2afb-45e3-8ce9-dbb0ef37552e",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "7907f555-5292-4c47-abc8-478da746f1c9"
        },
        "item": {
          "id": "106b541b-d5e5-4d76-ac9a-f2574fde32c6",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "5b9c6411-d254-4d15-8f6d-72e33ab0048e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6823e204-5264-42d6-b9d2-dfb3fd9da1ba",
        "cursor": {
          "ref": "46e3618e-3829-4ae4-b07e-fa159b45a8e8",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ba09b1b0-a8e5-482a-a13c-bd5530fdabba"
        },
        "item": {
          "id": "6823e204-5264-42d6-b9d2-dfb3fd9da1ba",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "dab718a4-b4b2-4d14-af0d-71d8d4e37168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a7fa65-1b3b-4d74-bce2-67006f8438cf",
        "cursor": {
          "ref": "9dda0d2e-a26e-42db-9dae-ce0cf2b685e2",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4d41c6fd-20bc-40cb-96e0-49adef71fcfd"
        },
        "item": {
          "id": "b8a7fa65-1b3b-4d74-bce2-67006f8438cf",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "dd2a79f6-cfdd-4e71-b7e4-32f6f9ef6908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1adb8f23-e3bf-4733-830b-f18bf6b612c0",
        "cursor": {
          "ref": "a491cbbb-d9c1-4ca3-ab1d-e3a1edc80963",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f72d08db-e590-44e6-835f-c646eb2bb10a"
        },
        "item": {
          "id": "1adb8f23-e3bf-4733-830b-f18bf6b612c0",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "36e198c4-9ab8-4c95-b460-f5462209e173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3dc69a4-cc12-4112-bee2-78c917b655b8",
        "cursor": {
          "ref": "b3c079b7-6133-42c5-835e-0513a119ca18",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "0026f505-cd48-4622-aea0-a15bfbbc86b1"
        },
        "item": {
          "id": "c3dc69a4-cc12-4112-bee2-78c917b655b8",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "68d243e3-47b4-4357-9e5f-73f257aef5be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80efe9f7-fa5f-4bbf-ac14-981608e518fc",
        "cursor": {
          "ref": "f8a4065f-d2be-4c64-a3fc-c14cf8d00375",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1af61077-6992-4304-b052-5968815b74e1"
        },
        "item": {
          "id": "80efe9f7-fa5f-4bbf-ac14-981608e518fc",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "43389b50-96de-45ff-a754-705926bf4422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2236610a-85ea-40c8-a080-85d18e40520e",
        "cursor": {
          "ref": "1bbd84fd-eb66-439e-9e40-72725c7e04c8",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d6d16371-a1e4-4446-8736-ffea18693284"
        },
        "item": {
          "id": "2236610a-85ea-40c8-a080-85d18e40520e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "aa50e313-4f72-4437-bf34-cd35b80683ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ccdaf0-adbc-4b35-a03e-95c2fa2765be",
        "cursor": {
          "ref": "011f50db-ba42-4d5f-8e54-8863060e2ce4",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b15a5156-e89c-42dc-9da0-0d4b6c0cf57b"
        },
        "item": {
          "id": "b9ccdaf0-adbc-4b35-a03e-95c2fa2765be",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "450467dc-4c93-4ea1-b55d-89333a80aadf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b136144-3a2b-4ed3-a1db-232986c324b8",
        "cursor": {
          "ref": "de18d07a-fbba-4959-b55b-9d6381776a02",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d62342e1-ae20-4a46-8563-60a184cb1196"
        },
        "item": {
          "id": "1b136144-3a2b-4ed3-a1db-232986c324b8",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e6040601-92d3-4514-b55a-1d616bab2a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850b377a-d881-4dc6-bade-36959cbc2f67",
        "cursor": {
          "ref": "db8bbc25-606f-4908-b9a7-dfd3a7eae32f",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "0f13d7c7-fb6e-428d-bba7-6ab952fbe85e"
        },
        "item": {
          "id": "850b377a-d881-4dc6-bade-36959cbc2f67",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "07e9e02c-3bf0-4748-9a71-5d3f9280a783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2357be6b-9c2d-49d7-b2b7-17c44fa8c4cb",
        "cursor": {
          "ref": "374fb39c-1ad9-4184-a8b0-e810e7719037",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6f054c9f-2a3e-4b7d-9be1-13f696578842"
        },
        "item": {
          "id": "2357be6b-9c2d-49d7-b2b7-17c44fa8c4cb",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "cee78af7-92ed-4db4-b8e6-35129e51137b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77501d46-5631-42f9-8680-2bcd7803a3b8",
        "cursor": {
          "ref": "183fa658-b62d-46a6-b2cb-210f121c53d0",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "23895683-4275-49d0-acd1-01e62d3d15e2"
        },
        "item": {
          "id": "77501d46-5631-42f9-8680-2bcd7803a3b8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c12b3871-e38d-43db-8093-a5024ad6d182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b632d3ca-7ec0-4a21-9daf-c3b6e7457401",
        "cursor": {
          "ref": "085b2e68-4801-47c1-9bea-b6f22328e425",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a49eb3ae-464e-405c-bed9-fd2a45e0b044"
        },
        "item": {
          "id": "b632d3ca-7ec0-4a21-9daf-c3b6e7457401",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "223e9a0f-e01a-42d0-aefa-b0a2192228db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34dc8bf9-7ce3-4643-86b0-6085bbcc0b96",
        "cursor": {
          "ref": "ea5633a8-0360-41d2-a407-cac912a39bc6",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "79e23fa8-bf01-4cd7-8771-8493e2b17104"
        },
        "item": {
          "id": "34dc8bf9-7ce3-4643-86b0-6085bbcc0b96",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "16506ca0-957d-4df5-8178-4a1f61123f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a444bee-7928-4f40-85c4-8bba85480e00",
        "cursor": {
          "ref": "88ab6ad8-13aa-4673-9cd0-f3c47f78820a",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "fe8bc6da-9cb4-4cb7-8a89-89186cc7c029"
        },
        "item": {
          "id": "6a444bee-7928-4f40-85c4-8bba85480e00",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "cae16406-c88f-4b77-ac7b-308f327ff152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "47d735c2-c11f-46d7-94ba-8db821980907",
        "cursor": {
          "ref": "ae937480-bdca-4d0c-a3a1-c6c18921b608",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c0bf5fcf-36f6-4978-8cd9-e322e0fba835"
        },
        "item": {
          "id": "47d735c2-c11f-46d7-94ba-8db821980907",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b8fb792b-f1dd-4308-860d-95dfa9666e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "73872180-bed0-43df-991c-f63515f32b42",
        "cursor": {
          "ref": "3d8662a2-5862-4c80-b742-67a095ec382f",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c965b009-c524-428d-a372-9782044e90bc"
        },
        "item": {
          "id": "73872180-bed0-43df-991c-f63515f32b42",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "559d5a0a-9fbd-4789-8194-0d968889d068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "4a750373-d10f-43dd-be46-4a65fa12e0e1",
        "cursor": {
          "ref": "f8eec812-f9f3-4a78-8405-de25bb53d52a",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "feb5be27-db7d-474c-81b5-a450840e32cc"
        },
        "item": {
          "id": "4a750373-d10f-43dd-be46-4a65fa12e0e1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "68949a26-4fb2-4971-8252-b534c9617dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "9a08ae57-6467-40a8-97b8-25e1d3e57ef2",
        "cursor": {
          "ref": "7a667126-e81c-4ae7-ad88-ad36bdff837f",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "472e3348-1ea7-42e1-8c82-fe6d31864d72"
        },
        "item": {
          "id": "9a08ae57-6467-40a8-97b8-25e1d3e57ef2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "736d6acc-844a-417d-9e60-f9a2df47848f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "24655b2a-503a-42bc-bd04-01867133d738",
        "cursor": {
          "ref": "241e0669-5064-4635-b34d-6f352f271aef",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "153a790b-2622-476e-8908-886961bbae34"
        },
        "item": {
          "id": "24655b2a-503a-42bc-bd04-01867133d738",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5f9d6396-4e99-4a26-94bf-0e85513de085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "6a0269fd-a12b-4dfa-ac60-e8b4bfd7a3d5",
        "cursor": {
          "ref": "b27181e4-da9b-490c-bdd8-e3704064eedf",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "af01669f-d111-4c7e-86ff-6c793a683220"
        },
        "item": {
          "id": "6a0269fd-a12b-4dfa-ac60-e8b4bfd7a3d5",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4bc0d78a-3587-49b4-8122-7eba1f22f340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "221a9cbf-7f6d-4cb3-8588-0f95fadebf56",
        "cursor": {
          "ref": "248912cd-87e3-4ed3-96bd-378bd6acbfe7",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3cd8577e-09fc-4f52-a2ae-5e5233052c74"
        },
        "item": {
          "id": "221a9cbf-7f6d-4cb3-8588-0f95fadebf56",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ca96e2cf-9d3c-4c30-918c-674d816ef6e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "485b1811-b651-4900-83e8-dc4110f3b6d9",
        "cursor": {
          "ref": "9b3ebc50-ffdf-4a1d-8a87-0c529613bbfc",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6c0e1df4-11ac-4546-9927-1c444d08fff8"
        },
        "item": {
          "id": "485b1811-b651-4900-83e8-dc4110f3b6d9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9b53fe9d-c773-42c4-b4e6-f6c56511e20a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34c3883-b681-4e7e-af0b-675d99b729de",
        "cursor": {
          "ref": "2d058a96-ea1b-42f0-aed6-1869728b4373",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "39fd3961-aa84-4dc0-a1c5-1373d6dd6160"
        },
        "item": {
          "id": "d34c3883-b681-4e7e-af0b-675d99b729de",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f38d390d-3a1c-458b-a415-5ab35957329a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "481c3aaa-93f3-4926-86b2-04deee9608de",
        "cursor": {
          "ref": "93a952a1-1339-49a1-a3eb-530cabf49edd",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5dd685dc-1a90-4d14-8bff-ca0e6aaf7817"
        },
        "item": {
          "id": "481c3aaa-93f3-4926-86b2-04deee9608de",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "baaa45fa-cb62-4e24-831a-05d4a4030cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1530f789-641a-4b26-a38c-82a0b51d3c6b",
        "cursor": {
          "ref": "376d312f-8c51-4256-be4b-6bda9e280eeb",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "278297f1-1715-4c4a-a656-fa0d6eb0c119"
        },
        "item": {
          "id": "1530f789-641a-4b26-a38c-82a0b51d3c6b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7f6a4d8f-003f-4164-9f05-d65b36301323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a707ea-aef7-4f33-b9b0-06ea2e152aa1",
        "cursor": {
          "ref": "7e39cad9-9df5-440b-b968-afc917967c03",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "33d844a0-9678-4edb-8583-49aff4ef3a77"
        },
        "item": {
          "id": "17a707ea-aef7-4f33-b9b0-06ea2e152aa1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "bf1dd721-75fd-4476-9dfc-2df395485813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc52274-3f0b-45ef-8e28-9d25c78e08a1",
        "cursor": {
          "ref": "3b1ef985-2a0a-4dc9-bc86-fe4a28e08ded",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4f3e0342-1d31-4581-a799-3fde66ad5ad1"
        },
        "item": {
          "id": "afc52274-3f0b-45ef-8e28-9d25c78e08a1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b257e339-f459-4643-862a-aef44eed65f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b69cc380-5015-4ec7-a746-71ff75729ae7",
        "cursor": {
          "ref": "20842aa6-1b57-420b-a4d6-79b11649a55c",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9afd9558-1750-44b3-b91a-2becf6b82af8"
        },
        "item": {
          "id": "b69cc380-5015-4ec7-a746-71ff75729ae7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e92980d5-f386-4bba-934c-df699501a810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74bb44cf-aeb0-4dc2-9135-60cd7b4d2a0e",
        "cursor": {
          "ref": "763d7d50-bbe3-48c2-bafd-ca9231c15483",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "dccda5a0-8e02-4307-a373-d8635ae50f30"
        },
        "item": {
          "id": "74bb44cf-aeb0-4dc2-9135-60cd7b4d2a0e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "54472711-c652-4e7c-a866-495b51ec33fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340eb75b-c88c-48cd-81f6-fc02d4314a0c",
        "cursor": {
          "ref": "3ace64c4-d3a7-4f2e-bab1-2aa43ee98231",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6983e227-bf77-4ffc-94cf-7d595bf4f35b"
        },
        "item": {
          "id": "340eb75b-c88c-48cd-81f6-fc02d4314a0c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f5f11581-b352-4b12-b0df-447e9b7125ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bbc7e77-b04b-4e54-9563-d0244af19873",
        "cursor": {
          "ref": "75332a05-5d35-41e0-9718-86a9d50e42b1",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "afff400c-25b5-4d90-a6be-657fcca1a09e"
        },
        "item": {
          "id": "1bbc7e77-b04b-4e54-9563-d0244af19873",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c5d7861e-5dcc-4e59-92fb-a1ff8a9faa85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d36078-1982-4667-9e73-752d649aabcd",
        "cursor": {
          "ref": "b48c3a99-1cd3-4ad0-b99c-33f0a58acca5",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "99c71068-b1cd-45b4-8913-ce37b7b64439"
        },
        "item": {
          "id": "09d36078-1982-4667-9e73-752d649aabcd",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b33d679a-99a5-4990-86d8-e406703be069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3983ba3c-0632-486f-878f-e68f06370ddb",
        "cursor": {
          "ref": "2f35c635-c3b9-4333-8e13-b3274b7c58ea",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5ea6f0a3-9cbf-4a9b-9cdc-75012dee6f19"
        },
        "item": {
          "id": "3983ba3c-0632-486f-878f-e68f06370ddb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0e7dc382-033d-4848-95ce-6b9367f41f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c27d3bcf-f889-48a9-906a-6dfef6acd61b",
        "cursor": {
          "ref": "88eb9432-deac-4213-9fe2-6857a652ba39",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "59a73a06-545a-4cc0-8c53-318d432749a1"
        },
        "item": {
          "id": "c27d3bcf-f889-48a9-906a-6dfef6acd61b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b2745ea4-bd59-4452-9efc-283d863e0ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1274c9e-cc10-4f9c-9d4a-99ac98941436",
        "cursor": {
          "ref": "236c86a2-0101-4b06-8ffd-8bd71a2fa270",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "377fb036-84d5-453d-8941-2c0c47b9d450"
        },
        "item": {
          "id": "e1274c9e-cc10-4f9c-9d4a-99ac98941436",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "945a735d-f50b-4fa5-be0e-ed636786a2b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1e8b94-f912-44cd-bee0-5caaf75f177c",
        "cursor": {
          "ref": "4605b8df-c0f4-4d43-b5e8-44fa4fce61d2",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1aae8647-80ee-412b-b338-8d3331d7969b"
        },
        "item": {
          "id": "da1e8b94-f912-44cd-bee0-5caaf75f177c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d933d2a5-2992-412c-994e-6053f712dbb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc726b17-764b-40a9-842c-57bb5cb28445",
        "cursor": {
          "ref": "e8899dd3-dbd9-49fb-b6cd-a2bde5acfba2",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d0ef5e46-6ec5-4ae2-9e30-1160c5426563"
        },
        "item": {
          "id": "cc726b17-764b-40a9-842c-57bb5cb28445",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "bcceb168-b134-4f28-aded-4f8311bcabb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e5c689-8869-421b-87d4-a5f62905e745",
        "cursor": {
          "ref": "7b9288e2-1389-45e5-9931-25f3a6a1e644",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "491d79c0-a025-464d-8feb-2f83e174b7f2"
        },
        "item": {
          "id": "c7e5c689-8869-421b-87d4-a5f62905e745",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3dfcd26d-356c-4174-b75c-03ccb75be104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e9ec76d-7dea-4834-aa4d-943041651047",
        "cursor": {
          "ref": "3f6455ef-f08d-447f-9ae9-3b06b28578c5",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "9aceb434-c458-4cfd-bca5-bf7f23768661"
        },
        "item": {
          "id": "1e9ec76d-7dea-4834-aa4d-943041651047",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "843f9148-b3cd-4f4a-b98d-a06c29945438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd90e8c-2c80-4019-a42d-2d16320de6af",
        "cursor": {
          "ref": "a40abef5-c0a8-4655-8b9e-16de5c657eda",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b70fd97f-b063-4b79-9044-2b9c3776df1d"
        },
        "item": {
          "id": "cbd90e8c-2c80-4019-a42d-2d16320de6af",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c37aa463-b03f-4b2b-a1d2-fa7b45eb588b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "639324a5-1a94-4a30-9926-e1196e919eed",
        "cursor": {
          "ref": "57d866e0-0109-458b-947b-275f7061e007",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "877109af-c5a0-4bfe-9113-8e20ac41da53"
        },
        "item": {
          "id": "639324a5-1a94-4a30-9926-e1196e919eed",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "de85c411-9f8b-4c78-835e-ffd5c8bee8e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af932b3-9696-4885-b779-40efd2f16762",
        "cursor": {
          "ref": "8a07e677-ddfe-4ad6-bd64-e57e6b03f444",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "29227922-ba56-4ec6-8de8-20f387666048"
        },
        "item": {
          "id": "0af932b3-9696-4885-b779-40efd2f16762",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5af2fa1c-2648-4df2-a481-aecf131700d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6efadcb-3f6d-4352-afa9-e483edc08e12",
        "cursor": {
          "ref": "c90a87de-6382-43f0-96e4-0c9643dcaebf",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "b0fe87bf-623b-42f5-a8d4-af0f6958265e"
        },
        "item": {
          "id": "b6efadcb-3f6d-4352-afa9-e483edc08e12",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "600b3d83-aa86-4ab7-8048-a58c4d4124e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37469f9f-4ffc-49ff-8ef5-741aeb0af1da",
        "cursor": {
          "ref": "773d08cd-7352-4b62-94ab-9ff1e0cabf12",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4418737b-a495-404f-a46f-7a35dd6e20d3"
        },
        "item": {
          "id": "37469f9f-4ffc-49ff-8ef5-741aeb0af1da",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "57ed9a7f-3a84-4be2-917f-179e2283bce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a90bbbe-2f4e-437c-be6b-a4a01656a021",
        "cursor": {
          "ref": "183214e2-680c-43ec-a0fb-74e8434f4a16",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "0f4147f3-161d-42e8-8502-0536afbc2173"
        },
        "item": {
          "id": "5a90bbbe-2f4e-437c-be6b-a4a01656a021",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2236c59c-b170-4c94-b1c1-68ed2fb95cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fecb9fa-22d0-461f-996d-f996b9250571",
        "cursor": {
          "ref": "ad445598-74dd-4e61-9ff3-019059e7b399",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6567add0-a636-4049-8df9-449032b5f4cb"
        },
        "item": {
          "id": "5fecb9fa-22d0-461f-996d-f996b9250571",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6008fc51-96eb-4aaa-ab13-417d6383eccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ce2fc5-c10e-4daa-ad4e-f5a753eaebb5",
        "cursor": {
          "ref": "5db12f19-1691-4b00-847b-6fb4eb9b3367",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4433ebd9-0c9b-4907-82c3-2ed5ec9e49cd"
        },
        "item": {
          "id": "59ce2fc5-c10e-4daa-ad4e-f5a753eaebb5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8c05e256-d7e1-41af-9335-591838b446cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed269f72-6f22-404c-be68-12287fbc197f",
        "cursor": {
          "ref": "a9741804-0d0e-4d56-a0d8-112c99a3e639",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7e3a74e4-050a-48b1-bc1a-f4b9168caf83"
        },
        "item": {
          "id": "ed269f72-6f22-404c-be68-12287fbc197f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "62d53a8d-0e10-4d66-87c6-3a9876c80337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a02154f-8424-4f2e-9eab-49878693ca9e",
        "cursor": {
          "ref": "18473dc4-f8ea-4eda-80f4-6099898a34af",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "62d3dfdd-4959-4a59-9e0f-a72fa6f013e6"
        },
        "item": {
          "id": "1a02154f-8424-4f2e-9eab-49878693ca9e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2e8076f4-99b4-4d62-a78b-8577b95c0d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf9d4a6-14d3-4bf0-90a3-ecd7461eb412",
        "cursor": {
          "ref": "f7eea9e7-266a-4906-a820-69f5b6b8d708",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6a8150bd-7eb1-4401-ae5b-cad62a65d368"
        },
        "item": {
          "id": "ccf9d4a6-14d3-4bf0-90a3-ecd7461eb412",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4b90d853-e61a-497c-b978-e8d6ef6bf142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c035b1-6a7e-456b-b67a-e2b8c6991ba9",
        "cursor": {
          "ref": "8d8177b1-5984-4fd2-b55e-ef8380ccdc0a",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "451537a2-455f-436b-82c5-10f8d902ab66"
        },
        "item": {
          "id": "61c035b1-6a7e-456b-b67a-e2b8c6991ba9",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b6248619-0e8b-4011-af5a-fe95b7f94336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb89f824-3dac-4b4b-8bdf-25b3ee54cfb6",
        "cursor": {
          "ref": "243f390c-14df-4e63-93a2-954e4bee4057",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a63946e6-444a-4ccb-852b-3996b2a5d3b2"
        },
        "item": {
          "id": "cb89f824-3dac-4b4b-8bdf-25b3ee54cfb6",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "98be902f-f1f2-4813-97fc-73c2acb5c319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96579488-e603-48ac-844a-0c0e3c8529b7",
        "cursor": {
          "ref": "aa9eaa6c-5d00-4951-8523-3309d19857c9",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "078ae0c2-e99b-41e8-ac8d-9b6f106f1b44"
        },
        "item": {
          "id": "96579488-e603-48ac-844a-0c0e3c8529b7",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "8cf58fc6-05e6-4f78-9e09-fca0fd75554c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b2c406a-fca3-4ccf-a033-ed8bdd34df74",
        "cursor": {
          "ref": "2fe863ac-651c-42e6-8e2d-6806674ee570",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ce12f2e8-cd99-46ad-a91b-40f30754e311"
        },
        "item": {
          "id": "4b2c406a-fca3-4ccf-a033-ed8bdd34df74",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "905a9b00-8388-475c-ade7-025081ced397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c68a903-fe5b-4db6-ad32-56299a30403f",
        "cursor": {
          "ref": "e3470731-0134-40d6-8539-99e18c6e9313",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "23cf4daf-15ae-46fa-bc0f-2cbced90d527"
        },
        "item": {
          "id": "4c68a903-fe5b-4db6-ad32-56299a30403f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "84019648-9832-48b2-ba7d-1bd57c8c3a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4e5b42-1ad6-439c-b428-3e6919c001d6",
        "cursor": {
          "ref": "200b710d-bd4f-429d-84b1-6c31e5fb76bd",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9947bc66-dacd-48d7-9bdb-c17fd6646b98"
        },
        "item": {
          "id": "db4e5b42-1ad6-439c-b428-3e6919c001d6",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f188b49e-bc32-4107-9a84-b13a94882496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e52ea9f-6035-4470-b03e-a326c067398f",
        "cursor": {
          "ref": "dcb6ff26-a1c0-4944-a055-82b2b47eff6d",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "76104e9e-a4aa-4940-89b6-fe0778a45d58"
        },
        "item": {
          "id": "8e52ea9f-6035-4470-b03e-a326c067398f",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "bc5e861b-593a-47da-ac0f-cb1bca476d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0648a8e-1be1-44b3-974c-bd0a164d1ef7",
        "cursor": {
          "ref": "8a5e565c-fb51-40b5-bd34-67390bf95912",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a53de9e0-3f70-44da-9588-bdfcd640bc11"
        },
        "item": {
          "id": "a0648a8e-1be1-44b3-974c-bd0a164d1ef7",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9e728b6d-b2ee-4688-88ef-f2fb2b855d42",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c289d02-549d-4cf8-afb7-3500ce64e65f",
        "cursor": {
          "ref": "d7cbc37e-1c51-4bc1-a4f7-4c70bed91c41",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "08f9121b-bc91-4e06-a7ee-ee70d55842ee"
        },
        "item": {
          "id": "5c289d02-549d-4cf8-afb7-3500ce64e65f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9f2c1287-6a68-4a7d-a86f-61a7114529a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a5bdca-ad65-482a-9615-c31b94ba1622",
        "cursor": {
          "ref": "6c4e9597-2338-4d4b-b577-932376d564f5",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "5999056f-89b8-47f2-abdf-c3a7ac9cbc3f"
        },
        "item": {
          "id": "18a5bdca-ad65-482a-9615-c31b94ba1622",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ff236ffa-260a-4744-bff3-736c3b8ff7db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83c602c-a27a-4fd6-bb44-f12eb049fee9",
        "cursor": {
          "ref": "da771705-7e9e-46c7-978e-3210615e85bb",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "fa7339ae-2f6a-439b-bc39-297f799e4301"
        },
        "item": {
          "id": "f83c602c-a27a-4fd6-bb44-f12eb049fee9",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "2b816f9b-1bbe-4b99-b9b3-84a70d10daa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dca1934-0cb8-40de-8534-47af91ddc872",
        "cursor": {
          "ref": "e87b8f60-64ac-4a94-adc6-7d9bc090b62e",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e6688935-b729-49be-a4f9-8251cbde67c0"
        },
        "item": {
          "id": "4dca1934-0cb8-40de-8534-47af91ddc872",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e5df21cf-2f95-490b-9d28-212fb0912932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ef7883-5b32-473f-a71b-a9fab6b9a671",
        "cursor": {
          "ref": "853f2876-9bad-41be-9b89-5b83e68e50a3",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0d9f9585-96b2-42a1-88d3-d2a2bf5369f4"
        },
        "item": {
          "id": "59ef7883-5b32-473f-a71b-a9fab6b9a671",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "8677216b-5206-444c-8581-5c5b39f5b3f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36602f0-d59a-4593-8608-246ec801cf15",
        "cursor": {
          "ref": "d9ba0e41-95d6-4862-8a9c-65a169e52de4",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "40d67d9b-6478-4f56-8c80-673ef44e67bb"
        },
        "item": {
          "id": "d36602f0-d59a-4593-8608-246ec801cf15",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "60eac578-e18d-435d-8c19-c6c55a1f81b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2971e0dc-328f-4f4e-8e6f-dd550ce4afe0",
        "cursor": {
          "ref": "1f14e95a-ea33-44e5-a4f8-ab92e8b1e981",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b1788fb9-dff2-473c-a4ee-9ead394a9a09"
        },
        "item": {
          "id": "2971e0dc-328f-4f4e-8e6f-dd550ce4afe0",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d84635dc-dd56-4ecd-bdc9-3a6bd639673f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2492825c-2705-439e-a5de-b1953c088a7b",
        "cursor": {
          "ref": "40789d0f-e80c-4ddf-9aa7-b1efea4a6847",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d742d180-a7b7-4569-8c95-c2314fc63a3a"
        },
        "item": {
          "id": "2492825c-2705-439e-a5de-b1953c088a7b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "373f2b00-7a6c-42ae-8ca4-b9d23a126221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29809cc6-2dba-4db5-affa-96be01e0bdba",
        "cursor": {
          "ref": "185c8898-27fb-4167-83ad-b79a38d7a890",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "2c75557c-b271-4689-9ec8-0bd08f926527"
        },
        "item": {
          "id": "29809cc6-2dba-4db5-affa-96be01e0bdba",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "687cdb4e-4553-47dc-9d2a-35fad2fa0c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2297a86b-2968-407b-b410-a912fa2d03a9",
        "cursor": {
          "ref": "d3d080fd-743f-4e5a-a6f0-f843f58fc5e4",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "875abf0b-f455-4fc0-ac1e-6ec2059c4d32"
        },
        "item": {
          "id": "2297a86b-2968-407b-b410-a912fa2d03a9",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "94d23b70-65cd-40ca-b026-da3b6c7219cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4676916-7048-444c-9964-e4ae61297ff2",
        "cursor": {
          "ref": "9a52cb8b-09c9-4229-992a-d85e088c99e0",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ed073c99-67b0-495b-9948-af92015d108b"
        },
        "item": {
          "id": "a4676916-7048-444c-9964-e4ae61297ff2",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c62fda56-0c41-48af-be51-780ddedfe943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c8dc987-9f7b-4304-9c5d-30877081f3a2",
        "cursor": {
          "ref": "5dc93ebf-0141-48cc-8456-9a36715ea524",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "49f95022-470b-48ee-b308-68ccd75b7639"
        },
        "item": {
          "id": "6c8dc987-9f7b-4304-9c5d-30877081f3a2",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "4e1b487c-a857-489a-bb94-f88ca2899a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e43575b-a1f8-4fe7-8680-9ef8d73d9f25",
        "cursor": {
          "ref": "3fd3808c-ba4d-4ff8-9759-e69e0b2edeb4",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "18981042-58f2-4b24-bd9d-58e0d94440d5"
        },
        "item": {
          "id": "6e43575b-a1f8-4fe7-8680-9ef8d73d9f25",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "124c1f61-f9a2-473a-881a-df776999f7d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e9ec97d-2b67-4a3b-bfde-436340a15388",
        "cursor": {
          "ref": "bb5dc118-d0ed-4387-ac63-e15aa097dcbb",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9036b4ba-b781-4cf2-bf2d-8d7bb70cf065"
        },
        "item": {
          "id": "4e9ec97d-2b67-4a3b-bfde-436340a15388",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "06ccae29-05bc-467c-b071-0132e0778037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "466488fa-7916-43b9-a78d-0f7cb048d7ef",
        "cursor": {
          "ref": "2169c633-d36c-4d29-bfc8-95cda593caa5",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a7a25d07-a539-4e42-a0cf-543c42db0f50"
        },
        "item": {
          "id": "466488fa-7916-43b9-a78d-0f7cb048d7ef",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "996cede5-f006-4d3b-b536-3c895cb78832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b57bff3-a57a-4bd5-a3f6-6744236a0fa4",
        "cursor": {
          "ref": "fb2f3bb3-4095-4d8f-af1f-ee3c660760c6",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "592b93de-b8c3-4575-9eb3-78b0334f4d10"
        },
        "item": {
          "id": "7b57bff3-a57a-4bd5-a3f6-6744236a0fa4",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "6dbc982a-0607-47e6-9240-f2dc774ed345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79639ea3-cb22-4208-91cb-c3cf90553ee6",
        "cursor": {
          "ref": "5f858e1a-175c-46b9-80f4-8b671366b8cb",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "2aeaec0b-1c70-4685-bcd6-5cf5fb93a401"
        },
        "item": {
          "id": "79639ea3-cb22-4208-91cb-c3cf90553ee6",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "b4e6e185-2d7e-4ea6-b130-28e24d1f0cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5978dfb8-51c3-4c30-8379-599d6467123d",
        "cursor": {
          "ref": "4b35a04c-0b0b-4f04-89c2-a5f467a4623e",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "35792223-8648-4b62-b165-d483ac9d20a1"
        },
        "item": {
          "id": "5978dfb8-51c3-4c30-8379-599d6467123d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e71bf0f0-4b7b-4c3a-b423-9247fa3db121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad08768-faa8-4d6e-b246-e9e1692d6197",
        "cursor": {
          "ref": "a43d33e8-c974-4597-a0ce-aca95781b5ad",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c9585478-3d0d-4de3-92b7-023f6a45239d"
        },
        "item": {
          "id": "1ad08768-faa8-4d6e-b246-e9e1692d6197",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "26dad94b-cbaa-4dbb-a8d8-9ba6ebd316b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49894a1a-5e22-46be-a998-0cd4fcdda50e",
        "cursor": {
          "ref": "07992f9f-08d8-4e02-b863-33f8152a39b5",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4e699609-31a4-45ba-85df-a7b5210afbf9"
        },
        "item": {
          "id": "49894a1a-5e22-46be-a998-0cd4fcdda50e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "aee312fa-1381-4f81-a220-f004b1ab048d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74abc9ec-e409-4110-bd5e-e330bfa701c0",
        "cursor": {
          "ref": "b21ff1f1-9845-419e-bbc7-01816e059c53",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "50a20376-879f-4c41-bd25-7fbd9b1bbbe8"
        },
        "item": {
          "id": "74abc9ec-e409-4110-bd5e-e330bfa701c0",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "c64482fd-70e3-45c8-b544-bf2d9ce94db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8e4131-66d5-4f70-827c-7ee346e643ed",
        "cursor": {
          "ref": "59302ad6-f064-4fb3-9ac9-63fc0f8180b5",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ca2a1044-2e64-49a0-a2d4-ddd99117c219"
        },
        "item": {
          "id": "8f8e4131-66d5-4f70-827c-7ee346e643ed",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "1821a692-245d-4715-a10b-492ac8a088f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1302e6df-bd4c-4011-9c00-3188795a6239",
        "cursor": {
          "ref": "a739e6ce-7ed9-4ffd-8d70-8f94e04d9bbe",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9c2e1f63-48f2-4621-8ffb-f1f56b191da9"
        },
        "item": {
          "id": "1302e6df-bd4c-4011-9c00-3188795a6239",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "829f19c8-453d-4d79-b8e2-e3970bd687c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "996b9214-c90b-4c84-a574-f95320356d8a",
        "cursor": {
          "ref": "deb1aaa3-7c49-4a53-b415-e9a5caf5fc34",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "0163f580-4356-4290-acb3-3d05671d3bf7"
        },
        "item": {
          "id": "996b9214-c90b-4c84-a574-f95320356d8a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "225ac3ba-4ad9-454a-ade5-85d28d2935c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aff7f60-2c42-4968-b5e7-a89e2b0e469d",
        "cursor": {
          "ref": "5ce8f375-a1b1-475d-a5b8-f8ddcf1582a2",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "fdc65939-b1bb-46dd-9c58-bc0a54720045"
        },
        "item": {
          "id": "0aff7f60-2c42-4968-b5e7-a89e2b0e469d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "68ad633f-0f89-4ddb-8722-3a159f397d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e558a688-0bb7-4fff-b9ca-39e5f5be0e8e",
        "cursor": {
          "ref": "bb76d5fd-adeb-4acd-935c-c58d17630052",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "46883fb3-ac79-4dab-b33e-5807b90d2af0"
        },
        "item": {
          "id": "e558a688-0bb7-4fff-b9ca-39e5f5be0e8e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "486cec7b-c846-470e-8034-c03b332089e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee948b78-f36a-4394-bb75-265c15be7baa",
        "cursor": {
          "ref": "4e28171d-a785-4c10-93fe-d937f5f11db3",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "373fae38-7f5f-4a50-b4fb-b50048bc76f8"
        },
        "item": {
          "id": "ee948b78-f36a-4394-bb75-265c15be7baa",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b1e4a011-3964-4348-8c5f-039455cbe0fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26600074-16af-4f83-8ad1-fb91536006c8",
        "cursor": {
          "ref": "8ffde3fd-a20f-4431-909e-60b3bb46fb99",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4f063fd4-03e9-4510-8e3c-8f745dec1998"
        },
        "item": {
          "id": "26600074-16af-4f83-8ad1-fb91536006c8",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "31b7fd90-daf1-4f27-a231-95b9a0282eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa1bb931-55d2-4353-a10b-b2ed783d44d7",
        "cursor": {
          "ref": "e22706ec-28a9-4f8a-a670-b516f20360f5",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d7aaa412-072a-461f-a0e9-86944b4ac8aa"
        },
        "item": {
          "id": "aa1bb931-55d2-4353-a10b-b2ed783d44d7",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ab391b30-1d1b-443c-b40a-37b3d758d08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa2eba3-2a3f-4ca6-86e0-73394ff10c42",
        "cursor": {
          "ref": "ecf7421b-258b-48cc-8e3c-1b0e865e2da8",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "3530bc0a-7967-4ee2-8a39-eaaf05518abd"
        },
        "item": {
          "id": "9aa2eba3-2a3f-4ca6-86e0-73394ff10c42",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "e90d626e-d766-47bc-aa07-d8dcc43a5468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b3f274e-a62a-4226-a980-ed82fa3f1a93",
        "cursor": {
          "ref": "d97f51fe-0e22-4ecb-acc2-35e9bd09eee2",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "720250b5-f8cf-4da1-920c-f42da471b2c4"
        },
        "item": {
          "id": "1b3f274e-a62a-4226-a980-ed82fa3f1a93",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "bb4b4429-a1b4-4776-99d6-2ee864ae3f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5c57cb-26a4-4b03-971d-958f7aeedc7b",
        "cursor": {
          "ref": "29d1ed35-75c1-4595-916a-845ad7642492",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ca353481-d376-42b1-bd03-d7d333636aef"
        },
        "item": {
          "id": "6c5c57cb-26a4-4b03-971d-958f7aeedc7b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f0b4f64a-e38b-44c6-b967-045cd39c4a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f3aa63d-5bdc-4514-b24f-08a18018a948",
        "cursor": {
          "ref": "74a0b3d6-4fd2-416e-b34e-96a916da91b5",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ce8568a2-fc9d-4c46-82c8-f1762b1b3a36"
        },
        "item": {
          "id": "6f3aa63d-5bdc-4514-b24f-08a18018a948",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "75c2d876-cd22-4880-a940-0f14e7f15216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d5fc43-1af2-4d7b-996f-467eb30a974c",
        "cursor": {
          "ref": "4161598f-72a8-4c3b-bd7d-6a62dfab5c42",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c71c70e4-c6ff-4736-a0d1-ef69642f76bd"
        },
        "item": {
          "id": "42d5fc43-1af2-4d7b-996f-467eb30a974c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "cea01d46-5c62-4f34-a5db-05504ea701e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "615dac5c-b9e3-469b-a6c7-38774be765ea",
        "cursor": {
          "ref": "a1fc4775-9be0-45b6-81ae-cf68fbb6119e",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f9badcea-373c-4fd6-be58-9f916ca02d0f"
        },
        "item": {
          "id": "615dac5c-b9e3-469b-a6c7-38774be765ea",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "2f6a1263-da4a-4bd2-b874-b637e364c663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba86c9c-86ac-40d3-9aa4-f53840b88804",
        "cursor": {
          "ref": "adae108f-33a5-4fd4-a591-b836f59aa3ab",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e8b65c78-a8f5-44a9-98a5-6238f3d0f0b6"
        },
        "item": {
          "id": "cba86c9c-86ac-40d3-9aa4-f53840b88804",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a3cffe56-b180-48e6-933a-8253911121ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6ec1fd-14d2-471d-b279-c549b7dfe2b5",
        "cursor": {
          "ref": "e19d857c-862a-417c-b2d7-cf23bdd41c64",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "93d18467-d654-465e-b4b2-4b81b03767ad"
        },
        "item": {
          "id": "4b6ec1fd-14d2-471d-b279-c549b7dfe2b5",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "5cc1bd8d-babb-4702-88bc-43cd76cee153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4055e91-66ed-4247-b095-b1985a642007",
        "cursor": {
          "ref": "cf8def25-615d-46b1-bb1b-c6ce4ab23db7",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8ac5b0e0-1863-482a-9cc6-53ab8d05ad91"
        },
        "item": {
          "id": "d4055e91-66ed-4247-b095-b1985a642007",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d9abc26e-c37d-45b8-8c69-6e9aba33d93b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c53eb0-5c21-43ea-b84d-75206893f988",
        "cursor": {
          "ref": "c125aead-f436-4c3a-b2b7-b067fdbaa2d7",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f7c940c6-1871-422b-96f8-e5dd3f2b3bb5"
        },
        "item": {
          "id": "77c53eb0-5c21-43ea-b84d-75206893f988",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "04fc782f-3401-4fff-bd7e-d77ae37ab77a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee9a887-205e-4669-86f9-bc415dd68350",
        "cursor": {
          "ref": "953f75c7-9e63-48b4-8d73-174291e868a8",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "26cc70b3-2f17-41ba-959b-e329ced5ecc3"
        },
        "item": {
          "id": "3ee9a887-205e-4669-86f9-bc415dd68350",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "dca3631b-20a8-4f48-9ff7-19b4c2fdef1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a58d75d-46e0-43c9-bfd0-7f8302f7be87",
        "cursor": {
          "ref": "99f792ca-6228-49e2-af3b-11b39e9bb9db",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "abe35cb5-ada0-42b8-b6eb-a07fadce9cd6"
        },
        "item": {
          "id": "7a58d75d-46e0-43c9-bfd0-7f8302f7be87",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2cfc8838-0be9-4831-b1f7-85edc90dfd0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca483a6-6248-46f7-8f7d-cb9ac6bb65ad",
        "cursor": {
          "ref": "56799ecc-b459-4e44-a732-a6983e0ac0f0",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0a3b291f-24af-4e40-905d-53ddc70e3e47"
        },
        "item": {
          "id": "4ca483a6-6248-46f7-8f7d-cb9ac6bb65ad",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "5681b61c-d07a-4ce5-aa77-46673c8803d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8788305d-f704-41c4-9c9d-af1f89eba85d",
        "cursor": {
          "ref": "663a80ab-68ba-4cbb-a1ff-7da7fb40f57b",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d13ac873-74c3-42fa-82b8-9323244c2611"
        },
        "item": {
          "id": "8788305d-f704-41c4-9c9d-af1f89eba85d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "bd6aa8cc-0ab7-4a9c-a74e-6c5b64239cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b082e8d6-c083-406a-8890-9edf12f12245",
        "cursor": {
          "ref": "81d52b3f-5e69-4230-a31a-6f7b5c4f982b",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2ed9f96c-4bd4-4ad4-a821-db7be4e3a7b2"
        },
        "item": {
          "id": "b082e8d6-c083-406a-8890-9edf12f12245",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b8a3a44c-d9f4-4a25-9488-51798476c3b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8145cc5-7496-43e9-8e32-a3116bce6a05",
        "cursor": {
          "ref": "e54b0b69-6684-4b7c-a976-c5339fdc6a35",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "fa3f5c15-937e-4e18-b14a-7abd606c6f78"
        },
        "item": {
          "id": "d8145cc5-7496-43e9-8e32-a3116bce6a05",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5f2d984f-cf6a-4b2f-b470-4c0e1474861b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c677282f-b6cc-447b-8c44-e64a54c54df8",
        "cursor": {
          "ref": "eefe85e7-829f-41fc-870a-3f69f6f089df",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d1384e0c-15a1-468c-9072-3897e083698f"
        },
        "item": {
          "id": "c677282f-b6cc-447b-8c44-e64a54c54df8",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "94d18eb5-b7eb-4708-ab1a-3ea79f6ebe99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47d3455-13ce-4b69-85ca-557aeecd0eb2",
        "cursor": {
          "ref": "4fbd8c3c-0941-4c6f-8491-0da488783051",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "47fa6416-a4c9-45c1-b1ef-6612143e9041"
        },
        "item": {
          "id": "d47d3455-13ce-4b69-85ca-557aeecd0eb2",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "131c69be-0b4b-4a50-80d1-64ca21314239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f5c2b5-7464-47c2-81bd-a5edb06f00df",
        "cursor": {
          "ref": "2dbe16e7-fc82-44f3-836f-fc767b7aabfc",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "06e37788-7219-445c-8ee5-9a8fc60ea5dd"
        },
        "item": {
          "id": "61f5c2b5-7464-47c2-81bd-a5edb06f00df",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e530d4a4-4ede-45b3-99ed-dffe0188b3dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2059ecdd-cedd-404b-bd6f-690732b74591",
        "cursor": {
          "ref": "35331994-2387-485a-94e8-b65ad8f6f0a6",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "676ffa8f-9ccc-48ce-aec3-da7e7878f399"
        },
        "item": {
          "id": "2059ecdd-cedd-404b-bd6f-690732b74591",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "26b40c19-8ebc-4838-96ac-137f8037d474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb039b12-6e56-45e5-b80b-65c8181bcfe7",
        "cursor": {
          "ref": "b69f10cd-a2ba-42c3-89b6-3f4fd1dbbed0",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "dc4e1a55-15ae-49f1-a3fe-ef41cc062fe4"
        },
        "item": {
          "id": "fb039b12-6e56-45e5-b80b-65c8181bcfe7",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0ff7831a-a690-468c-ae46-8d896107dfdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "996ef4d3-cc55-436d-bff9-3a4186ccb47d",
        "cursor": {
          "ref": "34d33563-f6b5-4adf-bd7b-e25a595c8ad5",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "80da85b2-3dc4-4f3c-89aa-91cb71a54923"
        },
        "item": {
          "id": "996ef4d3-cc55-436d-bff9-3a4186ccb47d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "bd9d71d9-0f5f-4e65-b8b0-a663e8931233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4dfef8-44a8-4c84-a0f3-9f62b5317e15",
        "cursor": {
          "ref": "6795d138-4684-4571-a64d-b28925d699fb",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8aed0cd6-1744-472e-ada6-c469fd80180c"
        },
        "item": {
          "id": "da4dfef8-44a8-4c84-a0f3-9f62b5317e15",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6e33dde4-a0a5-45bb-8c0e-640e15c4d2b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb85b2ba-3785-40e9-a2c8-02c803f73a8b",
        "cursor": {
          "ref": "0be7d853-b13f-4301-bd48-e6bcd9322049",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "0c1204f9-50bd-4229-9be1-f3f6dba0bc7e"
        },
        "item": {
          "id": "cb85b2ba-3785-40e9-a2c8-02c803f73a8b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "221f4c9f-3395-49cf-9c43-f8079e1a5ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a32eaf-5f81-46d3-aadb-253c469a283b",
        "cursor": {
          "ref": "2b2ef9c6-e024-469c-98a1-993a8e697dc7",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "5ce6f90e-39e1-49f4-ad80-2d0c1f85f5a2"
        },
        "item": {
          "id": "29a32eaf-5f81-46d3-aadb-253c469a283b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c6885110-4f8f-4ee4-984b-7f2cb132e9cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c31342-ff0c-405a-b0b2-6b85ee3bb289",
        "cursor": {
          "ref": "4d677f04-a67d-4af5-b869-ecd3505a1fe1",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "471a2787-c9a0-4734-a2ca-8a6d0b22389a"
        },
        "item": {
          "id": "e2c31342-ff0c-405a-b0b2-6b85ee3bb289",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "11b8c396-f7c2-42d4-8e6b-7ff2287cd7a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a7e60fb-5a69-49b4-b2ec-05051b7f914f",
        "cursor": {
          "ref": "09d40340-cae7-4beb-82d7-c0a7b410463e",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b6b8f995-6f8f-4f2f-9f41-accfff6ffc8d"
        },
        "item": {
          "id": "1a7e60fb-5a69-49b4-b2ec-05051b7f914f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c71761d5-b34c-44c6-b5a9-4fed9de37548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efcb8e04-f11b-45c7-890a-3872641e44c6",
        "cursor": {
          "ref": "0bad74aa-faef-4f06-a8fe-bcc9e92bf820",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ad18a899-43dc-45c9-8ee9-63a6b8910d5e"
        },
        "item": {
          "id": "efcb8e04-f11b-45c7-890a-3872641e44c6",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0bca0b40-8cd1-48ee-b21b-a09fda1239cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db93f732-d371-4cdf-b03f-136c682d1a3d",
        "cursor": {
          "ref": "70d765c1-fe1a-49e0-97f5-05ced15c068d",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6e5a92ff-e26c-43a7-96fd-eb56d7e0f9d2"
        },
        "item": {
          "id": "db93f732-d371-4cdf-b03f-136c682d1a3d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6f5cc343-4886-4c3c-b648-338d9f06497f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79b19f8-57bf-4e95-be53-7d4adf6a4a9f",
        "cursor": {
          "ref": "59d6135d-a164-45ed-8c68-cbce9956111d",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d71ee8cf-6f8b-4a67-b28b-158dbcd108bb"
        },
        "item": {
          "id": "c79b19f8-57bf-4e95-be53-7d4adf6a4a9f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "46750891-1acd-4081-b9ba-74e8f9dc6170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80dec295-71f2-4073-aefc-0678aaf00e49",
        "cursor": {
          "ref": "8e2d491b-205d-47b8-96f3-1759f73175b8",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "4826eac6-d4a0-4a8f-95dd-f4757aa50df0"
        },
        "item": {
          "id": "80dec295-71f2-4073-aefc-0678aaf00e49",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0ce8797c-609e-4ece-aefc-a8041a486eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a3ebb7e-cb3b-4647-a925-8ddd10e5b8a2",
        "cursor": {
          "ref": "f507fba9-4ade-444e-8c73-57a98828d672",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0c588dfc-8acd-4846-92b8-742899d5a5c1"
        },
        "item": {
          "id": "0a3ebb7e-cb3b-4647-a925-8ddd10e5b8a2",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e8e8e398-7433-4924-8a2c-65fd8f5e7a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f58993-da25-4d05-8a94-a5e7c99dac83",
        "cursor": {
          "ref": "b8f3e881-4b3d-4215-ac36-99a73c78dd89",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "fd001635-f374-439c-b1d3-b932ea2919c1"
        },
        "item": {
          "id": "16f58993-da25-4d05-8a94-a5e7c99dac83",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "01071f5e-493d-4e36-96ff-6540488d372c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09fecde7-82ed-481e-ad5e-319cf7cc612b",
        "cursor": {
          "ref": "69a605b9-a3aa-41ed-9846-fb7bb521953e",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "bb316e6c-9dea-4d86-8e39-75c91d4f9864"
        },
        "item": {
          "id": "09fecde7-82ed-481e-ad5e-319cf7cc612b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b6ac63b3-e33d-4879-bd4b-0221842e1fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "966efbee-867c-4a72-bbc1-2a3f65c8a956",
        "cursor": {
          "ref": "68b6a478-0273-42fc-be3a-d26ef3291777",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b9e000f8-4b72-4bb8-87aa-0754504c2327"
        },
        "item": {
          "id": "966efbee-867c-4a72-bbc1-2a3f65c8a956",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "dd01731d-91ba-492a-98e8-5e384cb07fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b2cd13-776c-4dbf-8a31-f7f42a4c3a4f",
        "cursor": {
          "ref": "d67204a5-ce0c-4801-ba7c-c8dad87153bf",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "2b58d4f3-34e5-49a4-8e32-b6fc9477ec0b"
        },
        "item": {
          "id": "a1b2cd13-776c-4dbf-8a31-f7f42a4c3a4f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "bae779b4-e490-47dc-9d76-8466333ce082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b527d0-f71e-45b7-8385-b9cfd723e596",
        "cursor": {
          "ref": "42c324a5-f892-4e2d-886f-3ec21ec542b7",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f06d912a-28e6-4f57-b987-c1ea40ee40dd"
        },
        "item": {
          "id": "69b527d0-f71e-45b7-8385-b9cfd723e596",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b98761df-0db0-4a29-a83a-c261cd4f688b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97314e53-facb-4e31-bf25-67055dd18ac7",
        "cursor": {
          "ref": "3dcd2087-5db0-4273-9fe7-984233fdc56e",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "cbdbd1cd-5969-4638-b5c8-dfec38b89420"
        },
        "item": {
          "id": "97314e53-facb-4e31-bf25-67055dd18ac7",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8aecb0ba-596e-43ff-98ba-b6d0a76be3ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e3af49-31f3-4e47-8c31-523c747c4afa",
        "cursor": {
          "ref": "b1280054-2e5b-4e4c-927f-9b817fe40de4",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c4287172-e391-49d6-9be8-e9ad72567385"
        },
        "item": {
          "id": "04e3af49-31f3-4e47-8c31-523c747c4afa",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b69be9b3-3f51-4e36-9ff8-9fd3d2899bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8eb1236-cf0e-4157-ac58-491f61e82ad6",
        "cursor": {
          "ref": "7a424768-72fd-4487-b2b2-2fe329750ebc",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "614cd130-402f-47e2-897f-90f7c19f6124"
        },
        "item": {
          "id": "a8eb1236-cf0e-4157-ac58-491f61e82ad6",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "850627ac-6b25-46e1-88bd-f704b4c87ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c29e826b-9b98-46d3-8e50-0d1c61133b49",
        "cursor": {
          "ref": "79d688bc-5524-46e7-94b8-0224bc8caddf",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9257cbc5-a4f6-412a-bf7c-0dba359cfbe0"
        },
        "item": {
          "id": "c29e826b-9b98-46d3-8e50-0d1c61133b49",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e6a19d29-7b9c-4750-b23c-5218b2e11677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb0e336-362b-4387-843e-1a8e00bf0b8f",
        "cursor": {
          "ref": "6f1e8ef4-1c95-466c-a433-b116f30a8367",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "1e992d81-8c7e-404c-a29c-c4e4f1971aeb"
        },
        "item": {
          "id": "feb0e336-362b-4387-843e-1a8e00bf0b8f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "032ab4e4-3dec-4879-9090-d2f47b1f93e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13cc60d8-76c0-44d2-893d-3bda601bd3d6",
        "cursor": {
          "ref": "ae94c10b-4256-4205-9a43-6b873dedfb29",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d9472a8b-b922-4a84-8462-ea17fefc3fb1"
        },
        "item": {
          "id": "13cc60d8-76c0-44d2-893d-3bda601bd3d6",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "14d4e724-2936-40d0-80fe-6e5fbe88ea0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea365421-7498-4c3d-be70-16355c991073",
        "cursor": {
          "ref": "87ef285b-592f-4bc1-a323-33a295bc1ba2",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "71d0dd3c-a1ba-4d23-a20a-ed5139a55354"
        },
        "item": {
          "id": "ea365421-7498-4c3d-be70-16355c991073",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "704cbbab-95bf-4555-a44d-efee564a1405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00b10dc-ebcf-4a0b-8d1b-d9c676bd2585",
        "cursor": {
          "ref": "74a8a60d-940d-4669-8943-d68ee4dd01a1",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "24de9733-93a3-4c48-b220-56cf0614a213"
        },
        "item": {
          "id": "c00b10dc-ebcf-4a0b-8d1b-d9c676bd2585",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "47a1fde4-8442-46cf-bbb5-1dcbfb58bfff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6234f1f3-2c48-4242-a08e-fe5434f9e3b4",
        "cursor": {
          "ref": "2a511ff7-378a-47e3-b834-0e08b2488673",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "6497789c-8cdd-4e3a-bbbb-d7bd34bd2d68"
        },
        "item": {
          "id": "6234f1f3-2c48-4242-a08e-fe5434f9e3b4",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a2a009dd-7676-4390-92d1-bd0bade05c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf313401-4cb3-412b-9beb-44a72f3060c1",
        "cursor": {
          "ref": "851b94a6-4b6e-4a6c-bdcc-05b8edd890b6",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "67cf8b59-9cf5-4139-a493-eddc147fc563"
        },
        "item": {
          "id": "cf313401-4cb3-412b-9beb-44a72f3060c1",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "21e209cc-4360-4f28-b001-57cffe983ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df8cd518-800d-4d94-bc50-744ad3f131be",
        "cursor": {
          "ref": "ebd43e6c-96a9-42ae-960e-4bd00152ae5c",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b86e3d3d-7914-4694-85d3-5c95a772620a"
        },
        "item": {
          "id": "df8cd518-800d-4d94-bc50-744ad3f131be",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "fcb23bdf-7577-4fbd-8213-d22fa0d918ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff327e2-a173-4e66-b67f-4d229edbffca",
        "cursor": {
          "ref": "0ec60551-85bc-47d0-b686-2d937cfdb694",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "0a663115-cf4f-49cb-b457-8e53d6c16c38"
        },
        "item": {
          "id": "1ff327e2-a173-4e66-b67f-4d229edbffca",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "248af8a2-f990-486c-8029-50c8a0f39f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a42395-b4c1-47ea-b264-381dfa65de4a",
        "cursor": {
          "ref": "0e526290-5d4c-4016-9bac-50cec7a499c3",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "9382fafa-8a9d-4061-8006-a15a536a2f0b"
        },
        "item": {
          "id": "a3a42395-b4c1-47ea-b264-381dfa65de4a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7a9b6a4d-6033-49af-9e24-c9ea1c53b08b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e782b8-a010-4f53-8e77-edf7df0d791a",
        "cursor": {
          "ref": "fb40d91f-a349-4606-8ced-38f906cfba5c",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "179673c4-ffc8-460f-bf65-e8dc1102fc4d"
        },
        "item": {
          "id": "d1e782b8-a010-4f53-8e77-edf7df0d791a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c0187e5b-2e1c-4644-b61b-72863c7d28d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f730c6f6-2886-427d-929a-445e624b3d18",
        "cursor": {
          "ref": "12c086e8-51b1-4343-9442-05976bc8b692",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e7368d71-2e5b-4b14-8c72-91f812a4b661"
        },
        "item": {
          "id": "f730c6f6-2886-427d-929a-445e624b3d18",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "225a7528-c18d-4183-a3dd-26064b9005ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf97c51-642d-42d4-ac69-4c2220f926a9",
        "cursor": {
          "ref": "46a68a17-3fe5-49fa-94fc-9a544f92e36e",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "6a8c586f-a582-4d98-93c6-37b6d2756a66"
        },
        "item": {
          "id": "7cf97c51-642d-42d4-ac69-4c2220f926a9",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "23162b57-fbdc-4d77-bb7a-7ca4f0f9ef39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c75a748-9210-4b85-9c4e-53608f912a73",
        "cursor": {
          "ref": "8ce7394a-3630-487a-b712-34d954d2b97f",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2bb8e221-489d-4cff-9999-2af5f7fb1ccf"
        },
        "item": {
          "id": "2c75a748-9210-4b85-9c4e-53608f912a73",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b5d5081f-83ec-4baf-8c07-9d60ea42706f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de93da6-dfbe-4259-8cb9-c73b2b49c9d7",
        "cursor": {
          "ref": "74e19f72-d639-42a7-a7bf-9dab3b327067",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8f8a4f8f-5506-42cc-a2b5-dfe9ce63e4f6"
        },
        "item": {
          "id": "9de93da6-dfbe-4259-8cb9-c73b2b49c9d7",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4383ea50-26f2-4dac-87b4-835ce3207db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d69a080f-4e94-45d3-b2c5-bdcf230fe19a",
        "cursor": {
          "ref": "add799fe-4a0c-440f-a7db-9d2f85e52e32",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "37f9df85-08fc-4586-a590-aa0bd97684a8"
        },
        "item": {
          "id": "d69a080f-4e94-45d3-b2c5-bdcf230fe19a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "fc583ac2-c517-42ca-9c6f-680643383e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97499d5c-09cf-4f01-9141-9df441e24ba2",
        "cursor": {
          "ref": "04b45131-8c52-474d-95e2-611eea0a14d2",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ab56728c-25dc-4d54-b24b-9564a94373d4"
        },
        "item": {
          "id": "97499d5c-09cf-4f01-9141-9df441e24ba2",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7d2c4590-a4fa-4c4a-96e8-08c8b0258e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79954e7f-4d4d-41da-ae75-edab8cb83d06",
        "cursor": {
          "ref": "27f7981f-bf59-443d-97fd-5e7e7d3b28c9",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "5e98f6a2-6e6c-4793-b3ba-44ec8b6f730f"
        },
        "item": {
          "id": "79954e7f-4d4d-41da-ae75-edab8cb83d06",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "211788f8-e20a-4e37-bd6f-a5fce6a75bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4aa96af-8686-4c17-a9f6-8d78de091f38",
        "cursor": {
          "ref": "20a52f8f-0cdd-419f-8535-316fbd884845",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "dcb9cdb9-8a52-4739-9d16-3b145f4297b6"
        },
        "item": {
          "id": "a4aa96af-8686-4c17-a9f6-8d78de091f38",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e82d0ae0-84c2-4e86-bf81-d9ec5e20c707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbdc59be-b0e2-4afb-94cf-d288c530d04d",
        "cursor": {
          "ref": "8c35acfd-1feb-4cf4-9137-b9042e5b22ed",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "076e0c69-0847-4bc0-bd1a-48ac5c442164"
        },
        "item": {
          "id": "cbdc59be-b0e2-4afb-94cf-d288c530d04d",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2504ffb2-a43e-4576-817e-00804a958b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69699f2c-91fd-416b-bc42-afbcbef71610",
        "cursor": {
          "ref": "99300bc5-a7b1-4c39-82d2-f3db2de78269",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a850b97a-f1a8-42bb-b193-71e42fe2c0c7"
        },
        "item": {
          "id": "69699f2c-91fd-416b-bc42-afbcbef71610",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "2a54cf44-b40e-492b-a71e-9ed9dfc7c052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca7e9662-affa-4539-9ea0-c21ae813212d",
        "cursor": {
          "ref": "950cbe7f-cbdc-49b6-bb12-738cb1cc8f4a",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8ee261c4-40fb-4ffc-b246-4c92021a97ea"
        },
        "item": {
          "id": "ca7e9662-affa-4539-9ea0-c21ae813212d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "293d9555-ebfb-402c-8e37-6da68106fb17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdff6e91-fd34-4527-ae42-9c9f9e3bdaaf",
        "cursor": {
          "ref": "09d54b1e-ec44-4ec8-910c-9bb7e284a1a8",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "cc7c925d-4b19-4906-ab06-bd73d6b9c5b8"
        },
        "item": {
          "id": "cdff6e91-fd34-4527-ae42-9c9f9e3bdaaf",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d587e80e-37df-4923-8751-c40e8c6b8c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9357be4-e973-4074-8a96-7ed69d856577",
        "cursor": {
          "ref": "219242ae-e329-4366-9be1-af16578829e3",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "226edc8e-ff57-4c55-9516-d92488fb909c"
        },
        "item": {
          "id": "e9357be4-e973-4074-8a96-7ed69d856577",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "43f11fd1-e06e-4844-9488-c39316d0c5bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77fafe1-fbe0-417f-9d69-0f818746415f",
        "cursor": {
          "ref": "5dae1eab-51af-4b3d-8af0-ec46d688cc76",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "420187d7-eeca-4c08-aead-b3c39351e667"
        },
        "item": {
          "id": "c77fafe1-fbe0-417f-9d69-0f818746415f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "914a79bf-5219-4bd9-bd83-3bb51b7cb6d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba37c4d-6913-40be-9825-88f31bb8d6c1",
        "cursor": {
          "ref": "f29ce28b-c53a-4e0e-97b7-a4dc3d9290f8",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ad928e87-84d3-4b1d-9ee2-896e298d8e93"
        },
        "item": {
          "id": "bba37c4d-6913-40be-9825-88f31bb8d6c1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0e8cf919-7dd3-4d0f-980c-5bad974625da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc2c789d-8e14-4772-ba54-f4cb9106ae33",
        "cursor": {
          "ref": "3c895e85-ca78-41d3-9511-535bb50ed3ac",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "4c5d6ab5-9639-45d0-bc0e-3384050a60a3"
        },
        "item": {
          "id": "bc2c789d-8e14-4772-ba54-f4cb9106ae33",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9d052a5f-59d4-4bc5-88a0-b251401a6a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e07cd20-76b3-4fa2-997c-9414f99f19ca",
        "cursor": {
          "ref": "e58c9321-3ed4-4872-a58f-580ce7e32026",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5e15b4de-3533-4e84-adf8-6176ef3a042b"
        },
        "item": {
          "id": "1e07cd20-76b3-4fa2-997c-9414f99f19ca",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "35671f53-9854-495a-9df7-d0b489dacf6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1122f3-0fd0-4988-9635-9ae6f29b0738",
        "cursor": {
          "ref": "e30d0b92-6c48-48ef-b2a6-c0aae6d01d71",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ec6ab272-3464-48ce-8510-edbc6cc2d8d2"
        },
        "item": {
          "id": "0f1122f3-0fd0-4988-9635-9ae6f29b0738",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "df1c909a-6471-467a-9051-b077c5882bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff00ec3-a099-4271-83f3-1e2589a24e93",
        "cursor": {
          "ref": "9693fd11-ed6e-47de-b534-b700d77dd65b",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "88a77679-acbb-4a03-b7a4-5e0ff7892a29"
        },
        "item": {
          "id": "8ff00ec3-a099-4271-83f3-1e2589a24e93",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "de7cb81b-9f88-4a47-924d-d084e2f7b30c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "a58c36f8-f452-4a88-b278-62e4c033017a",
        "cursor": {
          "ref": "521bc36c-8bf1-40d6-9f62-dc73a64b8e04",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4b83f91c-ba56-42a4-aa8d-be29676f0d11"
        },
        "item": {
          "id": "a58c36f8-f452-4a88-b278-62e4c033017a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "9d8103c3-ddcd-4930-b560-01bfa0494868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "6baf72e4-c9ad-49fc-bc9b-d6f123587beb",
        "cursor": {
          "ref": "8655857d-867b-4423-b39e-318137b01b0c",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "10d15b42-0674-4044-bb42-e104d56a91b1"
        },
        "item": {
          "id": "6baf72e4-c9ad-49fc-bc9b-d6f123587beb",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "bf94ddff-1960-405d-bc86-5ea7a3784ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "dddf167c-d722-4154-b071-bc291cb10f66",
        "cursor": {
          "ref": "0ce576d6-e24f-46aa-a84b-2981d1a49f96",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "68d1b7b3-cc6d-4bd0-b6b9-cf8fea776088"
        },
        "item": {
          "id": "dddf167c-d722-4154-b071-bc291cb10f66",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "da16eec2-ca56-4671-9ad5-cfa0e3bee96a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dddf167c-d722-4154-b071-bc291cb10f66",
        "cursor": {
          "ref": "0ce576d6-e24f-46aa-a84b-2981d1a49f96",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "68d1b7b3-cc6d-4bd0-b6b9-cf8fea776088"
        },
        "item": {
          "id": "dddf167c-d722-4154-b071-bc291cb10f66",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "da16eec2-ca56-4671-9ad5-cfa0e3bee96a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82681249-431e-422c-90f4-2a25258cf8d0",
        "cursor": {
          "ref": "998c6134-74fc-4ca8-b1b2-19c2e7023c11",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ac49e1e4-29e2-46fb-9414-66a657191abe"
        },
        "item": {
          "id": "82681249-431e-422c-90f4-2a25258cf8d0",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f394ebf7-a83f-42a3-a640-23809f22f8d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "760f8424-195b-474b-b000-7419415ebd37",
        "cursor": {
          "ref": "6c0e0220-add5-4415-a408-83bc2152d405",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ca85b7e4-3b99-42a2-ba19-335a1cd396ac"
        },
        "item": {
          "id": "760f8424-195b-474b-b000-7419415ebd37",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "adba670c-5e0c-44e0-be4c-7faea27ff784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}