{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1b7cfd73-62bd-4ca5-bb25-af41e830fdda",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d20c75ce-bd8f-498e-a0c0-612371d8fb07",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f7c63736-0c20-40ee-a8f4-d1b5feb0c383",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3cada1ec-443e-49dc-85ce-6a5bcfa5eda6"
                }
              }
            ]
          },
          {
            "id": "6c16059c-c078-400b-86aa-e112f9ab55cf",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "651f34b3-bb43-4f19-abd2-c443ff65ac9e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "929a7203-6ad3-4a1c-ab28-54b99b2a2da7"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "67147483-63c0-4dff-829e-580f29fe3453",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "366be4b6-a10c-4408-aabe-9286cbb86823",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7003673b-9138-47ac-94b2-a947f84e6f8f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9304c406-fda6-4303-87df-03aaed37e410",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "25c0a938-09d3-4c2a-8ab3-2e3917b100bd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5bb9a6a2-3441-47f9-8973-7c77df1db767",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c75d189c-b918-491d-91cd-fdfebe850dfd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f86eb035-7e40-41a6-b92f-984e99a10987",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1f67dfbc-2cab-479a-95a0-a4c1078ab31e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d5491515-44ee-4f02-becd-31fc6732e1ff",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "855250c7-5eb2-4546-a958-1b9af1fd575b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9e68473b-d283-4ecf-b03a-dc5c09f34a6f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "688c62fc-2235-430b-be39-09ebdc08707c"
            }
          }
        ]
      },
      {
        "id": "f63f0849-8b06-45d2-882f-175b30d4bdb8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ac94f19e-6a73-4eaf-b844-b071105b6acf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8502c81f-823b-4be7-9469-a8604836c4d0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "36bf261d-4954-414d-ac12-8e5c31b1a688",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72cb2fd3-6c8a-4621-8ee5-5e51a47db35d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "44de574a-5053-4c5b-9feb-c88399385fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37267d0e-4642-491b-bedb-6d08b31479d1",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb19de8-4c29-4637-9e22-a7a4b2ddadab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd79c754-9783-432d-95e8-af7fd59b9d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3361b7bf-c57f-420c-aa03-1627a4156543",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b99be6a8-5733-4174-8843-de9116fda313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6f34afec-5863-4b25-8a2b-faab46693142"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f325eab9-254e-4f5e-9236-7b294f73dedb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d211eee4-ec22-406b-883f-1e62df4fd7fe",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d4c8ed7-fa6e-4bbf-a646-1d22d2d288af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c05282cf-4ec5-4653-ac9b-337aca60abd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d78b5615-fc59-466b-bbac-0a7b127e8b85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4154dbdc-d060-4c76-9fb6-1c5df50cf6c0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c153cd31-eb9e-498a-ba55-b65c27bd20a3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "67ee3608-d9f2-4913-a987-96280ec966c9",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0774c32-b5a6-4e04-b47c-cad43092a945",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e5135726-a24d-44e8-b920-9d44f23300c8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6802c277-e241-4cbb-b005-5887bf31f09c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "1b475b84-df9b-41bb-9563-1251f72ef9bd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1bea9b32-33d3-45df-b213-40e68e5be236",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "de6dded9-2c97-4e99-99d2-f513c1252b01"
            }
          }
        ]
      },
      {
        "id": "75bd781d-3741-45d1-8ac1-f48406cfdd5b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9844e38a-5935-412c-b258-05aaf7596f87",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3ab34cf4-5177-4a04-bf22-c180419ece2a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b397a238-44c2-4ad4-b02d-66960c8ff6ae",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "642ee506-80be-4573-8f77-e4bd567315fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea2ba82-8615-4eaa-b4a3-2c51bf65191b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f952401-3ef7-4243-b7ad-1b552f83f6be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d52bfdd-df7b-4845-8b22-c31eaa8d1721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c842901-ea33-4781-abf2-3a4ce84ed0d8",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21f51b6-7445-459e-b59c-03b31d869a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "622ecabf-1a3c-41bb-a356-3f0ed42b8975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa7e4e5-469f-428a-913e-f370a76deb11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e71991b-9d1d-47c3-be6e-20867b132c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd470c86-f2e9-4f1a-b272-b7644377da79",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "813b21b0-b1dc-489b-a1b9-51e53445dd38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "901f05cc-548c-48e3-a57b-f70f9883d2d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6046baf3-8549-4e4b-94fc-a894567161df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac573dc4-caa2-436e-8942-e7ce9b78e1e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c3a5bb-9dc3-46cb-9dfa-6129cb610792",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40531fe2-41a8-430d-8531-2a1bc9e86d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fd592fc-6745-4d28-8406-4d70f952e3bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12f1cd9-fe4e-4c67-b1d0-25044cdb2dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86c5094c-1e67-4994-ac5f-fddee5ba874c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed1478c-036b-4075-b1cc-7fa791656e80",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28261c60-660b-4172-aa52-808ef08366a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04161702-c584-42fc-b5cf-5ffaaee0a7b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5199f3b8-dee0-426f-a149-df90564bee18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f348004-9842-438b-b7db-c6d43fef1e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d340c3-84c1-40cd-ac5b-9a67304f4f2e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1922922-e07c-44a2-add1-ed49af4d9a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "528af2f8-f8b5-439e-bbbc-f4ba8d9e0019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "551b2976-bce9-4ea0-a883-9fd90ed14f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f68c059e-411d-44a3-919a-2f7c26dea278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe73b32-d5bd-479e-95eb-4a5a550cdd1e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2770f61a-740e-4a3c-9c38-76675affde83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cea8704-5bcb-4696-81f4-bd0d17c423d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2944e26d-c6d6-4c59-a205-b52a5236bd53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "562e7df8-95f1-439c-80c6-18c5fbf0e743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae7ef88a-e667-47ad-a835-f4f54b08629e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf1fdd0-2e76-495d-855d-238e97427c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1951933f-e49e-41c1-a59d-9bfd81ab73b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b2871d-a6cd-4166-9bd0-426b78b8c572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5928cbee-0c33-41bc-8437-5eeb2c08ae44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d329a2-f3ed-45ff-b186-b6d7f652d3fa",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37bca31-c55c-4cf2-90c0-c53f37cc69ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b726b91-d651-4e95-a2c4-3c25ccf421fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8888cc3-5c73-4b97-9d0d-deb0f549e92c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "242225e6-0346-4d4e-b0d3-f127eace447b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924e74c1-c08d-4647-99f5-f43968c83efe",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e8f70a-72fc-4970-8c68-255303f2b109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7b516e7-2779-416b-bb4c-49823bf7937a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e1a996-d9cf-4847-81c6-a734ae0b0c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e18c4ab3-baf8-4cbb-82de-ab04153080f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec6dd3bb-9bd5-490d-a9d2-3fa1cb7bc3b4",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab558444-d46e-4aad-a47c-55d7ba70c438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e8a15e5-39b7-4b61-912a-198a56fa4c4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "509d0c70-d1a1-4392-83ab-143f6ad57e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91a7413e-84e5-4b0b-93fe-7ff790639a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52fe6660-0078-46af-b235-43b349a70e4b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1357b8d-00da-46b8-8991-862fbb7d9127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82bf1a48-524d-4d5e-970d-1cdcc92c53c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7704c31e-8500-481f-9f15-634a033f8f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6e36ba18-32da-4add-bbee-ed475ed93c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f815068-2fb0-4c6d-8c34-afafa84895a7",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe0231d-c597-43be-b1e6-19596e8ce4c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "976d59d8-b828-46c2-9887-9fbb06a07112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58bdaa4b-e91d-48a2-b7b1-86255212caa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d024bfdb-2332-41f0-8d2e-869ba4acb76a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91dd6858-56ab-475f-b4e3-e125c14476de",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "831f7316-6aff-4423-a55b-c45297693cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32284433-7b46-484f-b664-8ba8ba5d4deb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f836a0f-5009-4f57-93dd-dc5074d992ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5846c1b8-23ea-4e40-98c3-9cd29d9be99d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfef12c3-8184-4d56-9b47-44e7f050fbd8",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb645a7-2b4c-48b8-93d6-3855929d41fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ad41d96-1f19-4ce2-a169-4d94c7c8dab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d222ee-27ca-44e5-ac45-d66bac40fc18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a4cfc86-2f61-4082-81e2-a6f271d9ed13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b324e4-16fb-4794-8691-30e78aae04c9",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66095456-eb31-4a5b-858f-5f292a4a3aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fcc56a7-db3c-4362-b3d9-85b1dcb7d4f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f303c00a-ebe1-4068-b4eb-e5ff3cadc452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbd3b6bc-3707-46a6-9115-29965bd457ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75edd4d2-0330-4cca-b331-1a9384668c0a",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6dabf19-60bd-49e7-ad63-3602710032d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "761490bb-00da-4a70-91ae-c04e60e79768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5bf7f59-eb7a-42da-bfdf-d8b4d4249c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b37421ff-9842-4ade-a233-2de25e1ea188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb3678c2-4428-453d-909e-bc3290ecea19",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "997cc51b-d163-4955-8b22-48c748473a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1062d21c-babd-4247-a1e2-10ea7bd28dec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a9539af-f6e3-463a-8689-6d594f911534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "04afff29-2874-4cb6-83ed-66a2b529bfae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fccffbba-ce8b-479d-a373-ad6b4d420562",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a042b335-26d6-4275-99c8-ad4036a69a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a3a90eb-0282-4354-a517-697052a64c61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8183bfef-17bd-46b9-8b4b-6a712b7b7bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5984a054-b79d-41d8-938c-d567d67173bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f810cb8-bfa9-4007-af1b-4de790109cfd",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ec79d8-ded6-40bb-b2cf-c1aca659dbfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41c99a49-406a-49b6-81ae-7ee831d8e78c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4968bae2-810c-43f0-be2d-193c56ca84ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "643b9e43-256a-43d7-9aef-dc893367ffb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a1f2010-ec1d-4970-89b0-74b72d27586b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36cb1c93-ffd8-4f0b-bcfe-3d6ec9b2294a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88a807ce-fc31-4386-b8a4-40f85e0bc166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6fe4ce3-b66f-4a72-9979-4135b7c09c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "66c9ab3c-81af-4a7c-93cb-f4cd09e588c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72353f19-be15-4797-be6d-a1a518f89ad0",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf0438d-6bba-4401-af92-0f8dab117307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "400cf9ec-c712-47c0-82a9-52c040910295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "663c1711-c350-4b9b-985a-f1621a63f982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "692474f5-8968-4f0c-8062-f9e359848e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3530c6fe-d8b0-407b-ac65-b0cbfd57bfa7",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88da30b6-61f6-4c8c-94e1-543b82b29665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d766e51c-411b-4bd4-a2cc-e90e6956c371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24237f4-4a66-487e-ab2c-c3a81e8301a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d2b7580a-3025-4b11-b507-932c374d0ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a86266b-4afa-44b3-a015-f80488b67858",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e71409c-bc0c-47b4-99c0-8ad90ae80101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d54baa40-ab14-4f80-b56c-fe6243755b93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a2ece0-61bd-46a2-9536-a6deb5c3f69e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "20aa22b6-0d0a-4171-a408-14757f6baa6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "589bb153-402b-4ab7-b78a-b782d12f3884",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6770fc-25ae-4b4c-95b3-81c73c1c78a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78824c8d-2606-44a2-8b06-b7d6974fb81b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea550a67-84a3-4f3d-af6d-472952616a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d474d60-ea49-4d24-89a2-ca70b3a14363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae4acd1f-060e-468f-b161-3319b0df7281",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e914612-5af8-4235-9c9b-e625dca866ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9c40f78-4718-43a6-8851-4ba268c5caf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e4e0b4-cbac-4e50-b463-541dc006372c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "49a8300d-8ddb-4d6f-879a-1ec7e9d36509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96ea715-1fc4-44f8-afd8-9797af3fd90f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ddb4a2-cf76-44f6-9acd-e55dd7f5f861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19c4bd95-e556-4e4a-9fd2-f4f5cb514997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa67200-fe04-4f2e-8974-dd03436bc91c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "73c93626-951e-4122-83d1-a67c46bfe7d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a562047a-622b-4d38-8e2a-9dba637033e7",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d26459-261d-428a-aa5d-b8b523cc2134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbdbfa91-ecdb-4ea7-b4e1-8438d2ab8d8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f404d1c8-cfde-4c58-a27d-b181b6977200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dadba804-65e9-45a2-9599-9de7056c3f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f6a5e55-d987-4cff-9788-c146a2d52a43",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6225d541-dd4f-43b1-b6fb-ab2f322b5f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb756c5-10b0-46ff-977b-41cf08db654b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1338fd7-a65e-45af-8d83-5619d3d32bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a4130e5-f2fa-47c5-bef3-0274ee61824a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b08c093a-f55f-417c-8e1a-81290ddd5fe7",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "585f5c79-7459-4ebd-a2f2-a263c5337a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "011c453e-b846-4e18-9f09-47b2eae5cd99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee19aa9-6cd2-43d1-8511-10aca0963625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "bee4dc9a-6911-48cf-bff3-e2cdb93cde69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d9d39c-2ece-48ca-96d3-86b13ee2d7ed",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "309638b4-433b-400d-a16e-130b23cd84f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76ce3c19-fafa-41bd-ae79-8bca7ffa198c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8651003b-f6c7-418f-9e52-adfe7e31897b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cf681c5-51ec-4165-88e4-0564abc224f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36229a8e-d9dd-4a23-9b9e-ff1d024a5be2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2854afc-595f-4a75-9b96-24461f04886b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb1f2c03-749e-4ac0-832d-8ee67b0a5dbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be62e28-291f-4bb7-8a9c-0efa276a67a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9108ff19-f31e-477f-a9bd-5d55a08eb42d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2fe6383-ee99-44fb-8e39-c26086de77a6",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b1c19d-66cb-447c-b9aa-f9e196a30f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c7bcbeb-a803-4ca0-874c-dbb5d34bc925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e77966-7e5c-4f30-857f-971d4d8fa086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "976dff38-61d2-4ead-bdbe-b28e0a3d8f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b8c1ab-1e69-41c2-81e6-ef3a93931805",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb25c2a9-489c-44a8-b605-6e82e08ffaef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b25f9de6-f69d-4dd0-8a41-c1843ad94096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5966aced-0705-4d41-a1a8-4a8a48c306d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b139b1bf-b4b8-4c91-9080-4ba4df0847c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae73ff5a-a6e7-4326-9f08-5443e85aeb07",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8731115e-3d83-44a3-a1ad-d3dbb5b81f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cf82768-0c9c-4275-b03a-deae264772d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b8f3d29-4e28-4449-8559-454877682eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ae681721-ff65-4ddf-bad7-498f975e3675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d55c323c-41a7-4f36-b07a-0bb433194461",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "329b9764-ffb0-4500-b72d-8918db833e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e90c1e72-1149-4745-a875-98e4c1c7984d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd43c17f-1c43-4e19-ad11-69fd65d5144f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a7f36028-903d-4fcf-9ef6-377d96e45079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f8b33c1-cf54-43ea-b6bc-bbcc26f1ad98",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ab6560-83c5-488e-bdb4-de77ccf42c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2100f3be-eca8-495b-b20f-f5060f944e1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d72c44-45fa-49d0-9dbb-2bca858bdaa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec599b89-046a-4780-9a33-eff90a4cb6f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cadb491d-1ea9-4580-bd51-a9e5b3a25c36",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "955f362a-ad22-4c54-8c32-4a25bac06845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6ef11bb-761f-4e43-a5f4-0d99659aa846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a9f3222-c198-44e8-8fe8-968c0c100406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff949bf8-10d3-45cc-ae1b-fe82752ea259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b596d1a-1602-4861-9406-99d7b4787e4f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1103621-9864-486a-8a63-8e5aee5fe64b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "935ceb21-5fcb-4829-bab8-33518a6f342e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3838fb03-899b-4553-882e-2c5072ceeb8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e2d8f1f-622f-4ebf-b39f-58d22f0f214c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a60fd1-cc36-46cd-ae68-242e81e20144",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c727a672-08a9-453a-8f56-5bf54e9a495e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aef1ab4b-a1ef-4df0-94e1-722568530abf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d046e70-8b8e-428b-8f98-19fdb0f3783e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "13ed722f-edf5-4628-ab47-158a9efb96a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0efe8de5-b604-457c-b9bb-95ba17728b63",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e8fcfd-bd69-4190-aaae-3aaddf59f90e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea9bb0a1-1488-437d-b05b-c087704286ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f417bc5c-aaa2-479c-8bcc-6fa5565a0aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd2e1a36-181d-48a3-94e4-244fb6eb634c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1a928b-7390-4e6e-9c8a-571e1314937d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09226b09-0580-4c4d-850a-7ee80346add4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ca592a5-bcc1-47c8-9a87-e1dac49723a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3beebeab-db6b-43bd-b194-1591c9660a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c1b9047f-0c82-4853-8d48-77019e71ab06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c08603-b442-44c3-af25-4186c2bc5d66",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbcf222f-7d78-4b1b-be5c-8f2856b6dbab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "681cb8a0-01f7-49f7-84e5-eee2cd3c490c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5abe6767-cebf-42a0-969d-99c072a195f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff1c0fed-5e82-4877-82fa-88ba4685936c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f4dbe9-e7cf-4f2f-9e67-8b3a887149d0",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fcf5384-429e-4c7a-a3e4-75761e09e164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d591b83a-e7ec-4d1c-9451-b1b4fe52964d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3bcebb2-9bb9-4ff8-b4b8-27c204c3f28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "129a5ee1-fe36-47f8-82b7-6a81cb994c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c222de-c872-4c17-b2d0-701fd6ecdd82",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b1e3e2-422d-4e26-9c7a-c7413870864b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec4179f7-aad7-482d-8d28-366541abe6d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0213e166-feae-4600-a412-de20b88a892c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "664d27df-bd15-47b3-9c0d-533394ed1336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c8520e-1200-4387-8f9a-5bd4c53e389e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb4ec8f-9522-4328-a37a-5ec9f06d3ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "253da4ce-0c1d-4a92-89b3-78a0b7a7881e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f51c056f-1be7-444d-b6cc-d4eef8b70aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e20322e-7218-4100-b71b-dbc99a1a48c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1207b9-0e7c-4f9f-998d-5d1988f63926",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9831ed2-94a7-43b3-9830-fcdc97b91d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35f392a7-0958-4193-a756-1d2a73aa9031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4fe5551-7ca8-4358-b799-be056ad03a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fb3e201-7872-4e89-a281-10653c4b3a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad65e2b8-b21e-4811-99ac-f92095fc4074",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74544e12-624e-4ca5-8a4d-d4560cf6704c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b567aa2-e00a-4a3f-96ba-a821659d6e7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e074f2-f2d3-4056-aad4-fa88fd29355b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca856197-3e73-471e-b046-35846d8bec3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c69beb-8d5e-490d-b3f2-3c54833dbeb4",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba092f9-15ba-4297-9f0b-d9e8e2c10c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64ad6fd2-a142-4abb-bc45-347bae11acf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d74bdd26-4df1-4af1-a65b-53f4f89923f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a614e03f-22a5-404d-a454-5312db3218c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db5ddf7-2dfa-4817-ade4-2f86c136cfd9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c5b2a9-78f7-4848-bf6e-a7393fb71ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c79d5764-2680-40b1-aa57-43e1b895aeae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "027abd83-d74f-4e35-937d-ade266754a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "88c77057-aa6e-4892-8f8b-f09c2cc5f9ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c9bd58c-f2db-417a-af12-a42adbfe739a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "961ffc41-fd42-49ce-842a-5e8d4babac6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2953abae-c5ee-4c40-b1c2-4f5ae4182c82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36fa54f7-6410-4548-8843-071d133d9901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f7a4599-5ac9-464e-b2ea-535592699711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f740bea8-3bbc-415c-841b-8dd5db6fb82c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58dd2b7-39a5-4d24-af21-7a4612bf6f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00aadc38-c6ac-4f58-a8bc-3a1ffc56f3b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6829af-1355-4769-aa8e-0a2c4851b7a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "62ba994d-981d-4216-a1b9-d71535915c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6b8afb-c9be-4623-ad29-d83febee1c5b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0bb468-0d60-4316-8333-d24cd667a981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f079bed-e875-4636-ad33-e6a069fa9056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7122a85-e7ec-4dc0-8482-e88d8fff11ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb61f5ea-877f-4f33-a08a-45ee43203c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a0c9000-5355-449d-80d1-d19d15ef696a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5300499d-9ca8-4def-a890-e133151ad06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0f05f7f-3e26-4ff6-8861-a8b75c94973a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0638f45a-2113-4849-9b01-aa4f104692cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "803b748c-3c5d-4d96-a2b2-88c8dfdb6ce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a50d6869-e0d6-4a3d-b32b-6acd897f6725",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1991a282-1c9d-427d-83fe-730d4c1d033d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55c49563-095b-412c-aed8-56420a145e1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd371349-da94-46d8-861f-0a6e6f3c9fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef1237d5-1f9a-4709-808b-4e1853663aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cefe37d-48e5-422c-9fb1-6d0611205aa1",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f294a0a-d507-40a0-bfc0-becf13a836cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "210266b4-2b99-4ba2-a61c-f757e43e8a71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a20a0f-dce7-4455-ad5e-9c938b58fd09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f8487e48-c5b2-4cf1-8ce9-9fa18aec758b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f5ce9e9-5c0e-44e3-92bd-2358cda821bd",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa534d70-1287-4b10-97ef-c8a7fddd47d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf54f16c-eee9-4b61-81d7-12e09489d997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08210326-4d9b-464b-b91b-8f2309f22a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0320eb1-e101-4819-908c-f3bceaf530c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8910c04b-da09-415f-aa43-7f5ffb462f0d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a41445-2b3d-47f6-9fa7-f3a51e13bdd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e9b79a6-1779-4413-9abd-dba94aaacf7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b810762-fb70-45ea-ab9d-1ee2e9d36367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "eac95e47-6a54-4114-8c0a-ccb7a8e72e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f1d02eb-9580-4772-adad-679b76a198f2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcdf839e-5af6-44fc-be30-1a28a1c7f62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22c54d65-8a77-4cde-ac2c-8774645a0c89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337fad6f-f4fb-42ea-9366-b0171e69d574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d420f81-d40e-487c-9a1a-24d416cac65c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b15b28b1-783b-469a-8346-51a6770cc975",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5276927d-e090-465c-b039-dd47d67636fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77f3bb47-645d-45a0-86ae-b6ae9a205648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80947682-2426-4358-a642-88e7aaff1c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5df9978-42f9-4d13-95c3-638c77358eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d95a0b-cc04-4614-888d-bc36b7d2ddfc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "608bedc9-673f-431d-833e-1ea412fc164a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a00493eb-97d3-447e-b555-81e6469ddda6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2e2796-3867-4fcf-b081-2e1c6a9fde81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d820014-ed8b-4c5b-83f6-2d42b2fddf69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff7d591-1539-4c86-8c5f-b7fac3691f4f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbdd7c7c-beb9-4b01-ac24-a8ae96b71e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "735edfb2-4571-4a6b-8220-6bccaeb0fa5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb377e9-f3a1-4dce-b770-e9b43201cc26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcdfee90-6f8c-4afb-a35b-6f0b3f429cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a70ab66-287d-45af-b63e-67aea64564c6",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98cd834a-cf66-4078-8e43-1133715d5517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33c8ddb8-6a56-41a4-8ae0-ba036c208eea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56befbd1-acd0-4318-ac6d-242295e65f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5838bbf6-ed02-4564-967a-505bf4611d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd48c3ce-9964-4302-b041-f123a7c6f7bd",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a37355-da85-4426-a856-71877e42ab39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff822e2-d252-4d92-9814-8d7202b9e455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9ef367-af80-43b1-bba5-042ddd8aa18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4216259-b3f9-478c-863c-ec638ba9c148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db605265-dcaa-4e9c-aa20-ce51bd762174",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10935d5a-27df-4b85-a98f-03c2988e909b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb6a494a-66e6-4f55-b79f-cf4659677818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87354ecf-b94f-4350-8e34-3dd4faecb9c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c822453-3027-480f-81a6-f548e69e04f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "092364ad-6cfc-4df3-bc45-7557a043142e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72eb9b9c-ed8c-48bc-81da-db2f7ed0310c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82b68fe0-e7ed-4874-96e5-4119f904bcc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40394f4f-3ed0-4f47-9a58-2e84f1b145dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "04c33e71-07f7-466b-8da0-0693938835bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2a6dd4-4337-4bc3-b960-7f8f2fa077cd",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e215e98-ef6a-4ce1-b15c-919cdb28b08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7e34d23-90f9-4b1e-83c2-853b0d589cbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc62c7d-5775-476d-9e45-c9d04d01f27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e7694ad1-fdac-45b5-b95e-60d79512f7dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "974a7b74-2619-47bf-93c0-40aed7d9d41f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3afd5c5-fc50-49a1-b840-be6b53c4234c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6486508c-88f3-4466-83cb-82fadc64a350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee988526-c588-42d5-bfac-216f82a23809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "114f45fb-8936-49db-9393-58eb6d457903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df446bc-a2e4-4e6f-8de0-234134156c00",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "638b64de-a4ca-4e64-9c38-9f1196386557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dac726a-40bf-44e0-9045-a245ddb40fea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09d529de-817e-470a-b814-5d40dad6bfc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bafd04bb-c383-4b95-b252-a2ee6cc8d8a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "950f9f9f-46e5-4672-bfdb-6e0f4f471cde",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "756aeacb-2972-4d86-bac9-fa3c20bfd09b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deda0d34-0158-4f26-840d-7adf7644f56f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119b7a04-3443-4b53-a7ae-865fb835bcba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa0f4a3e-0057-46df-85e8-3bebc2347848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a4b508-8af8-42bf-8bf2-ed0b180f98d5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0677b698-e5c1-4567-b553-12c94bd9db26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35c62589-97b3-41e2-b8f5-c467ad938ea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c7401b-b820-4c01-a400-2801aac88613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "958db43a-bfaf-4bf6-80ed-6ea4a63a6ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413ca4d2-f734-49cc-8119-23bacb315d2a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2299ae-e5e0-4087-857c-ba64feea9a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08319f06-2868-4de5-afcf-41269d116fd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e85ab91f-9e31-440a-8c38-4fbb38edc2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f8c85e8-a938-4501-9fdc-34196705233b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085c5cb5-5c8f-4970-acf4-6f819f558b34",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "633b827e-35f1-4454-a3ae-32eb156249cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4202e14e-fe64-4ae0-8b6d-839a4fe5509d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695f6a9c-ca1a-4082-a942-674235a2afbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f96514d-2a1b-4833-87e3-57ad5e333824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd807c9f-427e-4da4-9baa-3073cfdaedef",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90daadad-323f-4f13-88ac-c0f0da07a502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "300fb6b1-b4f7-4046-ac93-267e76068230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8922dc01-da76-4dec-a30e-5ec52f577ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e55f96d1-85c7-4e7b-a364-dd6fe46cf44b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf4f6c9-9171-40b4-9e25-e9d6f4e030d4",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2826befb-e3b4-44ce-8d50-35a5551ea69b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30ee4473-994d-48cd-a6ca-d71881d2ece7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa4d241-c118-4549-9113-571afb5e9af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "915c89f5-b8b9-4672-ae6f-28bf99039727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5942b6ea-3f70-4f22-858e-a57d9c1d5249",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "892807bc-0318-4c10-b2dc-cf74895812c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba278394-fdb4-4183-b85a-af325275ac85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ae7f69-7f79-421b-ac01-b5adbb479589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c718052-520b-4eed-914e-5cd0cb066ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c300343-9af2-48f7-98a1-2c26190c2a08",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7278b6-65e8-41c0-a7e3-918a69fbc711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93c24118-427e-43d2-af34-3d61f9370eb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850c24d8-1941-4a1f-aed3-2c2c0ad1f57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ee863f2-3fe4-41fb-895c-f2b2b2d693b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00d8937-2d4e-4c47-aaa6-dd23d58917ce",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9eeb29-2d65-4cf1-9b2c-bb8f2cf8ae0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e523649d-f200-4a73-998e-de3268746155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "443e6f1d-5afa-4b9f-9366-7dda2cb3f9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c25073e9-aae9-42f0-a851-61c7ac8dd5d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622e4621-134f-4f21-95e5-54e407890e98",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c7fd13-cc06-4541-a84f-6db12d9333c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "508ac108-eac1-4f59-9903-0d5057082c32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2b6808-1033-4f70-8c0a-0dd42f2c34b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d513a8e7-1e6e-4162-a285-ab0ae29bf453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc7fd16-6882-4c4a-bb6f-f9d8d1d7eb66",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b2dc96b-1c2e-4d83-85e6-e863428eae51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78380a21-aaf4-4926-8c23-ae9b4383e52e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c894e92b-99a7-49fa-b9cf-3f44dc7f62ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ec50cae6-c679-4021-a333-9448b1be20b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc119c1a-1d13-4c3c-84c0-2a242dd2656e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3daf10a6-de82-47a0-9eac-d52d68b6f171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d98717ff-ab94-49e4-8959-d548a0077e65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d03fe34-abd9-4910-b0f2-041205cde533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa77b029-1bca-4302-9f62-b820bb2a0d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "821038c5-0df9-43c3-b314-b4f03b821ec5",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f0f6f63-d780-48f9-821f-e473e4d3903d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fc35854-67b5-47cf-ae6a-6439fef68bb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a11333-83a2-4567-8cf5-a8660d5bd8c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdb4ddc8-b609-439b-877e-509df7e08571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "858fe621-d7a4-4076-a922-4ec2046fd64d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3edf9471-3556-430a-870e-2501070066e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0844eb91-d6eb-4857-9e3a-98c3cb98b667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f607b7-4594-48a3-b65f-d78f94a1101f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2776a984-4073-4c42-9b84-dced5d528159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79fc685d-c0d9-4ab4-a0c5-197bb6e4e7d9",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97fe681f-ab9d-4c9d-ad1b-4d5ea0edca53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "234942f1-1116-4f62-9caa-158294a8bbeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38281dc2-80fe-4f72-8da4-39166067a447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "18f183be-642f-41f0-b14f-6fc1e50a8a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f168c170-2b04-44e3-ac75-667dcd2b8c6f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0af9dea-d461-4696-96f9-bd94dbb23e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10bd9983-2f78-4de3-9834-67ab294c16d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3374dd8c-a9d0-4a07-b55a-d7188ec426ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "06f66ed1-7227-4c00-bc90-3a0f691f4908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d093c2-afeb-4b02-a87d-1d6db0d2c0bd",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d71e5fb-b381-4850-9bed-e8f4e78e4637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82cc8ed8-f975-4574-8023-15846ae20634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aecfd0b2-51c0-4594-bf97-67c245a5d21b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0360a52a-aaf6-4085-903e-74486442a42e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5252cd6f-24aa-4794-910d-8e0331fc2c3e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64777d89-9935-4c25-8eae-8a3e946158be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31e1c083-0b82-4950-a3fb-f5144e8ecf52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f63ba49-9282-4dae-8a29-1df2d1c89e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e673f070-4ab0-4081-8ded-62b4b763aaea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe2d1cd5-741e-408e-aab5-211f29e6b82a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08afcea-72ee-4817-822a-f5d4fbf14e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecd6153b-9680-40e3-8190-f5c29a0985d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569f882a-dc55-455f-b790-51357d4a3887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9914c04e-7655-4073-a407-3dc2e460b69b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "298c23e2-b5bc-4c50-b441-0fdcc435c675",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "247dfe70-ef9b-4751-922d-f12ef2f851d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec626874-ed6e-4fe4-b573-45b85f99b0e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5190f407-173b-46c0-b17f-8bd57d3a6877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca9f19f1-984a-4033-a8b9-ab446760e7ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c101ad7b-362f-4ddb-8f57-ba7930a885f8",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4a75bed-cff8-4df6-b6bc-8046bdedd8bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd5690ff-b180-4769-9ed3-2a58af975b8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c74ace-7014-42ba-bbbe-5c7405115b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "14da269f-52f4-4fb8-9d74-3d33a0892774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729f4856-e9f1-4794-8065-7dc830d552dc",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e15f41-ffed-4a17-884b-60ec6d83e897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2b32709-fc2f-4541-bce9-8deb3ee1da89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f86790b-e3af-4a37-9a32-bb9be0138752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "31c2c744-8ac5-4c9d-bdb0-362a81a81911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d9c6d6d-c24d-47b5-89e7-63c8fa37db72",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4563af8a-10d1-4c0c-88b6-cb667a35f6a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4c8db263-4a1e-4ab1-8b30-e8f20f9d8818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7a88db-57ae-40b5-a02c-cacd7a64ca10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3998883b-cea8-419e-9bd3-932fdfb5f4a3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b4dd86ba-1947-438e-abfc-9d26bf267bb2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7c010e63-7986-4d70-9fa9-1d6b5506d594",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d18a6b45-b9c1-4a0a-b922-6230ab3ef912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0860a3a5-580f-42fb-a5c4-fc3129dab641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "896697f2-7522-484e-b393-aafafffad654",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9db35b17-037f-4a34-9257-36ed72328d9f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ebff5b01-3cfa-4a1e-8ec4-9eab526cbfa8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c0bed767-8fb6-4d99-856e-a07010a741a1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5de1b318-d288-4c51-b016-5f74a407a226",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c3ecf157-e6c8-4de2-a4d0-2065c1200630"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b811e65d-4174-40b4-95a3-4383af99505f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fa41c47c-dcf3-46d0-b6c4-b2d54eda879c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8e7ecbbd-6bc0-4d7e-9036-1e0cd9ee0714",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9f9bb974-d0b2-4f87-a3e0-9bdcaef9bee6"
                }
              }
            ]
          },
          {
            "id": "d19b73ed-c308-4cd2-aa72-6e31fb56d693",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8cbc21e9-d172-4728-abe9-d16be69f54a0",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "65cb7d20-37b7-4d19-ac8a-926d47693f31",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46f2266-9066-4f7b-b36c-8dddc6222466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b2fc088c-7ee8-4623-9283-b7d69f0aed53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a6a98b1-9142-49b0-b022-74e48badf3a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c1c5a3d-9556-4c51-a253-7ddb14be8fcb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a4b2a8fb-4223-45af-880d-271cd31bc7f3",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ca75068-17a2-450f-b90b-04630a77ba63",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3f2acee2-eab9-4691-afb5-aa2ae21b47fc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b10bbf92-7681-49df-8c3d-b62e1259efe8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0f0f7f6e-8add-4d0f-88e7-4ce8c367d422"
                    }
                  }
                ]
              },
              {
                "id": "76e0760a-2719-4560-ba6b-3c6cf5f2b0ea",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "299ec8c3-9260-4a5e-924f-20a05cea0d43",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4c8cbf53-fde4-4942-ad37-0cd0ab15efbc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a9c9d87-c0c9-4b29-9db2-904605975c84",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e19819d1-3af4-4e4d-bf30-21524efa0ce6"
                    }
                  }
                ]
              },
              {
                "id": "db80a511-7603-4ddb-942d-ff33f5ea25a1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c8617b7-d64b-4011-b5ae-fa2316bb3fbb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e5e90ec2-cc46-406e-9d49-97b816b8cb7f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d9b3f3fc-f54d-429e-8ef4-25affffe0405",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b76b6cda-9ce0-499f-9aad-353a72250456"
                    }
                  }
                ]
              },
              {
                "id": "e2cac438-eaa0-4e5e-a425-02b92a727f08",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b00935c-3775-443f-a598-0415a26cfead",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "902199df-36e0-494e-babb-2efbd3644cab"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e606cf02-bcc3-4ae9-8af4-b0eaca7a6986",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "db5963fc-60e2-47bb-9f48-aadf4cbc413a"
                    }
                  }
                ]
              },
              {
                "id": "16a7a214-cc92-447c-8c21-efdaf2f871c8",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f15d7cf7-603a-43e3-ae9f-e5d9c1267055",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b136481a-d082-41a6-a16b-9bd4797c3b34"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "95d5253d-56a9-4ab8-8d82-3f367e393285",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "829e60f1-92b9-4987-8370-601cb4566af5"
                    }
                  }
                ]
              },
              {
                "id": "1b20f3e1-4e75-4d90-9b9a-307ba90772bb",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "77c62967-2c7f-46fc-9037-520c4b14c1a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3ce35bb0-a117-4f01-90a3-ad3666df0fa4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "039ae4c8-43cd-4f07-9214-8511640a8e2d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2c773da2-9b42-47c2-8f47-8f330c98a9aa"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "96d93cd5-1a35-456c-bc24-b06ccfee87ab",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9d5e2c44-adfe-4b0c-9940-2f723e5fbf4a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cdcba67d-3dd0-407e-a629-fad355c4e951",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6b770831-68a6-427a-9f2f-b37fc2db711e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "56eea1cf-6231-4f68-aaf3-b346700c80e8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "672b40b4-b1dd-439c-9788-1a4ffe6e639e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "481e92d8-6bf2-4fba-b161-e14657e6b1d6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c1c7fa60-6b0c-4034-9e4a-1ee4d77043c1"
            }
          }
        ]
      },
      {
        "id": "48b7db3c-2c93-4ebe-8247-79edfcda56a7",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4dc7d892-c697-4851-8d4a-69c4538cb068",
            "name": "Negative Testing",
            "item": [
              {
                "id": "da3ad9bf-ba9b-43cf-af5b-c6894a45e9e2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "eba5b458-8f3b-4bb0-b635-f739d502021c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d472d179-aafb-4c52-8c83-b4a8e6e1b240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b5c1538-3570-41d5-b00d-607893bcff2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d89d519b-9941-4bc4-9b87-40856ccb9aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "16d60c83-3708-4013-90a8-2b8f857da4c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d65be6f-bc6e-4b1b-9730-9677138ea896",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de942420-880f-4b08-a280-8a002d9d8715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99d37df5-dee0-4ebb-8a2a-2aa754bdf2bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dcdce12-dd6e-4ec3-be72-1d63bb9435f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "561fddf4-a5c3-4e11-ae11-c138cafb99a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba1cef4-55f2-4142-bef2-8a96255f8c15",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1dc0ac0-a4d8-4737-8280-4497a21b888e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c61f82-9b13-4ea2-9e97-0072e6000e82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d578a33-a0b5-4164-b318-bafc58fcc692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7c6d9b4-ae9f-45db-bdf8-2333c2b55a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a618bbce-6b1c-4a99-897d-4563ff56895b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f17923-b997-48ef-b702-d6828a128fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1cfdfce-6842-432a-ba8d-223f5769be43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d71e7e1-9e04-4af5-b7c9-acb08e94393c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a76e24b-0514-4a0d-b74f-15e24f938298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a4f75b-30ba-412e-9e0f-06bb15266aa0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c469c743-4c31-47f7-a4c7-a4f6bc2c0425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daf1311e-69dc-4796-b235-8b36797ef4a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8656a00f-ab3d-49e0-9013-24b519e72657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "05e4d83f-2f3d-44ee-87f3-b5f35c9ef95d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a11c8563-c3e3-4559-8780-9fad052e1c82",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "011659a8-22bd-4b48-a76c-c63e3f9a87ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27df8e10-aa81-4ef4-ad51-b3adb57c8a66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b15605-6fe1-4c80-8f9e-b423232b255f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4d0df54-7a29-4ccf-aacc-1c5b9966d43e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae6564b4-d191-4ef9-a477-a73af1a8e104",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e54f32f7-00ab-4ec1-bcbe-d60734d3c646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b39adc88-5885-491c-9162-f8e7a1b2bcf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5016c9ca-7245-4055-86e8-eaa4ec2a69d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "675c9865-4c9c-4706-a848-44b866e20190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af01b58-00fb-4a72-a173-29e09cf9e85c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dffcdd9-d670-416d-8a6f-6a47a6573948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32a4d56f-e073-46db-8039-d8d6138080b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd76de5-860d-4038-a61f-cbcd3a6fe024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6717f2aa-9d9f-496d-9ea7-2a9dd4e37788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "255bc051-b688-499f-9974-bf6de15ba685",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd64352-ffa4-40a3-8f17-c11483c3255f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b293dcdd-c11b-4194-adea-e7eb27e6c361"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cddc2637-7085-4660-9782-28869f9250e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b90c1281-4c6c-43ad-ba15-0b886dd84bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e42968c8-779e-4247-a0f1-75c4fad97cc6",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bbff00e-211a-4f84-b628-c76146f4e27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa2d3496-0e5b-41e0-8a37-568c96a4e086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a9ce995-cb88-4345-a1ba-375a99f0aa87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9764defd-9ceb-4552-9f1e-ce74acd23c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787605a3-95ad-4559-a790-0233cefcd761",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d4f8ce-a037-44c9-b838-82a46f490150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecb9e164-3bdd-4d70-84e4-bb753a903966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c28747ae-b477-43cf-8b50-3182d050678e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5cd2b501-985c-4c55-a4ba-989b07bcd294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85db0e26-bb4b-42ac-8eb8-fb6b09559b2a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86388e2e-7ad9-4fb9-bfe7-3bd2d59b866c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d632f53-d023-4fcd-8314-fc25362d8ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b4a38f-2550-404a-bb3b-e7644e8f47c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "41e3f374-9ec0-44df-a651-b8da49b9a0ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e465fbcf-4609-45bb-a45b-fe71d0ff5e14",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd3f430-cc06-437b-afa6-9f7f11a52725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efb2a130-6dfb-418d-8aef-acab806e317d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58bc9813-331d-4597-ae96-e013717a500c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "39e91116-9746-425e-9377-c8eb27b6c9c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "446b4b73-c7f8-417b-b2c5-aafc7bd88032",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd236b4-d4c3-4570-82a7-892edd5ec7a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc1d64e4-d910-4a8d-be27-3516fb079036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9787210-2273-47fd-8369-014f3e8ee849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "413eeef7-5f22-4064-bcd9-47a8ad862212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e959f87-cbbd-468a-a98e-136abaaac454",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c858aa-c68c-4b46-a8e8-c597f541f600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77cd1e85-c595-414e-8ebf-37aa69a5fd84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85492e5-84f5-40a5-9fb3-175144064b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "984922c3-79bf-40a6-a5cf-0d53dcd3ce89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c4e220e-865f-4b58-a648-4df55b2b2262",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeef689a-1cdb-41e9-9368-7be005464964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "554af65f-5e26-4fb3-bdfa-a85481be8696"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d1eee0f-66d4-4868-acab-7563e69dedf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd15d736-7cef-4b89-8db8-8b19b344c8dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a809f3-67aa-4315-9dd1-4a8c61c74df1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47bc813d-0ad6-4607-b17d-4733bb79155c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33e16c25-6cbc-4210-a1ca-7e9b03a669af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190a16e0-1ac7-4101-8da9-afccb7482f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf141d73-cf6a-43b9-b7d6-5eb2249b1efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e7de04-c8cd-47fd-be35-cc958af140b6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b38f928-51b0-4fe6-b691-8485d590b534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a33d74aa-9423-4123-9129-31ad994e524f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f410dd9-b043-4ae4-bf8c-877c0487875f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e9bac76-b1eb-442d-a49e-c938f23db4ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c63048-6cd1-40d2-8106-ad5c182fae0b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f20c9761-64ef-41b6-bc46-608c87a23d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7347b3ee-6da2-43d6-8b4e-332600826d74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b94222e5-c349-4c02-8961-3e526581cbb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bc58378-7d52-4b85-9cd3-4f2eabe6d5be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c7e3e0-4fb0-4224-8d4f-2b3264f5101c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c67f31-58d4-41c0-a4cf-59e1181b3b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55808678-1fb6-4d6c-b639-230ae8ba8297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da34742f-4a19-4cf0-9188-cb9664687285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55505748-394b-46c2-acf1-99a39f2d62cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "956f6f56-1037-4341-9e2b-4c27f82bdc76",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee6ecc0-10ac-47f6-a701-c7c54cc5d908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f16d179-7df1-4fd4-946d-9a84de2a5b3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc59c2f4-1d64-491c-b0aa-bdaf766c63bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "616ac9c2-d77a-4135-9a80-8bfe62c670eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b35521ab-47c2-4cf8-933b-93060a3174c9",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8776d7ca-00d0-4979-be26-1e2eb16f0788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0cd1643-c7f7-47ae-b57c-a5735189adbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3efadaae-f030-4c4e-87fd-d1380f886c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55860a4d-fd0f-405b-a3e0-9c25a4acb72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1614def4-33d5-4fb5-9925-ac1d14e4e2cd",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff4021a-8175-4e7b-925e-a48bf1f05b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7ce7f55-3ad7-4685-8d9b-6c555b33ee67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e120802a-3503-4fe2-a87e-58c749a14ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "668c022e-f9c7-4206-8f55-77f8f999bc89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c6ad40-7c24-43b6-88af-2775540aee46",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90590b0a-e457-4ae6-83b2-980bb5da5810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc9f4287-6796-4447-9030-a396f089b96a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5dcbacd-357e-42b0-9b68-42d437fb6460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb18632a-a41e-4a60-b065-5a3f6e475d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b26972-7713-45aa-bc53-6cd7fa7aec64",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e31166f8-3ade-4f71-be33-921743fb8fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64e616f7-a2c7-406f-b471-24ffd6edaea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c25d33-4ea3-4181-85e6-ade2634a4f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4de19c5a-3bac-4b41-912f-6c9f391e86d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "831e34f3-36e9-47c3-bde3-ae766e4e266b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f13980-21a6-444f-94cb-531daad86c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c851d6b0-e37b-468e-8d2c-283488445121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4fc05e-ea45-420d-8f2c-949a3a69c660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dcdbc23-7a70-4ac3-8f0c-8ab2e24a713e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe4ca24-cf24-4659-bee9-728afee644a6",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53fde52-659a-400f-8aae-484a532d960c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4392c5a-555a-43d0-a18e-b4cc675b4f49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4ae670-28ab-4842-a608-159040ff6ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dd70443-3d60-4e67-8336-09054e958b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f07fde-a2a0-409a-b677-d49e6a087f38",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94b74a6-7f3e-4e7e-bf21-57f17c14ed7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d4abf40-17c2-4aeb-9700-c51b2bb67a58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88af1d36-2d5e-4c1c-a0b8-b3ec29f31082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99a177a1-dbf7-4078-b651-f0744ea0fb28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e24ee8b-727d-4346-93b8-90d385b5864a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf8aa46-2a16-44af-88bb-55bff8bdbe32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fbafbfb-be7c-4fee-b846-a3c779c2a389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc1f52b2-1180-44a7-8b57-dc083b23fabf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5286551f-c909-46bc-87de-6ac2df7f5475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "487152d3-34b8-4094-b087-e4e39338386d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9642666f-6c97-4e64-8804-b1093693e791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e607ff8-37fa-43b1-a7cd-b499397a6fb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd3db8d6-9dfb-489b-a5ef-749960761bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed087134-0612-492a-b5bd-264d7512a987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d13c8e-dffd-4ca6-815f-1ba6b1601db7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4878e2-5710-42ee-8cd0-772eb8684134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09c44de7-2ed8-4d38-8f23-95b3a6aa6c64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82286cee-a1e0-4d27-a7a6-3bb8194b3a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8473783-9273-436a-8588-623a5acf7dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef4de9c2-817e-40c8-b61f-72c0feae7a47",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce85263f-f5a3-4f71-be36-ba62bfbf8e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "186b680d-2d5b-46a5-85ad-d0d04c454d19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "023a6f97-2bec-44ca-9a00-71eb445a4c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e7c3d8e-4e5d-4cfd-bf53-bf33026a6947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "251e8fa8-6ecd-44a3-98c4-831b7dcbc7af",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ad89d7-cbea-4d88-bb0b-9ded67e815a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f016942-3e7b-484c-982d-5c90810b7150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e20eb3-7c05-4dc7-b818-744ffa2a2acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd377fe0-f56a-4bb4-8154-8562cd86ebfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "645978d0-0eef-438b-9eb4-694922efe4ad",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c661fa-d270-4adf-9b7c-dd7da52acbeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28924801-78ae-4df8-bff7-f05288f25a9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe898f5-3808-4d1f-8f33-beb00e948724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a37b907-aa63-4ab2-882c-d3539cd24bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2de57ed-d687-474c-9040-576776b016d0",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ee1fef7-7870-49be-8c01-b8b0d034bcaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad0e0a4c-88f1-41d1-9b29-acb0209bfc47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad722a7-c0d9-411e-b01c-759e6a56fa47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "701afad6-9845-4678-adea-916756aa532b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8740cf28-c48e-4166-8dd0-f0388e42bb17",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d9b6e0-f984-492e-a3ed-4110787cdee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3962dd69-899c-46f5-b9f1-559d54788336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92998a3d-5495-420b-8aac-162ea0c166a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eccdfce6-9b33-4d87-b5e3-32818feeb236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04148539-8de7-4960-b10a-88971ee81006",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06694ca5-d3a6-40a5-a98d-09291bf0b556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28b480ad-71db-4601-9e36-0ca044383759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfdde15d-05b3-4993-9c3e-ad02a1b179a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5296c867-20f4-4591-bc33-a5411181dfc5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1682ebd4-959c-45a2-aac0-096e657901e7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b24517e5-c89a-400d-8ded-0cc5503db513",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df391677-1815-4306-97ca-020c46edbd8a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e40ddea4-693e-4792-9987-281123ae1d92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc17751e-4737-4c77-9720-d440fc22fd89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c91d591-609d-4689-931b-0d00e4af72ee"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ca688e3-826b-46b5-ba83-473720173f41",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2122d988-47a5-453d-bb08-4829db41ae7a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "01fd2139-f2d9-46ee-9cd9-b6661c73bb17",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ed34017-1778-43fd-8ce7-d0617111b7ea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d5bb2c0-2214-414b-844e-399aa8b91b0c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "41bf269a-4a85-4027-ab81-f87137fdb868"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fd16c13f-c039-4b5c-ab69-f410e922c0d8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "24f6fb92-9b1c-451c-bf5a-6591376fe4fc"
            }
          }
        ]
      },
      {
        "id": "f59722e0-e644-4cce-b0c8-f24d6b700026",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "76caf3ab-622d-4a8a-a27d-138f72abc5b7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "76d946a3-b46c-4c5d-a80d-45244f21d81a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e5ad650e-2b39-4c3f-9e00-ec5809dc02db",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae96d90-c66b-4758-81e2-5ad77004c0bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b6e1203-4195-49c5-b7d4-e4cbd6de86f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c03b18-0ab6-4221-9fbc-cfe27daa00a0",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dede503-95c5-4525-8266-3208a1287654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa00a4bd-8ea8-4ac2-9abf-c4aea3bd1210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2982914c-5421-4edd-b608-0bada7e7e2a0",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e24177-8c78-4340-bad0-2fcc2d5576a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b7bfcd3-713d-4638-be9d-62bbc42c81c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3acaac60-6c9a-4c22-9f3a-f6b3d1348094",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8d55cd-7af0-44e2-8783-d3208d627579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83295622-b233-4c21-85fe-6818b3fb7f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61027130-d7b8-4488-ae4e-c16f5d516a38",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "084b785b-4d67-4882-8bf4-7b8371ebca8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f71dc6d6-ce47-46d0-891e-f7419510d582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e74b2c-eabc-4cb3-b162-87408fcd1026",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06021c4f-b1ca-477c-8cd3-1c6f97ae7013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5b8136a-b7d9-4181-b4de-d76e0794f3fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c803339-3eab-449f-9272-495e648dbf34",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c304ff78-c80e-4491-88ef-90479a4dfa31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25428e00-de27-4dda-956e-7a0bc4f0e328"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29db568a-4031-47fc-8064-5d028c202c6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bff37ba3-7523-479e-bf78-75a5d8d13b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f12f0a-4f7f-4131-a7d2-b162409bb4c7",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ffd3a3-dda5-4e59-ac12-b476d3cf3771",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72dbf4ca-a2f8-4802-9233-002c4395b1cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac119b5-cbc5-463d-9b27-bd5283ed35dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a495e029-c067-4a95-95c2-73031810fc56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da99f67-3b4e-4574-8560-07d898b4aabb",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e25be2-2301-404b-85b1-642baf8e42e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8526778f-c9fa-4bec-b087-98d621313872"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e455cb58-ea53-4a06-b91a-02734cf5a187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ec035e6-6d00-4ea8-83a1-88e6d313b293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba74913b-9981-4769-a137-c4d32dcf4124",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae27112-0b7b-4e15-889d-201255ec655c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4036043-ab48-4394-afd7-4b547d4b1780"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8245c5-eb3e-492c-86d3-17da8b109332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a44ef42d-f403-405c-b4fa-ef31d994319c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8fb72ae-aa72-41c5-9a04-1930cb852764",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f94b0b51-b177-4eb9-989d-3d57ab7c98b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5a64ef0-2d16-4423-b982-7166eb13ae02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aefd56c-2d6b-4e44-8df4-621990d71a4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7f2604a-0bff-4f5d-a59f-19a396b55e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b40508c-a82a-40b6-8327-1a362b6dd36e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb620f71-1dad-42d2-bce7-96a99e9583d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de449706-aff9-476b-a1e7-e386441f64b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd1af9d-86cc-433c-9874-17fef794e7b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "664bf0bf-2021-4145-aa70-d016cdada757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e570c343-c38d-4cbd-857d-aa67704c0e34",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96171921-3bbd-4c04-b9bb-ff8e01ae2c23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0752904a-4a5c-4ebf-92fd-fad4fa3e1ff8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ccfbc4-fb4b-4b9e-92b3-865fa99ac2c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afd19d2e-0ebc-4991-8cf9-ac6105114688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952b7bd0-d39b-4844-9438-21979df15b61",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c7b0d6-f22b-4823-9bab-16fc98503969",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0217b06f-356f-4af2-a6e1-4a5b9f207c97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e140b2c6-41bc-4b64-9ff2-d715c5bee884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fde1fe6-98dd-4c86-91b0-1ddd51284d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d35498-8901-495b-9b7d-7f6ae7f73e9d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4630d283-f689-4807-beec-574a359f2c24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f797eed-97db-47d5-9022-7b702a0f415d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "145788c7-4ee1-4333-b32a-1dba4f2bad60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14aff9dd-528a-449e-88a7-3dfe23d4777e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e7d9de-d0f5-448a-8357-276d524405ac",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca29e1a-8ea3-4468-9d44-366e950c2868",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "541bbf3b-46f2-4c39-9c67-f3a2a0b0c5a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffca1286-e311-4643-a740-8728264004de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d32b56eb-b2c8-468f-9a3d-5440f74d9590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb22d110-2be9-4049-9213-c4b301041d3f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458ee0b1-1c8f-42f1-853e-78b2eba22675",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b464ffb8-c0ac-4628-bbd2-8debd15421ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d98e098-b0c0-4138-bc22-9efa02e62fbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a9459a0-4f58-4559-bc94-77b5626f8df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d996e70-9e73-47e6-a482-df71159087e9",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d96c99a-99cd-4fb9-8f69-6944feaff6ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d89043b4-d4bd-4f56-b31b-97b5c2be1b12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d769398-21ec-4417-91e1-ef9e9902d9d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceefeaf0-29ef-435c-bfb6-05d3269a72b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb13d9a-1b4f-4778-b213-d25a738d34b8",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15486495-be95-4824-92dc-88724f042092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78a41798-3184-4710-b5f3-9b9980b8411e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f61602-6bb2-418f-b0db-54a93619252d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d260d6f4-cc59-4350-8cb8-1207d5b4cdc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec0660a-928b-47a0-933d-a75a6ebcd06d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e82189e-f5f3-46fc-bc8e-22518ca0c150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ddd8675-fd5e-46cf-ad51-b4f107f8fb91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e60312b-7a38-4e8d-aef5-61f4e5a8602f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17ce7d56-957c-4ff7-952e-5a4479687627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "431bb9be-06ee-4f74-bcd7-d7cca7c95253",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab890a4-bde6-410e-8f4d-328398a352fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35db84de-599b-4284-acfc-3df640a43674"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "268c0981-a888-4d71-8dba-7cb678c2fa93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4958e288-e37c-4ba6-844f-4ea896476cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0df731-d5a0-4509-8e2d-54d50a236348",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757c8810-5979-44a7-94be-f98e94aaafc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b730f2c-019c-4d3d-9259-b004364e941f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97df1785-ef97-4a45-a107-5929de3f4d34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b5dfc28-300f-4e44-ba9a-8a7d0b436812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e37c45b-e6b9-4111-a442-13cab17c4fa5",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2aaffb3-369e-415a-80fb-e8225dddd5e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4e11759-0736-48f8-91c7-0bf3f9c55837"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf55d73-7fff-44ec-9492-73ad64bce40c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2872a3f-cb22-43bb-835e-2e256c284c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de344bc-1549-4d61-82a9-27a1296db969",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "494c9b18-dcd1-4ae1-88fe-f603503d8c48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e7b0be0-4dd6-45a8-bed1-4bd8aaa31650"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f78be4-0a72-4f3a-880c-153536d52114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a7c9422-80cb-4761-aed6-b89c662a9012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ae6bab-af88-4d26-86c4-8daf89ff1e83",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f1d5a94-f3f4-4406-b362-72029404b446",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "176c77c1-30ea-4b23-a06a-a44df069e91f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e79c6858-e528-4e3c-b68c-aadb2fc8bd6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd936c15-0e27-4ef3-9a8a-a1c189896491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cbc8435-fab7-433e-a199-b28336cac2cf",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c50b9c82-1b84-479d-91ed-484ccca10e5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b553844-56c4-464e-a1be-670883a6b27a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f33880-6992-4c1a-9def-2dfc84a44aca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3f68ed4-7417-4d6e-bdfe-0fd3d0030030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac73ca4-0c31-4ea3-ba50-c225f2e4b38a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6256217e-5dae-4f9d-8bf5-83ca24171ca3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19280d87-0fcc-47e8-af69-c43e6d1abc38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84efebaf-b328-4f90-b800-ea99a1e51f2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eef42c6-0b9d-44f4-9b6c-e794b33fed8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eaf3b9b-0095-41e8-a417-f67007cf03e2",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "087e229e-e80b-4380-b090-9f16a2f9fb85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "006e7523-c9a8-4397-99e8-da9646c9ce19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab587714-3843-4fd8-95cc-6205faa0f149",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77581d21-783a-49fd-b150-b6484cca349d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d831680-6259-4905-960f-f1d79d179ad0",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc23995-3c5b-47d8-9115-e0f84b10f6d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b71d19be-daf7-47e6-8cd5-12f4f73d3983"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f654e70-2c49-4403-bcc6-306c7979097b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ee9c40e-26b6-4252-909b-50363865708d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3897d7e3-3273-4f85-ab63-075e4c7a6c7c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02574528-8286-46cb-a592-b5e8cd0b16cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3300b40-f5dd-4f0c-a137-66fca412086b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91485f89-2812-4c27-9fd6-70e48bdd6b64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31e3d48d-e80e-4038-87d4-77238b44a7d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dfc269a-1e6e-4e27-afdb-ff755c603f31",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc9e8fae-dd70-45eb-a28f-0b17a821c1e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c5ba9fa-a1ab-4b4a-88a3-9246bdce5975"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e19e67-739f-4745-a3ab-5cc20e76df4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "567d576f-46c6-4e30-bd66-a2b55d82f58a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e0ff1f1-8c62-4027-b363-a952ef736f4e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a980693-823b-4953-a56c-29a9213086fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8eae1de9-f364-4bb7-afb2-11a213307daa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7152a61-a783-49fa-a09a-aa89809392aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f397665f-7940-4632-a47c-732e5a8f05c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b488a568-c2f1-4b91-aeea-134e2e37d2cc",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a201c37-00d6-4503-b0cd-506d30b44e1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22b22f9c-38fd-4d5e-abd2-7bd63e23fe03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38614be4-1b97-4de4-a270-54bc7c617065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d56d6a17-fb0c-4a39-98d2-b7fbcf2acb5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a28bb9-1977-4d5d-bc0b-aa684c991916",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e14284-e044-4b55-b122-dfef398ef898",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "560bba81-e637-45e6-ac75-36211906838c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b873705d-542c-4a53-baf3-f30414671782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "363a7c1b-51b5-4d71-931d-889834409992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e794cd22-e20f-4d75-9a66-c8bfa8034357",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba7972d1-6541-46dd-bbd5-512f81901bd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c451e99-718a-4138-8b12-57f6df50490f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0000913-e633-46da-b360-29dd0d9cbce4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27485764-bbdd-44ad-b66d-61ca5bca7398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "182c7d0d-d3e1-4993-b513-07cc02a28676",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e132c46f-a77f-46c6-9c99-5edf6ffd3d3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b95eab1a-308e-4951-af60-3e1677709e8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4dede05-827c-4911-9ea4-c4bd4e947472",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "447a62ff-4012-442a-8fc5-a2e616f1e677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc91d06-94f9-400d-af8d-cc69a9d528c9",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81a39b1-35f9-48ec-86d1-1f56f053a601",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9777c2c-00da-4507-b912-5550299654a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e044d49-4fdb-4f04-aaf8-eaaee5e39f4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6e31bc9-2f7a-4041-b80a-f3710dda1664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9dc7a52-f474-4d53-b3d6-a89b8222346b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1175070d-fcde-4ceb-af0a-143352b646c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "244e4d74-2539-4db7-90c3-6f974f635a08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c08691-d7a8-4664-9011-bedf41ebfcb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab227d14-3402-422d-9e61-93bc57ed3c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84bee5d7-d1bd-4319-bc2c-5f4fc1bed88a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c84fc33-b1bb-41c9-9eba-a44e246e591f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "129f1590-ac9c-44de-aff3-df336603101e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23aee613-41c8-40b2-b131-1eb18895da38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5842a1e3-d12f-48a2-87d5-4c1eb04b4210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47534e03-59de-4a1f-bf5c-afe25c6e0444",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2869532-f443-45f4-bb72-6c898b7a646b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a7c1ebe-bf19-4025-a123-042ea881335d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea9e0b3-f33b-47ef-8395-ddfedc24a14b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd7ffcd3-2c54-4a84-837b-ac18e6e63aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a75fa680-a684-4620-a343-32ed19aad17a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac9ba742-4927-469f-86e1-5fc47d203930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c98eb4c0-ad7b-432f-a692-04432292408b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d09715-5d32-4e4c-a215-9e5b97da50f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "298aef6a-e9c8-4bd3-9121-10249bbc3482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23817dda-7bc6-4677-b57f-ec6c6cbae63b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41353c6a-38d0-4fd7-b75d-49ee9214fb4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eee5f726-d009-43b1-8233-129a1f3249c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e1ea67-74c0-4bc3-bca6-fead59db3f54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b18d3d1d-b502-4597-bf2b-82dd4f773c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "424d9290-2d0a-4b1a-a2c9-76c19cd2b9ed",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7af334-78d8-4738-b551-139906621218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79650976-d45f-48e1-a492-7162fc216ed0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9c756c-1c03-426e-9060-d6eb8b3713b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2ec4d0c-90b5-4ae6-bf8d-f96041e93e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e048e6c-7747-4f83-9be6-db08bb8e77d4",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09eb4b06-d347-4203-8961-00bf0e76840d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2207251-2be2-41f6-bde1-e48c1601e969"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b106f96-77e6-4957-9656-2ec65c9684a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4150c797-49f2-400e-b9af-4fe527edca80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c62207-e88a-4991-83e2-e7fa4caa1a02",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4de2966f-333b-43c3-b10a-6ff37e28c4c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b63c75e-a268-4a68-bbc6-86ed5c122cfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb3bc37-1c19-449d-8fe3-bbb39fe828f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fad97498-734d-47b9-b0b7-549ec86bec38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd627cb-292d-4c66-b5e8-05673be90ea2",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "839a8588-4473-4afd-8203-e814a21c46e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc79600e-7b23-47f8-a8d5-3c920b2e2290"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b06661d-715c-459f-8ae8-ba946d14c09f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8ee218e-e1ff-4b41-98ef-c10f1a477678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e045645-c584-4a4c-b07f-5a84dcedefa1",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148b5a8c-813c-4322-8dba-63b0ad458b35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20a8af3c-9f1b-4443-904d-c97e25a37e1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20580713-9486-4db7-98ed-11976bed664e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdfbe370-3619-4f6e-ba33-f06969a73ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5e126d-ba9a-4258-b199-2ea922902a9a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be9dcb00-3331-4cf2-8102-26d36702bbf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "560be531-b3ae-4216-8215-4730adf2552b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aef58d8-a327-431e-a47c-b0b7252d89f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c513dcc4-1bf0-42b4-ad31-1d4c0d38b679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c2cdeb0-0265-4ff0-ae70-5839e86458cd",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0dad66-0963-4c95-b7f2-0a153f94922c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92f087b1-d2be-4ab5-acb8-0039ecca8eb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13709f2-2b17-4b52-b2ea-fe1bfc47b1dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7f2ef3e-8735-4d86-828f-e165e3c86c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c7fae6f-21e8-4a8f-b6fd-d13620056f1f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea34938-6b1a-4c83-ad14-f79189632f51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69fe16de-de5b-4c52-bd05-34138a228471"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c806436-373f-4304-8568-c0305512667a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cebcb83a-e1ec-459f-b2a8-6073df0fde30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9501c018-54b4-4c36-b164-6b432b5ac19c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac6bcd2-c0b2-4341-890b-9209c7d0a1d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60b50c15-c65a-4c7a-bb64-1df0889e4be3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe2896e-5abf-4b48-9871-d93e0f90039d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6213f831-2683-4c4f-86a9-21760c52f34b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a208ad64-a828-44bc-9a94-7e45446ca20a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ef9e49-c511-4595-9146-0eeb0e503e6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "665f8ab5-0074-4a3a-a26a-248281b642c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe109aff-a33f-4cf0-97eb-034f0b0e486d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4589d92d-9698-4857-bccd-2f8f15558d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e06593-963a-4231-a303-447b2f8373f5",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f344ed-163d-41c2-a22b-b6b69127ca82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "397352a6-c2f0-47b9-a902-bbfab32443b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fbf7656-3167-45cf-bb39-fdcd0e1ffec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "915a0cd2-d380-4d11-b746-c11190608c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a02f9d8-b5fa-41ed-b5f5-8bf60d5cc62d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d955c9cb-53aa-4fd5-a09c-12282ade5292",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87b0e913-507a-4578-b1cb-33336e6be5a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e5e503-ae2e-4164-8e97-8aeb7d8be303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90fe3cc0-b031-4ee1-8548-1461b8748cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d1d82c4-693d-46d2-ad43-0f1ed3a5a62a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc79bdbb-b81b-481b-8813-9cb47bebe150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fa60f88-9315-4618-8c71-514f8bb2324a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c9b97b-8354-4fa8-afab-28ca7dc4615b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d36ea4d-74c8-4f2e-b8ca-660f3327d907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc27258-f2e3-468f-9edb-c2dfdebc2f09",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f759fe1a-698a-4baa-9bae-90eb8313d977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c5de486-6f0c-490a-bbd1-6e5157768ffd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "172ef764-0db2-49cf-ad82-332ed446679d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a61c5bb-00db-45f7-8192-c7667a17511b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc96fde0-8900-44c8-9d19-065f958c545d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70178eb9-cc55-4c38-8856-06df5ff392a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e27ef1c9-3337-43f1-a3e1-66b516da848e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b708d3a5-2471-462f-98f8-eb281cc68e48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "927c858a-622a-48a4-b2ae-d24ca824c624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b8b354-296b-42b3-9990-43c5c6b936db",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f04ee3-d249-4791-8059-2d69ac1e6be8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c85c506f-3f1a-4164-ae74-d1a9083653c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f62d9bbe-f362-4625-ba61-997239710af8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ef28808-45e6-443c-b861-f00a3c1dbad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6772d4ba-a539-4596-acee-aab31c239697",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ca771b-377b-4663-b253-b897be3a3c3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c6beba1-d569-4aa6-96f7-59a73c716dad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5aabbaa-d55e-4539-8253-985a67d1b95a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a3c302d-d82e-4cf0-80ed-efdb0af711eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f744352-cc98-47e7-ae1f-25d8793e8694",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642f448a-444b-41c6-8344-e2200c4079cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bed3566-6bf2-42ce-ab5d-72da2917fc9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec444c3-9684-41a8-b297-8afe9ea9b43c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "134974dc-8fad-4716-bb62-55204ff19999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a22bac6b-a1e4-4412-8f1d-50b9a9bf800d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "912ae404-d9c4-4a82-99b3-f8951d282dc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4827339f-b48e-4176-b349-4cca8f635513"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb232d3-983d-411b-adad-e4853f689e22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c7c4d00-e1d5-4320-b846-685de77c0de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9504a32-370f-447f-9194-3fcd42e5fe4f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97544a4d-77fe-4534-bee9-68f024e80e99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ea7b36f-6a75-47e8-8cc9-de87a96a014e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01861cd3-1f38-4563-bb6a-8ff59cb1bd45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20926e6d-d700-45b9-8950-899344a201c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d9c036-64ba-4b65-a14e-78e10cb9a116",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f56c4f-310c-47d4-88dc-d55574d88f86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3356ea6c-15b9-449c-a650-c6cb8f189c94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99802bf8-072a-4a6e-9058-a2d70939192a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "810e4003-48be-4073-abd9-cb2e14479253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc0f624-5879-4c89-b32b-3477f3dbcccb",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49933570-01d8-4e4d-b4b0-89cc21ac84f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f84987b8-ca6b-4ce8-a570-19cea144d7b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ce0538-a097-45d1-9608-ec8bee2e590d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61c139b4-3429-4134-a32f-13e1f79eb134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec07ca8-e294-4070-8039-853539b2a563",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c64c462-029d-4eb6-8838-295707290911",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c5b002f-4604-495e-b2d2-0b3496b014d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d214c5-4a88-48e1-aebd-5d11fc265710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daa4f3ef-c073-446f-81d1-ba0e8b18bf00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b4bacd-d464-4d41-b820-13b6a6fee9f8",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c1ef2a-b17a-4c00-88f6-33cdbc142dfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09866f34-882b-49dc-a606-eb5e631ec763"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28590dec-34cd-4e6a-8fc5-7a9220bf5b04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9c98f20-d228-427a-b41d-66bd0844acbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0de980-9e55-41a6-b351-629571270c9f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d459544f-adcf-4416-b724-27257ce060c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f110ef6e-dd55-4785-9f71-10aca972f37f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a67c9b4-1479-4d4c-8a87-e0f62a610eab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53e6a0f9-f8b7-4253-98f1-e3ebcd1a86c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c7bdd22-d541-4a23-90cc-6d06f817a889",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8e6bf8-ef07-4492-8190-97ab1a610a68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e373d991-2a3c-4a5f-b13d-bda42a4f96f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cdc3b79-812d-4e8b-be11-478a561b0e0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51b72a21-3d0c-4442-b117-cbaace3b1253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb538cd4-0777-44f9-8c87-3d738a095616",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7bbcc35-cafe-47fb-b3bd-33e4c53936de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05618c6e-491b-49cf-95f8-86c94224fbc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b83ea8-fbcb-4af0-95f8-308e20cfdfe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8da85c4e-1ff3-4930-9054-0c6cf4917e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69428014-d7d7-423c-9e22-79dcdbd974a6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86fae312-2542-486a-a2b8-916ed046044f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f1ba1ff-3fa7-4f5e-b944-eb69f542678e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c1e5b96-4ce5-4227-b30f-a2324cdddc88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f289c7f-b795-4054-90c3-169ed012b884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "958c05f1-9b94-489f-86a2-3446fcf97481",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d01117c-08c0-4eda-8e42-e9108434bd58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e53c9338-553a-46b2-a95c-3dd3719e7662"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe57ca51-ef3c-44f4-b80b-46f4c0e4cdb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a1bcd72-c909-4b3d-b41d-114463b74a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b5298aa-6110-4862-b018-2d8854100302",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d131fc56-32f6-4c07-8a8b-742c13d09d9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf6cd0d6-9480-45db-b9ac-eea5d931b079"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a5e44c-b75f-4d9c-a976-c2aa4dacc780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f7b26a-775c-485e-b0d3-3e35ddfcf225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f59683-2643-45ac-ac64-1ff4798eec7b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "663152e6-98c2-4ffe-b4db-a2d27c81191c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b113606-6345-4085-98d3-901f99518583"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a383569-696e-4aa1-9d11-921399e2c596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d55b0bc-bdb0-44d5-8c35-a3cba1aabe37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24af2239-9bbd-40cd-a38b-bc53972259a1",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ab0e19-bbf0-4088-b80b-00351c9f04dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "902e432a-a9b1-463d-86b9-a76454fe3359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae41419a-500a-4eed-843c-8934be8e27dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "746d2d7b-32c0-4244-99b9-199736fa3d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a624c4f3-62ae-4fb8-a6de-1371cb3a2ab8",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c43300-e8dd-4651-8a21-7206cbdff96a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8d6f976-48d1-4ae8-bfd4-0f5f3ef1fc5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c22fd2-1896-47f6-bb26-2df16dc7e626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23532cd1-0063-4a0e-8fc4-836b9e670e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0ff8d7-3b6a-45bc-b8a9-12eb48bc9e20",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c9bc81-8490-4696-9796-f460c58c754f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2534dcb5-6711-4d07-80a7-4a8b52c2a3b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5965700f-e27f-45ba-8f16-346777a42ed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "891c2fa7-6319-484e-9194-a6d0491f5ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43371ce8-8c7c-4c11-ade5-d84267521ae9",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a284c8b-b281-4626-8be9-ea2168fff321",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e127964-a3f1-4460-942b-c070e0d6164c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c57f612c-74db-4173-9d46-9caa677af337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b14f7e58-40f0-4cdb-81d8-01c062765b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6160b03a-ade9-4d7e-ba70-e9c55762d1bf",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014e0213-1dd9-4a9d-b6f4-f56734fa9b8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7005df5c-4b16-4f22-bc31-8a596d7c8824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ad7f04d-75af-40ed-9ecc-29dc43af5b72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06f40298-7038-4b50-b860-bdb978bc1a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d3a4b6b-3c22-45d9-b6b2-5fc153ad3fc5",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1724a146-468c-4df8-8063-64dfa909ddd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3f0cfe1-8762-4b63-bacb-b36cd406a869"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f35826-8e58-47b5-912e-b31ba617602c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4efb040-419e-4074-8f76-06043eeb443f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217920c2-e32d-4ad5-9c9e-c8287212eb0e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503561ff-a87e-4740-bcc6-c4d78d59e910",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "441ac945-e696-4119-9620-5750478d358b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c96c4b-e56e-46f5-acf3-f3e3958dbe7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ebb113f-09d7-432d-9567-c3ecd93094e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac37193-ebe5-483b-950e-2d16fca4f9ad",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da716a5-ac5a-4883-bd28-d2743e59c8d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7ac2f07-403d-49d6-9110-22d35ead9acb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c1d77d3-4370-4e5c-ad23-2eab42d1ab0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdec6d53-4ee2-4444-8ad8-e5abb19ae7fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf57460-c06e-440e-ad8d-8220adce0952",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "460bd788-99b9-443d-81e1-2186a4debb05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45448ee6-b98e-4346-8266-c6876e1e2281"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd67564-69bd-4abd-a7b1-0c2695b7cdda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e382675-e916-42a0-9e81-360157037cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91fd4b70-160e-473c-abfd-3fe794ebb8ae",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7fb8ca1-7cc9-4437-be7e-c2ef83c60aba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4d758b1-2021-4cd9-90e6-907ef4942f89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00491ecd-eb09-4036-857c-6a76a4c8fc33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c34f3521-15c3-488e-953a-ffeb83871eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e6b675-de64-4e65-9d24-861cad7fa708",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "173f6415-08f6-4165-a7bc-10d8aba6905c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bddff7b2-f80d-41d0-8b38-615a0baabbea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d04b417-4f83-49d5-8336-a64422ac4d70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba015263-0a29-42ad-a7fe-339ae4dceb5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212a007c-e45d-4b36-baca-03134f4fbf58",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e2b6b1-8702-4378-a4c0-bdc9a6dc76f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee72aa91-d7c6-4bc6-b13b-0dc612ec99fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b8dfbe-f2d9-48c6-95f7-9c05c0f75e33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b610cf93-1d31-4503-a4d0-80884dc62177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77de3de8-933b-4d99-b7ad-09f467d9ac1f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aacec95c-69c9-44ef-8c3f-56dbd8716c0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a42ea5d3-b3ae-445f-af84-2a197aa944ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0034862-d418-4a2b-90f4-0242168b6425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f232c53-e6b6-4c1b-8a0a-6ae559710968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b6e222-52dd-491a-883a-72eef5438693",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3177595b-c533-457a-9ebf-5e6148f0c144",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f71ac903-839e-4029-b07a-7bd042c73593"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb8a3c8-15ba-47c6-aa94-40f772a216a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eca76d2d-5b44-4585-9975-6a56d8785224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e10558-a8a1-441d-8d50-a0e3e7d1e221",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83244ab7-3bd0-490b-ad55-9ffa8c77b78b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5f34125-369e-4933-8852-39c971ae6bd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a38511e-c928-46b0-b3f6-9aaed1e385bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4409830d-a8a9-4539-ab24-b6564e2b362a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074f38dc-6206-43a4-ac46-2e52ee1493a2",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d933ae78-2536-45be-84cd-43e6ce81e38b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "139ca426-335d-4ead-9ed8-4851a413977b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b13165-3a0d-48a5-8068-5706a18d7dd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b62b72d-1ee9-4153-968e-aa42620e5e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e40d5c20-4c16-4f68-a779-edd82a361c56",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec110b02-c04b-49a4-b911-1929ce1def5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "288cf767-efef-48ca-a7c5-2f1ea1619239"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c17450-bd3e-4f6a-871b-7ac7cae2f737",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf4af457-50af-40e7-9f8e-8af1b263d305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b5331f0-b1dc-4fb2-85f3-842e3108b834",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9438cc88-a009-459a-ac17-9339f22267bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67874894-ab55-45a5-998a-50e5f8532b75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02022f7-0458-42a1-a321-d75e1b6fa230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cda52bc9-6b47-453e-9108-bd24908728b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca930edc-c0e1-4416-8f06-d0fed865f446",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831f3df3-ccd0-4623-aafa-ca90ec1b8917",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4454f4f8-15b4-4ba6-9201-531a19522970"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c8bbed-aa4e-4290-b05c-9dd0c9e248f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d433297e-b975-4dd8-8bca-bf985929cd9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bbfdb72-aa99-453b-aa48-a9fce52fa491",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efdd99ce-6d0d-4018-8dea-e5ae2597f98a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83456a59-3b27-4099-aea0-b0bc8d115e63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e3af02-2971-4728-ae67-ff03e6291681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffe8b3d7-b759-4a7a-8d5c-da6cf2756cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1116ec1-7d94-4efd-8e1b-89495dec6402",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c49a643f-2626-478d-9c36-6149ed088dea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bf3bbb2-0c48-4366-9f25-d3311c90345f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e713cda1-c997-490e-bd13-f13bc1e1639c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f200a515-1aee-4efd-9565-aed83aad2c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "426a4118-148a-4d1b-b70f-3814b877eabe",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74fa5186-5cbe-4f9a-a993-8985e1ee6f82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a7fd2f9-53e6-43cf-95e0-611d79ca1b40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5df4401-cd67-433c-bf7a-48ecd2041785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c637cef1-428c-4790-a2ae-d0b27209cd08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "847f22e4-7e08-4433-aec3-a4d391f5bec7",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98869be0-ea02-49be-8e42-57bfffc12e4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6c5ca5b-f30f-40d5-ad9e-6ab5338f43a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff00ed9-e6e5-44a3-8458-6e2c7bb02896",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8eccc49-14d1-4764-94ed-da57f31927dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ceeae65-d8d6-4142-b0bf-9dbe0dbdae30",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab7a9248-fff7-4a3e-b896-692c209caef1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bf3c786-68d0-4eea-8843-87199ad677aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17e79a4-3e4a-456b-9867-dc70388dad47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19229137-92a6-4f53-8197-929063d34a6f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9fb12923-5afa-4b32-bb52-48e8f7446c85",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa955992-7ed2-4a95-904a-112eca3bee06"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "889a2788-cbc1-4e9f-a4ef-d69a1fca5eae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "33dd43c8-2f10-487c-be53-fa47ab7b2ddd"
                    }
                  }
                ]
              },
              {
                "id": "02b92460-6541-4de5-a495-6bcdb6eace44",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8ab67483-4dd7-46b6-b804-09f1e010894c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "261b425c-80eb-4c45-9369-45f44f4afaf1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7e713ebc-4acb-49e1-932a-e45da96fd3d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "743fc865-335a-4b40-8bcc-d1b7aa9a61c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34432927-7f0f-48d0-a4a9-44003601aaf3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da373c91-ba1a-44b4-9202-1bc967f22261",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be9021f4-2832-4631-8156-2fb7f63e9fd2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9623d1f-fbf4-4ce1-98b8-8771f1cd21ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f290f2de-df9d-4edb-89ba-d38f960bc7b8"
                    }
                  }
                ]
              },
              {
                "id": "632ffe85-25ab-4726-9018-b1d9063ccecb",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "deb326c6-9b2a-4ebf-909e-6b7e838f5675",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4beaff32-b095-44df-bd0d-d9073bc321e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e63d3e71-8c35-4102-8c2f-5bac4c4371cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9448f83-fdbc-4acf-b6f2-759f635188b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "847b371e-6a3e-436a-9e48-a927c6ec190b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a5dbc914-ed7a-481c-b59d-12360517e335",
            "name": "Positive Testing",
            "item": [
              {
                "id": "31225b35-81ff-4cce-b62a-1c6950ab5351",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "778a1561-8495-4879-a490-e4341cfb269c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a4522718-d5c2-400d-ae8d-628643129231"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "74c208e8-7043-4f37-8436-bbf717feb380",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "414a4b00-2650-4af1-a4b2-8eb65728ec7d"
                    }
                  }
                ]
              },
              {
                "id": "7bb980b3-4947-4971-97cc-e9bdc2f8e79f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a159f090-a8c7-4a39-a810-2d9ec9714952",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "79d97de1-574e-48a1-82b4-998742711275"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9056d64-6e0a-45f8-97a0-f6f98da426bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "933a7db8-2157-430b-a1c0-21eb1fd76b3c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a6487404-1762-48ac-aa6b-4033c5672f75",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "4b10609f-c8c2-41aa-8a6f-a864eb8d1e94"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "478b1c57-7a11-4560-92a9-9c690267f989",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dae89f17-cb6a-409a-a50c-745c7cde0de3"
            }
          }
        ]
      },
      {
        "id": "c692f32c-5989-4fb2-a05f-7269163e08a9",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ec1ba8cf-ea50-4059-adf4-2713b0fe0b34",
            "name": "Negative Testing",
            "item": [
              {
                "id": "92f32bac-d7c4-4617-acef-3c203fb0e54e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5143f529-41b2-40fc-adf4-8af99df9d463",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "928eee22-955e-4fa3-9a5c-2d1f8af5123c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ebd3e59e-4272-430c-949c-4c44436bb420"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84672ecd-5db4-4f03-8295-4fc6f5ed5028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ddc745a-46df-48cc-a0e3-916c278b66f8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36522d65-9ba8-49bd-8fc7-cd173fc5e3c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "173d0ad3-2044-4609-bc26-98a00aa8a388"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "326b47ca-bbe6-4d30-8c78-5f25e28c6022",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "372ee904-f9c3-4fbf-9b53-a21a770b69a4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "55325973-e66b-44e9-9d45-be1f40addef7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7c42be87-f3b9-437e-ae09-fe0f88c0e2d8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2832316b-518f-4daa-befa-9990dc4c4fed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "81539d18-5d0b-4c78-bda1-245ee18b0153"
            }
          }
        ]
      },
      {
        "id": "196bf3e3-3d56-4b57-a41f-b4845fbc4bd1",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "f907da57-2764-4e38-bce9-7d97bdc1f1e6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d2fde1b8-1da7-4621-b951-018cf69df4f8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1481db33-940e-4c62-b0d7-08f899696f54",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd0d625-2992-444a-b7ef-67d42a33fc91",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41132cc5-4a66-4650-86a2-aec78aa64899"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fbfa01e-07af-48b1-81c5-8503f21ecf23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0b3b3cc8-e1b3-4b4f-aa66-bd63b4bcd311"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "09ad2966-45fc-4dc6-9631-514c6d3e2c7e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01dd3a8d-da12-4662-a1c2-9573befcf87f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "44352ede-1ca5-43c0-ab05-5338ed97d493",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80c6c39c-b6b5-4885-aa31-300a14fd959e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "55ea0070-73c1-49c7-af68-5bdf8834d955",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "229c0c1d-7d98-42ee-9cd4-ab7b24358ec2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c4d357b-6ecb-4b18-a54b-83cb5c588950",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "40ec3a36-e683-4759-a805-e777ce7d8dd7"
            }
          }
        ]
      },
      {
        "id": "2ec96be1-f4e2-47cf-99fa-11ebcfb0cd05",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "4eb515ad-1739-4bff-a03b-f170f0c1abfc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8a1f3fae-d017-4d61-91ce-8384892bb484",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cab26570-db4f-4d77-8c7c-f419ae493b00",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b897668-a26f-4691-8e89-cf27a7fb66ed",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3499c4a-275c-425d-a010-316eb673d4ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea4e5f81-e00b-49c9-8e40-a766e69748c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "803ad196-c9b5-43e4-a2c0-1b2af98e254d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7687aa1-b414-4afd-8371-c2028e6c13c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b80844e9-f37f-4bfd-91b8-3d6dc8c5cffc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "452d3e5d-126a-434d-8c86-aa82a15db5b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "41029fac-dd87-4fd4-82b3-9205da637c4d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "30061a66-e3c2-4612-b691-e8361f065b43",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "506e6a38-a0e4-4f10-b558-e13ba7a271ba"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "55a0a8ca-1a41-44b8-9b22-bcb8b1b535bf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "827d75d6-23f6-45f2-8b08-ae09e5ac16b1"
            }
          }
        ]
      },
      {
        "id": "0051b21a-6e6d-48b4-b43c-4d4ede4a908d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "75a4e09d-2d8a-4d4a-ae06-31b9aa793cbc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4c28c208-8ce9-4083-b188-0106011f48b8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1189451b-e327-497b-8053-182f01d97448",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b621c63-6049-4f64-859e-348276c05bef",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9bb1bbf7-dc92-49e5-a0d6-9c55a3d5f5eb",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 456.9523809523811,
      "responseMin": 10,
      "responseMax": 13402,
      "responseSd": 2012.5829465589873,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1724719295953,
      "completed": 1724719420131
    },
    "executions": [
      {
        "id": "d20c75ce-bd8f-498e-a0c0-612371d8fb07",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a119088d-f85d-497f-a92f-de401a0e4172",
          "httpRequestId": "9d4958c5-c919-4afd-8d65-853667ec98c4"
        },
        "item": {
          "id": "d20c75ce-bd8f-498e-a0c0-612371d8fb07",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e6b54bab-9c63-4da8-ad8e-5a649932c2b5",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "6c16059c-c078-400b-86aa-e112f9ab55cf",
        "cursor": {
          "ref": "aa1d1c52-0b86-419a-b5f2-998673086145",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2d916ae5-3744-418e-90ed-b6726ace0f6d"
        },
        "item": {
          "id": "6c16059c-c078-400b-86aa-e112f9ab55cf",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b754590d-f1db-46fa-94c0-7dc787fdcb0e",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "7003673b-9138-47ac-94b2-a947f84e6f8f",
        "cursor": {
          "ref": "df7b27b6-fc3a-4692-90d8-34124101b713",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0cf8a01f-16cf-4ba4-a504-451dd4d51020"
        },
        "item": {
          "id": "7003673b-9138-47ac-94b2-a947f84e6f8f",
          "name": "did_json"
        },
        "response": {
          "id": "2e7f0f3f-7d8e-480b-91b5-bd2527bf6192",
          "status": "OK",
          "code": 200,
          "responseTime": 431,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36bf261d-4954-414d-ac12-8e5c31b1a688",
        "cursor": {
          "ref": "2c226b77-c0b0-4064-814a-3de10063a289",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "79f57be3-973f-4631-9fc3-659acd0f98e6"
        },
        "item": {
          "id": "36bf261d-4954-414d-ac12-8e5c31b1a688",
          "name": "did:invalid"
        },
        "response": {
          "id": "7037fd72-1a8c-4159-9f88-85cc5fbed8bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2198,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36bf261d-4954-414d-ac12-8e5c31b1a688",
        "cursor": {
          "ref": "2c226b77-c0b0-4064-814a-3de10063a289",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "79f57be3-973f-4631-9fc3-659acd0f98e6"
        },
        "item": {
          "id": "36bf261d-4954-414d-ac12-8e5c31b1a688",
          "name": "did:invalid"
        },
        "response": {
          "id": "7037fd72-1a8c-4159-9f88-85cc5fbed8bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2198,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37267d0e-4642-491b-bedb-6d08b31479d1",
        "cursor": {
          "ref": "9e545cfa-fd7a-42a3-9f86-5680faac54ad",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "19cd71f8-5a93-4bd3-ba04-d85b6e71a25d"
        },
        "item": {
          "id": "37267d0e-4642-491b-bedb-6d08b31479d1",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "4c55288b-3537-4d0d-a78b-0ee9bcf13bd8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2574,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3361b7bf-c57f-420c-aa03-1627a4156543",
        "cursor": {
          "ref": "69640bc6-9128-429a-8713-902b82f77236",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2d2b1c6d-b117-4ab3-84cc-6a4771d292ad"
        },
        "item": {
          "id": "3361b7bf-c57f-420c-aa03-1627a4156543",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "34530203-2e0c-419c-a7f0-42a1b9f59687",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2361,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d211eee4-ec22-406b-883f-1e62df4fd7fe",
        "cursor": {
          "ref": "edcab70a-1c89-4cbe-9c25-dae6cb962139",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "de3b8a81-24e0-4299-b840-b40592b5c755"
        },
        "item": {
          "id": "d211eee4-ec22-406b-883f-1e62df4fd7fe",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d8e0821c-a995-461b-b897-945f07913760",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ee3608-d9f2-4913-a987-96280ec966c9",
        "cursor": {
          "ref": "301ac711-04b0-45fa-ac8e-f4550fb6f0cf",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "87857626-827e-43e0-81bb-953de22807d0"
        },
        "item": {
          "id": "67ee3608-d9f2-4913-a987-96280ec966c9",
          "name": "identifiers"
        },
        "response": {
          "id": "227b0894-3ab0-47e5-bf2f-a384f90ba144",
          "status": "OK",
          "code": 200,
          "responseTime": 2473,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b397a238-44c2-4ad4-b02d-66960c8ff6ae",
        "cursor": {
          "ref": "ed5ff2ba-1ea3-49a6-937e-8af5a6ad505f",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "829cb6eb-9413-4537-ad8d-d5ed3d4aa0a7"
        },
        "item": {
          "id": "b397a238-44c2-4ad4-b02d-66960c8ff6ae",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "be2fba33-05e3-41f1-84e8-4d77b16a9cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c842901-ea33-4781-abf2-3a4ce84ed0d8",
        "cursor": {
          "ref": "ddeb0389-6722-4abd-a018-4c3ef211c102",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "cc9da410-ffd1-4604-b69f-4ef5889b6f60"
        },
        "item": {
          "id": "1c842901-ea33-4781-abf2-3a4ce84ed0d8",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ef396c00-e91d-45e7-9178-3694190b9117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd470c86-f2e9-4f1a-b272-b7644377da79",
        "cursor": {
          "ref": "ca5373e9-4735-422a-837d-a6b3b44aa9f9",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f41c8feb-e6a4-42d3-b80d-6a88d020771c"
        },
        "item": {
          "id": "dd470c86-f2e9-4f1a-b272-b7644377da79",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6ff43c83-6626-4c38-bd5e-e55bc0b27ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c3a5bb-9dc3-46cb-9dfa-6129cb610792",
        "cursor": {
          "ref": "a3ba9ee2-3e9a-4bb5-b761-498976a8337f",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "35880a1e-f05d-4d45-b330-fcff930b22df"
        },
        "item": {
          "id": "00c3a5bb-9dc3-46cb-9dfa-6129cb610792",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f0dcbb58-3d7d-43c0-9398-20e685739da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed1478c-036b-4075-b1cc-7fa791656e80",
        "cursor": {
          "ref": "ba7d0a7c-0d87-4f2a-8d1a-8a7624d36391",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "09e30e95-b90c-4317-a7e7-36d95a17c529"
        },
        "item": {
          "id": "5ed1478c-036b-4075-b1cc-7fa791656e80",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a3205913-9475-4e93-9915-ac3b104e6304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d340c3-84c1-40cd-ac5b-9a67304f4f2e",
        "cursor": {
          "ref": "8f356383-bbf0-4719-ae47-5fcfef1cdb68",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "70f1084a-29d8-4d15-b292-d6eabb463dca"
        },
        "item": {
          "id": "34d340c3-84c1-40cd-ac5b-9a67304f4f2e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d172406f-85ac-4c34-85fc-87328328499c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe73b32-d5bd-479e-95eb-4a5a550cdd1e",
        "cursor": {
          "ref": "2fa40ec0-2776-4b74-85bc-779733f61537",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "74c0e75c-88cf-4699-85f7-93bd1cedebb5"
        },
        "item": {
          "id": "dfe73b32-d5bd-479e-95eb-4a5a550cdd1e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f8387bd9-f023-43db-921c-810c2f83d351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7ef88a-e667-47ad-a835-f4f54b08629e",
        "cursor": {
          "ref": "b15da970-edeb-45a3-8dec-2651eb26d206",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "57663a85-b883-467e-8013-da83ba7bcf71"
        },
        "item": {
          "id": "ae7ef88a-e667-47ad-a835-f4f54b08629e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "37dde644-76c7-40f3-b1f9-035a78d8854b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d329a2-f3ed-45ff-b186-b6d7f652d3fa",
        "cursor": {
          "ref": "99da622d-2582-40fb-b60a-0a2dc47f1c94",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f8a79902-0209-4f9e-8b71-bc294f85e0e4"
        },
        "item": {
          "id": "b8d329a2-f3ed-45ff-b186-b6d7f652d3fa",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "cd514ba2-ca59-41ce-aa06-3b15ec18884c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924e74c1-c08d-4647-99f5-f43968c83efe",
        "cursor": {
          "ref": "469e4b12-721a-4506-95aa-271009927cb2",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1b380f4a-795e-4de9-9028-996ad127c3cd"
        },
        "item": {
          "id": "924e74c1-c08d-4647-99f5-f43968c83efe",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "38b22334-5825-4218-b2de-dd11cf89b191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec6dd3bb-9bd5-490d-a9d2-3fa1cb7bc3b4",
        "cursor": {
          "ref": "a70ed007-3dad-4e55-a8ef-a2cf9ddf171c",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "127d91db-c6dc-48ab-bcde-65066bfaf956"
        },
        "item": {
          "id": "ec6dd3bb-9bd5-490d-a9d2-3fa1cb7bc3b4",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b07bf273-edd9-4a91-8767-0824a8e8a766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52fe6660-0078-46af-b235-43b349a70e4b",
        "cursor": {
          "ref": "f759c79e-8725-4b3a-ba36-cdd9afb9df3b",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5c18249c-dcff-4ff8-900b-6f2775a550e4"
        },
        "item": {
          "id": "52fe6660-0078-46af-b235-43b349a70e4b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "23b42094-25f7-4d01-aaa0-6d29c5f7cd71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f815068-2fb0-4c6d-8c34-afafa84895a7",
        "cursor": {
          "ref": "df7c8ca7-0fd2-4788-85b0-b32eb586dbd7",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d5cca653-98a9-4903-8b51-1484481bebf0"
        },
        "item": {
          "id": "2f815068-2fb0-4c6d-8c34-afafa84895a7",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7f9eb4ae-b44a-4223-8932-58a278148996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91dd6858-56ab-475f-b4e3-e125c14476de",
        "cursor": {
          "ref": "23aa3e31-976f-4a52-a7bc-fbaccc9912a0",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "66a6296a-0993-4c5d-88c7-f103e7ab1811"
        },
        "item": {
          "id": "91dd6858-56ab-475f-b4e3-e125c14476de",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "232f2416-dcbf-4f2b-827d-02c134fdf4f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfef12c3-8184-4d56-9b47-44e7f050fbd8",
        "cursor": {
          "ref": "841c436e-2ad2-4e36-910e-881496d4d571",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "2c744f60-2c1b-423b-a092-cecc07beeedd"
        },
        "item": {
          "id": "bfef12c3-8184-4d56-9b47-44e7f050fbd8",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "293adab2-2c87-45d0-a0e7-b9edce673c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b324e4-16fb-4794-8691-30e78aae04c9",
        "cursor": {
          "ref": "02a5ac12-88c7-43e2-a626-a778e1a299fb",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4036246b-cf8e-409d-af1d-32d5bf5e2d4c"
        },
        "item": {
          "id": "f2b324e4-16fb-4794-8691-30e78aae04c9",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b25ca7f9-ba4d-40a1-b8e2-4f9ee0361df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75edd4d2-0330-4cca-b331-1a9384668c0a",
        "cursor": {
          "ref": "7e821e1e-6bd6-446d-b2b1-48a4955a6912",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "606e054f-6d14-4661-a206-84a0daa99e7c"
        },
        "item": {
          "id": "75edd4d2-0330-4cca-b331-1a9384668c0a",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "82fc1e4f-aba3-4214-bf02-ba334ec7fb67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3678c2-4428-453d-909e-bc3290ecea19",
        "cursor": {
          "ref": "a3dc9463-fb96-4461-83a7-e4743feeb097",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e41963e8-d78b-4d83-8d56-9c0e48b59334"
        },
        "item": {
          "id": "bb3678c2-4428-453d-909e-bc3290ecea19",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1216cf8e-22eb-4705-8b0e-c190e103debc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fccffbba-ce8b-479d-a373-ad6b4d420562",
        "cursor": {
          "ref": "9e16c1d0-2923-45cf-b72a-3187455983bf",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8fa97d05-b35a-4e51-b6e3-bd6b5e0e42db"
        },
        "item": {
          "id": "fccffbba-ce8b-479d-a373-ad6b4d420562",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "92a605c8-fed9-40a1-ab24-3f683324b951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f810cb8-bfa9-4007-af1b-4de790109cfd",
        "cursor": {
          "ref": "b3eb306f-2ad1-46c6-852e-f49da427cbcf",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "da8154f5-b357-4658-b172-85ec1ab72ded"
        },
        "item": {
          "id": "3f810cb8-bfa9-4007-af1b-4de790109cfd",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "62a0b220-ac28-4018-ae3b-22367adb85ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a1f2010-ec1d-4970-89b0-74b72d27586b",
        "cursor": {
          "ref": "31606add-c39c-421c-973d-fbec99209b29",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "31ab4157-3192-498f-aa35-2c4f3b960433"
        },
        "item": {
          "id": "7a1f2010-ec1d-4970-89b0-74b72d27586b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ed7d531a-3ff1-4760-b006-b5499c129033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72353f19-be15-4797-be6d-a1a518f89ad0",
        "cursor": {
          "ref": "ecd49df1-9da8-4565-a6d9-fa40e3ec2f67",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "08679dec-3a5c-40cc-a147-10cba8b5afe0"
        },
        "item": {
          "id": "72353f19-be15-4797-be6d-a1a518f89ad0",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "3f2d8579-8f7a-4ab5-a55d-f4da7d310919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3530c6fe-d8b0-407b-ac65-b0cbfd57bfa7",
        "cursor": {
          "ref": "109d4d5d-f066-496c-8887-a3613a3d04b4",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7cb45abf-a6b0-445d-8789-af53ace164c9"
        },
        "item": {
          "id": "3530c6fe-d8b0-407b-ac65-b0cbfd57bfa7",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0bc053fc-4e81-47c6-875a-90f1ed723dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a86266b-4afa-44b3-a015-f80488b67858",
        "cursor": {
          "ref": "b42a8ccc-0358-464f-b1c2-0e7097e82efb",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ade99229-e17d-4bf4-b7de-bc4e7c6f136d"
        },
        "item": {
          "id": "7a86266b-4afa-44b3-a015-f80488b67858",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e26ec96e-8e50-45eb-84cc-6681304e8f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "589bb153-402b-4ab7-b78a-b782d12f3884",
        "cursor": {
          "ref": "cb55ce33-3b7b-4c84-bb94-f6b244fe445b",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "19321b6f-edfc-491c-9ed0-538063d36f6f"
        },
        "item": {
          "id": "589bb153-402b-4ab7-b78a-b782d12f3884",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ceda005d-feb4-4cbe-b7e8-f289df088ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae4acd1f-060e-468f-b161-3319b0df7281",
        "cursor": {
          "ref": "af4b33c4-0e50-422d-9689-2e868b7ef530",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "55d9d2d8-b46d-4424-9d86-e8c3490b237b"
        },
        "item": {
          "id": "ae4acd1f-060e-468f-b161-3319b0df7281",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "d8cf6692-1d59-47ef-9303-e86bed7b3927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96ea715-1fc4-44f8-afd8-9797af3fd90f",
        "cursor": {
          "ref": "84136abc-98b5-4617-8e28-3acd71bc520d",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2dbe2df2-81b5-46d4-96d4-ca89263b17d5"
        },
        "item": {
          "id": "f96ea715-1fc4-44f8-afd8-9797af3fd90f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0aa41e18-f0b8-4675-8204-58b16d1c6dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a562047a-622b-4d38-8e2a-9dba637033e7",
        "cursor": {
          "ref": "415ff9ce-a66d-46bb-8791-ea49bdcbd51d",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "20d5a674-6c56-4815-998f-b6ae36b301b0"
        },
        "item": {
          "id": "a562047a-622b-4d38-8e2a-9dba637033e7",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b7adc1f8-bf6e-4cf4-9cdc-65d2dcc5d445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f6a5e55-d987-4cff-9788-c146a2d52a43",
        "cursor": {
          "ref": "b2284f62-a235-413d-8146-0862a94acdde",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1e592ada-9531-411b-8a38-ab11dccab356"
        },
        "item": {
          "id": "7f6a5e55-d987-4cff-9788-c146a2d52a43",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "1e767f3e-0dd1-4ec2-8488-5730b81bb11a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b08c093a-f55f-417c-8e1a-81290ddd5fe7",
        "cursor": {
          "ref": "0d1b57e5-d876-4fac-b0a8-259099bc471a",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "42474e01-9252-439c-a810-14a7726db8bd"
        },
        "item": {
          "id": "b08c093a-f55f-417c-8e1a-81290ddd5fe7",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "06ac2b3b-2036-49ae-9eb9-027b59ff0f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d9d39c-2ece-48ca-96d3-86b13ee2d7ed",
        "cursor": {
          "ref": "7fc5ce1a-f15d-4eb9-b5f1-4114f4ac74bd",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6f56957d-45c4-4da1-b5b0-e0e3910e0e70"
        },
        "item": {
          "id": "e1d9d39c-2ece-48ca-96d3-86b13ee2d7ed",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5b9c91cf-eda2-4be7-9a08-7425f32ad911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36229a8e-d9dd-4a23-9b9e-ff1d024a5be2",
        "cursor": {
          "ref": "300915b9-d728-4f03-b326-5ff40c056532",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "dd7087c0-2675-4ca4-a6e5-352894d6b3df"
        },
        "item": {
          "id": "36229a8e-d9dd-4a23-9b9e-ff1d024a5be2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "0a810b34-e7db-463c-970d-11568ea7a06f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2fe6383-ee99-44fb-8e39-c26086de77a6",
        "cursor": {
          "ref": "8f1e2f28-f86d-4c9e-aa3a-34fb302746f5",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5d37dade-e07c-455e-a71e-4dcfbf8a0cf7"
        },
        "item": {
          "id": "b2fe6383-ee99-44fb-8e39-c26086de77a6",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "84f8a649-d62e-4bba-a4fe-5ff4cfc9f615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b8c1ab-1e69-41c2-81e6-ef3a93931805",
        "cursor": {
          "ref": "b21fec85-65ba-4e7d-ab05-df03e43d2bbd",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "83a9143a-9230-4dc7-9195-2163fb2a0107"
        },
        "item": {
          "id": "f7b8c1ab-1e69-41c2-81e6-ef3a93931805",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f4f31222-051c-4352-8fa1-878fb889864c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae73ff5a-a6e7-4326-9f08-5443e85aeb07",
        "cursor": {
          "ref": "e9afebae-9c2a-4955-a7ad-9fb3b29a24ee",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "54861c4b-f995-42d5-bb48-b1b1ae1f688b"
        },
        "item": {
          "id": "ae73ff5a-a6e7-4326-9f08-5443e85aeb07",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "115d362d-ffaa-46e6-883f-290350620542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55c323c-41a7-4f36-b07a-0bb433194461",
        "cursor": {
          "ref": "82f982a0-7883-4eeb-9ace-03ba9219870d",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ce9df14f-b5fb-41de-bbbe-62b2e7c4db82"
        },
        "item": {
          "id": "d55c323c-41a7-4f36-b07a-0bb433194461",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5f9deb4b-41e0-4d6a-ad7e-d51d8b42e26b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 75,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f8b33c1-cf54-43ea-b6bc-bbcc26f1ad98",
        "cursor": {
          "ref": "6256cb95-1dd7-444d-881c-f90feb4258cb",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "eff9aff6-9c7c-432c-86e6-88c790b4a377"
        },
        "item": {
          "id": "4f8b33c1-cf54-43ea-b6bc-bbcc26f1ad98",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ee407148-cc03-4ef2-b33d-54d24204113c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cadb491d-1ea9-4580-bd51-a9e5b3a25c36",
        "cursor": {
          "ref": "e011b994-8106-4ebe-9c01-c02cf6190bb2",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f0eb3cd3-8edd-4971-9071-41ed11e25146"
        },
        "item": {
          "id": "cadb491d-1ea9-4580-bd51-a9e5b3a25c36",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "16a7670d-1a73-499a-96c8-d10d316598ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b596d1a-1602-4861-9406-99d7b4787e4f",
        "cursor": {
          "ref": "9720a3dd-bd3e-49e7-b211-3c794ec6f6ba",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "d0716b24-1266-48a5-b835-52793023e9fd"
        },
        "item": {
          "id": "4b596d1a-1602-4861-9406-99d7b4787e4f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "832361ac-866f-4444-a952-f93b758d0705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a60fd1-cc36-46cd-ae68-242e81e20144",
        "cursor": {
          "ref": "6014e79e-c37c-4a33-aac9-84fc3f7bd1a5",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c93e8bac-096e-4d76-97b3-0071d7edda73"
        },
        "item": {
          "id": "d6a60fd1-cc36-46cd-ae68-242e81e20144",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9ca41c66-0a80-4b28-8aa9-5524488bd8e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0efe8de5-b604-457c-b9bb-95ba17728b63",
        "cursor": {
          "ref": "7cbb20bf-3250-4238-9cb9-352fee4a5bcd",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3c9338c6-3c2c-4070-b1cf-b7e42f668213"
        },
        "item": {
          "id": "0efe8de5-b604-457c-b9bb-95ba17728b63",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "fa7349db-2ec9-4ad0-804d-20afa0573bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1a928b-7390-4e6e-9c8a-571e1314937d",
        "cursor": {
          "ref": "05e23cdd-238f-4f65-a032-0194d60b232c",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "426d388e-7cc0-4968-a891-37e55c5c240e"
        },
        "item": {
          "id": "fe1a928b-7390-4e6e-9c8a-571e1314937d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f82de632-c589-4b48-b080-c6b9f9386a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c08603-b442-44c3-af25-4186c2bc5d66",
        "cursor": {
          "ref": "3dca5833-a663-491b-8135-e8abaa537f7e",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1939bed6-a179-4bf3-b29b-3d12a84c550c"
        },
        "item": {
          "id": "92c08603-b442-44c3-af25-4186c2bc5d66",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2557f333-f5e3-4a52-96c0-c83180de31b3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f4dbe9-e7cf-4f2f-9e67-8b3a887149d0",
        "cursor": {
          "ref": "489ec4e5-0be5-4d97-8c44-be58906ec6ae",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d91960e8-851d-465c-8772-54e2251849be"
        },
        "item": {
          "id": "04f4dbe9-e7cf-4f2f-9e67-8b3a887149d0",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "23340e4a-b8d3-42f4-b7e4-3068799b5702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c222de-c872-4c17-b2d0-701fd6ecdd82",
        "cursor": {
          "ref": "ddf82d96-7937-4147-990a-ec8f89408540",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d1406df4-3f45-486b-b080-65c65ae7d4ff"
        },
        "item": {
          "id": "f6c222de-c872-4c17-b2d0-701fd6ecdd82",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e616d5bf-abd3-4c15-bab5-9b4428f7f6fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c8520e-1200-4387-8f9a-5bd4c53e389e",
        "cursor": {
          "ref": "75a3dce6-876f-4312-ab38-2ceae182c69c",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a8965d11-11ec-4b0c-88e3-ad28db312766"
        },
        "item": {
          "id": "50c8520e-1200-4387-8f9a-5bd4c53e389e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f05ec02c-a4a7-4c18-8947-aed3de32373b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1207b9-0e7c-4f9f-998d-5d1988f63926",
        "cursor": {
          "ref": "ccbdab67-095d-4ac7-a914-883dce8e6e1e",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "eef6feb0-d217-4329-8cd9-41958a2f904a"
        },
        "item": {
          "id": "db1207b9-0e7c-4f9f-998d-5d1988f63926",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "045b7556-1cb9-46bb-9060-a71805de4d1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad65e2b8-b21e-4811-99ac-f92095fc4074",
        "cursor": {
          "ref": "b3698e70-1b67-44c7-9107-736fdffa7f4a",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d774abef-4a58-45a9-a85f-e5d23e07e4b6"
        },
        "item": {
          "id": "ad65e2b8-b21e-4811-99ac-f92095fc4074",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "96aea34a-76f8-48a5-ba2c-9b658d2fb48d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c69beb-8d5e-490d-b3f2-3c54833dbeb4",
        "cursor": {
          "ref": "70104cd7-69a6-430b-8514-6f4c9f443a61",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "64f89cd2-6aff-4f5e-a434-7807d6568dc8"
        },
        "item": {
          "id": "26c69beb-8d5e-490d-b3f2-3c54833dbeb4",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f1fe2b21-4390-41e4-873f-005061d59ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db5ddf7-2dfa-4817-ade4-2f86c136cfd9",
        "cursor": {
          "ref": "3a9fe070-b1b4-4f06-9d49-bf9bc1f9bdfe",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "27720401-cc7e-46dc-af3b-5b1f0f372632"
        },
        "item": {
          "id": "4db5ddf7-2dfa-4817-ade4-2f86c136cfd9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d4caf1b0-f00f-4302-a472-db25b76b683d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c9bd58c-f2db-417a-af12-a42adbfe739a",
        "cursor": {
          "ref": "9a48664a-095a-4e20-9a27-fbcd371d61b1",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4f2642e7-5486-44e5-b6be-374868f0d0d0"
        },
        "item": {
          "id": "7c9bd58c-f2db-417a-af12-a42adbfe739a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "367fa22b-a083-4f8e-a5a2-28c970f392d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f740bea8-3bbc-415c-841b-8dd5db6fb82c",
        "cursor": {
          "ref": "a996298c-717c-4e85-8796-ee96c71bb221",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "61ac8a93-3400-4dda-9124-c7fd4d7356b3"
        },
        "item": {
          "id": "f740bea8-3bbc-415c-841b-8dd5db6fb82c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "cf8f45f0-781e-41fe-bba0-cad7dd3b0a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6b8afb-c9be-4623-ad29-d83febee1c5b",
        "cursor": {
          "ref": "be7ccd64-03be-4eb1-814a-5f5b17c9ec8a",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "673aa9d0-311f-4b63-90f4-9541b1c93ef9"
        },
        "item": {
          "id": "ef6b8afb-c9be-4623-ad29-d83febee1c5b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1f31472e-f18f-4812-bbdd-40918a06717f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0c9000-5355-449d-80d1-d19d15ef696a",
        "cursor": {
          "ref": "ee714bdf-574b-43a3-9d1e-8c2d32ebebbf",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "2f3d9e72-0457-46ca-9a6b-4b97ca505cdc"
        },
        "item": {
          "id": "2a0c9000-5355-449d-80d1-d19d15ef696a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ed43c964-da3d-43af-9426-9ecc79dc6539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50d6869-e0d6-4a3d-b32b-6acd897f6725",
        "cursor": {
          "ref": "a01da928-325e-4cb6-b531-0c9efc315f9a",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d2046595-b1c3-41ce-ad48-929ed0ec4fc2"
        },
        "item": {
          "id": "a50d6869-e0d6-4a3d-b32b-6acd897f6725",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "fd5e1eb8-5b51-4ebd-8f69-f3e6d5d2e232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cefe37d-48e5-422c-9fb1-6d0611205aa1",
        "cursor": {
          "ref": "45a5e270-cef5-4c25-bfb6-dc5c275573c9",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "938c16f5-0d67-44e6-9c52-c53286389600"
        },
        "item": {
          "id": "1cefe37d-48e5-422c-9fb1-6d0611205aa1",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "78ea3016-984a-4510-beac-10833eae9bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f5ce9e9-5c0e-44e3-92bd-2358cda821bd",
        "cursor": {
          "ref": "829f5c80-3fed-4e16-b4df-49b208d9f40b",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c84c5e08-1f8f-419c-a555-59e9b699b5cb"
        },
        "item": {
          "id": "0f5ce9e9-5c0e-44e3-92bd-2358cda821bd",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9ec33fd2-1234-4aaf-aa27-5e3850379a84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8910c04b-da09-415f-aa43-7f5ffb462f0d",
        "cursor": {
          "ref": "b1238f09-6caf-49e4-ad37-e49effb25dce",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "89e38091-d247-48b1-8088-06865f2e958a"
        },
        "item": {
          "id": "8910c04b-da09-415f-aa43-7f5ffb462f0d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "7e7f4c32-66d4-470a-83c2-8accecfb860f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f1d02eb-9580-4772-adad-679b76a198f2",
        "cursor": {
          "ref": "c8960d1d-fc7a-4a97-b0af-ac91d0c9110d",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3bb2ee6e-48a8-4eab-9b11-f88a5eeae457"
        },
        "item": {
          "id": "1f1d02eb-9580-4772-adad-679b76a198f2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "fcea047d-c63a-4fb6-929b-07cb62d4d248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15b28b1-783b-469a-8346-51a6770cc975",
        "cursor": {
          "ref": "d9b255c5-229d-400f-a99d-2844bfea64a3",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "62c4bc02-04a8-497f-8468-3bd61880c871"
        },
        "item": {
          "id": "b15b28b1-783b-469a-8346-51a6770cc975",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "aad89d17-cf9d-4064-89b0-f497f14f530e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d95a0b-cc04-4614-888d-bc36b7d2ddfc",
        "cursor": {
          "ref": "cfdc67b6-202d-4c38-87e4-2ab74486b47f",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "fb2fa3ea-8d29-4fb6-a368-087c08593ae7"
        },
        "item": {
          "id": "26d95a0b-cc04-4614-888d-bc36b7d2ddfc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "22906821-6086-42e0-94f0-505e8e7e9b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff7d591-1539-4c86-8c5f-b7fac3691f4f",
        "cursor": {
          "ref": "679419e8-52aa-4df0-a256-b79ea0b80dad",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3dff0f85-af4f-49b4-8577-f51ed3cedcf0"
        },
        "item": {
          "id": "9ff7d591-1539-4c86-8c5f-b7fac3691f4f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "89c47bc9-0320-44c3-a7e9-017ab4f450e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a70ab66-287d-45af-b63e-67aea64564c6",
        "cursor": {
          "ref": "6c8f2b3a-0cdc-47e3-bd8c-18bed5b405f4",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c28859a7-8d43-4028-82e6-26bba16004c5"
        },
        "item": {
          "id": "3a70ab66-287d-45af-b63e-67aea64564c6",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "dedfc1f5-41f8-41e2-8a70-ed4ef30b68f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd48c3ce-9964-4302-b041-f123a7c6f7bd",
        "cursor": {
          "ref": "5c1a0c41-6e1f-4cb2-bb2e-bb5a28beaafb",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "371d9f66-8556-4ab3-b683-10d0c8e2b30f"
        },
        "item": {
          "id": "cd48c3ce-9964-4302-b041-f123a7c6f7bd",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ec1d635a-d609-4eb5-81f9-1730fe57c1dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db605265-dcaa-4e9c-aa20-ce51bd762174",
        "cursor": {
          "ref": "a51df6ff-a933-4908-b5c4-ba84170e1af2",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "82584544-6d06-4b5e-88fd-edccefce26c3"
        },
        "item": {
          "id": "db605265-dcaa-4e9c-aa20-ce51bd762174",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "cd53e837-ef0b-4e2d-8dcb-dc950523f8d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "092364ad-6cfc-4df3-bc45-7557a043142e",
        "cursor": {
          "ref": "df71d928-6fd0-4ab7-8050-3f4f96765283",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "60bb4240-34f8-4728-a01b-b45f05499e5a"
        },
        "item": {
          "id": "092364ad-6cfc-4df3-bc45-7557a043142e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "82d39d50-6dab-458b-a8b3-cdb087ce78ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2a6dd4-4337-4bc3-b960-7f8f2fa077cd",
        "cursor": {
          "ref": "32b9a3cf-a50e-46ad-8878-a4ef5f9ee753",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "135f0c01-4515-4e62-ba55-0e50bbefde0f"
        },
        "item": {
          "id": "ac2a6dd4-4337-4bc3-b960-7f8f2fa077cd",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "10d9759f-60aa-4ffc-8113-57b0072eabb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "974a7b74-2619-47bf-93c0-40aed7d9d41f",
        "cursor": {
          "ref": "3c94d8d3-b0d7-4a3f-9931-302e73f5c892",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b5019c70-e737-42b6-85f9-c7a6caab6a01"
        },
        "item": {
          "id": "974a7b74-2619-47bf-93c0-40aed7d9d41f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5c611a90-7a1d-41de-9da3-c010e6a8fcc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df446bc-a2e4-4e6f-8de0-234134156c00",
        "cursor": {
          "ref": "f548feee-19cb-48b0-959b-86772ed9e32a",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "7787d927-723f-4398-8629-91a14848189c"
        },
        "item": {
          "id": "9df446bc-a2e4-4e6f-8de0-234134156c00",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d4ea186f-9516-495e-a1fa-92f51158c22f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950f9f9f-46e5-4672-bfdb-6e0f4f471cde",
        "cursor": {
          "ref": "cfb36086-9cf4-4a0e-9a99-c3966ed18776",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "8fea57f0-5847-48de-8fcb-6f97055b022b"
        },
        "item": {
          "id": "950f9f9f-46e5-4672-bfdb-6e0f4f471cde",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "0920ecb5-0e75-4a8c-a1bb-2ce3e9a79c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a4b508-8af8-42bf-8bf2-ed0b180f98d5",
        "cursor": {
          "ref": "564f1e24-c1a5-41fb-a90f-e253a9681fd3",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1ff9c731-09eb-4ddc-957f-a232bd475e51"
        },
        "item": {
          "id": "50a4b508-8af8-42bf-8bf2-ed0b180f98d5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "259f895a-d899-4940-addc-5b688ee60921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413ca4d2-f734-49cc-8119-23bacb315d2a",
        "cursor": {
          "ref": "bb6fce71-1c82-445a-b568-66017c513124",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e6fe03ac-6460-4922-837d-53df70039e86"
        },
        "item": {
          "id": "413ca4d2-f734-49cc-8119-23bacb315d2a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6260081d-5e1f-4373-9570-8d7e7c57b943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085c5cb5-5c8f-4970-acf4-6f819f558b34",
        "cursor": {
          "ref": "429c5eeb-9299-480e-8b49-e2727243182c",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "22bc6a7e-37bf-4473-85bd-b45c5444eb0f"
        },
        "item": {
          "id": "085c5cb5-5c8f-4970-acf4-6f819f558b34",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "49bc9937-b4b1-4ce9-a11a-08639181c448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd807c9f-427e-4da4-9baa-3073cfdaedef",
        "cursor": {
          "ref": "1f27ed1e-0556-48a2-bb70-edb13820bfe2",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "2a3098cc-2495-4077-8ec9-c8782fbeb7a3"
        },
        "item": {
          "id": "fd807c9f-427e-4da4-9baa-3073cfdaedef",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4cf57c85-86ac-4e1b-b386-4eefa68a6c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf4f6c9-9171-40b4-9e25-e9d6f4e030d4",
        "cursor": {
          "ref": "029e8177-0c39-4b1f-be73-1c5a88b45358",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1dbac9cd-0953-4451-a65d-ed472cad6300"
        },
        "item": {
          "id": "9bf4f6c9-9171-40b4-9e25-e9d6f4e030d4",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3a929fe2-af6a-49aa-822d-109409245c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5942b6ea-3f70-4f22-858e-a57d9c1d5249",
        "cursor": {
          "ref": "3f559db9-442a-469b-a9d2-868deeb75e9f",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "12289b41-e2eb-49c5-acf7-52a46226aa12"
        },
        "item": {
          "id": "5942b6ea-3f70-4f22-858e-a57d9c1d5249",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e735562c-a2fa-4e65-8345-fd219f8045ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c300343-9af2-48f7-98a1-2c26190c2a08",
        "cursor": {
          "ref": "897f8d24-67ae-4397-95ac-aaed9175f5ef",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "dc6dbc8a-4360-4dd8-8685-236362a63fa3"
        },
        "item": {
          "id": "6c300343-9af2-48f7-98a1-2c26190c2a08",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "01f26fa6-a335-4bab-96ac-51d9d3589013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00d8937-2d4e-4c47-aaa6-dd23d58917ce",
        "cursor": {
          "ref": "dd0105d6-9da8-47ad-a960-5e79e928a8b5",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5147f4e1-5ed4-4aa0-91c3-42ed804a310e"
        },
        "item": {
          "id": "b00d8937-2d4e-4c47-aaa6-dd23d58917ce",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e7631c05-078e-4bae-860e-3cd6f5195ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622e4621-134f-4f21-95e5-54e407890e98",
        "cursor": {
          "ref": "386ba4b3-bb80-4a93-85b7-dc4816a6b9cb",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "32c391ea-e64b-4c9d-88c0-0a02f8747cff"
        },
        "item": {
          "id": "622e4621-134f-4f21-95e5-54e407890e98",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "162a04a0-f1f5-4117-a7f7-845bbc456f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc7fd16-6882-4c4a-bb6f-f9d8d1d7eb66",
        "cursor": {
          "ref": "9f315645-ac1c-4874-a3de-f588c6213a88",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "5ef73864-824d-4712-b44b-2c149a9d90e7"
        },
        "item": {
          "id": "dfc7fd16-6882-4c4a-bb6f-f9d8d1d7eb66",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "bf2eedf7-2a5c-42fd-8e3d-f2aec7809388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc119c1a-1d13-4c3c-84c0-2a242dd2656e",
        "cursor": {
          "ref": "a6ed3bc7-24b6-4103-87bc-e250614ed633",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f8b42a1e-bf63-47f3-a37b-36ddbfa17f7e"
        },
        "item": {
          "id": "cc119c1a-1d13-4c3c-84c0-2a242dd2656e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d421aad3-ab16-4cb7-89dc-fc2c6ed87b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "821038c5-0df9-43c3-b314-b4f03b821ec5",
        "cursor": {
          "ref": "1888776a-1033-4ef9-a762-c91e70817422",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "59ff0e0a-adec-4990-ad86-43a64ecce005"
        },
        "item": {
          "id": "821038c5-0df9-43c3-b314-b4f03b821ec5",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7ce016a7-eebc-4f6d-be56-62b6082d256d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "858fe621-d7a4-4076-a922-4ec2046fd64d",
        "cursor": {
          "ref": "b784eab6-d13a-4f90-8823-720fa0051b79",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f6ec2c92-80a0-4b61-9475-86bb9f68b55b"
        },
        "item": {
          "id": "858fe621-d7a4-4076-a922-4ec2046fd64d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b6b65d7b-27fa-4c8a-9196-6dff5ba56504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79fc685d-c0d9-4ab4-a0c5-197bb6e4e7d9",
        "cursor": {
          "ref": "59104c98-426b-4baa-8560-0eaab81fec6e",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5927ffeb-6bbf-4030-abc9-beb1d82b170b"
        },
        "item": {
          "id": "79fc685d-c0d9-4ab4-a0c5-197bb6e4e7d9",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ac85487e-b9a0-436b-a18c-e99a636c8de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f168c170-2b04-44e3-ac75-667dcd2b8c6f",
        "cursor": {
          "ref": "630dc48e-c56e-4a10-9d2d-aaa01c34fbe7",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c47657b7-9a4c-4ae6-ab01-9bef9a962deb"
        },
        "item": {
          "id": "f168c170-2b04-44e3-ac75-667dcd2b8c6f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "5f9424b2-d009-4839-9b48-940f617a3119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d093c2-afeb-4b02-a87d-1d6db0d2c0bd",
        "cursor": {
          "ref": "426cec23-ac82-432b-bb1f-fffb5ffb281d",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f31f2030-d78b-4389-bc71-eaa37ef08b73"
        },
        "item": {
          "id": "71d093c2-afeb-4b02-a87d-1d6db0d2c0bd",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "151cc0a2-06b7-44e4-814d-10d005f7efde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5252cd6f-24aa-4794-910d-8e0331fc2c3e",
        "cursor": {
          "ref": "a4cbff4e-6218-4443-b354-f15d47e96e4c",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "8561e000-d32b-424b-90a9-fefce98ae922"
        },
        "item": {
          "id": "5252cd6f-24aa-4794-910d-8e0331fc2c3e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ed4fefa9-fe4d-4380-8195-5ad53f4b8561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe2d1cd5-741e-408e-aab5-211f29e6b82a",
        "cursor": {
          "ref": "3fc9f492-833e-4688-900e-baff97a857a6",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8e56ef23-35d4-4138-9d3c-b2fc9fde5097"
        },
        "item": {
          "id": "fe2d1cd5-741e-408e-aab5-211f29e6b82a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "647c2945-8778-4604-9917-777381495e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "298c23e2-b5bc-4c50-b441-0fdcc435c675",
        "cursor": {
          "ref": "71043427-aa80-45d1-b33e-dc73a559da65",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5429b23a-ba72-4719-a4fa-26f37c9afe79"
        },
        "item": {
          "id": "298c23e2-b5bc-4c50-b441-0fdcc435c675",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6ed9038a-95dc-42de-b538-34c5f860e331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c101ad7b-362f-4ddb-8f57-ba7930a885f8",
        "cursor": {
          "ref": "c23ad4fe-2666-4cf0-9bdc-a77f6c925d66",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9368d5c7-95f8-48ee-9fcc-2abc6bfb994e"
        },
        "item": {
          "id": "c101ad7b-362f-4ddb-8f57-ba7930a885f8",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6fe5dff7-1d3b-48ec-b970-768503421f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729f4856-e9f1-4794-8065-7dc830d552dc",
        "cursor": {
          "ref": "58a86049-2140-4d03-8c1c-c990d9a7c979",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "94a1027b-4a9f-4980-826e-173f2b51ea4d"
        },
        "item": {
          "id": "729f4856-e9f1-4794-8065-7dc830d552dc",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d378dec9-321d-432e-9ba8-4d0c7079a10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9c6d6d-c24d-47b5-89e7-63c8fa37db72",
        "cursor": {
          "ref": "c1fabbc5-9f70-489f-84c9-a459f81a9d5c",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ae50c1b3-e191-4260-8c0f-822f175d0ddb"
        },
        "item": {
          "id": "9d9c6d6d-c24d-47b5-89e7-63c8fa37db72",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0c89606a-d28b-408f-be11-25f5a9a15512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c010e63-7986-4d70-9fa9-1d6b5506d594",
        "cursor": {
          "ref": "f841c26e-2843-4ba2-b3b0-ddbf6c0a326e",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "23f96d34-1f2a-4bfe-8039-9671b77cc680"
        },
        "item": {
          "id": "7c010e63-7986-4d70-9fa9-1d6b5506d594",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4ca84605-a426-4fd4-a3f3-45d6093bfe29",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65cb7d20-37b7-4d19-ac8a-926d47693f31",
        "cursor": {
          "ref": "ceda32f4-ecaa-467b-8df3-b08481e58b1b",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "258e5c67-0d08-4fbf-a483-0985a0a8be3a"
        },
        "item": {
          "id": "65cb7d20-37b7-4d19-ac8a-926d47693f31",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "1f288e47-9f84-4dde-adc3-917a97661722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "a4b2a8fb-4223-45af-880d-271cd31bc7f3",
        "cursor": {
          "ref": "77253f2d-1d1d-4736-a136-c216455255dd",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e6d37b2e-bcae-42b3-8165-b73b6095abbe"
        },
        "item": {
          "id": "a4b2a8fb-4223-45af-880d-271cd31bc7f3",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ac2d4c1e-955a-4687-9f5d-0e6114ed9fb6",
          "status": "Created",
          "code": 201,
          "responseTime": 13295,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e0760a-2719-4560-ba6b-3c6cf5f2b0ea",
        "cursor": {
          "ref": "1587c755-6a76-4b5a-a8c7-aad336c3ad39",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "753873a1-2ce4-4d3f-b95b-94c6a3b321fd"
        },
        "item": {
          "id": "76e0760a-2719-4560-ba6b-3c6cf5f2b0ea",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5e034e32-48c5-401a-8628-8ee5dd8e1086",
          "status": "Created",
          "code": 201,
          "responseTime": 12362,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "db80a511-7603-4ddb-942d-ff33f5ea25a1",
        "cursor": {
          "ref": "6c0e6ddb-4660-4da3-85e0-1dedaa4f6f7d",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "aff2dda3-c740-4bf0-85bb-b4926610fbb2"
        },
        "item": {
          "id": "db80a511-7603-4ddb-942d-ff33f5ea25a1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9c337a14-07ef-400d-85af-534c9aae0510",
          "status": "Created",
          "code": 201,
          "responseTime": 12872,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2cac438-eaa0-4e5e-a425-02b92a727f08",
        "cursor": {
          "ref": "cd530f5b-00fa-4339-8744-c407efff0f19",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d56c39cb-f8a7-45ee-8a53-6306f414ad48"
        },
        "item": {
          "id": "e2cac438-eaa0-4e5e-a425-02b92a727f08",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e8f44877-557b-4837-9a12-05d947c541e2",
          "status": "Created",
          "code": 201,
          "responseTime": 13182,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a7a214-cc92-447c-8c21-efdaf2f871c8",
        "cursor": {
          "ref": "f8fd0f6c-3a4b-47bd-bff7-cfe213149278",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c3c88125-0f87-45e4-8295-311bced92dba"
        },
        "item": {
          "id": "16a7a214-cc92-447c-8c21-efdaf2f871c8",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a4f9aa59-83f5-403d-9722-7e5f68e1292b",
          "status": "Created",
          "code": 201,
          "responseTime": 13402,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-08-27T00:43:02Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-08-27T00:43:02Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "1b20f3e1-4e75-4d90-9b9a-307ba90772bb",
        "cursor": {
          "ref": "f04a736f-4282-4ccf-a52b-f2fa6136a52f",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d6961b14-11b3-40e2-b2be-7db11476fec3"
        },
        "item": {
          "id": "1b20f3e1-4e75-4d90-9b9a-307ba90772bb",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "226316d5-87ef-4745-9a03-8f14247b09fb",
          "status": "Created",
          "code": 201,
          "responseTime": 13209,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba5b458-8f3b-4bb0-b635-f739d502021c",
        "cursor": {
          "ref": "1cef97fb-7360-46b3-9f5b-be6c8bbfed87",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "4cb7f594-0366-46b2-8b23-2338c5dbdf56"
        },
        "item": {
          "id": "eba5b458-8f3b-4bb0-b635-f739d502021c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5f8a7432-9979-45f1-9c3d-eba15295a760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d65be6f-bc6e-4b1b-9730-9677138ea896",
        "cursor": {
          "ref": "4c81f7ed-b3fd-4ab0-bec4-5c870f4ec73d",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5091b7d3-7dd9-4a30-991d-9618a8f71329"
        },
        "item": {
          "id": "9d65be6f-bc6e-4b1b-9730-9677138ea896",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3d7d1436-2cd7-475b-873c-05f3a0fe2f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba1cef4-55f2-4142-bef2-8a96255f8c15",
        "cursor": {
          "ref": "494dab45-96c4-4ff3-a248-35fdadf2ec1b",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "111fb858-bf05-407a-a14e-3d69a26425b9"
        },
        "item": {
          "id": "cba1cef4-55f2-4142-bef2-8a96255f8c15",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "095ea9b3-cfe5-4122-be07-7efdc2a46c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a618bbce-6b1c-4a99-897d-4563ff56895b",
        "cursor": {
          "ref": "17350a2c-0107-44a8-8db2-f9ac56fefd41",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "403a4923-6afb-4314-a634-cb01b6f2ef69"
        },
        "item": {
          "id": "a618bbce-6b1c-4a99-897d-4563ff56895b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "27faf59a-fc1e-413c-bd31-86758dd30df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a4f75b-30ba-412e-9e0f-06bb15266aa0",
        "cursor": {
          "ref": "f8e2178b-9d8a-4f80-bb23-fe4c8a828138",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "cf60f5ed-8009-4748-91c9-c9adb6e0a3a6"
        },
        "item": {
          "id": "45a4f75b-30ba-412e-9e0f-06bb15266aa0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5f7a4986-6817-4c54-a3f1-744c98c4c2b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11c8563-c3e3-4559-8780-9fad052e1c82",
        "cursor": {
          "ref": "e8a8f94b-ef2f-41b4-9402-08a8020f93a7",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "917f26ce-d940-44c7-aad9-1cec3618ca5f"
        },
        "item": {
          "id": "a11c8563-c3e3-4559-8780-9fad052e1c82",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1dbab38c-41ed-4603-aa7d-63c8d9100a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae6564b4-d191-4ef9-a477-a73af1a8e104",
        "cursor": {
          "ref": "63265e27-23e6-48dc-a638-f5f507abe489",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "609f2825-2498-41fb-8fea-d717187ca27b"
        },
        "item": {
          "id": "ae6564b4-d191-4ef9-a477-a73af1a8e104",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f68cbca8-1ce4-44b7-97ce-ed9af1bd8bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af01b58-00fb-4a72-a173-29e09cf9e85c",
        "cursor": {
          "ref": "f3cbda05-8ecb-4a41-8a38-32376c67e133",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d85954c8-e2f3-4059-b045-9d6dadaf2ce3"
        },
        "item": {
          "id": "3af01b58-00fb-4a72-a173-29e09cf9e85c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "282d8495-7ffc-4a93-a0f2-6321519e4076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "255bc051-b688-499f-9974-bf6de15ba685",
        "cursor": {
          "ref": "adef20a1-9987-4400-908e-30c865570d7b",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8210e2b6-b64b-46fd-bbe9-873eacda26ed"
        },
        "item": {
          "id": "255bc051-b688-499f-9974-bf6de15ba685",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "25d0f73b-5549-4931-89a2-1639f2349d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e42968c8-779e-4247-a0f1-75c4fad97cc6",
        "cursor": {
          "ref": "3d6afc77-177b-4446-aa63-f6a3c05ff3ac",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e29b6b47-bb67-42cf-8ffc-d16a75bf2a5c"
        },
        "item": {
          "id": "e42968c8-779e-4247-a0f1-75c4fad97cc6",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "cf33ee9f-108a-44f0-93a2-7ca902457418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787605a3-95ad-4559-a790-0233cefcd761",
        "cursor": {
          "ref": "2ee928b9-32e6-4012-85b3-966dd9a573e4",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "9a825da7-babf-4347-95a0-2934a08aa3cf"
        },
        "item": {
          "id": "787605a3-95ad-4559-a790-0233cefcd761",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "45f02ac0-8e4a-416d-84df-a8f506bdadf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85db0e26-bb4b-42ac-8eb8-fb6b09559b2a",
        "cursor": {
          "ref": "76f4aee1-8e95-46e4-b8d5-dc91f2a041d0",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b6b5b7dd-a055-411d-836b-65318f1648a6"
        },
        "item": {
          "id": "85db0e26-bb4b-42ac-8eb8-fb6b09559b2a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "51d49d4d-93e4-43a7-bcda-21cff7f36f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e465fbcf-4609-45bb-a45b-fe71d0ff5e14",
        "cursor": {
          "ref": "3c50f201-c05d-45bc-a4b3-d08ec432d08e",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "98995864-4360-498f-8f6a-a54ce420fddc"
        },
        "item": {
          "id": "e465fbcf-4609-45bb-a45b-fe71d0ff5e14",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3df703b7-e77b-4732-a54e-1010368bd643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446b4b73-c7f8-417b-b2c5-aafc7bd88032",
        "cursor": {
          "ref": "c68dca50-9047-4e20-bbdf-665e9f517818",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ce8d3957-ce90-4ea5-abc2-ed3232e7d7c9"
        },
        "item": {
          "id": "446b4b73-c7f8-417b-b2c5-aafc7bd88032",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "048c0978-fa0f-4f8b-ae51-6f3e51491889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e959f87-cbbd-468a-a98e-136abaaac454",
        "cursor": {
          "ref": "552a89d4-87ca-454e-84a9-17142c4bfae6",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "7e77908d-6388-40d2-b2de-4b8ee3f2ead2"
        },
        "item": {
          "id": "7e959f87-cbbd-468a-a98e-136abaaac454",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "18e79ab3-6069-4a76-b3f8-e5d35f0a09cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4e220e-865f-4b58-a648-4df55b2b2262",
        "cursor": {
          "ref": "5c8f6737-3909-4c73-be1e-19bbed20ea01",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4b03f060-c442-4080-98d2-ba492e7c30c3"
        },
        "item": {
          "id": "5c4e220e-865f-4b58-a648-4df55b2b2262",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2d352755-83a8-4e6a-bca3-71eb34717ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a809f3-67aa-4315-9dd1-4a8c61c74df1",
        "cursor": {
          "ref": "282b438b-5b93-4bb7-a8d3-87ef52fd4e60",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "2ff2c269-2427-4b1e-a588-0b8753fda550"
        },
        "item": {
          "id": "95a809f3-67aa-4315-9dd1-4a8c61c74df1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d5e2aeeb-bcca-46b3-8104-4705e2e97434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e7de04-c8cd-47fd-be35-cc958af140b6",
        "cursor": {
          "ref": "768f3f2c-d9cf-4e3d-bd73-42b027f03961",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9f935a16-9a76-4754-ba45-4d88c54fce9d"
        },
        "item": {
          "id": "10e7de04-c8cd-47fd-be35-cc958af140b6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5121f659-66e8-43a8-a2f9-5ddda23469b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c63048-6cd1-40d2-8106-ad5c182fae0b",
        "cursor": {
          "ref": "5d7109a7-2f7b-48bd-b95d-95e8d3ea0a23",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "6423c68c-d84e-4993-821e-7784604233a5"
        },
        "item": {
          "id": "39c63048-6cd1-40d2-8106-ad5c182fae0b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a9ebc141-6c07-40ba-a0ab-e799a0b08ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c7e3e0-4fb0-4224-8d4f-2b3264f5101c",
        "cursor": {
          "ref": "bb3e00ed-afe3-475b-bad8-7a7e1440049f",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "78961f64-5909-4e53-bc24-71ec7a51d6f6"
        },
        "item": {
          "id": "52c7e3e0-4fb0-4224-8d4f-2b3264f5101c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "31c9f112-948a-4cdd-a2ba-454495f4dc81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "956f6f56-1037-4341-9e2b-4c27f82bdc76",
        "cursor": {
          "ref": "285822fe-1243-43d1-baf1-ef4aff65492a",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "9b262476-4151-47fe-9d16-3db48b5b6af3"
        },
        "item": {
          "id": "956f6f56-1037-4341-9e2b-4c27f82bdc76",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "10216143-4b35-45f1-9c11-f229afe0f674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b35521ab-47c2-4cf8-933b-93060a3174c9",
        "cursor": {
          "ref": "475e869f-806c-410a-a290-3655d69741ef",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "944e9d2e-87b4-4d0e-85b1-e08b87a05b03"
        },
        "item": {
          "id": "b35521ab-47c2-4cf8-933b-93060a3174c9",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5cebaa75-23e1-49e6-966f-e933a433b181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1614def4-33d5-4fb5-9925-ac1d14e4e2cd",
        "cursor": {
          "ref": "54b822a9-8d44-4d86-8a90-eb449c7fe573",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f1a3ca0b-685b-4860-b85d-5ba07557f7d2"
        },
        "item": {
          "id": "1614def4-33d5-4fb5-9925-ac1d14e4e2cd",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6fa7cc08-8165-4a6a-9230-386fd1b6e96f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c6ad40-7c24-43b6-88af-2775540aee46",
        "cursor": {
          "ref": "8bcc4af7-7c7c-4820-b818-d187e178a6e0",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ae0a75dd-90a8-4ad4-96d4-3833e8d78180"
        },
        "item": {
          "id": "15c6ad40-7c24-43b6-88af-2775540aee46",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b2a3b73f-cc87-4dcd-83fa-c0d9e3de7ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b26972-7713-45aa-bc53-6cd7fa7aec64",
        "cursor": {
          "ref": "a162c462-4a20-4fc3-a348-c7de345c2149",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "57f52fb3-a69f-4125-b50d-4256f53a1423"
        },
        "item": {
          "id": "11b26972-7713-45aa-bc53-6cd7fa7aec64",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "129236ab-89f7-434f-a7b0-4335d126abc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831e34f3-36e9-47c3-bde3-ae766e4e266b",
        "cursor": {
          "ref": "f18190f5-32e6-4aa5-aa57-f872c67de087",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b7a5ff74-f32e-4574-9f66-a812fe2b1c57"
        },
        "item": {
          "id": "831e34f3-36e9-47c3-bde3-ae766e4e266b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1942c5dd-dacc-489d-a689-3584436ae149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe4ca24-cf24-4659-bee9-728afee644a6",
        "cursor": {
          "ref": "30820fb6-f0df-44af-b8ae-a0a98e473b1d",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "439da8a5-f9df-4a32-b4c3-9e31f64bf43b"
        },
        "item": {
          "id": "cfe4ca24-cf24-4659-bee9-728afee644a6",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2964bb61-0993-4173-8950-cc030580a48c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f07fde-a2a0-409a-b677-d49e6a087f38",
        "cursor": {
          "ref": "c9175971-b277-45f3-a4be-56a1fb290972",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3dbce50c-1993-40bc-8f9d-62e77f10f542"
        },
        "item": {
          "id": "b9f07fde-a2a0-409a-b677-d49e6a087f38",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c68d2ee6-0562-44a2-bd9e-853d942013e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e24ee8b-727d-4346-93b8-90d385b5864a",
        "cursor": {
          "ref": "dfe108fa-e67a-4d9e-aefa-8ce3d14ce887",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "3e0f676a-b203-46fe-8caf-0ffaf8508a4e"
        },
        "item": {
          "id": "7e24ee8b-727d-4346-93b8-90d385b5864a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5e0ef2cc-bbfe-4291-982d-229ac1ebfdfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487152d3-34b8-4094-b087-e4e39338386d",
        "cursor": {
          "ref": "f010efbf-4c61-4e2c-849d-0b46126639a4",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6685f3a0-01cd-4e47-ac4a-1a3fa5c61339"
        },
        "item": {
          "id": "487152d3-34b8-4094-b087-e4e39338386d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b81824d2-aa5b-4d8b-b8f1-9e3cd41be8a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d13c8e-dffd-4ca6-815f-1ba6b1601db7",
        "cursor": {
          "ref": "cde7dea0-a12d-4160-aff4-5320d844fb44",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c540c47f-383d-4eb9-8a4e-6f2a1bffa935"
        },
        "item": {
          "id": "84d13c8e-dffd-4ca6-815f-1ba6b1601db7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "638895b6-90e6-4ab0-bd26-55382fef6ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4de9c2-817e-40c8-b61f-72c0feae7a47",
        "cursor": {
          "ref": "e3949033-015b-43aa-9a85-83c959f64e11",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "73421c18-c0a4-4228-ac40-03c1dc366d49"
        },
        "item": {
          "id": "ef4de9c2-817e-40c8-b61f-72c0feae7a47",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "30dff8ff-4ac3-46d4-950b-6d0beb4dc8f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "251e8fa8-6ecd-44a3-98c4-831b7dcbc7af",
        "cursor": {
          "ref": "d91022cd-5f38-4f98-a541-58c8cf38139e",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "886ffba7-029f-47f5-b299-26f8472d2e41"
        },
        "item": {
          "id": "251e8fa8-6ecd-44a3-98c4-831b7dcbc7af",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "75b1fc36-8652-4b11-9667-2f1ed53a483f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "645978d0-0eef-438b-9eb4-694922efe4ad",
        "cursor": {
          "ref": "d9b70a03-d9f4-4eda-a772-9cd431513712",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "77b8c10c-c0a7-4b4b-9a85-3488212fc073"
        },
        "item": {
          "id": "645978d0-0eef-438b-9eb4-694922efe4ad",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "7ca7c7db-69e9-4ceb-83a4-43baa875824e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2de57ed-d687-474c-9040-576776b016d0",
        "cursor": {
          "ref": "2d720d46-5527-4fd7-bac4-d2e401691378",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5ca944ea-9e3d-444e-a906-4a6397ad34e8"
        },
        "item": {
          "id": "b2de57ed-d687-474c-9040-576776b016d0",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "dbd2c6ae-1918-4c0d-a7ec-2178d2b07c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8740cf28-c48e-4166-8dd0-f0388e42bb17",
        "cursor": {
          "ref": "e2b1fbe3-d968-403e-ae47-0f5ad115e372",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b2bda976-6edf-4728-8c2a-3baf43a3d9b5"
        },
        "item": {
          "id": "8740cf28-c48e-4166-8dd0-f0388e42bb17",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "1b31a8da-811d-4be3-9d9b-e2250f3cfb76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04148539-8de7-4960-b10a-88971ee81006",
        "cursor": {
          "ref": "c5c86ce3-8545-4687-8a5e-2d83fb4edd82",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7ad6d829-609e-4c38-93e3-1e04c0f73fe6"
        },
        "item": {
          "id": "04148539-8de7-4960-b10a-88971ee81006",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "ad69a540-4292-42b6-9f87-f8dd54a2d2c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24517e5-c89a-400d-8ded-0cc5503db513",
        "cursor": {
          "ref": "16a58347-acdd-4316-93e1-18c70a288970",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "1b6fdb6e-ebe5-44fa-9c88-2b91d5a8de33"
        },
        "item": {
          "id": "b24517e5-c89a-400d-8ded-0cc5503db513",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "26e9611a-e3fa-479c-a7d8-a336ca17b549",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ad650e-2b39-4c3f-9e00-ec5809dc02db",
        "cursor": {
          "ref": "c8679a93-42d0-48a3-853d-2aed4a57c8a2",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ff39a6a1-b21f-4d36-ad46-87d242d7292d"
        },
        "item": {
          "id": "e5ad650e-2b39-4c3f-9e00-ec5809dc02db",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "dfff8ca5-8b0e-4e13-970d-4e4607b60844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c03b18-0ab6-4221-9fbc-cfe27daa00a0",
        "cursor": {
          "ref": "eef94788-7586-42e5-9566-1bc99c191930",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "de2263f6-1004-4d82-8f01-214f580643d1"
        },
        "item": {
          "id": "06c03b18-0ab6-4221-9fbc-cfe27daa00a0",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "783cd300-920d-45b8-b30d-7302a7470484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2982914c-5421-4edd-b608-0bada7e7e2a0",
        "cursor": {
          "ref": "f0d04cf7-76b5-451d-988c-010972cf0ef2",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9d51b9ac-55c7-4ce9-acea-b5732e88371d"
        },
        "item": {
          "id": "2982914c-5421-4edd-b608-0bada7e7e2a0",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "64ab9c70-2224-4a23-b31f-fb1da8a3f4dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3acaac60-6c9a-4c22-9f3a-f6b3d1348094",
        "cursor": {
          "ref": "9d5b2123-2d58-40aa-b8ad-e27ff6a75ba2",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "31e4bd38-bc30-45d9-97c6-4c5111b7731e"
        },
        "item": {
          "id": "3acaac60-6c9a-4c22-9f3a-f6b3d1348094",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6ffbb4eb-5de7-4ec7-894a-6a14ca060752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61027130-d7b8-4488-ae4e-c16f5d516a38",
        "cursor": {
          "ref": "02ebded2-19ec-4a1d-b3a9-02c6c50e259a",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "eef6faa7-9da8-402b-9ecf-d239ff4d11be"
        },
        "item": {
          "id": "61027130-d7b8-4488-ae4e-c16f5d516a38",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "17411958-8e78-4100-b901-65744db3c67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e74b2c-eabc-4cb3-b162-87408fcd1026",
        "cursor": {
          "ref": "418069db-140b-4207-a924-f7061dda6d1e",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b7261982-cc3f-4f48-a417-9d889741d327"
        },
        "item": {
          "id": "57e74b2c-eabc-4cb3-b162-87408fcd1026",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f5988594-ff22-487a-a908-81c3e211ef61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c803339-3eab-449f-9272-495e648dbf34",
        "cursor": {
          "ref": "bb4a9ad4-7546-4346-9a22-dc92243c6b30",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "87ab6862-4abc-4bef-8866-9ac68db9d683"
        },
        "item": {
          "id": "5c803339-3eab-449f-9272-495e648dbf34",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "892a3365-1a85-48d6-8d83-265ba09e5385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f12f0a-4f7f-4131-a7d2-b162409bb4c7",
        "cursor": {
          "ref": "e193f315-da8d-4385-9fe3-9332290308fb",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "2a857889-7de8-4172-96c6-18e7cc9e3eb2"
        },
        "item": {
          "id": "56f12f0a-4f7f-4131-a7d2-b162409bb4c7",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "211ed4e5-252b-4294-9b19-b548ba13432b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da99f67-3b4e-4574-8560-07d898b4aabb",
        "cursor": {
          "ref": "9a0f47d7-ebaa-4d12-b1fc-c47aaa999cd1",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "673d69e3-622c-4305-83ef-9bb97969c1df"
        },
        "item": {
          "id": "9da99f67-3b4e-4574-8560-07d898b4aabb",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6ca282e0-8e7b-4af2-8d2f-537b0a9a7210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba74913b-9981-4769-a137-c4d32dcf4124",
        "cursor": {
          "ref": "d3ea49f9-e8ba-4d54-9fb4-7fe8b8577408",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "be033baf-6e6a-4f0e-87bb-fc6ce8153172"
        },
        "item": {
          "id": "ba74913b-9981-4769-a137-c4d32dcf4124",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f8a37a01-eb24-4d40-a453-85d57e60d7f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8fb72ae-aa72-41c5-9a04-1930cb852764",
        "cursor": {
          "ref": "aee26868-2283-4f6e-9ac5-81f4aeb9a23e",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ddfd5f6c-84af-4dca-a79e-0c189112a94a"
        },
        "item": {
          "id": "d8fb72ae-aa72-41c5-9a04-1930cb852764",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "95a95b6b-b2f4-45e5-b0f1-fee30f7d384b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b40508c-a82a-40b6-8327-1a362b6dd36e",
        "cursor": {
          "ref": "b4a021be-e1f2-4f51-92c7-d62c97c445fe",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "24b6b104-8511-464c-ba31-fc498487360f"
        },
        "item": {
          "id": "4b40508c-a82a-40b6-8327-1a362b6dd36e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "6c1cbbde-1164-409d-8e61-19e2fa4e3e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e570c343-c38d-4cbd-857d-aa67704c0e34",
        "cursor": {
          "ref": "85ad8f3c-0c28-4b09-a4e6-8c18dfe70042",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "4e6527ce-1bac-40e4-9023-00812dfc7056"
        },
        "item": {
          "id": "e570c343-c38d-4cbd-857d-aa67704c0e34",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6911b879-87f9-41aa-8e3a-2ba358d76f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952b7bd0-d39b-4844-9438-21979df15b61",
        "cursor": {
          "ref": "c5302572-f529-4935-8134-291511ea4a38",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3213a7d8-755d-4b35-893c-b63c74206503"
        },
        "item": {
          "id": "952b7bd0-d39b-4844-9438-21979df15b61",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f8636f8a-e88b-49c2-9945-6ba7e0fb3c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d35498-8901-495b-9b7d-7f6ae7f73e9d",
        "cursor": {
          "ref": "9ed0e2ec-89a5-4b30-9830-f05cc243f88f",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "24c243f9-7f6c-441c-988d-d53129a213ec"
        },
        "item": {
          "id": "68d35498-8901-495b-9b7d-7f6ae7f73e9d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0963e615-1ee0-4546-9230-1926d880a8d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e7d9de-d0f5-448a-8357-276d524405ac",
        "cursor": {
          "ref": "fb8f93c4-cf9a-49db-8af9-a4925d225371",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e95218ee-e9b5-4fa3-9cba-3c567960f146"
        },
        "item": {
          "id": "69e7d9de-d0f5-448a-8357-276d524405ac",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3b9d2974-5a92-471a-a07c-c87770eb23b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb22d110-2be9-4049-9213-c4b301041d3f",
        "cursor": {
          "ref": "3378c93e-9c67-44ce-993f-4508c68a6740",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d50716e0-1e87-4e82-98e2-604a13522241"
        },
        "item": {
          "id": "cb22d110-2be9-4049-9213-c4b301041d3f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ada578a6-6503-4d73-94f9-d0dace22235a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d996e70-9e73-47e6-a482-df71159087e9",
        "cursor": {
          "ref": "b8155452-5c97-4c8d-87ed-720f1c91564f",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3b7d90e6-5c4d-47f5-8058-a48ddeaff82f"
        },
        "item": {
          "id": "8d996e70-9e73-47e6-a482-df71159087e9",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e76b98be-c391-4238-9d61-179452a893e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb13d9a-1b4f-4778-b213-d25a738d34b8",
        "cursor": {
          "ref": "4532e5d7-1cb9-42cf-b481-912328d41287",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "fdbe1954-a837-4088-b0fb-b60aa70d3550"
        },
        "item": {
          "id": "adb13d9a-1b4f-4778-b213-d25a738d34b8",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4664bd24-a0fb-470e-90ec-36125dba06d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec0660a-928b-47a0-933d-a75a6ebcd06d",
        "cursor": {
          "ref": "39dd7ea0-96d0-4675-9836-bf867076efeb",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "378c13d7-6c38-4f54-a261-dcd5c7cc2782"
        },
        "item": {
          "id": "0ec0660a-928b-47a0-933d-a75a6ebcd06d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "25708feb-4aad-4133-8d00-784cde3c04d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "431bb9be-06ee-4f74-bcd7-d7cca7c95253",
        "cursor": {
          "ref": "78859ae6-0bc1-4b77-9b32-e0c590d5b983",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "bbf1c0bd-5924-4ea6-ab8d-1be2e6b7a2ef"
        },
        "item": {
          "id": "431bb9be-06ee-4f74-bcd7-d7cca7c95253",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f2817786-89fc-4278-affb-e508aede19f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0df731-d5a0-4509-8e2d-54d50a236348",
        "cursor": {
          "ref": "1c123f30-a8d7-4783-be5f-3161c2f6dece",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ecd27767-3229-45d8-96ed-65fe0faf7d4e"
        },
        "item": {
          "id": "cc0df731-d5a0-4509-8e2d-54d50a236348",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "fe41f10f-891c-46ff-9f48-33a785b913c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e37c45b-e6b9-4111-a442-13cab17c4fa5",
        "cursor": {
          "ref": "c1a4623e-ecef-4e20-86b3-c6844a49e664",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9a60f5bf-f778-4bea-89ed-317994110f01"
        },
        "item": {
          "id": "9e37c45b-e6b9-4111-a442-13cab17c4fa5",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "141589fa-3b22-4362-88eb-6980301e37de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de344bc-1549-4d61-82a9-27a1296db969",
        "cursor": {
          "ref": "cf69007c-626c-4d13-aa67-923c477d23ba",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f5737dc2-2f4c-4f8c-8775-9cb1ff64e921"
        },
        "item": {
          "id": "6de344bc-1549-4d61-82a9-27a1296db969",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "38b495ff-7ca3-4fb7-a23c-f5dffbc73f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ae6bab-af88-4d26-86c4-8daf89ff1e83",
        "cursor": {
          "ref": "da18a1b8-a913-4c5e-8ba5-79167a981efe",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e17c6a1b-8874-44ad-8ae7-f75f322bc7d1"
        },
        "item": {
          "id": "64ae6bab-af88-4d26-86c4-8daf89ff1e83",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "02f8856e-6a82-4ddd-a199-2aeed81ba81f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cbc8435-fab7-433e-a199-b28336cac2cf",
        "cursor": {
          "ref": "e095fba2-f30b-4c13-b7d3-336acbd41164",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "34b90786-0632-4f9b-bb8c-4729981e735d"
        },
        "item": {
          "id": "9cbc8435-fab7-433e-a199-b28336cac2cf",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "21a5c14f-c007-4556-b5cc-4fa9423a0889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac73ca4-0c31-4ea3-ba50-c225f2e4b38a",
        "cursor": {
          "ref": "9c8fbda5-b3f2-4dfa-a48e-f16ac7eb5275",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "40e1df10-9e23-4c8c-bce2-eee9a1418fc3"
        },
        "item": {
          "id": "fac73ca4-0c31-4ea3-ba50-c225f2e4b38a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "bbf6b733-d12d-42b7-9980-7f69c6cb7b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eaf3b9b-0095-41e8-a417-f67007cf03e2",
        "cursor": {
          "ref": "c8ec06c2-f6cf-46bf-9e2d-8fcbccaebaa7",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b2896306-aa4d-4686-99d0-4e6aecd2e370"
        },
        "item": {
          "id": "1eaf3b9b-0095-41e8-a417-f67007cf03e2",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "93a25e9b-ebd4-4b6e-afe2-a750dd362ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d831680-6259-4905-960f-f1d79d179ad0",
        "cursor": {
          "ref": "60ec9c01-0a3f-499e-a1b0-1dad817751e2",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c9893d91-168a-4039-8f32-fae491db0f47"
        },
        "item": {
          "id": "4d831680-6259-4905-960f-f1d79d179ad0",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "acdb4704-78ad-4b01-8926-07b8d5b31e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3897d7e3-3273-4f85-ab63-075e4c7a6c7c",
        "cursor": {
          "ref": "084ca75f-dccf-40d5-83aa-f2bab1f8254e",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8c1ca2ca-2d8c-4c79-bc3d-b6e2a177c1ac"
        },
        "item": {
          "id": "3897d7e3-3273-4f85-ab63-075e4c7a6c7c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f4151e70-e792-4dfb-9a8d-f129cfa0cff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dfc269a-1e6e-4e27-afdb-ff755c603f31",
        "cursor": {
          "ref": "238e0916-5b64-4174-b800-5ab875558ae1",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e02e8a57-18d2-484d-916a-cfa418fde7ab"
        },
        "item": {
          "id": "7dfc269a-1e6e-4e27-afdb-ff755c603f31",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "418c2b6b-c7b2-4793-b63a-dea9e0837efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0ff1f1-8c62-4027-b363-a952ef736f4e",
        "cursor": {
          "ref": "2b357087-c883-41f4-beae-ecfbf4846e2f",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "01a0c40c-fba5-4172-b942-38edc413654e"
        },
        "item": {
          "id": "9e0ff1f1-8c62-4027-b363-a952ef736f4e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7d1cbffa-6c34-4c70-a048-b4df3fdf8e9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b488a568-c2f1-4b91-aeea-134e2e37d2cc",
        "cursor": {
          "ref": "1551cdd0-d362-4a61-bbab-185ce5d38012",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "433cb65c-77c9-43d6-a4d5-d457ff58bc47"
        },
        "item": {
          "id": "b488a568-c2f1-4b91-aeea-134e2e37d2cc",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "8b4a9ada-95b4-480e-9121-88e7009c9a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a28bb9-1977-4d5d-bc0b-aa684c991916",
        "cursor": {
          "ref": "30645599-0a7e-4e17-a754-b882e4499be1",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "15efae40-26aa-4bea-8d77-b1a685fed7ce"
        },
        "item": {
          "id": "b4a28bb9-1977-4d5d-bc0b-aa684c991916",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "66be811f-ac0d-41aa-a162-30fe9142b221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e794cd22-e20f-4d75-9a66-c8bfa8034357",
        "cursor": {
          "ref": "78b05a1c-f701-4708-b25b-203f6483bde8",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "08d387a4-0dcc-486d-9143-6b5aebdb75d0"
        },
        "item": {
          "id": "e794cd22-e20f-4d75-9a66-c8bfa8034357",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "be185cbe-24c3-41b3-9fca-ab7d7c492bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "182c7d0d-d3e1-4993-b513-07cc02a28676",
        "cursor": {
          "ref": "c6163ebb-11d8-4875-8d61-e0109f406336",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0616b630-7997-4579-98cb-dcbfa792385c"
        },
        "item": {
          "id": "182c7d0d-d3e1-4993-b513-07cc02a28676",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "170f0f05-70af-4652-b26a-b903a83ca081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc91d06-94f9-400d-af8d-cc69a9d528c9",
        "cursor": {
          "ref": "c3376e4a-91fe-4f83-b899-143d39ab2260",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "598d8b10-f5eb-4a54-ad35-586846cd611c"
        },
        "item": {
          "id": "ebc91d06-94f9-400d-af8d-cc69a9d528c9",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1d198a44-aefc-4672-b44c-b239ade3f55a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9dc7a52-f474-4d53-b3d6-a89b8222346b",
        "cursor": {
          "ref": "9d2857e5-7e8a-40ec-9ec5-9ea19bd139d4",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d0595b74-841c-42b9-a31a-f054e685a381"
        },
        "item": {
          "id": "c9dc7a52-f474-4d53-b3d6-a89b8222346b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "71b33c2f-39af-4ade-8784-0add1c0dc0c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84bee5d7-d1bd-4319-bc2c-5f4fc1bed88a",
        "cursor": {
          "ref": "946c1796-2d81-4076-b6b6-b3943cac1ca4",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4e47be51-dd71-4cf7-ba34-c93e886a2a17"
        },
        "item": {
          "id": "84bee5d7-d1bd-4319-bc2c-5f4fc1bed88a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "5524716f-4721-4631-8bc8-a8d677569028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47534e03-59de-4a1f-bf5c-afe25c6e0444",
        "cursor": {
          "ref": "09b4b971-b661-4cc9-86cc-af4224b3cd44",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c964d18d-210e-477d-baa7-15214d7f2ff9"
        },
        "item": {
          "id": "47534e03-59de-4a1f-bf5c-afe25c6e0444",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "35dbc3b2-ba05-4ebd-82bf-ced61e8e20f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a75fa680-a684-4620-a343-32ed19aad17a",
        "cursor": {
          "ref": "2fca7c1a-9df4-497b-a1f7-12cf4d389168",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "351cb973-5a43-404a-b086-b49db82bd6f3"
        },
        "item": {
          "id": "a75fa680-a684-4620-a343-32ed19aad17a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "fade82a3-4f8f-4f24-9f83-f3611d291047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23817dda-7bc6-4677-b57f-ec6c6cbae63b",
        "cursor": {
          "ref": "edf440e2-8941-4f67-a86f-87a44dcb79ad",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b0bf3eba-133a-4fb7-b611-6f337a9e3f13"
        },
        "item": {
          "id": "23817dda-7bc6-4677-b57f-ec6c6cbae63b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "5ad59990-1fac-401b-9dc9-6168a6bf8daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "424d9290-2d0a-4b1a-a2c9-76c19cd2b9ed",
        "cursor": {
          "ref": "dc5a9f99-784d-47a7-81bb-28f2f5a5135b",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "1dbbc151-0765-4248-817d-207967c80669"
        },
        "item": {
          "id": "424d9290-2d0a-4b1a-a2c9-76c19cd2b9ed",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1040e700-3186-4024-9a4f-786405d34c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e048e6c-7747-4f83-9be6-db08bb8e77d4",
        "cursor": {
          "ref": "9ce3dfd9-4843-466b-b427-aa883ffea7df",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "443b3f75-2a05-4d5c-bc08-7786280e8cb0"
        },
        "item": {
          "id": "4e048e6c-7747-4f83-9be6-db08bb8e77d4",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "37bb91bb-96f2-4f40-ac66-dc96c19fb4cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c62207-e88a-4991-83e2-e7fa4caa1a02",
        "cursor": {
          "ref": "dbda2c5d-96f5-44b7-bbfe-d1ead03a92e0",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "2317e5a4-4107-459a-81d6-f993a84e3501"
        },
        "item": {
          "id": "92c62207-e88a-4991-83e2-e7fa4caa1a02",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8363e1c8-bbdb-4107-b94e-7c4fbd227560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd627cb-292d-4c66-b5e8-05673be90ea2",
        "cursor": {
          "ref": "9458ac02-5eac-421f-ada0-05097adc0dcd",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a1a28f8c-3173-48ab-874e-686396bd9415"
        },
        "item": {
          "id": "3dd627cb-292d-4c66-b5e8-05673be90ea2",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a06ee265-9f6d-45ac-bcb9-19934b50134c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e045645-c584-4a4c-b07f-5a84dcedefa1",
        "cursor": {
          "ref": "e0c73348-b627-4cc9-b418-9d81c5526270",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f293075d-fe9a-4a53-8d0e-5e7a054f0381"
        },
        "item": {
          "id": "7e045645-c584-4a4c-b07f-5a84dcedefa1",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3b34605c-7a5c-4659-91f4-8246bc1b3b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5e126d-ba9a-4258-b199-2ea922902a9a",
        "cursor": {
          "ref": "8f9a4299-ea11-4080-9950-23e99e2b0cb6",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "da26bf63-823d-45e2-aa89-3e10cd614214"
        },
        "item": {
          "id": "af5e126d-ba9a-4258-b199-2ea922902a9a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f34f6d4e-8d25-482a-b434-08d8e0291c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2cdeb0-0265-4ff0-ae70-5839e86458cd",
        "cursor": {
          "ref": "775affc2-a659-46ea-aeb3-86fa9cecd1ad",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6f9e752a-dbe4-45c6-9061-95855c8be8b3"
        },
        "item": {
          "id": "2c2cdeb0-0265-4ff0-ae70-5839e86458cd",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "36ce0630-2e2f-4eea-bf34-1c4cf007c9c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c7fae6f-21e8-4a8f-b6fd-d13620056f1f",
        "cursor": {
          "ref": "51a8eae3-a6fa-4559-9af7-52f6cc205af3",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "bf40944c-15bd-4d9f-8933-74a722b88ef1"
        },
        "item": {
          "id": "7c7fae6f-21e8-4a8f-b6fd-d13620056f1f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e10003c5-89f8-4a24-9093-fd3b0b132087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9501c018-54b4-4c36-b164-6b432b5ac19c",
        "cursor": {
          "ref": "59643d30-d1db-4c2a-bbac-c9da1ac15115",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "beb4b011-2416-4521-be4b-d2268bfa9902"
        },
        "item": {
          "id": "9501c018-54b4-4c36-b164-6b432b5ac19c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "bba2af64-eb89-45f9-b2c8-ecfa362b184c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a208ad64-a828-44bc-9a94-7e45446ca20a",
        "cursor": {
          "ref": "7659168f-e5c9-4683-8927-6839ecf6f280",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "2cff3b46-43fe-40e6-af6c-44d6acd30d3c"
        },
        "item": {
          "id": "a208ad64-a828-44bc-9a94-7e45446ca20a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "be4be669-2b1e-4221-b50b-8a4ff4c3920e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e06593-963a-4231-a303-447b2f8373f5",
        "cursor": {
          "ref": "9c5f0764-d59b-4802-b1af-af6683bca7ff",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "9444d53f-9571-4b20-9c98-8556065b6491"
        },
        "item": {
          "id": "c4e06593-963a-4231-a303-447b2f8373f5",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e4264e30-31bb-4b06-a267-2ff4f2b73398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a02f9d8-b5fa-41ed-b5f5-8bf60d5cc62d",
        "cursor": {
          "ref": "ea8cee2f-740a-44ef-aef8-1db679e4f958",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "fec37b50-46e7-4e29-bd6c-883ef423e88b"
        },
        "item": {
          "id": "7a02f9d8-b5fa-41ed-b5f5-8bf60d5cc62d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "9399758f-e627-429e-858f-7c7f4d39c64e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d1d82c4-693d-46d2-ad43-0f1ed3a5a62a",
        "cursor": {
          "ref": "3ee5b803-c73a-4cd4-867b-7039c037cd2b",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "cdd30029-4d19-40bd-a3e6-d392929213ad"
        },
        "item": {
          "id": "0d1d82c4-693d-46d2-ad43-0f1ed3a5a62a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "431cb153-7baf-435c-a518-e252fe3d97c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc27258-f2e3-468f-9edb-c2dfdebc2f09",
        "cursor": {
          "ref": "9cb9877a-ede3-4d44-9d08-f190e4b12801",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5e7c9d2c-c86c-448d-8cec-d3fa023ee258"
        },
        "item": {
          "id": "0dc27258-f2e3-468f-9edb-c2dfdebc2f09",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "fee5ac23-1a41-4774-ab29-09c5b7805fc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc96fde0-8900-44c8-9d19-065f958c545d",
        "cursor": {
          "ref": "b1ce057e-bd7c-4626-be6b-69ee02861fbf",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "bf3a11ea-7577-43de-b260-7d4a04cf1530"
        },
        "item": {
          "id": "cc96fde0-8900-44c8-9d19-065f958c545d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a20b76d4-ab2c-4188-aa2a-cc8a7a626176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b8b354-296b-42b3-9990-43c5c6b936db",
        "cursor": {
          "ref": "e47d0916-d9a7-4718-98e9-3a64766fcbcb",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "33b7c984-60c0-46de-885c-136eb026bad6"
        },
        "item": {
          "id": "d1b8b354-296b-42b3-9990-43c5c6b936db",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0f6affff-2bcd-4bc6-a347-a293514ca3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6772d4ba-a539-4596-acee-aab31c239697",
        "cursor": {
          "ref": "8244049a-92a6-4329-9f30-859b4fff41e6",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "eee257c6-7fe1-4225-b98f-39c8ec66d8b2"
        },
        "item": {
          "id": "6772d4ba-a539-4596-acee-aab31c239697",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "76eeeeae-ac07-4297-8cf1-47775423bc5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f744352-cc98-47e7-ae1f-25d8793e8694",
        "cursor": {
          "ref": "cc00bf37-f25b-457f-ae26-b797ca07bbf7",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "cc1369b8-fb02-45aa-95fb-f0f8bcbd92e5"
        },
        "item": {
          "id": "6f744352-cc98-47e7-ae1f-25d8793e8694",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b1f39124-6262-4dd2-a8ae-3bb14680e953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a22bac6b-a1e4-4412-8f1d-50b9a9bf800d",
        "cursor": {
          "ref": "262974b1-be65-45ee-b399-25c154ff29aa",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "50c044ea-b6d3-4302-842b-a754ff36e5b4"
        },
        "item": {
          "id": "a22bac6b-a1e4-4412-8f1d-50b9a9bf800d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "03151ba0-5d5e-4b1b-bda1-351f347608be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9504a32-370f-447f-9194-3fcd42e5fe4f",
        "cursor": {
          "ref": "bd98b2ca-c096-4ba8-8209-94a34afd02a6",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "57cf1d22-2575-4133-bd07-922d096ef9d0"
        },
        "item": {
          "id": "e9504a32-370f-447f-9194-3fcd42e5fe4f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f60279ad-1a29-4eb6-9820-5da94d1b1ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d9c036-64ba-4b65-a14e-78e10cb9a116",
        "cursor": {
          "ref": "c632268b-e904-4a2c-bc0a-630e9d5aca34",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3072f90f-4fe7-4eaa-904c-2d66ffad7087"
        },
        "item": {
          "id": "46d9c036-64ba-4b65-a14e-78e10cb9a116",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2ce46369-354b-4076-b7a4-11b793202f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc0f624-5879-4c89-b32b-3477f3dbcccb",
        "cursor": {
          "ref": "bb8ea727-b280-4258-988f-893fcea74644",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ebf62912-5dcf-47eb-b353-33d9c7949edc"
        },
        "item": {
          "id": "8dc0f624-5879-4c89-b32b-3477f3dbcccb",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "5fe7f824-dfc1-4d95-9bf7-f1b3685065b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec07ca8-e294-4070-8039-853539b2a563",
        "cursor": {
          "ref": "bd2dfb85-bfe0-4760-ba27-09c4aeeeaf8c",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8f318c7a-8f04-47a3-b3ca-530b2f3ccd74"
        },
        "item": {
          "id": "9ec07ca8-e294-4070-8039-853539b2a563",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b3b34f34-f368-4ec3-97bd-52ad17f5ad80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b4bacd-d464-4d41-b820-13b6a6fee9f8",
        "cursor": {
          "ref": "834623dc-83b9-4c61-8bd3-1b9e692bf98f",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "81242a2a-ba94-481a-9e41-4eca3f61140f"
        },
        "item": {
          "id": "d5b4bacd-d464-4d41-b820-13b6a6fee9f8",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a59a86c2-6a9f-40ed-a720-513cd92f9b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0de980-9e55-41a6-b351-629571270c9f",
        "cursor": {
          "ref": "4e1dfafd-f62f-4894-8155-c1904d6f4121",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "be7830ab-6007-46c5-a51d-90a7a5e5f145"
        },
        "item": {
          "id": "dd0de980-9e55-41a6-b351-629571270c9f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "74a75eb5-0db6-4f4c-971f-7cf887b9fd8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c7bdd22-d541-4a23-90cc-6d06f817a889",
        "cursor": {
          "ref": "924648c6-44bf-411f-a379-8fefa2b54915",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "1c35c0df-e140-4302-be4b-f03e4635f21b"
        },
        "item": {
          "id": "8c7bdd22-d541-4a23-90cc-6d06f817a889",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "fa4c0d23-5c9d-4f95-ad6d-40b8643b0ebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb538cd4-0777-44f9-8c87-3d738a095616",
        "cursor": {
          "ref": "5457f220-437a-44c5-8b86-6c02a9836d9b",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ae9fc0a7-2f97-4042-8aae-39993ba4fa26"
        },
        "item": {
          "id": "bb538cd4-0777-44f9-8c87-3d738a095616",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "32c7e4f9-6d79-4f6f-937b-da86575222a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69428014-d7d7-423c-9e22-79dcdbd974a6",
        "cursor": {
          "ref": "b7383a6c-c6d1-4c1c-a55f-7d4fe7eee56e",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b6a1b3d3-b58a-485d-886b-4e5f929353ed"
        },
        "item": {
          "id": "69428014-d7d7-423c-9e22-79dcdbd974a6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "91cc2151-6e0a-431a-90f7-f725d1d85f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "958c05f1-9b94-489f-86a2-3446fcf97481",
        "cursor": {
          "ref": "7ddceba2-c537-401d-a4aa-ef84bbe365bc",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "bb5671b1-3568-4748-a585-5aba9378810f"
        },
        "item": {
          "id": "958c05f1-9b94-489f-86a2-3446fcf97481",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "009532a0-7069-4374-acd3-8482831fb541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b5298aa-6110-4862-b018-2d8854100302",
        "cursor": {
          "ref": "d196ea19-b394-4144-8041-1d931dbd1915",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "057721e6-f540-4d53-9813-0c7134e78ff5"
        },
        "item": {
          "id": "2b5298aa-6110-4862-b018-2d8854100302",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5d64b5f1-4609-4366-9275-6b21be6f7ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f59683-2643-45ac-ac64-1ff4798eec7b",
        "cursor": {
          "ref": "da3b51df-248b-4578-a530-b84c6e32db3f",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "720cd8fe-1f02-4eb6-a8a7-f18b19cfe40c"
        },
        "item": {
          "id": "f2f59683-2643-45ac-ac64-1ff4798eec7b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f7bc9276-5f7c-4188-9278-ba567dcab4a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24af2239-9bbd-40cd-a38b-bc53972259a1",
        "cursor": {
          "ref": "ff06a0ff-c7f3-4abd-a249-f348d83d9f21",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "23b32996-120f-4246-a669-7a277a07b1ec"
        },
        "item": {
          "id": "24af2239-9bbd-40cd-a38b-bc53972259a1",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "445258eb-e900-46f4-99d4-b766b37cdeca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a624c4f3-62ae-4fb8-a6de-1371cb3a2ab8",
        "cursor": {
          "ref": "a90b966a-1499-44ca-ae56-763ce957aeac",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ef0034b2-7327-4da6-94e2-34a477e77175"
        },
        "item": {
          "id": "a624c4f3-62ae-4fb8-a6de-1371cb3a2ab8",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "52a43748-0ba0-4fac-a3dd-dbba3f80d69a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0ff8d7-3b6a-45bc-b8a9-12eb48bc9e20",
        "cursor": {
          "ref": "c61d74df-08a3-4b7a-ac48-b5a7e2e3de79",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f97ec8a2-03f8-41d1-9814-b82549ef00e8"
        },
        "item": {
          "id": "1a0ff8d7-3b6a-45bc-b8a9-12eb48bc9e20",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "3bf3db3d-db4d-4ca4-a48f-89304caf44c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43371ce8-8c7c-4c11-ade5-d84267521ae9",
        "cursor": {
          "ref": "c7698869-dd74-4989-ba8c-72e629a8cbce",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6f37e34f-4272-4789-b13e-78311b842bc6"
        },
        "item": {
          "id": "43371ce8-8c7c-4c11-ade5-d84267521ae9",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7a3bf6e4-6d34-4a05-908f-58fa559165f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6160b03a-ade9-4d7e-ba70-e9c55762d1bf",
        "cursor": {
          "ref": "dd246c09-22d8-4b03-994e-12f1ddc064e9",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "af6c236f-0ee9-4790-b62f-be1b46085403"
        },
        "item": {
          "id": "6160b03a-ade9-4d7e-ba70-e9c55762d1bf",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "db59600d-509a-45a0-828b-53cc861442b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3a4b6b-3c22-45d9-b6b2-5fc153ad3fc5",
        "cursor": {
          "ref": "129fa1b1-0a3d-4042-9716-97ef98d1392e",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a19b4a96-91dd-4993-b413-e3c6e9430598"
        },
        "item": {
          "id": "0d3a4b6b-3c22-45d9-b6b2-5fc153ad3fc5",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b31ea490-96ea-4e64-b675-dd1226415b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217920c2-e32d-4ad5-9c9e-c8287212eb0e",
        "cursor": {
          "ref": "5595b9f9-caf9-42a3-af70-ec7feede1260",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "be134c38-8c31-4978-91f2-89b60250454f"
        },
        "item": {
          "id": "217920c2-e32d-4ad5-9c9e-c8287212eb0e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "5b1888d1-7709-4744-9e3f-6435c0e2a56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac37193-ebe5-483b-950e-2d16fca4f9ad",
        "cursor": {
          "ref": "0ec4e9e8-d755-42c2-8ad2-f085aa272b8d",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7bfc9c37-620a-472e-a408-78020652e9e3"
        },
        "item": {
          "id": "aac37193-ebe5-483b-950e-2d16fca4f9ad",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "36f5aae6-3048-4489-a7c8-46b04b3dac9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf57460-c06e-440e-ad8d-8220adce0952",
        "cursor": {
          "ref": "2ae93a40-4e85-4803-b4ea-9dd94fa91f9f",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e0a657d4-daa2-47aa-adbc-c755f1eaeab6"
        },
        "item": {
          "id": "7cf57460-c06e-440e-ad8d-8220adce0952",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3ac0949c-e8d4-43d9-86ee-695695fb75fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91fd4b70-160e-473c-abfd-3fe794ebb8ae",
        "cursor": {
          "ref": "362f1c51-0417-4a96-9dcc-f83fc05ed03b",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "05158495-03f7-4f6d-ab1a-a7a91e60cefe"
        },
        "item": {
          "id": "91fd4b70-160e-473c-abfd-3fe794ebb8ae",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "784e5883-c2b0-4b77-ac3f-3e8851564866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e6b675-de64-4e65-9d24-861cad7fa708",
        "cursor": {
          "ref": "cdf94004-3a3c-4fa2-b00b-22f9cadc2e48",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ff6ed724-f46f-4806-9088-a337018d6d1f"
        },
        "item": {
          "id": "19e6b675-de64-4e65-9d24-861cad7fa708",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "16feb326-84ee-466e-9c81-87f8acfa42fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212a007c-e45d-4b36-baca-03134f4fbf58",
        "cursor": {
          "ref": "d1681869-25c9-4460-aede-e92c97e56592",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4ef89ba8-0897-46ee-94b9-f81df2c78358"
        },
        "item": {
          "id": "212a007c-e45d-4b36-baca-03134f4fbf58",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c22080f8-510a-4217-b87f-c6000d561e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77de3de8-933b-4d99-b7ad-09f467d9ac1f",
        "cursor": {
          "ref": "c49b74df-382c-4999-b1db-bb5980d18119",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e2562510-9a09-424d-af74-0fad5945c99f"
        },
        "item": {
          "id": "77de3de8-933b-4d99-b7ad-09f467d9ac1f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e0098c4c-9ee9-407c-9ac3-7a76d1041b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b6e222-52dd-491a-883a-72eef5438693",
        "cursor": {
          "ref": "344fd4e9-7c55-4383-af28-e49a440daf0f",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "bc5d9b1f-cef7-40a3-843c-bcbae368654c"
        },
        "item": {
          "id": "f1b6e222-52dd-491a-883a-72eef5438693",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "bc45eb93-7481-4660-a978-ca4b483b8a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e10558-a8a1-441d-8d50-a0e3e7d1e221",
        "cursor": {
          "ref": "c7fd0ab0-d3d8-40dd-a8ac-d7a4c82d5f9d",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "0e463944-2621-44f6-82fb-776850338d17"
        },
        "item": {
          "id": "44e10558-a8a1-441d-8d50-a0e3e7d1e221",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "92bdccf8-2f3d-47fe-b472-d41619e1f8c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074f38dc-6206-43a4-ac46-2e52ee1493a2",
        "cursor": {
          "ref": "367f0fe5-66d9-4a20-8ba6-6b11f6918e94",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "00c6ff0d-295c-4fe1-8edf-169b89ee963e"
        },
        "item": {
          "id": "074f38dc-6206-43a4-ac46-2e52ee1493a2",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "22c7379f-9aaa-4e03-9d8a-6204ebb2dc4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e40d5c20-4c16-4f68-a779-edd82a361c56",
        "cursor": {
          "ref": "8c281d71-af84-4c94-965f-537530280826",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "14c75ed0-4cab-4e15-ab5b-bb108a55785b"
        },
        "item": {
          "id": "e40d5c20-4c16-4f68-a779-edd82a361c56",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e4378b3a-eb86-4491-a46a-7d07a2f96d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b5331f0-b1dc-4fb2-85f3-842e3108b834",
        "cursor": {
          "ref": "fb8df302-5d2b-48fc-bf27-b41bc7a53174",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c1625d5e-2ec5-48f0-adc4-028889df5c7e"
        },
        "item": {
          "id": "0b5331f0-b1dc-4fb2-85f3-842e3108b834",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "89aaff7c-9270-4541-9fdf-a113b5333ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca930edc-c0e1-4416-8f06-d0fed865f446",
        "cursor": {
          "ref": "4d22eb55-1d1f-43bc-bfba-0ab69d4f5777",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0ee815ac-519b-4775-be97-5f9d4a57a25c"
        },
        "item": {
          "id": "ca930edc-c0e1-4416-8f06-d0fed865f446",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7aef74bb-b7ec-4472-8933-3451589307d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bbfdb72-aa99-453b-aa48-a9fce52fa491",
        "cursor": {
          "ref": "64d81d78-bb3f-40f6-bea9-82158bebf11f",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e7da34ac-584b-4c16-88b2-2ddb66cbef7b"
        },
        "item": {
          "id": "3bbfdb72-aa99-453b-aa48-a9fce52fa491",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "beca9930-93a5-4479-8773-0c362be8fb17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1116ec1-7d94-4efd-8e1b-89495dec6402",
        "cursor": {
          "ref": "ac1c7857-4d9c-4726-a206-28fbe075da9e",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c4c44bc7-3e9b-4c31-9d03-e88be7d536ad"
        },
        "item": {
          "id": "d1116ec1-7d94-4efd-8e1b-89495dec6402",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f4d06071-5940-4649-9a6c-0201985f8e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "426a4118-148a-4d1b-b70f-3814b877eabe",
        "cursor": {
          "ref": "46c8bcb7-5233-4100-a428-f1f4e627f3a2",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "37f6ac4c-74c0-4f04-ad47-1665059d94f7"
        },
        "item": {
          "id": "426a4118-148a-4d1b-b70f-3814b877eabe",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "56e831ff-a974-4b54-be3b-b58d35571e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847f22e4-7e08-4433-aec3-a4d391f5bec7",
        "cursor": {
          "ref": "7e931aa2-39c3-484e-bd1b-5f23e9bea124",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "2a914356-eee5-48f9-9939-aeec3dc80fbd"
        },
        "item": {
          "id": "847f22e4-7e08-4433-aec3-a4d391f5bec7",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0bbf5d51-57eb-44e9-aefd-66ec4a609284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ceeae65-d8d6-4142-b0bf-9dbe0dbdae30",
        "cursor": {
          "ref": "c74c1b50-7bb3-4bc5-bace-0aa43c990643",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "34239b41-d638-4875-aa37-379cb4abfd6b"
        },
        "item": {
          "id": "1ceeae65-d8d6-4142-b0bf-9dbe0dbdae30",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "aa8dca72-2294-4980-86ec-c84f25bdf7ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab67483-4dd7-46b6-b804-09f1e010894c",
        "cursor": {
          "ref": "7b81d3c6-1ec3-4c2d-a2ac-15cc73664f29",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "14ffb689-6827-4272-9c0d-dffb670afa64"
        },
        "item": {
          "id": "8ab67483-4dd7-46b6-b804-09f1e010894c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9a920aa5-10e0-4ef5-a1e1-955dfe3ddd98",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb326c6-9b2a-4ebf-909e-6b7e838f5675",
        "cursor": {
          "ref": "fce8e481-14e1-4846-b60c-e763e54af9b6",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "586dbf98-4aad-4af7-b9c8-9c4d2c9e337d"
        },
        "item": {
          "id": "deb326c6-9b2a-4ebf-909e-6b7e838f5675",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e7998065-07c4-4a78-82b2-9c8342d81ec6",
          "status": "OK",
          "code": 200,
          "responseTime": 2334,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "31225b35-81ff-4cce-b62a-1c6950ab5351",
        "cursor": {
          "ref": "8fede2bf-90fc-48f1-a268-b399891df889",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "edcf29f7-eded-4db2-87d4-28ebce3e9463"
        },
        "item": {
          "id": "31225b35-81ff-4cce-b62a-1c6950ab5351",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6768ea83-2610-4304-8493-8c4b6e67352b",
          "status": "OK",
          "code": 200,
          "responseTime": 3233,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb980b3-4947-4971-97cc-e9bdc2f8e79f",
        "cursor": {
          "ref": "264623af-de65-41de-8105-c02248f32cba",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f1351125-f225-4884-ac64-50f7edb3847f"
        },
        "item": {
          "id": "7bb980b3-4947-4971-97cc-e9bdc2f8e79f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3179899b-ff4d-49b4-beab-0b4fc194d16d",
          "status": "OK",
          "code": 200,
          "responseTime": 3069,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5143f529-41b2-40fc-adf4-8af99df9d463",
        "cursor": {
          "ref": "30096fd5-4a5c-4209-a5de-2dcb54eae3cc",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e587d324-03c7-4437-b4f4-a763fed33573"
        },
        "item": {
          "id": "5143f529-41b2-40fc-adf4-8af99df9d463",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "39114b7b-1daf-4997-a5cc-846396640cd4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5143f529-41b2-40fc-adf4-8af99df9d463",
        "cursor": {
          "ref": "30096fd5-4a5c-4209-a5de-2dcb54eae3cc",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e587d324-03c7-4437-b4f4-a763fed33573"
        },
        "item": {
          "id": "5143f529-41b2-40fc-adf4-8af99df9d463",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "39114b7b-1daf-4997-a5cc-846396640cd4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1481db33-940e-4c62-b0d7-08f899696f54",
        "cursor": {
          "ref": "60db90d8-1353-4b0e-98da-f318b974d020",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a22dd2ba-e8aa-49f0-a710-598696a88e01"
        },
        "item": {
          "id": "1481db33-940e-4c62-b0d7-08f899696f54",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "78217a71-9c07-461d-afb2-24aec2c6cd34",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab26570-db4f-4d77-8c7c-f419ae493b00",
        "cursor": {
          "ref": "791c71c6-d997-47a1-98aa-de7d41e75ff6",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ef6a48ac-cb28-435d-a4fe-49f44fd7d2fb"
        },
        "item": {
          "id": "cab26570-db4f-4d77-8c7c-f419ae493b00",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "11df2bf2-971a-4142-81fd-3b8ff6c53cbc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}