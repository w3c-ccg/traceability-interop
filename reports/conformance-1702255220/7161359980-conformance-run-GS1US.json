{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e008af07-94fb-47fa-9115-f8ce3cdf7afa",
        "name": "Clear Cache",
        "item": [
          {
            "id": "19559cdf-8772-4623-a763-65b9a22fffd3",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ed3d0f8e-5527-49e6-bede-edbebbc801ed",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "77f9e928-a0b4-4790-bee0-be03d16e74a9"
                }
              }
            ]
          },
          {
            "id": "d1238a48-e448-4233-b15b-363272d99cb5",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b5ac712d-111b-493a-94d9-a4248cf9dc42",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "07c76283-b04b-447f-bd69-03e9b4cbefad"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "72fb9fae-56ed-4a9d-ad9d-53f5a7f86c77",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "25377e7d-0745-41ed-ae8d-85ac3de2ca9f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6def9413-3476-4bf5-a9f6-fe4246692306",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8de979d-5b3c-490b-aa58-be86a78ed331",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e637c239-d98a-41ca-b9d6-483b943348b3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6d6af764-1ea0-4273-860f-f6049de7267c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "78d454ab-606c-4d4b-b50a-8be88e114501"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "aa31376a-ea19-4b89-b42e-05d5739e2fe5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d2f53222-da85-4c48-b3f7-93116047d5fa"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fdee9943-4653-4939-a92d-73f301832506",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "81384d0e-457b-44ca-9baa-68e56b3559d9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0e853f37-f595-4e61-bb71-a5d83b7ae399",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b5deaa7d-e15a-4ef7-9ea1-f6178da0f52e"
            }
          }
        ]
      },
      {
        "id": "52789173-9176-46ab-b833-c015f1e85aa0",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c66381c1-53ca-4b96-be7f-5b1418d95252",
            "name": "Negative Testing",
            "item": [
              {
                "id": "abee7b73-af79-4d17-baa4-112f03de444f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e64eca31-f0a0-44af-81dd-ff52da5bd54c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3880275c-c03a-4c42-b0ae-d3553ce086e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9490823a-77a2-4e6f-a59c-a1d7d9f3f94b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2806271-97c0-446d-8cb1-cc8c9533137e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50435989-0fb3-4571-91a3-5e9276ca23ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ab44248-ce83-417a-9452-5b90f9e6c406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed3f2519-7c8a-4e94-acf8-85b5eb6244db",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d552bd3-a37a-4ac2-a488-1c4b7de7615a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "28b7d7d9-9f4e-4570-aa39-6fa05308632d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "86cbed8b-28f6-48ce-96ba-2d6833930673",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b9e8a222-b60d-492d-b8c7-bbf9b84fff6b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5496e95-3923-4543-a832-79c6fd9c8f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e2b84628-2fff-4956-a844-2731396c3032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0defc2d-8391-4ef9-a0d9-557ec6fb2165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd99f5ff-b392-4390-8839-e16a2665f232"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8a678683-7350-477f-8909-3b0e8cd5a4ef",
            "name": "Positive Testing",
            "item": [
              {
                "id": "01eded17-7d84-4847-8ac4-e54297b85f99",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2c8d3ca-8917-4d00-8320-5b421b1cbf44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "08d1c190-4937-462c-85e8-272a3a2e350d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c985380f-1646-45c4-a6a8-48d96d7b2914",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "2b5fe828-5a13-4660-9d70-765584f3a52a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7d94cf21-12ad-4565-98ff-88f3e5b59795",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eb8b176b-e2e0-4e28-9003-5d2980c0ea28"
            }
          }
        ]
      },
      {
        "id": "ac9a0c55-3437-421f-b640-fe1c8ed71f20",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "29e49c6d-102b-4279-9ae8-1c36f4843159",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cfc6c6a4-3a01-412d-a9c2-4f03f52835b7",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "37ce4dd6-7a8c-4e80-be8b-33ee7f8aac1e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee70b580-09f2-4644-9e92-de0a427475fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16e87213-773c-4f79-9392-f7cb0a5038a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d46b12e5-bbcd-468e-8670-b72fdccfecea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17af1668-90b2-4ecd-af2d-a5f2670558ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae37c36-6a10-4c17-ab20-97930d689372",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e8d5df-09aa-45d5-8a02-312eaea31141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5c81c27-3897-437f-9210-4ddc8dccdd93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "198c052a-0833-488f-bb84-7d9379a79c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "698c638b-0f28-4ef5-8853-a2971c30a84d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c3ca29-1aad-4adf-8c4f-e5405bcdfe14",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22471f12-9bdb-466e-a5c3-985fab03557e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a16c0a5c-81be-48d2-b416-e8dfb5b692d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c3f925-1235-4b2a-ba5d-f286cd765319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b15b52e3-f2d2-43b0-aadb-c207249d5a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4db46ac-5358-4999-842b-adffc1197518",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b7cc92-7c66-4cdd-8959-69ee0d6b1df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f1706ca-f88b-42ae-82e0-a42a75c30759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e2010d-d961-42de-a209-34cfe6f9d447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24ba5980-f58f-4620-a65f-4c5485d5ffdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f0b4d6-6f15-4554-8e9e-adbd3b09deeb",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5663c0dd-f7c3-433a-a292-07c91fd10843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34394e2a-87de-4cd1-902b-e9975714d88c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a73283dc-a9a7-4ded-8822-29bd93b9e9b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e75ce18c-a3d8-430b-909e-f5a0bd42beb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb21259-ad32-4322-a5e4-d0549614a529",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e77a2af-df4f-4560-af43-df90fbed34f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bc03c6c-b440-42bc-a99f-603622c22753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ba53c1-1f40-4efb-aa02-893ac346551e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6e587991-c8e3-477a-92b8-416ac47ccf81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f0034c-4b81-4d47-958c-2bea8d7c5ccf",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01bb8bf5-7fdb-4822-997c-df6256b63fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeb343fc-bab0-419a-a28e-6c3c2a9d36bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c512feba-ebe5-4dfd-bcb3-ff78d66dc9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd3345c2-a629-424f-9698-fae630dddda0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d17f184f-e574-4c3e-84c7-dc164f6ea9ea",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec142f7-9722-4c64-9131-09de5e1a1fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d223676d-05e3-4922-bb2b-aa4d5b9f59b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26caf2c7-18fc-49df-931d-cc85dbc1e688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6749f092-4ca7-4f4c-988b-123a0cfde491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7959ea84-ddbf-435b-8351-7120dfc4965c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caeb25ff-ed2a-4fbc-b98c-6e634b634083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aec410d0-a4b6-43c2-a40c-72478e68b6a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c887c9-bc91-48dd-becd-383ec1f973f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c60b7b1-d1ed-4cdc-afeb-a34455c0edb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0adef821-dd8b-4416-bca6-ca073e2527e0",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b97866d-bd26-4a63-ae3c-8b48f3739177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "839b3399-3416-4ce3-86cf-588c010f9e34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b34988-3096-47c7-93d9-4ef24339100c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96f76b44-7c4e-4107-a0a7-7023313780f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70245040-74d0-42ad-aab2-5c990039590a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d257050-8be0-4891-9058-f08572dc4067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bde685b9-c733-4e99-857f-58435faa78f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd15326-f668-45e7-ab09-8214706a5f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f24838b-56ab-405b-a923-c8fe595b6336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6904faa-2756-48d8-973d-481c1e771ff1",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a65b51-8e41-4dfb-9a47-eb7f584595c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c40b0a7-95d9-4159-8f6e-2d0f2ba85317"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea51a2a9-1ae5-4781-b09c-93f1b57f17b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a80e1518-dc6d-44ee-bd71-703f13e46357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc88e8f9-4bec-4602-9bb6-8389e9d4ab66",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd141528-6d17-4968-aadc-5088d7ed1fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5213d23-65bb-413c-9922-2dd23e9e1b03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f62ea9-21d9-4913-b8ff-989a8ab5245e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad4afb76-17e2-4210-b75a-7e8c980293f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ddf698b-3bc9-40db-8615-639c85321978",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5d7376-e23d-473e-b89c-3e0bcc19bda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8584e483-f386-447d-a9d2-5ffcaf21110f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b8bb70a-b0da-4eee-887f-24fb0c64275e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d73a7ddb-a69b-42fe-b16a-49c8a60c275a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03cf6cf0-c3e8-4490-8b06-7944a51c3c98",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63367349-4089-4a39-ab8d-6393be9c2144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4758760a-47d5-4fe2-82ad-72a1b35874bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b589c187-421b-4756-98f1-cd9c4d8448ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae039c91-d3d2-459d-8365-42647daf51ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de5dedea-cde9-49c6-beb4-5d19ecea5b17",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94065c34-934b-4378-bd1a-1ab61c7a992b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29ba6a61-8e09-457a-8ac0-aea957a0d77e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb11a731-fc6a-4f77-8770-fd5eeadedc58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5fad035d-2c2c-4dfe-873a-990da5f494f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e50b7f-591e-4957-a18f-a6ff086ce417",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b89ed696-e45c-4544-96d5-1b5bb7a7c1a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f00bf662-9916-469a-97a1-34303d466151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd3467ea-86bd-4d81-b544-42a24aa1b473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "274a8e22-2291-49a6-9299-c837e82eebc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbbf5ae4-4340-4599-a703-accb28808b94",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e88bae-709d-4890-a406-0c8470413a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8015d643-aa30-4279-bd0b-2a5fff6d5845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3edbad95-00e8-48e5-9e94-75d749aa9869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fab3d55-777c-4982-8637-2e218c27cded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e649b1-2cf2-4a9a-adcb-bd1cd0dc8440",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7a51ff-31d0-49ef-9512-7ca6953bdd3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2db22a25-2318-41e9-b4a4-e04ef6b6c0d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a639b743-428f-412e-b9a6-ff513acbd28f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c788bcc-e11e-4ab1-92c9-ebcd2ee66dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b1347cd-bfbc-4efb-a8c2-95bd61d2065c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70d6331-c0df-4dae-bf2f-0bde366d8ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b51cd9a1-cf16-43ca-9317-0b4d86ef3aeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "583382d2-c73e-4e88-9a89-38b929da1c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "94e5f2a3-d8b6-4d59-a86e-92b304c5fdd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23cca48e-83f9-4a8c-84a0-0f5f87ca6e93",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4baa25-5635-4fea-a1db-f18d77675c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3086f6c0-8f72-4909-bdf5-dfde481794e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c58a8c67-75ed-4657-a7e9-5954f8775fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0ac0200-9e5c-4335-bdd4-c7b0677b2330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d80737c1-5833-4748-b1ce-4565ca736847",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75175951-4d6b-4343-bb82-3d5c3edc7f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0556be14-59e8-4f5c-ac02-9576cf009a83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e47816-09d4-4ad6-a944-af7becbb6fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e987c42d-5bfd-489f-8db1-9b7943310150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b89fa0-4a76-4958-a2e8-53fcf152a64f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41fa6dd7-f5f7-4100-8169-32487bf23963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84e34300-f9b2-41e3-9c97-8d4846c9fe46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a6622a-9810-402f-8bed-1132d80f7dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3bcdfcdd-ddf1-4104-a844-9fc0a9234bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b65a1249-51ce-4dcf-81ae-cd84f20d0672",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c6bbf79-64e1-4c79-b7f2-8ddf83ecb406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14e37ccb-c267-4c3c-8859-6952faf04de1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed4bf765-df1b-47ff-98c8-7a4a473e5437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b223fa5-82bf-40ee-8e37-00fa2f0eabc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa2a1082-8b2c-4d9d-92fc-e08e4ddd61a5",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30bd7bab-84cb-4d9f-ba7b-107fcee36888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9e521c9-53f6-4b37-9f8f-b11b8d6f62d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7790c1-67d8-48d7-93d1-a35b1a50bc3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8e49dcc-21fd-49d1-9424-6dbce5c41527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40c3c875-522e-4064-9699-27af5f52eb05",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acbb5e5c-0ef4-44f8-a6b0-42885c39ac44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46eb9567-fc92-4d05-8654-56bc03c20d9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e1f0833-8ab5-431f-8ab9-5fb40e57fa4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5447c745-f97f-432b-b255-c2890c107353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcaaf077-241f-43ea-8423-84765710ae34",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b737901d-4116-4ead-b943-45cf261377f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a8bf9ac-caf5-4645-824c-4dc8268062ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ffbc039-98e0-4c13-8821-a35bc1f23e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c2cd9bf-eba5-4141-b914-a01ae6d8d780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "522e2088-2605-4730-893b-cb7e30b669a3",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a531913-36a4-4425-b6a3-df59f3eb43c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df886cef-40b0-42b5-9134-f1c14cb2fe89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a228d2-977c-445e-bfa7-fee68b2e2973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "638c029a-2c81-45c2-9c6c-77bc2e23c698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00edbc8e-41ea-4961-94cc-82d51f58ab73",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b2e5ec-fe4c-4b60-a093-96f70bb8c51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "323b3456-d58d-4f64-ac5c-42fc40b389cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b7534a-7377-46fb-9e72-42e473019d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ceae9072-3458-416c-a37d-0a40a14ad117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd24e99b-1fa1-429c-ac1e-3e2338d01d56",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "169a1723-d51b-4f19-9876-61ddb106221a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d59bdc9e-0d20-4989-bd34-0377175ba5b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d627ea-3492-4220-9825-1ef58067de9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d72427ca-3856-49b5-a04d-b1a2e1dee527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e4e511-19c5-459c-99ad-8887d650080c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e71fa3ea-8cec-4321-941f-244d4658f354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21cf2843-872e-4721-81dc-821e4633695a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c716013d-1c36-4769-818c-54548bf6b878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ce71689-52c9-4ea9-9a49-33b6e5f564e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59736e41-c2f0-457f-b52d-d99dc503cd6d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d47a940-aa29-41de-8fe0-b8e898f488f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d88f8a33-85df-416c-84cb-bb94e916deb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f40988eb-a631-450a-bd6a-3821ef8008c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b7524b8-2926-41ea-8217-9b01c94c1204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a58894f1-0926-46a9-a1d5-9f0efef02829",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "214c6476-ec01-4c46-83e7-28bd145169a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30ac1a00-031d-41ba-92d1-c181638d375a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5628467f-7508-46b5-82e6-f412bf7ef6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a47365aa-a799-4a80-92e9-88aef97bc58d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c7e56a4-a0ae-4db1-a4e8-e5ba9e8d52ce",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a119e5b-c739-4ce7-8bfc-4fc5e79ed3af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f76a9fd-0c6e-47c5-ac59-bc197a40d456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86ccc53-0cd1-4e13-9c4b-305079ac5581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f8ab81d-4007-4cf8-ae52-07abbdf59ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d4b22d-6bbf-43da-96c3-1ed8df6a5f84",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df4b56e-b7bb-4c26-a0ff-e0c3f44aebf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c7ded2f-73df-4a2f-b021-0fc48eaa4955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a02ed6-b917-4deb-a02f-6a09c5c33474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "516f323c-7705-494b-8b61-58f80762bc62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46660ea6-3d2b-4442-851a-599b588e36d7",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe6ea42-115f-480d-825d-843ebc5f10bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9448a66f-ab5d-42e0-9db4-cd140d714c75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff66003-7114-453f-877a-9d2c749238c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8ad9179b-3ee7-4e56-8f1f-5fe5a9024ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b923933-1465-4c7e-bd6c-cc4074cda92d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f27c245d-b502-46ec-a945-d9b9b1bab19c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5328710f-4bce-4203-a19c-7aea04daca6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf846fc-1ed2-4804-b84a-8c4762ee8189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "18312577-e55f-45fe-bfd3-5ec2017b2dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "643b432a-15e6-46d4-9cee-1950bd25f98f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda1e6d1-e986-4769-a39f-f32a7b3ef58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aa8d42b-eb8d-44f8-a7b8-b9ab3bfe1a95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaaecb7a-4b53-453b-9588-acba166f185e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "aeb88b63-f671-4339-a318-c20a90df79fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f03e9a-2609-479f-a2e1-e9f4d1b24350",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cebc775-c7c8-4a9e-8350-e882a27f949e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed2b0fce-efb8-4546-9624-a4848262c3d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb7120a-eff2-481d-aef9-6a1014720ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "28742e2a-60aa-4aa0-9d83-54b6b0ae4b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e65a4277-589f-4c38-9e2a-7d4e6a861c2c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b498a7-337c-41f7-9179-cf2c88a42655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aca8d9c5-8061-4692-8312-878e6651db46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e59e9e32-bf0e-4278-bf26-b77b40bbf449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "71ca4bf2-6d18-4aea-82e0-aceb5a712406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423507c2-2d0f-4659-acf4-9176925fd7a3",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bbf1c8b-57d4-4c34-8101-fd62f113c879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba7fa958-9a62-4c63-82a2-f67e05698a75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af7eb27d-cadb-4cfe-932c-603e3bad9ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a4ccf00-c972-401b-91a8-4a165c7bc143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa3d940-f92e-42cd-a0e1-027f2863ba10",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee22151a-5734-4528-acdf-0b6787f1578f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee1293c6-f4d7-4a3c-b634-1a5518b1ad57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a44b5f7c-859e-4d37-868c-2f1bb5817b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9e90d5f7-640c-49f0-a04d-ff526eaa4999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d1b4f5a-cd41-471d-8200-244a463f0a32",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "352aca6e-7eb1-4576-8c2c-2528ef61d471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1a8a91d-af30-4ff2-a5b2-ea3041cbc4d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de050dcd-8ad6-451b-84c0-b7107645ef9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f0e8702-8e77-424e-83c0-505c35687b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779b5527-b78d-4eab-8f13-08e581b3d27d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c294ac7b-f40a-4bc4-93a9-2131888a07c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "136bc8e7-f7e6-40b3-b600-9f72378278cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c955cd6-77a5-44d0-897d-ade5013efdb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d3d3923-3278-4200-8b8d-c68bdb377fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44aba96a-a500-4478-aa1a-a94fe2eb7568",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1031a914-074e-42d5-9159-79d591b3d7c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6886ab70-aefb-453f-91d3-26d73cede472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53951fb3-deec-465a-9a73-352b46b14235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f48ec90-c761-42c2-8757-1ea666e51958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "173583cd-de66-4a96-b82c-f0c295b78983",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "492703d6-fc88-47d6-8e98-4490b49d47a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "784c8d40-39c9-4200-bc7d-e0a4a0189466"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61904300-d3bd-47c6-9210-cd2a97c3734c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "03e0768c-f636-4ba3-bbf5-23d6a84daead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f6a156-5d12-4bdb-822d-675f73e6d0b2",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a309676f-647c-4605-88da-a5d9b697551d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e359ccd-3b58-4e23-b47f-7d96b491b75d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c825e51-47a5-448b-8f44-f4f43e5dd5e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "777f7ff4-e4f4-4d1f-b30f-609e34d84c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc60a71-1c48-4d0c-9adf-dcd4b52d1436",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc258b57-6e2d-4cfa-894b-9cc5c72566b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecb026b3-9b2a-4d59-91ae-1d33a1b195b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f78b686f-85c1-4e81-b752-fdd313ce2477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "20a3993b-13e1-4141-a441-953bf6cd1c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9e7902-8dac-4019-bc15-db45dac079d2",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a09e59d-0260-43bd-9bd7-e5a925c2515d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62bbe819-3c58-4f68-bd01-50daac6358b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa59b8e-f7fd-467a-ab87-e22adc2bd485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0970208-dd5e-4bdd-95f8-eb7cb3b0b8ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46cc0722-ea65-43b3-bfb2-c4af224c0729",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f447bebf-4e27-4f84-8487-1b4fb818a7db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aa2da41-32f6-47f3-8d88-e0f303f8b55d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "342d9b2d-bd2d-4e27-9a87-b5a38c6458de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "740790d3-d98c-44dc-9627-ff0ff342be28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0dde66b-f2cd-4040-b8df-1940932d63c5",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee24269-3bfe-4b4b-8435-36ffb9fc24d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fb02526-c631-408a-b328-1aba8dc3f7f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c71b94-1757-4700-b249-abb1fd030a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ffb2753-55bd-4df3-a9fb-59b58ed0b323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7835f801-b513-4a6b-8901-05b11f991e00",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "267c92d4-650c-4d5b-9bb5-8eadcd42d599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19b9f55c-b13f-4594-9b43-608a78c44efb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cbc25f7-31a2-4e67-9a82-792af7075511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "684c4029-8e09-4eae-8413-e684dbbe3bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f5fb40-c01d-45bf-b54e-65647abb1c8f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37804c1c-c4d3-44cf-84ff-af1d5e7e5814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33ad1992-2fc2-44a6-ae4d-d5cb08899d02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18734280-082a-449d-890f-bf1ebba2711f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cba3cf0-d6b1-40a0-8650-266f6ef0a6f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3154ba3a-17c4-4416-963b-95a3728b23af",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01cc06f2-c035-437a-ad86-60744382b85b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18f992c3-af23-4a4b-b5ed-e88d592b08c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b26499-a7fd-48b9-9679-08760af81bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9664ec32-d4e3-449d-b3db-08fe3010d432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2bf0251-5a3f-4e76-ace0-daf09d9b8753",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f5d3c2-1701-4015-b919-593ea7287053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89f3caa6-0f45-4c9f-9b46-0f25e4d5678a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0916f9a1-d2ab-4d9a-8151-541e2ab929f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3088bb76-8dc9-407d-b0a9-1932884c5e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fcee5df-426b-4b3a-b169-8250fdbb93f4",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd24082c-72a5-4e1a-8f80-7bad2617bc6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1246d5d-fc41-464b-825d-56e1091ab2c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "145711f2-8012-4109-91ef-abc585e88cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "84da112c-90d2-445a-b2ed-41a75a081c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ab352d-7dea-4ffa-bc85-4a4acc7ff5a7",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba12f4e-6b21-4d3a-a54d-d803d8b507be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08158847-75c8-4952-bd40-fbc700618ce0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a89948e-3079-4cbe-a9aa-5e889f2f7c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "506aeb36-1103-4410-888f-dc3928f07314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d97ec7-46bb-4fdc-9f52-1062908c7092",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a05bbe-313e-41e3-8d43-a07fcd1c56a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af1e4c8a-8881-44ff-8d4d-fae9f734d034"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc46440-0d06-494b-9aad-0bb4a600ce77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f375d462-0f4b-4e0b-9a22-7133689c3b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b91ad9aa-1cc0-49fb-b0c7-0fee06e9a9ab",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ffe254-20f8-4614-aa78-a22ac2718865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c6cb130-6ec7-49a4-9487-5971695f1d9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e39040-0315-4274-a2aa-d068d30c048e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "10633b98-e459-4c7e-97cb-ece2875cdd90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e07d5e-9610-41f8-a5c8-92d26363cc97",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c172119-b2bb-464a-9bfa-7e44ae273f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a11658a-5250-4da8-82cd-a66e56779308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a339fd22-edab-4eaf-9e5d-f431cc489651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8ec1bf1-c6b0-4798-a0ad-645f27e5eb58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e420818a-444a-465c-b5ba-8026a8869566",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e1a1c9-176b-4bd0-b446-6dfc05ba761a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "717c03ef-d8b0-4bcb-a7a3-1f75bf767a8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5189a2-f9b3-4a9c-a9ed-a4131f31c6cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "748be2f6-a999-4bba-b338-5b62d33c75a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4d1c3c2-580d-4fed-9f46-0dbc5fce398a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f933dd-74bb-4db1-96fb-ab2741d1f281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a41d7c73-d1ce-4715-99e4-2d69d94d1854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97af91b2-e319-4f6b-bc1d-1a5d2cdd151e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7df00f05-435b-4365-ac2d-c6870716880c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f95f818-4b4c-452e-92a3-d61ff3bea170",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c6d6d86-b5a8-4c0e-bda7-b44dbd3de625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ebbf9bd-fc9a-4fe1-bf04-91d3d44e371d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5403b716-08d0-4f88-b7d1-50b6882fa208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "00edfb3a-2452-4271-afa7-a4f4086546d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce51c684-d471-4dd4-9917-c22d2e9a7b12",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8db030e-95aa-4db1-8e52-1f89f2f21ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d10e5110-28b1-4cc5-86b7-d461176f2600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "502f5c41-1056-413f-8432-37fd059647d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4860c91-32b1-4583-813a-fc91b27e3c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb56356-1003-4919-aa97-c60f180c9684",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9850268-8630-4bea-82e8-d404e67969c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d5777a8-71a1-4839-a160-50acf1df7eb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "098b4727-ee80-4236-ba65-d68cb5636158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "75d6a961-2e00-427e-a822-09cc54419eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a347dcb-0c80-4d6e-b9b5-aaed63d928e6",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "124264ce-1aec-4918-953a-16d0976462b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9672bea-6220-4ebc-9ca3-f9f3d5717ad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd49b8f-b459-40ee-af27-3d4a49ad5f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "97e0a213-2089-4e04-b431-b959db384930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6138a08-d808-461a-9051-68757f282712",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ecb41fb-e24b-4145-9050-3e2deaf3a9a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71173d92-904e-4287-8a21-e2bfe72a7156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "290e6154-a64f-48bf-9de8-c459ea761784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d1c19d41-f71c-4ccf-bd41-4f9ab1911ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c82db587-558f-4494-a016-09d6f9738442",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "324dde7a-5bd4-40a6-8a83-43740979f674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f23ff7a3-4d1b-4f0e-9cee-acae263d6114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e294dae-38a7-4a12-8ef9-71b296993a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "91ab7575-1ab0-4bab-83db-b0f50a775b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3e8f00-40af-44a5-9797-c2405b2e2047",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af27d80-3cbe-46e8-8f7a-840a483a4ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11d8a867-c159-4f7a-969b-cafa2a077aac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5197fc6f-be22-4ec9-a70c-96807dacb977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "24ae1165-26cf-41c3-a51d-074befefe841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73564ce9-69d4-467d-b2dc-aea5bf4543fa",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1137be90-7acb-40b5-a013-685283c92fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43d1360d-8788-4c05-b811-2b1ab46be355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b11c7f82-0f58-4d3b-a0c6-e2cc4e94390a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "63e2b08c-bce1-4400-8814-7ed5312dfd81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "854cd21f-c526-4972-8d06-2b2543647c06",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c6a6e80-21a6-4fe0-b917-84b3d66a2a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4784fbf4-cb0c-4b37-8cfe-185a9b0d3132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e649bed-e965-48cc-8ded-078fcf49f13f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cf951f0-e6a6-45c9-8fe9-42f332b6079f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "773c55f1-c569-4228-a49b-46fe44de244c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aadde6d-1e6f-4d47-965f-641bcb41f8b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a862482-9bfa-41ba-b54d-5c58dd8ed1a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "200986f5-cd52-4c5e-b3ca-4bea2c8da82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c13452e5-0050-468c-a300-d15eeb3892c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e4c3cd-c3fb-4fde-bca9-552f6282a406",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4444dbf1-8a9c-46cc-b49e-6b2b2682ca66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a70bcbfa-130d-448a-a64f-34e81c5f94d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49997c2c-865e-49e4-8524-caaec119c561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "327ada59-53f0-4a50-8360-98da6e2d03f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "699affac-0936-4f5c-a128-f24fe934153d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c63e270-8e4c-41ed-8b57-7352872ecde3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5e29dec-99f6-48c3-a538-47956c7d5c78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8edaa7e-c66d-41af-bab0-752530dc3453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "91b3e438-c8b6-4697-b585-30cd4cdb524f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789acdd0-3016-48e8-aa64-175a2b610b3b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f715e021-ab6e-47cc-b118-c17f7bcc4e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c78ab116-76eb-4b10-ad48-345a96a24465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13756afd-3b08-42c5-ae09-65b5a5fdb901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0825212-8475-4717-9f7f-1c17ba15d4cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccda86f1-66a1-47a5-9152-3b36bc30876d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c463858-1003-4b90-91e6-7b0b5e9b14a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b09af50-08f7-48d3-be51-e147dd1871a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b07a6cd-aa72-4117-8494-fd78d2e2ec1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b37e017f-eb53-46ba-a0cc-bcb774690845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0321758e-e75b-4912-b624-8d429604b4d1",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b6ccf8-a968-49cd-a48d-a5ad4a401939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64aa7303-45cb-44f4-a42a-e2ca33028e95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce00fe1-f4a1-40e1-8253-42b41584fa1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f15b3da9-5a82-4d94-b7fa-393e63754384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab31f85-ad27-4bf9-924a-3b8ce988a7d0",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b55191-628d-449a-948d-a8d7c01cb57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9e5cea8-8f42-4050-bf4b-ba6007aef2fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56e98db3-bdde-470c-a689-2d9979b0310e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e7972a9-4c7f-4890-94c0-99127a7fb8f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65675bbd-ad97-4290-b744-b361ef5e7989",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac9ef8e-66c1-4032-aace-40d49ffbcc3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f607a2c-33c3-4144-b64b-0f81744adfd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6391ce7f-8942-4be5-9df7-81552c96dfda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8dea0033-fe81-4f51-aa5b-5493975f880f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b0f0dda-642d-4b21-89c4-a6f96a133385",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20aeffac-477f-4199-a5d2-5ed1adc3dcde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac940173-0cb0-4319-9808-40fc3127e00e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc9951c-8efc-421e-84ab-a359a64b8780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f7944c35-568b-48e9-97cc-04b8e6b471b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87fb967b-bf08-42fe-a0d9-48bda94833ca",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b342c93f-afae-4d0c-8f58-be2d98144729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c57eacbd-095c-4973-9ae9-776bcfa228f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b14b450-e191-4e3f-a554-c9f4b66f2075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5318056-d5dc-4394-b64f-c515d4f362f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f05f9489-533d-4652-880a-00cc4a03a51a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d79d6f7-f1ba-47f2-a524-2a8e9551c4ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36059bd0-fbb1-4b18-a8f1-4d3ef32bcfb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cefe07a0-4a47-4867-8f69-062c7ed0d03a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6bd9b1f-f042-46a4-8ad8-22a13ac497cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e0312a-7fb1-47c3-9927-29aa5a387d59",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5760bea1-cd9c-499c-9d58-093eb58a59f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48e00e91-e0a4-43a9-bf50-b79ba0d62c8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce95ab49-81cf-4a13-8b54-bbe3dd967715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b0ce3bc-0af2-4b01-81b9-aaffe92965a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d75631-0c81-49f2-9e9f-563c6833221b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d96785-410a-4e6c-9d1f-2e5db768d653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba588027-26b1-4527-9d3a-a0f21772119f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498338d2-cbbb-4c8a-b96b-3f57489afafa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b86b196-a9ae-476b-97da-e99d34aca4ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9820aac5-58c5-42bf-a8f3-e569490e87bd",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d4bef2b-29d6-426a-ba72-dd5e466f8644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf1c36ac-3eb2-4d6e-aabe-cf1e8e927ce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2caaeb96-27bb-440a-a244-6c06a4de15fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6ecb0069-7612-4ca5-ba70-257e08c42fc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "299aa5f8-c559-4302-8fe4-e0963e29abaf",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b443f2a0-8d3b-4d28-8609-17f30428f36f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ddd9624-ea82-4479-88e7-9e1691cbe60d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "325bbba9-e81e-498a-a2b7-7723f0cd14ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3da65f0e-92f5-4f6d-9a08-0337c53230ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d3c2a3-86ef-428b-8d23-8d414b7fc10c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd59b96a-56a5-4fe9-b142-392cb4f73532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf0f85e8-3d2f-49d3-9114-d4009dff808c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ce705b-0857-463e-a340-fc52cde0a37b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf9a8166-e995-4bae-a3d3-74002a9ebf59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac0d67d-ec63-428b-a76c-2f8435ded370",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4efaf91b-3e92-4d6e-81f4-97dc156d37c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93080532-5673-45c7-9f8c-25af1d3b156d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54a08c6-be91-4112-81ac-90fd54ccf8de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "48c3b7a6-b35c-445b-a2db-ef07a9cf9d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce4f7dc-58b5-4e7d-bc45-2837524f8be8",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d964f13-ca28-46a2-b144-46d515e9fb19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50ed740c-5d61-4919-9deb-e638743bbddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f2c3df-0c2e-4499-b369-b07938108496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "50da4fc0-5ddf-4350-b89c-0819db4a372f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e02260a4-d738-41f3-b11a-90838fb70074",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47ae063-81f0-4768-85aa-493291776ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c25ce83-efce-4aaa-a9b2-1b0eee62fcdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ed80d0-e310-44d4-a62c-e1e51c288866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6496aa35-dfd1-4020-a547-55cbeb2c285f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf03a085-f98c-49d2-b5e3-6d0f6c6e14a0",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e237e40b-b488-4c63-82b7-ac71035f2a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad2e47ec-de77-436f-acf1-8fec94cc3572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242ea0e7-14b6-4bef-97d0-af905fed338a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "68332939-28f5-4955-b7b3-380a067fd1fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84dbd0d9-6bc4-462b-b67d-f1abfd9740e0",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03646b66-83fb-40c1-8fbf-38f3b3a3d774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0b4b534c-967b-4d79-9ace-f1f2529c8831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d91c2cfd-2799-4547-901e-bd95a63e2c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea84457c-479a-4add-b07b-d185de685575"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "374b343a-e8c3-4375-9a44-ccdfd8406a8e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1af92e9b-259b-40b9-82f0-2c8da304b7b3",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cdb850e-a41f-41de-ac92-8ab688679e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "818cb72d-ed52-416e-92cc-129723d5ce42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13a2457a-ae33-4223-86b6-c0f870c335cf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13d0b0a8-4c1f-45da-8380-c2f91356d053"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c92836e6-d50e-44d1-9f13-05b3353fcde3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e54c291-7780-4236-bd68-fbfa2902c5a5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bee50ccc-2799-4330-8c99-bd8ff97495b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e71db02b-8145-4042-8b58-ef5e9473d48f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f49792d5-2fa8-4057-9fca-aaa04b4844ec",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ee4c4fa7-fb35-496f-8b3d-d03875dd2d72"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "175dff54-f921-4528-aa1e-64f491f45901",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fdb5e97c-c2b1-4913-8b02-39c16606a227"
                }
              }
            ]
          },
          {
            "id": "bd91f35c-0f3e-40f4-bc55-3c1b00c16cc5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6199f05b-5294-4545-8d57-fc8e68806b35",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "7e128684-6b31-40e9-be6c-9c2c01d10d10",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8a2198-b45a-4d97-8a73-f0ca34dcd5b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "373e8243-638c-4405-927b-c092f0664143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce390cc-c3c9-4a4b-b2ff-baed805ae174",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfd067b9-8132-4bf3-820c-ebf828f0bde4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ac9db389-5e11-4583-b88d-7504e5ee6dc2",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d220460a-74e1-471e-a446-6eef220704e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8c310c1f-2d9b-412a-aca0-401cbe271b72"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1c8f739-1c0e-4207-8cb2-299b3b6316ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d9ba1256-53c1-4c10-b35f-cf57c4fc9144"
                    }
                  }
                ]
              },
              {
                "id": "b0f65688-07a9-40f8-b1e4-e66f03957c98",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4bfb2da3-1750-4be9-92d3-98d0ac9cdd53",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a1043eaa-4922-4236-91cb-1d19ec5ed034"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57910c34-a12d-48f5-aea2-04b62284dc83",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "740bb874-9417-41d3-9686-07e3675292a6"
                    }
                  }
                ]
              },
              {
                "id": "a9993b0d-b4d3-49e2-88ef-17ff5f5e00f4",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b5f44fa-fde3-41a5-af64-002c055c0e80",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "92e07b97-a497-4d72-9f82-f41e42bf324b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a0306ca1-797f-424d-a63b-e0a51bb723ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ad8c5ab9-c727-459f-9f47-a8224f03f0b5"
                    }
                  }
                ]
              },
              {
                "id": "c9fdeaf7-f2d8-4db2-9fda-0ba87f62bcb4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "58299f2c-05fd-4501-ae6d-22111a3098ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "df440f65-15b0-4603-b495-4f62032502fe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef4b707c-0e5e-40c0-a8aa-6f3de2a6a653",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e4a157e1-2479-475e-b0d5-fdfa05506402"
                    }
                  }
                ]
              },
              {
                "id": "0f3f727a-2c3e-4042-b0d3-17a87f1fc9e9",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "58897172-6f92-467e-98dd-f5177fc2b47f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1ca7427c-a534-41a5-9f06-24706bc536c0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aec3ccaa-9c0b-4e92-9e0b-d0ee529bbd55",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "206985dd-38a3-412b-8543-39abbacea71f"
                    }
                  }
                ]
              },
              {
                "id": "f7eace61-825e-4838-b755-721554df7064",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "917b4bc8-72c9-4288-93a2-d20842135ddb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "32d4e242-a3bd-4a68-b957-823ad2766e4f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "32a8fb3f-4f01-4833-a46f-accfe7ff6b9e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3af9b47e-0c61-49b4-8a17-5fa34c0a703e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "07194b26-2c06-49ba-8c48-eaedcbc3221b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e1ddf46f-0c9a-410e-afd2-f779bdf6d6bc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e3400c00-04dd-4bd1-b9c3-6e59b3eb9c37",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "31ec3f5f-5376-4851-b0de-9b1790140906"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a5088ad-a13d-41c1-887b-d4eff8813a88",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "fc9e114f-97ae-4948-9fb9-bd653860e049"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5433ae5d-9663-423e-b17d-751285a2f50a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fa4968d9-2126-497f-965c-e5fb1818a77d"
            }
          }
        ]
      },
      {
        "id": "b43b7b97-1c20-4f52-a279-2ef330c62d9a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "157f2945-a3a8-4f66-ae98-3945000c5130",
            "name": "Negative Testing",
            "item": [
              {
                "id": "822daa65-d38d-4311-8c60-0ebf48c4ba60",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0183b991-3b89-4d50-b3a7-e7a055abc9d1",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3fef37-1d8b-432a-bc7d-c60840343f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad9875ff-d674-4513-b9ae-6f235deb5045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddbc838c-af90-40b0-afce-24191342a29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "105f987c-385d-4d35-8254-9e966d49901c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c40e8df-ca05-4160-8ae0-c8a6f8110a70",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace3afe5-3578-425e-b22d-89b41a15941d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5feb9e44-8fde-4955-a96c-bc648bdedcaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485d58d0-5889-4e7a-abff-a6fb8d0e24f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cb7ea23-53be-4be2-bb83-4f8025b6e974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ccabb09-2a25-42d8-a1fa-bf17195ab9e1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f60a4a-6f9f-493a-8ab4-c192fd44722c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeb655f4-581a-47a0-8ca0-c0df3e8d95c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e48d04-1fc5-4f31-9719-180b3aa99cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9f503dd-5d23-43e0-ab6e-435d78d1c83f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d45f4f9c-8fae-4b6d-a4d9-1046f353cc49",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d0f05f0-c86d-476b-bae7-627d88efd859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5698da2-6535-441c-b426-a4345fc912af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3e2127-0c8a-4c04-979f-0a498509643e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "856485d3-968e-4cb8-8489-40f110cbf36a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba69af2-4f94-4f2f-8905-7579d74f08cc",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a37d9bc-6d2c-44fb-bb62-cfecee1fd571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47e6c8b9-3289-45ab-b1d9-beb2005bb764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b323ab40-1e41-4032-8d0c-b6fcbe9ba073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae078ff6-43e8-4e23-af00-379661edfd2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d2054f-044a-4ab5-8747-9389e444f836",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09967c2-5aeb-499a-abb2-50b526ae6ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07a802b4-f99a-4446-a99e-a30c2a498fcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c519c8-ed7e-491c-8704-ddafbbee7693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee03a2b2-7928-4744-8c7d-4f696f69aa21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afba4fee-5785-4c57-98f2-b1fe30fe01a2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b63d5971-7d85-43a4-b232-ccaaaa419df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56265dbc-b6d6-4280-8051-1c30b1fac424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "772331e7-1fba-42fb-9002-de1d7c69089b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "17321aff-d72d-45de-b663-c70fcabb01c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b359f1df-6132-494b-8929-6fa3837c7555",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d38c440a-96b5-4a64-b6c0-483844a8b50d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf4f1831-f027-4917-abf8-030aff01719e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17005ce0-5b4d-4b3c-9956-96eeff6937e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bfd36fe-94b1-4ff8-ba58-0849db19919c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c9fada-c008-4184-af00-116642c82880",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67d7e56-6fe6-4daf-83f0-c09674cb27c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b76f68e-ad93-4e10-a167-4c6d3b00f9a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f9fc4e-5167-4f9b-8db7-eac7ca32baf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b09dead2-d27e-4fb8-85b4-26cd5e073f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f529f8a-497e-4f2e-93e3-f03f18545e95",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "348c3235-e5f4-47d3-9482-ed4518315a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "240de8bd-4b25-449d-a00b-4bc8ceb4c175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18413935-5893-43b0-bc06-7b8355c299dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "559fef05-e627-480e-a71a-93e2276a6657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f52f1f-00d8-46e3-b690-fe341b89afe4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c63528-6487-4a5d-92cc-b6a6095e90fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1bb64d4-3e2a-4612-acc8-e1d95010d82c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47980fc-6fcd-45f8-8912-73baad435e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b9213928-b3b0-44d1-baba-1588870cc158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9ce639-07e6-4cd1-9995-8a4a4606a127",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "963ded88-93cc-4234-9644-7d9f9c60a3f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1b0b109-7ca7-4ee5-8b76-4aa387dd5ee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7084a5a6-7fa6-4a95-bd59-da2ad437a9fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b2f839c0-9bdf-4b13-ac61-d99233b99b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6273141-cfcd-47a5-b4c6-9263947ffbca",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d8eeae-e066-436a-8feb-9c61a61ae68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84aaa59f-a8f2-40a7-a442-3cbc607ea363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe063fc-5152-44aa-9192-2b693b3d4604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6163bbe8-e783-4a54-9c6b-ffcc20f011bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e638188-d0b4-422f-8d2e-536dddc2dc2a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6eaf58d-3a0c-4cc3-ac7b-148e9574445f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7046beea-09ea-4d05-b7f0-88b30379edae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9057d0f-7f37-4e15-869d-6bd68b9bbb80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "297f7795-214b-4889-9a40-afb4f4ad4a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5db03b5-4013-4718-b2cf-449618fc7e52",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b3fc76-0bf4-40c3-890a-7060f202046b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0237c73e-4849-4c6b-9086-09b05cee0430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b48660-cbe0-4f11-b3ab-f6b85bf102b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd1bea59-7fc5-4a62-8656-d8a6a1ccbfc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4829c1-2b26-4487-ad4e-6c6dc83cd095",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68fb913f-b774-4c39-a3d6-f3bbf2771acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c3290ef-d17e-4767-aae9-222177f21b1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8651cddf-77ac-46ed-8d11-c2680e0154e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "af30eae2-4a4f-4449-9ef5-aa9a82600394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e699fe5f-5ffe-4058-959e-b941fa7897c4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5521e569-529e-43ec-8092-9e26a42d7cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f24626f3-eb18-43bc-a7d6-b0cfaa249bc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c79c77-8499-4523-934d-5bbe75f3b5a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a708b297-bc39-4441-a4f5-0f80f7268341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c4ea9eb-cc30-4314-ad18-06c5d3c218a9",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2440f4e8-729b-4db0-a85e-ab6a81e8a89c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db06f3c5-7471-47cb-976c-19e88274b2b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "943f83a6-94ab-4757-8cc2-2c317912806a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "44f483a0-8256-47b8-892e-055942b93ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a23c4b9c-34d3-45f1-a94e-5055646936f9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54fb752a-a418-492c-aff5-6968e7266241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea1051bf-75c8-423a-a0a2-685ec1e17530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e410a25-fb0d-4d52-a935-86aa3c77da7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46fd3d69-efa1-49b7-9300-820647314aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5fbfdcf-25e0-41c5-9cfa-6809d332d7d3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e602376d-90ab-43e6-8388-084e0ecba2b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29080a84-720c-4b74-9a36-248bc1ac1405"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c58b9ef9-4961-4c9f-aaa1-2f06fa1f7f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53befca7-ff77-461c-9ceb-def4adbfdec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e479ac50-a442-440d-852c-ff2aa1ce6994",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c7de4f-8e48-461e-ade4-6d7549774824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee0a077-2e61-4e6c-bfb4-62ce91dcb04b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f69d57d-8127-4e87-86f8-e974a8b1d9f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1114613-f54e-4c47-951a-03b2baebde2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e9dd385-44f6-4974-a18c-1fd22512ccda",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "497cba3a-f71e-4342-90a6-900f32cb1d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bbdf2bb-f74f-45a5-816f-24dfa4432ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d15b0784-9ab4-49d0-b00c-ae177d7dfccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a6c4035-f0a5-48fc-8ab1-5bb46aaed6cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "415cb8dd-5d18-4444-a7f5-2da6c321906a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96208df-bce4-4e70-bdef-9b06aca6e399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4347d305-cadc-423b-98b2-66fa81e7fbaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab8bdf39-b892-4637-8db6-85148329ac00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4113238e-de68-44e0-9e4b-a9054f478fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e060c6-cbe6-492d-b0f3-e24d9e937047",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b117d9c1-ec16-41cc-b0af-e36d02041f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb86a8aa-1b85-4db5-a438-88edea733f45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5922074d-2d7e-4499-aa52-a4313db0ef57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50afd31f-5f32-4314-929a-5168ded268d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58648117-dc1d-4648-9ae3-415640335bc0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf8bf9c-5fbf-4118-947d-07c07b59bbcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95ed351b-1216-4bbb-8ebd-014c45cb0121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e7ecf8-5a17-4421-a71c-b66352e2e24a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf5de8d8-9a4a-4b93-8497-91baaa748cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b36883-c79c-4be0-a6c4-9850f2421b77",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57dab577-07ea-47cc-9249-365f99f17b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91c6e385-4953-4881-818b-97aae45c3804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "530940ab-fc08-416d-909c-df29ece7044a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8bb66df-8a8a-40f1-aedb-d525111290ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4d6f4c5-9def-4c76-b719-c7832559c5bd",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf88060-a083-4371-9644-2b1d4010765a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e61625d-8c03-44a2-b73c-8b1e89ed9926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a73738c-9dbb-41a1-a3ea-ab7c5dd275bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2b8c8a1-c57d-4194-9fee-3561da59c4be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b9b9198-0536-4a29-b9ca-ee202fed4f2f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9973f4-2905-4f62-ba42-9bf3c441942a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5550e8bc-0b92-4bfa-82cc-5032c18f51c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe1de1c9-b221-4301-89b1-aec67a01aca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7576ae6-962c-4dbf-ae67-bc8013f4f701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ef239c-6bc1-4937-8fa3-474206b437c7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31cd26b3-0af4-4560-9050-e4055f3ccf40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b72d8810-288a-4b1c-867e-2bca5bbc4121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ecb6ec-0520-4c97-b911-1c50bae093f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b73d1fdd-f956-40e4-8460-d040936b5bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17bc6ae2-e14b-44d7-b901-0bb6d7e0a13b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "682f68fd-80f3-4078-aa2a-cb16d7f4e883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07cc85ca-a38e-4410-959a-36eeba7bebf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e241eab-b7e0-4eb6-88b1-9ccca5c64e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "930c63da-4ad4-488b-a4a3-71d6f486219e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0315e9c0-eb39-45b9-94aa-44d205178405",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9df4cb8-2d94-4c6a-9a21-ff63a5076686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1e088dd-4f02-49dd-800d-b1de1f2d07fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "729be6ba-ba3d-4065-8732-2374c46d3273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99eaff66-aa4b-4fcc-82d7-cfe9da89307a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60923dc9-6b91-4d8d-adcd-413755d44075",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3840f8-1e8e-43df-945f-2aba7885ed01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66d020b8-fe33-44d5-8fa4-82fb99395b5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e03602-eb9f-4666-a6fc-00161ff8e0aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7dedc27-86bd-48b0-8868-10d07dedc70a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7a1e3e58-bde3-40db-8af1-2d1c2bbecd2b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3c9451c1-fcf1-4571-a3b1-b4114f1096ff",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4d7c9c-ef73-4475-b87e-499a4663922d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2fe5eb05-aee4-4a87-acc9-2e5785714f29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7205e696-f992-4996-af6b-a5087954b754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a988e77-5039-4d63-8bc3-4b565ba10ac4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2cad7e66-2857-4fc1-8836-761d66fb49cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4938059f-4957-4662-86fc-11ce058171e0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "724049cc-daf4-49f2-8726-1a2e4cb770fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "66444388-d839-4541-bcd3-78fc4d90b137"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "914243b0-eb4a-41ed-9696-5499084953fa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c406e681-1d12-42ed-b9e9-607aad4dd3ba"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f02c9bca-11e3-4a80-81f8-2ea665946e25",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a1aa31b4-1115-48eb-98af-6586df77d8e6"
            }
          }
        ]
      },
      {
        "id": "c1adef51-232a-4c7c-ba98-0d2f780ac206",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "99a85f28-4606-4d44-b9ca-3a981ac08330",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fb546a03-09e8-4e20-8672-e8a3e98c0589",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "06e3ed50-f1e0-4021-9bba-3333577b6725",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2607864-adc4-417a-9692-60b37ef6b571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3c820fe-9133-44bc-b243-0a68953eeaf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "154d8e32-1b11-4754-941a-9c4082fb0c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cc25c72-e82e-499a-8792-1c509b8f60ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74192cf-69d4-4771-9f31-cadf8ea337d6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f4924a-784f-4824-b99d-cdb12c01ebc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6301fe26-4108-47f5-891a-9efdbcfe7377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d62e13-c15a-4bba-ae98-a3e6dedd1618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "34d8ecc5-c95d-4aef-8d01-913225124bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b134f6-8b94-4552-9f87-cbcb0a5ef68b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f57e2c1-743b-4278-a681-03d0fff07044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca00224d-0ae1-48d6-b917-4a87590af5d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ecf5d92-8e93-47e5-a8dc-23b2f91752a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf373018-b1d5-43f6-897f-de71739e2f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b15861-90a7-4672-b3a7-7ba0eda840da",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "184d27fc-27b8-4ecd-b15d-9148588705c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d0d169e-2408-4d1d-a929-d02825d05161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19417bf2-984d-41c0-b0fe-46127ca129df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5aa62f3-dbac-45cb-9476-b9e393bd4007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c296225-f650-46ab-8dd0-88f37fb42544",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe89800-1c8e-4016-a113-20bd6ccc20ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a44b941-deb2-4743-8770-74b8a290be86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12837dc-6571-4100-9bee-c1670d29fe2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b169da39-7a50-4f14-83ab-bfe8e68b0b80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4df0308-3f38-4420-98f2-bef7963f947f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5850958-b0d8-4022-91e7-4f64fce7753d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "239f9e95-9223-4cb9-b19c-51dc2ba2997c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c16a22-f854-4a7b-b85d-19ab32294365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "02f870ab-167e-4b32-a1b3-c1e1671f11ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2672ab7d-68ab-47bd-88bb-c78589ffe16d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47592e26-2b9b-4ccf-a43b-3007095f748a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4018a6fe-cc2e-4abd-8cb0-0fc73c21d1b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5842de62-daac-4195-a73a-f438f0976bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c410d0a-0fb9-4dee-99cf-c8050669f512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39dde40a-f477-4722-946c-f309a654fc05",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a64182c3-3b01-42fe-9e64-6382ba0b6b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "352f9301-f18f-4732-a5a1-e55bc73fd285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2638b1-dbeb-478a-b695-36904f3a3677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "493023fe-0827-4692-94bc-4c9dfb45544b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84869dcd-10b7-41ef-871d-a9daa6af4f65",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc05c79-eef0-4572-9dbc-5a1b7a2b327c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d7580bd-aa58-47e9-8c73-38f69f0505c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "016b7bdd-8db0-44ff-9f64-3c53c979e36c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7c65d50-f521-4bc2-b995-7650fb946703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b02d12ac-c68e-46b4-8566-61ded36b8734",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9faf22f5-422c-4731-97e6-035ab0c36ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e4a9ee2-0e79-481d-9c6f-6bb72a4f7411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3350d04a-63d9-44cd-b973-8b0ae26f5603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c32046e-a6b4-454c-8c49-451bee8d46d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bedf0f52-313b-40ca-90a1-a960242ad1c8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "000baf60-2fac-4278-8a61-b43317c05cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5957b07-fd00-450b-9557-eea6793c2d13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f9f7939-97be-4d59-8ddd-5f19c8640489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7ac2a27d-7283-4564-95d5-1208c26fc508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20addc7-f2bb-42d0-b74b-92156173b300",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67015ab1-4637-4b61-979c-ea69e3046dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6de659bd-11f1-42a8-ad50-bfa1047b179a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "597f5717-5b79-41af-a292-8d9678aa62a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8f007e97-890e-4964-b738-600326ca9cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e566e60-aa8c-4279-adea-c0a4ab448fe9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d132020d-39ba-4db3-95a9-6712ee94b84f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5423d926-c873-4143-a91b-df74c36dbaeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb2a911c-0c3f-41a3-a3b8-296db68e2713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "346ce3c2-395c-48f4-b177-41cb90530ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb569e2-8d32-473e-9316-91be09ec0b10",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c0620a-9a66-49fe-97b7-5fd0db8f3492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b1793a5-b780-4ebd-93b2-0043cf30541f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7146aee4-c0a8-49b5-9ce6-b5922fd54197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce7b6e96-447a-49a0-8f8d-09e4801b3e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04da21bf-b7bf-499a-a738-b41d23e656d0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b05f94-c855-4094-a806-3695c41a91cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48aef558-e9fa-460d-84be-38d9d0dfa0aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0afbdbb-5205-4ccd-a16d-eaf905578635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "389416fc-8636-40f7-928b-be0e193b016a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e32910c-b4aa-4711-9328-63a4353b9019",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d1b35f-5b60-48bc-bebc-eb1fcb54ab71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2f2cdce-f5b9-4e67-bf19-e3d5fd3c29a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e2252e-6672-485f-9cc2-a1552563129e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2cd0b4e-933a-4a06-b1b3-534e15f34574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5681a7bc-3c6e-4265-8a1e-da12117b584d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26a8a744-cf49-4a96-b7cb-e9b3e486c5a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "338f4013-04b7-4898-ba49-f30aa2b167f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d833d80a-fb7d-40d9-a164-f3848f8f5c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "af5b34c9-3e02-43d2-b684-c842f85ce73b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd2bffe5-8d96-40c1-bba4-e189faaa4041",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c86ee2-ceea-485a-9bbe-79e4a2e582dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c2976b2-b56a-43be-8f23-f6d69ba297ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cffb8b20-4c8c-4555-a39d-3cf5254516ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c993664-1888-4e0d-b978-e986dec5225a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d4363c8-6667-4827-af08-600a6a85f033",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c534161b-ff51-415c-abca-dbab27c47d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6099491e-5afa-426f-ba2b-9536ef90cfc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc22c414-64fa-474e-a5e9-32cd2f6e9672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64342f0f-5532-42d7-aabf-63b138348ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "701e7bd1-5ec9-499d-b880-fae44de6cfa5",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d6a30f-5988-4e19-87f7-c905d557f5bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "088af489-715a-4152-ae1a-4386de816c3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c236dc-6297-48a6-84d6-366234f13c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91cc9933-fa9b-4670-b8a4-21a7e9900388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e17925-6c94-4962-8ae2-c6b0441c8fc5",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "692ebf48-5232-40c6-af78-13fc78d6b05c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a910dd5-b7ac-4bf1-851e-8d944fbf31ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a31fa50-7884-4017-bd23-40445b46bd94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61f9d61a-2ff3-4dde-b8dd-02664cbe9687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed72b4a-96dc-480a-8463-f830ad09d5a7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4753cb-8520-44e3-bda1-bc60b1258b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57d1a3b8-b408-4666-9bc6-55762b513ae0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "025fc5e7-142f-4724-8042-01ea6b1858f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11edd6e1-d02a-42a6-b826-d73044fb17b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4aa121-e3f4-43fe-8c70-71942255216e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b199a8af-cdef-47ec-acd5-3b16a921b063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba95692a-b2b9-4745-b0a2-4571c7d6933a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0278eb94-d7fd-46df-afc0-ed0405a8b425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e154b0b4-e7c7-4f0b-9f9c-43633d408e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9629744a-8253-40a7-9a04-5121384b995e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0164886-0c17-4094-a8c5-7070c0469e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4508921f-6f56-4e92-9930-bb2e85232898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a45760-da18-441f-bf35-8fffa17276d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d82f332f-d85f-47a6-808a-20ef4a0b770b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af1f4ea6-f01c-4a30-9314-b1d99f0b2c16",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a75199-c120-4445-a97f-197f737bbe9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30c09453-5223-4157-b08f-f1c8bdec6ac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4def2ba3-333a-4521-ad85-5fa52c66ee18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fca03c76-1620-40f1-b666-201eb8fb198d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3620e843-70f5-4919-bfd1-ac20fced5fe1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e77b03e-a0bc-4699-847d-80abf3ef848c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b13a8c9-7e5b-4fcd-bd68-dbe6a523f6a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65492c88-75ab-4443-a362-6bcb2cdd63b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97703857-e102-4179-9f59-70cba339079d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a7af09c-8f6c-4aa7-a219-a615d0116819",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d7e0171-ac5a-4c87-a797-222fe7f304aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fed532b-a610-4e71-93e0-f0be67765215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd85263-0611-4634-ba76-e5661419d0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fcb6f44-c9ec-48e3-b18a-8de2c6dc3e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28fee1dc-b67b-4a36-84ee-6b10d68857b2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62f9ada-7bd9-46f4-a650-b3f844ff77f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e9db108-9ab7-4b45-9704-a039f3a012ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea5a378-04c6-4d38-9e4b-d0130d830372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b24ac628-5da4-48b7-b620-25e5744b4da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "180a0f5a-8be3-4d0c-b5ca-3e5554cc04c9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf3b5e4-e34f-48ef-a4a9-e28f6d85367c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9c106e9-8c9a-4595-8611-e428d369a928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0177ad4b-adc6-4585-b67c-26c1637177f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26b7dc34-d9b2-4182-82b0-c4d814c68cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e384c316-643a-4d64-b14a-b9b5b5f2f4ba",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2486b943-88cb-4ff6-82c0-87fde1ba7480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de83b332-ffad-4ec6-9bf1-31ffa613baab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c83bbc-de37-4242-abdf-006e711c760e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d761621f-ebd9-4eee-9fe1-0498c67f0466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "433bdbca-2b94-4f5f-9f60-d6f02a87dc29",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b781327-9a95-4d9a-b499-e32319646bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ac894eb-a186-4dec-8fdd-9225ad99fc67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e0d7385-c507-41b5-85c2-b02008eb59bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc836ea4-8764-4ee9-8b8f-2c36a73b1b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf858255-f31b-4d62-9c05-abd1d916fd69",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a96d495-6937-435c-bf45-ee85c0d9fd64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2392aca6-0c90-4fb9-9cc9-0dd8d1bdc123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00dc24f0-dd13-4447-8645-2e76a7e90000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb9b049f-cc84-46bc-868b-e7eab32d9327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d54ad2f3-6c3c-4f2e-8386-48a73ddcbf81",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ec7c8b-91c3-4f9d-84a9-018e1b3fcf6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "784251ae-3825-4bcd-9423-f22d2df37a1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e062bd79-520b-4aca-ba07-4d368adbeaff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba12ad04-1d18-436b-802b-fb12e0073bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "442d3ca8-6d99-4667-ac74-a66db9041831",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3503ff4-357f-4fab-8de5-ac958a529266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a08cccf8-5fff-4b1b-b568-7d7d8b7b3693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "426b282a-d392-495f-9859-209e557ab764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b1a2fa1-2475-49b2-ba3f-14aee0c6cdd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e75007-87eb-41d4-a613-62495643e425",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae5b5a5-e14b-45cb-bd27-021880e8e83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3475ae7-e4cb-4477-9d28-f412d840c2af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "183c35a4-c7a1-4f65-9a51-4f2d2a072988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb6e1c07-77df-4422-8b39-dc9bc5fe9b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47003e9a-4efc-4586-ae45-5a3d878380c9",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a43e41c3-42cb-482e-9132-863758d8728a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d7c5fdb-75e5-413c-beca-8005a8b23ffd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c092fb-1d97-415c-a62e-308c3e19868a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a14d9367-4aac-4280-be4a-1486a7c32266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3667bb41-fc55-450f-9a40-c4217b3ab988",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed176c7-827f-4adf-a4eb-f0cad8ad2581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e847f223-cb5d-40c9-8e7f-58b4edfd0934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d44d79e-bbfb-4040-bf4d-da0082a250d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b510920-a190-46ca-9f39-85cc55ab7a0e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1b6e6b2d-6101-469e-8589-f48810a20a9e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e682f79f-414d-43b1-98e5-04f6c22ac592",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea76735-4d82-4190-b7a5-a272da8771c8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "05c0693b-dcc8-43c9-b10b-a89458e70337"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2763998-8d5d-4841-a533-bb3c77793ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5a5b15c1-1cef-4b54-82f3-2ccd893f3d63"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c53a316-0c29-4d2c-999c-72383a5da123",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "997705a4-4480-4990-9952-78945aa855bc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e4fef38-63a9-426d-9ba8-28e4fc034b9a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9714a8ba-01f6-455c-b876-4750918880dc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f702e6b9-f373-4af5-b84c-169ea2a4c091",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b3dff9f8-5f13-49ae-8ecb-1c68c0d39515"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d9e05bbf-56ce-430d-9081-ab732a0375a5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8739563f-b36c-4548-af63-3485ac11ff20"
            }
          }
        ]
      },
      {
        "id": "70621875-653d-4d93-80e2-53ea0d262191",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a00a6481-f639-41e3-97fe-d4d02b3dd84d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f040a078-fec3-4a4d-8386-619be43b2c08",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3418f1f0-ec2e-4ab7-b6a5-818c0a5c3bb4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37680c52-ca52-4943-85af-77297a34ff7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c88245d9-4f17-4d92-ab74-7757f9b9f9cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0012994e-4956-4db4-ae9b-90724196e824",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27356b1-ee18-45c0-9293-d65ee0b97e73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d296b59-34d9-4af0-beae-04aee9ff4d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb9f8fa-af73-4bc2-a873-ab5a6af98b0e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9bdf37-1a82-4c25-a0e5-f778c0f29a70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "427df3a0-0035-4ef1-af7e-d298fca65f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d783724-3d5a-4caf-b7e5-f56588133484",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7056bc6-ac5b-4ae5-ba97-70eb2a482e64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17661ee5-842a-44f5-8adb-d22306d2126f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cecbf0b5-a9dc-4d9d-a554-702ccb274152",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f305a1f-8751-4be0-8ac2-e77be7055093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70a74036-c67b-4f78-b7d4-2ddfb8db41e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7525d60-65a4-4cf3-a9dd-5689d3b0c408",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c913fc20-167e-4506-9a2c-0ea3bbdbbba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbfa9e44-ad1f-48b6-a6c2-c2b84e438bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521d86da-0741-415d-9b45-5e877bca6b0b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f88783-d078-4bdd-bd10-75b7c33641ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7d3d691-cc7f-4b66-bf17-92cca9e484e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e417a5d-52fe-46fe-ab63-96eec64682d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7703729-8795-4291-ae31-a9693635531e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fcbc50c-be9d-44dc-8813-9e3a7809e104",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f010e48-3a25-4691-84a0-20c7ed967cb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2400c1f-4e74-466e-a8ed-422e5265fa6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dad7532-fdc4-4e1e-9af2-8ad8bb05a501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1803ec50-d6d6-4ded-b019-8bfb67d9fc55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e5d590c-fccc-4c97-8f8a-a56505332c1c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e347e16-18b2-45d2-b877-0b8286437ecd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5af0a703-026a-42a1-b88c-83f8896b68c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d31c6f-9b35-4d5e-b30f-1008a94d4908",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92139189-147c-4c91-8b62-cc59356bc8ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f90c28b-10f8-4a76-aba8-1ecd1ea7f8be",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd359bb-93c0-4fad-b375-6d95a8eee3c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73b185ad-1d66-4183-a520-192af39d965a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fed9134b-a339-4fbf-b6d4-20465ea745d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe502e14-b3be-4839-9e99-af5637a3912c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e95ff506-a8a6-4887-9e62-642318ce9124",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b128da2f-ed8a-4752-ae16-bf83e3b6c797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef0ab8a8-f062-4387-83eb-e7c740e13020"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12eb31af-34f7-416e-865f-7a62298d3449",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34de7b3c-307c-453a-897e-47514ea80a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4af8ea6-a7ee-42fb-88ab-77491e5bd1fe",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff38059-9af9-48a4-a827-862a69b1e279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03708e0d-85c7-40e5-bf10-646e7bdf3550"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79047723-221c-4c92-92ff-3368a013a403",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7acd643e-f9c6-45ed-9f89-db2211b3682d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a444d6ea-5571-46bf-8356-873d98331ba7",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "259ddb93-060c-4916-858f-1d8b297506a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85aa5707-dbd5-40c5-b15b-a2a3b23599a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9555f930-43a4-467e-991a-75025801cf5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec252df0-4150-4e7c-be4f-20e12aab2d60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16cde6b4-e9d8-40a2-9049-26ad0a0e68d6",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05975e5a-9e9c-48fe-ae4f-acdef43c36b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "902af3a6-217b-4a7c-99e1-ba83c1c102ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb7037e-a8a0-4f21-bc17-1d60084dc856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "594419e1-9b74-4c21-802c-aa5a149cbd5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57583f2f-d093-4148-ac52-5c4dac22bfcb",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad0878e-7361-4fd0-ba0a-40dbe06e332d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93ca1f42-24cc-49dc-bd14-f3b60b9b56f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f8c28e-bf4f-4c29-b539-7da310dab6f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3506b19f-0dab-4d36-9db6-a6461c43ab66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c760054-7bb4-4b4c-be5f-a92f8da2ac95",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a825f73-4fe2-45f2-b900-eb440efb3022",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f360e2e-93ca-4fb2-b529-05281d6b4e47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe2b947-6258-43bd-bc3b-a632f0499cab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "572b6e9a-74c7-49b8-9978-fb3e9b842050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb757f6-7476-4c33-aefb-9d2bef0fe8f2",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20160b60-8a78-431f-bf74-ac1526f64ee2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9171dfc8-f910-4dbb-82e5-518d033f61ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1692b748-3a93-45bc-b22d-083a52162a72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "367d0028-1c3d-4f24-9c41-ed8845950537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0b681c-9923-4a12-b22a-8ceb605f6a24",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccf362b9-1f08-44e5-bf95-d5dd1dcf7650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8170c13-8c46-4f61-9571-783e3223ded8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06e03710-e694-4655-9b40-2c981be94311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "149849c1-6245-4676-9531-6d2ee0d08019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0563d9a-c094-4f63-83b0-8ac4edcc0c20",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6add047c-3066-4233-9cf8-47d126326b46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62348fa8-6bf3-4506-a3e4-d69e9d34f65b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0779831-db34-4584-af5d-cc2f2b2e85a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25541a44-8813-4e3f-823b-ab732bf66215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c6df52-0cfd-4964-b78f-606d35f50ef5",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c07a780-3aaa-43ca-ba89-6d9dc656da0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b75394a-4b5f-4c91-834f-6b11aaccbb2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e1878ad-993b-4784-b481-94a94de4cc8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6af2e51b-eb6d-4cac-8583-64bb9fadc56d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d43c532-b716-4b0d-a841-2769df13fa34",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9120add-041c-4eab-9f37-ad1bef4c93ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f2091ce-80f2-4299-9002-87f1953faf52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a78441f-619d-4cbb-95d8-0570a73a6940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f83b15b7-0afe-4de5-9aee-f9ba98e89d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f7c4862-4949-4b0b-93a6-796e864c7309",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0013ec5-4a49-4155-85ab-e610bf525e46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be08154e-d437-476a-b253-eb27ed6e5c2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e9667f-9106-40c9-bd2f-94ae0cdfce00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a3b176a-992d-4176-867e-5ee9b6bda284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b21271ea-d4fd-4cb2-bfc4-d5ef82f9c38b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee24f2e9-f018-4b63-bad8-c8a26dbc5497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b87fda1a-d4f5-435c-b258-6703cabd0373"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a9f8bba-a6d6-4a77-b0d0-dc0b3a0a68a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed0e047d-2d70-4f2b-8eed-24ca89928efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1ac692-281d-4deb-8244-ae79335c21b6",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f2d230-8501-4418-aa60-a756fb37e9be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1920a4d-b9c7-4d71-a0b6-8bcf9a95c119"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa63be2-13c0-4899-a255-ff522a917d1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04a83524-28fc-4a10-a725-b434652aaadd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73110e7b-eb60-4886-b600-0e565d3a9fb4",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b86b952-2f61-419d-b2e0-b762e98d1d4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de728c11-01e4-4ad4-843b-198666a00293"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be5f583-7f1e-4b82-b2bc-8c962335e799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4ec4afa-c56d-4bfb-9c5e-7e4b9991b258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f488b0e-f752-42c4-9cab-113efeefb591",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c318c6c-dcbb-4891-8d3b-5c22ae4cde3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33679aec-7e61-4a5b-86b0-72a908bb978f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f2a657-d2b4-4572-9842-b4b8546d7dd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b221c46-77c4-4232-8d4a-148aae379e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ad9e2e-169e-454c-bb48-abc792d21c2f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c025a36-c734-4cb8-9a5b-a9f75b2807d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70a57376-f4d9-4f41-97f3-0378721a32bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d59ce12-aaf0-47b7-836f-dd2641ebae2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "403c9039-de53-4822-8340-d5e7c9afaa8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d87b77ed-f5d8-47cc-aaa5-c5ec22d04068",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a2da57-eae2-4e1f-b1e4-3b9a25b36bf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06ea9da2-7f10-4f77-8ecb-722355658be3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55227eb4-f2da-4dd7-8d82-2c986b1d0dfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13f26db9-a1cf-4c0c-ae56-9c669541b7b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e542e764-eb49-4bcb-915c-ffaa6bbc2842",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be1dcc0-3b4d-4cdd-8662-5eaf550d16e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20bacb09-4696-498c-b08e-a491151186fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "253769d4-ba2a-4627-a65a-fb7039b84371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3db1673f-9d8c-40ff-9498-cdffd501ecaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85426192-f396-48de-894c-f35e2e193219",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8f47c9-d4fc-45a1-b1fd-66847e02f0a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63e04936-c9cf-4446-8126-e0f82385bd6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "614a5ee5-1a53-467c-831c-948250d38ad6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5dca337-5576-4254-bebe-ee860a45ddf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03fb37a2-04bd-4802-a463-19b44deb79b3",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e8f710-abc9-4f34-91b2-2643e19b64f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d64a7aa0-a4cd-40bc-9cbb-c73e412b0aee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "692713b3-f84e-471b-8f04-3364b2b2cb10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2213e0c4-52d1-4352-9262-ef81791bffba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204d1c17-1220-4bb8-b084-b92386a4366c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db746c19-25f4-46cd-9240-5e144fc07bb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16f18f4e-c95b-481b-ab3f-464a9e373f67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4101113d-1f07-476c-87b4-76a122f58a2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2caeff37-a421-4d6c-abb8-edb376ffb8ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb03f974-334b-480c-b90b-420998f58815",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b635c83-ce5c-4911-bb5a-480687be8785",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3075d159-edde-4b0e-9bae-e890f0fea997"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c753ad-cc46-42f0-bae2-da272c35672b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddb452a1-93ef-459c-8634-86294165f280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3909772d-d7fa-4520-bc1d-5d3d2dd6b20b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c6c3ec4-0c7a-4853-8ca4-ad09705a23e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c274253-ad93-4d5f-81ab-690d416389a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d624431-a665-4a68-8e48-025af2f65b30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b17ed5fc-51c1-4460-aeac-97b467c78041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e950e3a0-a0de-472c-a391-bdf9baf57311",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c01e1d-6e01-47a6-ba42-e9f70cc729e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b669fa25-9b90-4893-8747-84876d66f3a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34897e6f-b961-4714-b133-29e19148be8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38edf989-03c9-49b4-afdc-5905c0216bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd82b61-0ef7-4539-a856-0937b46ee340",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba1b1bd-c1d0-4e10-9c8d-04b1814adfcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39647947-d42f-4fc5-9dd3-68c4b70a11a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e85dd71-18fb-4727-a8c9-c89b0198507f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f12738bb-0236-4afd-b812-a719f83368a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee8a166-253b-499b-97cd-027868bdd974",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e45481b-f452-4d64-a5da-236ae6a85589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1bc4a7b-1ba1-401b-9174-0406553e4995"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce909d38-784a-4e5b-8ee9-d9e3bc54ecd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e11b601-afc1-41cc-94de-0c56c1f29744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f37dc6-ec97-4e73-9459-704aae91051a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ec81f6-e4d9-4c98-b11a-fb446408768d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ad671ad-146f-418e-892e-a2bee37323a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "465b98b6-d699-493d-8f38-90f79362520e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78eb3eaf-0c00-4c5b-a29b-b06908d767de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43322cd6-f6a7-48ac-8930-2a1ef989b852",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b9443f-3ce6-4a31-bd1f-df2f738393c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd53d3da-dc6d-4a93-90e8-8bce68e9fb6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7776854-b57f-454b-9575-ed08cf28dde9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81cfaf68-579e-43ca-b425-dc09aa2b11e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ba8cfb-fb26-4b6e-8d72-d9e815b1b5e5",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0971a33-376b-4545-a434-060a5a362c53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dd0f7ca-7355-41ed-8b01-54edb7e20cac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "717d4d05-c7ce-405f-8a1b-c3b89bfe496e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e1ac31b-e4b1-4658-b9b5-c9cb12574456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41893b53-fa8a-4385-b1b6-47574a322503",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a12b40-685f-4864-89ff-b46a122965d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1dd5f85-2353-4d83-90dc-878a2c43a1fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "426b04fc-2da5-4d2f-b95d-82fe200eb1d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "998ba015-de96-4ec1-900a-3d6b7cfe12aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04351440-35c3-4ade-8ddd-a7080c313964",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20e7cf3b-4de6-4b06-98e4-4be27378031c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fa148ca-8644-4c25-a381-020e9d736bd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e225d9-3b9e-4cfd-862f-85a745a46935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05d62baa-50a8-4a2d-abb0-1e16cda4ec3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee65fb09-9084-4afb-bfa0-30ff6678eea1",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf8dd06-517d-4909-a09c-54dbe6391d60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4280fca-b204-420a-9b74-8c83f7db8b1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d6ba3c-074b-459d-8317-0d4c1eccc440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "522f418d-2e32-4419-96ef-5c1eb708db7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa061f0d-1262-4c4e-8abe-818e8fe8e9ef",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96bdb935-410b-4e35-af92-725de65b2b89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45ad855b-0455-4724-97f0-d31b4122cc5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45974f87-4cbc-4f14-bc44-1dd165165f00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9245885-db76-4e1b-87d8-8abf5859d8e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e728097-85fc-40bf-b464-d0d220f14aba",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b609fc97-3e3e-4deb-b994-c965a20aab59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05c25718-772e-47fb-b1cc-1c6d80d053e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e899e0c-c279-4f83-9984-25883074f853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28f3159d-ce27-4f7e-a190-15e05ea5d9dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031a508b-8104-47d1-ba95-c342fa692ee6",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c7089a-5c19-41c7-8419-bf8a91c0b850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e23d759-fa87-4da1-a9d1-854fe660ce0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a91001b1-9b2e-47e4-9b82-c7de9a602526",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c56f8bbc-b60d-43cf-a8a3-98553207f68e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a5126d-789b-4517-a308-8b97c40c2c50",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb00d6a-e743-44c5-9685-bcab79e0988a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6f3277e-3587-45c1-a016-76a634cd2aed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b449ed63-6a69-4b99-bbf3-fe4b4dda5743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4459115-eb71-432b-85dc-349c3b1d2c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d67b47c4-de33-4b00-b44b-ab7a839d59c0",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89570695-45b0-41a3-ab9d-f29d42559cde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab948910-b7e9-4b71-b665-e25db41469f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f441f3-9136-4c16-bf7b-49b7c52f0552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83c6c53e-318a-4566-9ddb-da8869a9ec2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e731518-8048-4238-8c85-3cbe47883ead",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08fc07f-85c6-4551-ba41-db851caf752d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f133ca58-e91c-4298-ae27-bd41801bda42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc28ee5-9528-4a94-8da4-06cd629f5db0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10b6528e-cfd7-40dd-be10-aaab5a0c4444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eef19aa-c083-4992-8c73-0b3b4c87c6d7",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe18d3c-d873-42ed-8aae-9e8f26730a21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f00b3962-5ea9-44b5-b35a-961069ba8350"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d42a09a-c2bf-412c-8d46-f230813b7bda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acc7bd5c-1d8f-44a0-a8cc-cc397462b25e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d29dac1-7fe7-4b9f-b075-070e07b6bcf2",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6314f473-77b8-4b69-9b42-3ded001d5201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14e86e38-466c-4849-b5cb-b9fe2790f01e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63dccb6b-5c10-437f-886b-b92c6e55e7df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3edbaf7a-8870-4f5f-afc7-39fad8f9f9cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a3a30a-23f1-4fd5-9df8-4708d434f106",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "098e014d-fe43-4596-8834-cb684246fd7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe4dabb-5149-46fd-a8d0-03b77d3b7664"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42801f1-df62-4c5f-8fc7-3f0095fe8407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fecf4d5e-59b6-4604-9dab-a1c196d45e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af93c2d-8a9e-47c6-97a6-7282ac992e6d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d45e06c-0849-432b-986a-ee584a5e9a1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b5f11f8-4865-4fb0-90ed-2f4d2784d595"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8dac0de-6a7e-41d6-955f-75c68c36c4fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "230f1377-de60-4fa6-8d02-4987df7698cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6676f01-1b48-45c4-b4a6-bc66e5a8ddbc",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fbfff43-a730-44df-9050-0bc5f409fcad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23ac94cf-41cd-4133-be94-6366e7a704a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "079cd544-3d3f-48bc-87cf-c141ccfe1003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f56f98f-eff0-4063-b8ba-423c31d44362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60fe4170-b1fe-48ef-9c92-b6b6a373de0e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d2fa22-dcb9-4151-ac14-751d15bb138b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7274cecf-7d4c-451b-a485-d80a6e013b1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6013f825-9f4b-4d29-bbb0-2a73023a465c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58ff9fc5-dc7a-47a1-8536-878f9c100eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddadbe36-dcdc-4e64-9f5f-ef249f9d08e9",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98aae3c-10bf-4221-a393-3bee4f4b9fbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3eb1036-09a4-43b9-9a37-0f9ebac9d7d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a722f9-f571-4a8f-9246-56e9aa7c9b7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87d6a631-8d6c-4671-8b6e-827acbee4c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2e92fd-a918-4c95-86cc-ae02bbe1ff96",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a33e4c2-549f-41fd-ab3d-dc3d171bf82a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da17b42f-1c42-4341-bfd9-e5a81a63d191"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d536977e-68ca-467a-af31-b0742be68fd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f25b88a6-0c7d-4975-8141-25582af89322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03d0bfe-cad7-42fe-8fc3-c8c538fb494d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ca7d5e-bd25-470e-a084-f7d4ee81a95f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a01366e-08af-4490-9284-09146cabb6cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b360740-7161-4eeb-8946-0947c0370782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "261ff408-aa2a-441e-86fe-4216f0aac3df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b69a12-3646-4d45-9615-f6e95e19f47e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6472b33f-48d3-4bd5-a671-0b9ac5cb39e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8216d4dd-d61d-4e4d-ab0c-1d5b9b2c88d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b51565bb-3260-4026-9b7e-f7a658fa60a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "643cf2d4-911b-4626-992f-2d27fda112b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7a18aa-c625-47eb-98e8-647444f2ca64",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f1e6e5-1cb5-4da1-9535-6ecb81c909ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1f118ee-795f-4b6e-99e9-e05e45c3efd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a12dcd4f-a27e-4c3b-8373-93f9b9180745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae450d0e-0e71-4c54-8290-3e980bb41437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7408ddf3-529d-4114-a015-5ac41b0f5b1b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e09ad8b-c581-4946-8164-ab5e85a906f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a4c0912-42ce-4aa1-bede-5c585f4f8179"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea146ab8-f396-4b25-95b4-d265c2b8a93a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca3c820d-fee9-4028-8bb1-d842cd0e6b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3917219d-c78d-46ae-bf32-f0a521cbfca7",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b496112c-abc8-47c2-9f5f-5771789a6aee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d48762f-b4db-496a-84da-e565235485fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16dd3e5-d9fd-47c4-b2d3-88c784df45cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a7093dc-9398-4c4f-93f5-6b97987271fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "293ad266-17f8-461a-9754-0dc98ee2e64e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d4941e-2c24-40cc-b08a-8c711d2298ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b5fa382-3161-4b18-9d3a-57a03880c4ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27fb6e56-8024-45a1-9104-0199378b685a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e6d1d40-07c9-46f4-a731-63ca69517208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb928c55-983c-4e2f-b512-896b0fc88d18",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c58dd5-23cd-4d24-b171-abf9a00115a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "996e8775-ec4c-4508-ba1e-5dd5dbffe2b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7388f74f-bac5-4f8d-8170-6814ab66211e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e331e85-eb8f-4a0b-92fa-e69eea3b4057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41012ea-8b40-43d8-b831-1bf922937615",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dbe2494-8675-4b35-b767-5094e03daa5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "541cafa6-898c-48f6-8f21-1b1bbb73ef20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06684c7-1d4d-4d5a-bd44-80a5cb539041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfc1fef2-6bdc-46dc-a5fd-9a7b9bb72886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0543c15b-d59d-4860-8be5-53f009873af2",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f2a9bc9-cb54-4abb-9e4c-aae68134d5b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4e8eefd-d6cb-4045-af1c-b805254cecaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c61dc2-fead-4232-8474-6ccd0173a33c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92af2c26-8b5f-4659-bb75-7e13010bd56a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2208ce73-3f9a-449b-a198-78286fa1ff3b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b9f6e46-d402-49b7-b8fe-c445eeb09cbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a2750bd-fb70-4bcb-a5ca-4b530d8d1c66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fda8bca-0e13-448b-be6f-2ae6f6aa04bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95ece6ee-9fbd-4eab-8992-0a8e25f1b842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6d3615-837a-49e8-8656-1f648460ab74",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "093fe58a-cdce-4c61-9cfc-3c7f27f31b20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3a6bdb2-4f7f-40ab-9744-d9bd126075d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c54cce-498a-4931-934e-7e73fc289be0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9218f416-3128-4efe-9d32-ced86eae507f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "466bf5fc-fd0e-4198-8382-58bd6a62c7a6",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc31b03-fed1-4ea8-9182-37410b3134a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b5b7b5d-5d5a-4461-bbf7-778aede1f14b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d64e6c-46cd-4c0f-8256-ef6e009f0636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aabb4c8-61e6-4da6-ade7-12768cff8854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95db3af1-1b69-4028-a2a4-9a6a45672649",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa0efb5-3b54-45be-b27e-ae371080d17c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afaec046-2d40-4bb0-ba31-b20f95ba8b9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "175ce836-64c9-4a4e-bcdb-65fe7ef9a1fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1c70717-aeb0-4707-ae7f-2f6025b709a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0de026e-8265-453c-ad3d-2e7273189a6a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff71adb-9bd4-459a-b8c9-0490ba97d19f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df66be59-1331-4ccb-9cc9-436fd723adf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af10b268-ac1c-469d-ae42-1b687a29ff52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea4da087-8080-4885-bbc0-c241ce646f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d007c67-1968-447a-baff-a255c528a9c9",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d62397cf-80e4-4aa6-8af5-06cfca2aaa13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34a7f851-1d21-4ae1-bc23-97d498104cdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d81d344-8bc1-408f-8322-4a7f4a606c6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3a4692e-0cdf-45ed-9bf3-29f2dfbcc675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc5c949-d730-431e-9915-924d7455ba2d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a28c0a4-3bd0-4e09-9468-5a65517d3ed0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e6cbe8a-cedd-47ec-b7a2-6818fb359543"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a69c77-bf22-4d0f-8aff-5b420e806175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d7cdf45-4165-48e0-8922-8f730a571229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "804afd91-6f28-4879-9f44-d2aa2ef6d0f5",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8caee9d-cdba-43e5-a6c5-13b7950311ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3580e215-054d-435c-8630-dd8d312b89da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1801604-7b70-4ebb-8983-dd3f2201e776",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f57c01a-d3f7-49d0-8eba-ddb1c338ea4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5313609e-aa5a-41ea-84ef-637674aa6ca8",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f07216bc-e37b-47ee-b33a-34dfa68a59bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59b81621-3f7c-4eac-9b02-e8449682b2f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "014665a8-a1b1-4241-a61b-e6d616a71268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e761e3cb-5df3-4d31-84ac-c65b1144098b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074ee3da-522d-4c51-8754-0f5dbee4a546",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "339beb1a-09fe-458f-8bec-e072786cd821",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a4c5fb1-dc0b-400d-99cc-148a7b98a87a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f59db5-8321-4e4b-a13a-4ce538efe8d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a049b5d-dabf-4246-9bfe-9098ceae8d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b3d846a-4de9-4060-855f-09a834b71f73",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3e943a-f05a-46c2-8a37-88433792d1fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a45c2c98-c24b-4bfb-91e8-f8213b44a50e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ed7a09-f5fc-40e1-8782-58e73a122d46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9ed720b-3e22-436f-96ee-086cabf9d78e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598d35f6-272f-43bc-9554-34c457999b30",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f42bc19a-117d-4837-86eb-0dc9c37aeac2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60b07bf3-0473-4748-9d70-7d87b18cb7bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d3e21a-0966-4d9a-ad24-713478f8a089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "696f13f3-8a8f-4a10-926f-f0e2bf195e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c766116-2ac5-4f0a-a8bc-2f963462494b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0a5d38-cde7-4f78-855c-c75f890781cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcc5f51e-93fc-4f5f-8d6b-bc1f0d965fdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d714fc15-eb03-4a84-bbc1-ca4d01207cc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc28a59f-03a9-450c-b8ad-287beba38748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98519483-0c71-4b40-bce1-71d876b0abef",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e229a878-a58a-44a2-802b-1383b22ea77c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e350a7b5-dbd1-4358-b8a5-4a76a487c46f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df50e69-dba6-4577-beff-4d2bdf341921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6287b3a-a556-4012-8e59-e9f25320a1d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b826758a-341a-4b0e-ab88-c139f83978ee",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1379e459-404e-4633-8765-05fd1c1d538c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a55d516-5ab3-4a53-b27c-aa67f17f8a77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d4d3406-6761-43fd-817e-b8f6ef63524f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b0b16b8-6d58-4201-be3b-21082ac03991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f4c032-ce24-457b-b41e-22fb15ce3072",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c6be38-e822-4371-9d71-30d1edb7e397",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17d6ee66-5cd4-4271-94f1-f8f4596753a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37cf1965-a94b-4a7c-9069-15cc829dfe1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22b73de8-6399-4f3c-90a7-41f7204f101a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d66e19cc-db4c-40cb-9745-40a25119da75",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d9a6f7-8f31-48f5-82d7-1f06f93c9109",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e7f624b-07ef-43af-8060-01a9671f9594"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0319a689-de1e-493f-8e23-edcebaa45b02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5843210d-04a9-41bf-a7b1-babc3511707a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b759f781-01c4-4abc-99b4-1bb9be0a9f1b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c267b35-91a9-4d33-988f-3e07b02f37fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "098a311f-6221-4f70-ab08-932b1308417d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f553e1-e794-486d-82e0-9ca5690318c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e581952f-fe4f-4841-9578-614fa318a2a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa709e4-acab-4ef9-bfe1-aca547275226",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9416fa94-3b63-4e38-bda9-a22cbb54343b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1eaf0d83-df9e-4f79-b02d-b2c926f597f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7913901d-c942-46eb-af40-5bffbba020e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80afc932-d4ec-4014-bcc6-09872f62dcde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d46cf9-477a-46be-91bd-5e1e063375b4",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fbe4d40-cbd9-4d20-b43c-b32adcf5592b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "460cc5a9-c1c0-44fb-8d86-7e1ea2758130"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7062f1ce-efcc-45c8-949c-7087cac5040e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09f418b5-7a55-4322-8120-ddaf7c2e23ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d41f2e6c-4e69-4541-a7fc-8ce30083ffd7",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39fd10c-147e-47e0-a0d6-2205697ca230",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ded80fce-1672-4d89-aa4d-1584a6fb93f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3280531-5ca1-4c9a-b9c2-e757cdc5f6b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94ce115a-b8f1-491a-8b1b-134df6649493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fcdd13e-e43e-43f7-ac5a-cd937be0b1e6",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df41b26c-9b34-4525-ba2d-1361a9764fe4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9877889-510b-4f87-a4e9-df3e83348491"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47087d42-2066-4630-9d6e-6ba1a729cb2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26e39cb8-33a3-4666-9569-60775ee92fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a41b05-f609-4878-b6c7-a6643efd856c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00440ea-203d-40fb-95f4-d56aa4bd6b28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "832103b3-4dc7-46d1-86d7-4ea443f1a5bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f8e8f1-7b05-4391-b42c-0eedd788a7ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dde7b7c-8809-4eef-9008-079542f4749e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2501306f-e868-447c-b918-2fb8af4ad37a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c512cec-0ba5-4d6c-bf9b-8e9b1b84f894",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e18bce24-eaa6-4b5d-972c-a60087c8b739"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "739466d3-c134-426b-8a27-e13e6d260e89",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b6e5fae-6693-4e78-abe9-864864cd44b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3286678d-8db6-47a6-963a-656edcefcfd9",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d46f12-1ad2-4894-8df2-f66ba968313f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a782b70a-1def-4d6c-b61e-0c1b24159cd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee78a37-0ce3-41f4-8663-99e27f738050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "279caef7-dc41-4bf5-99a9-66fb484a2729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d7e0ac4-8618-45ea-bd08-8280683ed92d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "530c8d1c-49a6-4998-86a4-74f69f3da3d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0954c67-74ff-4abe-92f1-469909f79072"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e721e1c6-e03c-4e97-97f6-c364c2e2f69b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e7c3bcd-bd9b-4fe1-a713-bb4ebb5321f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5882487-f2e8-426b-9313-87ad21486eab",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77eb7132-f088-4c53-a7d2-fcf3471bcf84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "474a28ae-b212-43af-a01b-ea4079bd6ae6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6e45fd-76e1-4e5c-815e-0fcc0702dac2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b6bba8b-4168-48bd-98eb-a30173bb7d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a950de47-05d9-41fd-9300-c4a7aeb9a598",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2946e6a-5f6f-4ed1-b3d5-b436b82be3bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b229b94b-18e8-4b75-8186-2d5c1fa75381"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "615deae9-e290-4b0a-95a4-c0ef0de44e5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8a974e5-12a4-48d9-a2c1-5a8f40a6a0ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba926bf9-aeda-406d-af76-8b7f4805193b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c089461e-2ed1-46b6-a882-5bc4de2642cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bd2d1ee-321a-4bfe-848f-4b8fa2826953"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1e84daa-0e23-479e-b3b3-9b4b022e4bcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23471813-b58a-4f00-a8ae-a64954491202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3014a67-6b88-4e56-a958-4f50d824c2fc",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a268ddc-60d0-40d3-8b80-3a48cdc7dce5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e906a2a1-8c20-4e90-8d61-7e77ff63bfd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b248a9aa-6aec-49e7-90ea-0d4464fd46bc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7f18815-8904-4e32-8e75-f27cc2b61346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd9c2327-5c7c-4b98-a4e8-2626a44c903e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6707a9eb-ad23-4090-9ddb-67a6c3b62bc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5ad3c03-422f-484c-9cfc-cc5b31338975"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a7f0f7e-d415-45f8-960b-b4d9c7506ce8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76a31ce1-ad91-46eb-ad74-e35ae5e43ff0"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19f0a17a-1fc9-49bf-99a9-373e5141b153",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "525cf241-c075-4d63-a813-1baf78b81ef1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "113a2304-1f73-4bb3-aace-7b12bb595e90",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "55f80cf3-fcf7-4bc0-a7cd-199701bf40b7"
                    }
                  }
                ]
              },
              {
                "id": "169e65ef-dddf-4664-9dc3-e95ab3310869",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "771d51fc-b4c8-4529-b285-c914ca311c74",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abab7c26-2a29-476c-872f-4bd2e6462bda",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "361fda9a-734d-4bed-b590-579246c5258d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0206bbac-cf37-4cf4-ae52-4a3f653f723d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bfd3fa7e-ff63-4793-9055-1b4680e9052e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81724648-bb1b-4a38-9489-45d1c1b72dfd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1bbce31-63f8-4319-866d-e7d822f8f231"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad487c60-b256-49cb-af92-c4fa820d81c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78c5bfaa-0533-4704-a578-8c4cad259297"
                    }
                  }
                ]
              },
              {
                "id": "23be0ffa-a83d-42a8-8c67-e2e82fab6557",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "33754875-df79-4946-ab3f-bba62a554fde",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b15a62-e9b3-4173-9cba-592a62beba1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "402f5992-8c85-4c98-af83-16967105615f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d493b421-b911-43ad-b874-7e4b0daaa43e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7baf1f23-7b98-4179-abdb-bf4cdab1f019"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8a681178-7ede-4619-81d7-75b20fd417cb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0a79ec84-7409-451e-90ef-08eb10008cb8",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "af4c59d3-4da2-4e9a-9be4-bd6df76b714b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b684a094-24ea-4e90-9209-9994a7b19b36"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2873215e-3a48-4e56-afee-68f806cfb124",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2104a94-cb30-4d47-84b5-4c5b334e6c3b"
                    }
                  }
                ]
              },
              {
                "id": "6dbdb55c-9dcb-4ba4-9b1f-503584c4ecb1",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9633364-15cb-44b7-8119-db19009119de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6e0cadc2-f3b5-4421-a9fb-53073b2555b2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a4a5e49-8104-402e-828d-90ce415b6254",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87ec9560-de85-434c-8386-4db96e2dd6f0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "97b0d3b0-390b-47cd-a07d-7025a4780d4d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b418e77d-8f9e-472b-957d-cffbc56aa40f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "92c9a309-060f-4b71-b5ea-c90a0dede387",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f4737a3f-aa44-4dc8-b7d2-7546690e83ba"
            }
          }
        ]
      },
      {
        "id": "19cc22ac-f798-425f-b377-348544a04353",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f0df8b21-3cc2-4009-87d7-cfe0ffae2097",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e336d572-d49f-4dfd-ad7c-3efb6259c3fb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f982330a-80ca-4190-afbc-145b7c98cdd2",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c4e6d1-642a-4e23-8389-a3501acd7d13",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "cb4b9b43-785c-4912-8ff7-a6a5cec43bf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e34dbb-666a-49ae-a15f-b4f43f8e6c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "38033a7f-9913-4ba7-a7fb-9830237a0603"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c577c04-66ed-4a59-bc04-762130b51e27",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4130c8b3-5875-4382-b554-a2174ced60eb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b29cfcf-176c-4944-83f6-dff757f95047",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1176e6b-b8c4-4daf-911c-dc074abd80a2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e4458f0c-3ec7-468d-a04d-eee8ab59ede9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9c56a9ba-41fd-4e0c-8dca-d38fb8b88cff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "89421a53-9c33-4b15-aa1a-f5723c3df150",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2c79aba1-bd05-45bd-ab83-26a280c82da2"
            }
          }
        ]
      },
      {
        "id": "9acaf4e1-b519-478e-8556-e47d2272c6cb",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "f6a10ba9-c1ee-4a68-9bc0-b2aa25b9c609",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b3de7901-f63e-4593-b054-a6f3692ba1b5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4741695c-a5ae-4d51-8754-356bb4bcc0b9",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d23fa50d-19fc-49f5-94b4-792725105672",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ab1485f-84a8-40e8-92e1-cb46e155551d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0730f4e4-4a78-4e14-aa74-cf2e93d314e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32878a03-bd22-4d88-b862-b77c380567e0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa2cf009-b74a-4eb1-8556-56299eab3725",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b088a1d-fab9-4b47-a458-ca4d4327e14b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe8fbe39-46d8-4b94-972f-433b8d2f918e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb1a8c2a-8596-4470-81ca-487f4524c898"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f8015f13-d06d-4c99-a777-70b35b072ef7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bdddfbe9-937c-4287-b16f-f58b650abcb8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5d13a287-4138-4481-9a20-653e74fa1b15",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1b1288c0-3767-4324-b614-1993ec7e410f"
            }
          }
        ]
      },
      {
        "id": "13f762c5-4350-4266-8e1c-10a8321ba7c2",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8f6b3188-a0af-47d4-84a2-ba7c889c9639",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5f16b909-bb50-47d8-9085-3b216b00e44c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "22569fe6-b164-41c8-8df3-e3030d6b996f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5a6384-ae58-40ab-a354-841c2bdc13d3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6f1dbb9-c144-4736-98a9-c0f664b587a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "616d0dcd-7ccc-4740-8ea9-433ca600b2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "843bfba4-0c22-480c-82bd-3cf6cad4c747"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e499f547-b75c-4c8f-abcd-17acb96f10c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b55d576-9109-43ef-b333-5040b5993a65"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6fdc165c-e5a2-40a4-a7f2-23b9ea3db4e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7054060-c0b6-4f2d-80bf-01d5b2511c6c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a3fe234a-1641-4137-beee-0c45bd666edd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9456774c-a872-4095-ae26-c7f8918794af"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2da80a3b-2247-492e-ac11-0170a7e7c7f6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3d8d3345-d693-41ab-bd50-7756c4557b52"
            }
          }
        ]
      },
      {
        "id": "0e941a15-5a90-40f3-9a2a-6d24de6e40ff",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f1c13061-0371-4d9b-9ad0-da4ca46d2d33",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "34fb958a-ec24-4cd1-bd75-0a9e2adfa8a4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "21d9fac2-acf3-4290-b36f-df34fa142597",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2d14ecf7-aa39-4207-b81b-f6524d05165d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c19d7de-f3f1-4f81-b650-607dc0242347",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 127.65964912280701,
      "responseMin": 10,
      "responseMax": 12952,
      "responseSd": 808.8838660294102,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1702255009740,
      "completed": 1702255055547
    },
    "executions": [
      {
        "id": "19559cdf-8772-4623-a763-65b9a22fffd3",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5c8bcb58-40dd-4576-8ea9-bbccb732b24e",
          "httpRequestId": "b9f95a95-8645-4bdd-8b7f-fa65e50106e2"
        },
        "item": {
          "id": "19559cdf-8772-4623-a763-65b9a22fffd3",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d878e9d5-bbaf-48f4-a750-054938e28f73",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 0
        }
      },
      {
        "id": "d1238a48-e448-4233-b15b-363272d99cb5",
        "cursor": {
          "ref": "0ba59fbe-13c2-4da8-9ce6-d1e165524b3d",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3a1996b8-ebed-4e52-8191-e4a793f13584"
        },
        "item": {
          "id": "d1238a48-e448-4233-b15b-363272d99cb5",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ac464d90-d5e2-4ede-8430-bacf2841346c",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "6def9413-3476-4bf5-a9f6-fe4246692306",
        "cursor": {
          "ref": "0426cebf-0cd7-4d4f-8d14-beb83422517a",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "845cf1b4-10f7-40cc-b4ed-06a2f5464e19"
        },
        "item": {
          "id": "6def9413-3476-4bf5-a9f6-fe4246692306",
          "name": "did_json"
        },
        "response": {
          "id": "8bbc9c40-5673-48d3-9dd0-5a3df2acc1d4",
          "status": "OK",
          "code": 200,
          "responseTime": 356,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e64eca31-f0a0-44af-81dd-ff52da5bd54c",
        "cursor": {
          "ref": "166692b6-7026-462d-a567-12342a7e591e",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "27d3c730-4891-4363-bd73-c97775b0f605"
        },
        "item": {
          "id": "e64eca31-f0a0-44af-81dd-ff52da5bd54c",
          "name": "did:invalid"
        },
        "response": {
          "id": "767b7f3c-65ed-4a29-b2bc-f6ce1d5a43af",
          "status": "Not Found",
          "code": 404,
          "responseTime": 994,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e64eca31-f0a0-44af-81dd-ff52da5bd54c",
        "cursor": {
          "ref": "166692b6-7026-462d-a567-12342a7e591e",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "27d3c730-4891-4363-bd73-c97775b0f605"
        },
        "item": {
          "id": "e64eca31-f0a0-44af-81dd-ff52da5bd54c",
          "name": "did:invalid"
        },
        "response": {
          "id": "767b7f3c-65ed-4a29-b2bc-f6ce1d5a43af",
          "status": "Not Found",
          "code": 404,
          "responseTime": 994,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2806271-97c0-446d-8cb1-cc8c9533137e",
        "cursor": {
          "ref": "00544bb3-b007-4c41-b9b3-d92302be4cd0",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "02c38e28-36fd-4c9a-ad33-e37b6c5d9e45"
        },
        "item": {
          "id": "f2806271-97c0-446d-8cb1-cc8c9533137e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "4e9a10f2-8ecf-49e8-9d21-43fb0d1963a3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 48,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed3f2519-7c8a-4e94-acf8-85b5eb6244db",
        "cursor": {
          "ref": "4a6c920b-87d0-4942-b87d-abb648bbb81e",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f4a4d1d9-b222-4ea6-9917-580e80620999"
        },
        "item": {
          "id": "ed3f2519-7c8a-4e94-acf8-85b5eb6244db",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1823d8eb-9beb-4950-8a7a-b50191c1595a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 50,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e8a222-b60d-492d-b8c7-bbf9b84fff6b",
        "cursor": {
          "ref": "86c92679-8b69-4b35-87a7-a89420e8687b",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e8f4a7e9-58fa-48b8-a459-6c40e9781b15"
        },
        "item": {
          "id": "b9e8a222-b60d-492d-b8c7-bbf9b84fff6b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ae870f82-6693-4c79-94dd-f3b4332e1139",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01eded17-7d84-4847-8ac4-e54297b85f99",
        "cursor": {
          "ref": "1cce62c4-f80a-43ee-bafd-a9b2a785f364",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9292010c-7810-492e-be3f-d8d0bebb5d97"
        },
        "item": {
          "id": "01eded17-7d84-4847-8ac4-e54297b85f99",
          "name": "identifiers"
        },
        "response": {
          "id": "dfcbbcb5-51e6-42c4-8564-114172be4d5d",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ce4dd6-7a8c-4e80-be8b-33ee7f8aac1e",
        "cursor": {
          "ref": "e2a5cd08-0b7d-4f05-85f3-6e94514c6989",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8e6a2b58-359e-49cc-883e-253a243106d6"
        },
        "item": {
          "id": "37ce4dd6-7a8c-4e80-be8b-33ee7f8aac1e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9a7d9f0e-8d80-414f-9ff5-80553cbc806a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae37c36-6a10-4c17-ab20-97930d689372",
        "cursor": {
          "ref": "a80a0e60-f666-4874-befe-c9b82c39a95a",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a0acbc32-7122-4bb1-ba36-865c12600d14"
        },
        "item": {
          "id": "2ae37c36-6a10-4c17-ab20-97930d689372",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "56cc776d-44ee-4a52-87b8-d5dd22ef874d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c3ca29-1aad-4adf-8c4f-e5405bcdfe14",
        "cursor": {
          "ref": "a2137864-0515-4507-9949-dca1a368bcbb",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7739bb1f-c380-4920-a130-19ee614e0250"
        },
        "item": {
          "id": "f7c3ca29-1aad-4adf-8c4f-e5405bcdfe14",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e20e93c9-653e-4cd0-a2ee-180c45c9ae4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4db46ac-5358-4999-842b-adffc1197518",
        "cursor": {
          "ref": "56adb8d9-d37f-47f4-b155-74d57333e2a2",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "69f30fcf-60f2-4d3f-b79b-d9f52e50fc92"
        },
        "item": {
          "id": "b4db46ac-5358-4999-842b-adffc1197518",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ec76e659-2d0d-4c85-82ad-01d314959156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f0b4d6-6f15-4554-8e9e-adbd3b09deeb",
        "cursor": {
          "ref": "0c168b0a-8020-4ecf-89ff-97cfce15a8fe",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "3660c760-3a08-4f29-ae4f-8baa766a5377"
        },
        "item": {
          "id": "27f0b4d6-6f15-4554-8e9e-adbd3b09deeb",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d2d6d524-b95f-4bec-9cf3-633765956c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb21259-ad32-4322-a5e4-d0549614a529",
        "cursor": {
          "ref": "f0f6ece6-0b95-40b4-8249-0749324fc516",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e31d3511-3ba6-4587-ab75-86d2b9be0d57"
        },
        "item": {
          "id": "dcb21259-ad32-4322-a5e4-d0549614a529",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ddae8fec-7f15-453f-89ab-e54dfc096331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f0034c-4b81-4d47-958c-2bea8d7c5ccf",
        "cursor": {
          "ref": "083f87c0-0432-487f-a231-e733d0dfdeb5",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8a225ea9-290d-400f-a413-cbd837a7b10f"
        },
        "item": {
          "id": "62f0034c-4b81-4d47-958c-2bea8d7c5ccf",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "da4e72c7-d66a-4aad-a52a-2321ccc3c590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17f184f-e574-4c3e-84c7-dc164f6ea9ea",
        "cursor": {
          "ref": "54c2a2df-ccce-4622-80c9-25b97cd36ed3",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "952115d9-c002-47df-8a8d-0aa1c6e747fb"
        },
        "item": {
          "id": "d17f184f-e574-4c3e-84c7-dc164f6ea9ea",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "cfdd32c9-ab71-4828-8661-ffbed616c68b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7959ea84-ddbf-435b-8351-7120dfc4965c",
        "cursor": {
          "ref": "d1aaf35f-e666-4c1b-a271-2689c8237cf7",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "4718c16a-c1d5-4e30-acbf-30031891feed"
        },
        "item": {
          "id": "7959ea84-ddbf-435b-8351-7120dfc4965c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "711eaad5-5f14-4ac7-b4d1-b06c89c23131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0adef821-dd8b-4416-bca6-ca073e2527e0",
        "cursor": {
          "ref": "cb0ed430-2a3d-463c-a6e4-52d8852dfd4e",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f51bde4a-1e08-4403-a314-b58e274a3898"
        },
        "item": {
          "id": "0adef821-dd8b-4416-bca6-ca073e2527e0",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "08195827-36ee-444b-971a-d94196669528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70245040-74d0-42ad-aab2-5c990039590a",
        "cursor": {
          "ref": "dfa6cd83-a877-4186-a17f-fee55d39df36",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f5da4657-94c2-4e07-bb07-4c14401c9ca1"
        },
        "item": {
          "id": "70245040-74d0-42ad-aab2-5c990039590a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d0583539-07d8-4595-8d78-ef5b5f50efdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6904faa-2756-48d8-973d-481c1e771ff1",
        "cursor": {
          "ref": "951748f0-3765-49b3-89d8-fb5f3a647602",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "79e4fc37-5250-46c9-9e3f-ab3789dd03d3"
        },
        "item": {
          "id": "b6904faa-2756-48d8-973d-481c1e771ff1",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "76c3b610-ded0-4838-8add-a83f7b406686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc88e8f9-4bec-4602-9bb6-8389e9d4ab66",
        "cursor": {
          "ref": "54138f36-5d16-4a44-a796-bc0fabe66082",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1336617d-8e8f-4faf-bcfc-3af3ae7e8d3d"
        },
        "item": {
          "id": "fc88e8f9-4bec-4602-9bb6-8389e9d4ab66",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d3dee440-ea35-4e6b-8337-7c7a096d743c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ddf698b-3bc9-40db-8615-639c85321978",
        "cursor": {
          "ref": "2d7026be-d1c8-4abd-af85-98cb24e61a00",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7426783c-c62e-4d11-810f-ba38670ac0f0"
        },
        "item": {
          "id": "9ddf698b-3bc9-40db-8615-639c85321978",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "fc570e19-0330-4571-80ff-a5bdc0e4ef8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03cf6cf0-c3e8-4490-8b06-7944a51c3c98",
        "cursor": {
          "ref": "f7a96a1f-a5bf-4b1a-9a2c-f01a72bba0a5",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "311371ee-ba7b-406d-8685-64d587b73ef0"
        },
        "item": {
          "id": "03cf6cf0-c3e8-4490-8b06-7944a51c3c98",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8eb70386-dfbb-4076-a4d2-ec8ae3c4c5fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de5dedea-cde9-49c6-beb4-5d19ecea5b17",
        "cursor": {
          "ref": "b5069870-f539-4507-8f5f-7da9b37c17f9",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c35320e8-f62b-424e-bda2-0b696cb9b105"
        },
        "item": {
          "id": "de5dedea-cde9-49c6-beb4-5d19ecea5b17",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8602ede2-1f9b-49a8-a0df-1c0bc972fefb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e50b7f-591e-4957-a18f-a6ff086ce417",
        "cursor": {
          "ref": "5e6dfb1c-2a54-409c-932a-b1c161704416",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e75be282-82ff-4c9f-8aac-f22c34666a7d"
        },
        "item": {
          "id": "32e50b7f-591e-4957-a18f-a6ff086ce417",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "5f84d601-3a86-492c-91fd-472443da1073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbbf5ae4-4340-4599-a703-accb28808b94",
        "cursor": {
          "ref": "a8fe07ef-ba4f-4334-bc1c-782069979eaa",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5e44a4c0-564c-4e4f-93c7-003192adb4a7"
        },
        "item": {
          "id": "bbbf5ae4-4340-4599-a703-accb28808b94",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a93e68e5-7541-471d-b2c7-1d841267939f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e649b1-2cf2-4a9a-adcb-bd1cd0dc8440",
        "cursor": {
          "ref": "85bf8194-ddba-4b06-9cc9-cccd62b31759",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8e8d08b2-7b9d-448a-a8a2-bbfd13a55f25"
        },
        "item": {
          "id": "51e649b1-2cf2-4a9a-adcb-bd1cd0dc8440",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "87c6ff9b-1996-4398-84a1-1ab82106aef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b1347cd-bfbc-4efb-a8c2-95bd61d2065c",
        "cursor": {
          "ref": "a80d6a8d-5117-4235-aee3-fff25acd7cb7",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "0796a0df-485c-42f0-b2da-a4f8f0d2b4d6"
        },
        "item": {
          "id": "9b1347cd-bfbc-4efb-a8c2-95bd61d2065c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "dd6aa526-f48c-422e-9e8b-8172b9705529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23cca48e-83f9-4a8c-84a0-0f5f87ca6e93",
        "cursor": {
          "ref": "7dacd761-2bff-4609-8312-6fd373a98b59",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "968d22fe-7ab4-45c4-bf94-16299e8d3daf"
        },
        "item": {
          "id": "23cca48e-83f9-4a8c-84a0-0f5f87ca6e93",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2f2cf3d2-418d-4fad-a578-fefce59cc3fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80737c1-5833-4748-b1ce-4565ca736847",
        "cursor": {
          "ref": "b55c9300-6bfc-4650-81cf-5d71fe70fd39",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c2a58029-0b1c-4b89-8042-3704a4b69329"
        },
        "item": {
          "id": "d80737c1-5833-4748-b1ce-4565ca736847",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "49141158-d636-469c-abdf-85cb1242a646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b89fa0-4a76-4958-a2e8-53fcf152a64f",
        "cursor": {
          "ref": "433b4824-b685-4e6f-ab4a-4a9b3d0fd04c",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "3e17ec72-732d-4215-b5ac-66c8ec704f36"
        },
        "item": {
          "id": "03b89fa0-4a76-4958-a2e8-53fcf152a64f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "cba4537e-1891-4fc2-9933-e62da0f35d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65a1249-51ce-4dcf-81ae-cd84f20d0672",
        "cursor": {
          "ref": "2e854069-1f21-499d-b022-b46d6500a9a3",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d2645cd5-8527-4692-b0a1-5280a730cd94"
        },
        "item": {
          "id": "b65a1249-51ce-4dcf-81ae-cd84f20d0672",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "01440719-9f0a-4840-b578-eeb901413882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa2a1082-8b2c-4d9d-92fc-e08e4ddd61a5",
        "cursor": {
          "ref": "69b8cef9-53f2-4a04-9045-efe72e90500b",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f06027e8-9e2d-4d29-a495-a6a3c637a582"
        },
        "item": {
          "id": "fa2a1082-8b2c-4d9d-92fc-e08e4ddd61a5",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f19ccfae-c15a-4740-92e9-7ec6c1548ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c3c875-522e-4064-9699-27af5f52eb05",
        "cursor": {
          "ref": "cc7709cb-2354-4244-b880-e4888a55e2e3",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a1226d76-20ca-4741-9467-d498f7e3b5dd"
        },
        "item": {
          "id": "40c3c875-522e-4064-9699-27af5f52eb05",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0f4b755a-06db-4960-932a-c898df0b8b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcaaf077-241f-43ea-8423-84765710ae34",
        "cursor": {
          "ref": "ce1a9b47-e660-4062-a0a9-9aa65f8c5355",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "209c0c10-94e6-4ba5-a335-0967008baf63"
        },
        "item": {
          "id": "bcaaf077-241f-43ea-8423-84765710ae34",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "383a0792-9ca3-405d-a822-24f0dc405c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "522e2088-2605-4730-893b-cb7e30b669a3",
        "cursor": {
          "ref": "bb6bf60b-0d75-43d4-8e46-8147bbe303e2",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "823f7dfb-eecd-4d0c-ba91-5eacd2398171"
        },
        "item": {
          "id": "522e2088-2605-4730-893b-cb7e30b669a3",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c669ea87-1ed0-4135-8798-a427de53df16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00edbc8e-41ea-4961-94cc-82d51f58ab73",
        "cursor": {
          "ref": "171d754a-9df1-4f04-8bba-c2b3db68ceed",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4355b480-29ad-4f84-920e-3a5569d7dcc5"
        },
        "item": {
          "id": "00edbc8e-41ea-4961-94cc-82d51f58ab73",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "17e8fbb7-b963-4b85-9e08-be8396d4e0be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd24e99b-1fa1-429c-ac1e-3e2338d01d56",
        "cursor": {
          "ref": "ca4fa540-e0fd-462f-9a18-a1808f54d716",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "91295e83-b600-4c47-be72-c4135542a3a4"
        },
        "item": {
          "id": "dd24e99b-1fa1-429c-ac1e-3e2338d01d56",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1b2a97aa-503b-461c-b4da-5cc1f8d69276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e4e511-19c5-459c-99ad-8887d650080c",
        "cursor": {
          "ref": "a724bb13-dfe2-4d83-a956-357f607591a1",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "87c753ba-b4c0-4858-9613-7ee525ca934d"
        },
        "item": {
          "id": "e8e4e511-19c5-459c-99ad-8887d650080c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "76d43416-1f58-439b-9845-bba30173cca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 132,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59736e41-c2f0-457f-b52d-d99dc503cd6d",
        "cursor": {
          "ref": "1d22848e-8f06-4cca-b6e5-0ed114355269",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "0dca0048-4a36-42b6-bf84-71b117351476"
        },
        "item": {
          "id": "59736e41-c2f0-457f-b52d-d99dc503cd6d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "198c8fab-8533-4c1d-ab81-b5f7a35f0a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a58894f1-0926-46a9-a1d5-9f0efef02829",
        "cursor": {
          "ref": "04813b43-2ecd-4e4a-bad7-4f50529b6ec6",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "54f07180-1b4f-4ff2-8fe1-c9683602b73d"
        },
        "item": {
          "id": "a58894f1-0926-46a9-a1d5-9f0efef02829",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "33fdad3e-265c-430d-b974-c407bb9871aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7e56a4-a0ae-4db1-a4e8-e5ba9e8d52ce",
        "cursor": {
          "ref": "80948e5d-013a-4681-abfe-3a2d40b1e0ec",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d476d490-6c7c-43c2-aede-47bca445373d"
        },
        "item": {
          "id": "4c7e56a4-a0ae-4db1-a4e8-e5ba9e8d52ce",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "29a1117f-92a3-4085-8956-d2ed3c5b7ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d4b22d-6bbf-43da-96c3-1ed8df6a5f84",
        "cursor": {
          "ref": "583e74ea-f4c4-4811-8e86-96cfa7be1760",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e0d0fcc1-93d6-42d7-b635-180969185212"
        },
        "item": {
          "id": "e2d4b22d-6bbf-43da-96c3-1ed8df6a5f84",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c111d849-45fa-4043-b30e-a0ca120f66c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46660ea6-3d2b-4442-851a-599b588e36d7",
        "cursor": {
          "ref": "b7f3a902-8af5-4845-8ad1-fa5cbe7b917b",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "fb31d9cb-b2d7-4a2d-83b0-7a7a7411f6bd"
        },
        "item": {
          "id": "46660ea6-3d2b-4442-851a-599b588e36d7",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "7978de69-bb61-491d-82e9-2590cee48fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b923933-1465-4c7e-bd6c-cc4074cda92d",
        "cursor": {
          "ref": "1e55f6e8-3f23-492d-a9ea-b62b487a10ee",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "69368961-0179-4749-ae1f-bb0c69eb0d98"
        },
        "item": {
          "id": "1b923933-1465-4c7e-bd6c-cc4074cda92d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e7fa8c8c-94ea-40d1-a2db-89bc18f4ea40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "643b432a-15e6-46d4-9cee-1950bd25f98f",
        "cursor": {
          "ref": "e443be84-ae93-4d72-bcc5-26056c3e8410",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2c28db69-4517-489a-80b4-703b11c8d999"
        },
        "item": {
          "id": "643b432a-15e6-46d4-9cee-1950bd25f98f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5c3adf9f-81e2-4a14-9b69-55f2ceef00ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f03e9a-2609-479f-a2e1-e9f4d1b24350",
        "cursor": {
          "ref": "08f9069f-dfb0-4fa2-b76f-7ca7422d91de",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7c179ab0-bf5e-4470-8947-2a221faec1ec"
        },
        "item": {
          "id": "16f03e9a-2609-479f-a2e1-e9f4d1b24350",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "fc52048c-01fb-4a42-8f93-21cadc685500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e65a4277-589f-4c38-9e2a-7d4e6a861c2c",
        "cursor": {
          "ref": "1f119402-8612-488a-a6ec-270f52c91a39",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6039e5fe-28bc-4c3b-8466-66a300d9e6ad"
        },
        "item": {
          "id": "e65a4277-589f-4c38-9e2a-7d4e6a861c2c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "2be2e42a-b34f-4d04-acff-f2b132eb6dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423507c2-2d0f-4659-acf4-9176925fd7a3",
        "cursor": {
          "ref": "7fd7add6-b68f-4d2b-9bb1-ff73cefc7240",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f930f1b1-0244-489e-81de-e16f3e42aa2c"
        },
        "item": {
          "id": "423507c2-2d0f-4659-acf4-9176925fd7a3",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e6887c6b-566e-436d-9ba5-848534245a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa3d940-f92e-42cd-a0e1-027f2863ba10",
        "cursor": {
          "ref": "6bcb3f5f-dbaf-456b-a648-ceac0e951d23",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "020c320f-9e72-4d9a-accd-c72239df5906"
        },
        "item": {
          "id": "afa3d940-f92e-42cd-a0e1-027f2863ba10",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "50a99b85-746e-4855-8378-0746bfaa1f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1b4f5a-cd41-471d-8200-244a463f0a32",
        "cursor": {
          "ref": "dbe6e9ec-9108-437f-91cb-f7d4f30bfaf3",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "bb0e1348-37f9-4b36-8fb1-3d208787f038"
        },
        "item": {
          "id": "1d1b4f5a-cd41-471d-8200-244a463f0a32",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e07ca991-2307-4a20-9d8c-e4d6f4cd9d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779b5527-b78d-4eab-8f13-08e581b3d27d",
        "cursor": {
          "ref": "b20d71af-1da1-4761-8da2-6fc94fc88878",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ab4742c4-f839-4e7d-baca-f17a43527f4d"
        },
        "item": {
          "id": "779b5527-b78d-4eab-8f13-08e581b3d27d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "7ff6e6fe-4514-48da-b3e9-0c38794e121f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44aba96a-a500-4478-aa1a-a94fe2eb7568",
        "cursor": {
          "ref": "c31cbfe1-946e-4841-9c8a-1fa6ac5aa2a4",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "90e457af-86a4-471a-b5e0-291742bb6804"
        },
        "item": {
          "id": "44aba96a-a500-4478-aa1a-a94fe2eb7568",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "4c92b33c-4ba1-4b73-b363-1b10d140b9b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "173583cd-de66-4a96-b82c-f0c295b78983",
        "cursor": {
          "ref": "5cff1cfb-7f51-4b5c-8337-807e8ef41946",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "46bb2dff-24bf-441d-a02b-0466d451fc06"
        },
        "item": {
          "id": "173583cd-de66-4a96-b82c-f0c295b78983",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d132a483-cf9f-48b9-8041-76aa2d4814ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f6a156-5d12-4bdb-822d-675f73e6d0b2",
        "cursor": {
          "ref": "34c2864b-7baf-46e6-9b6a-8b32613be668",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "adfd85b0-06ab-4b08-986a-1b73cac4942d"
        },
        "item": {
          "id": "75f6a156-5d12-4bdb-822d-675f73e6d0b2",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "5b48c5c3-fdf6-4c5e-8f4d-900c49e9fb2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc60a71-1c48-4d0c-9adf-dcd4b52d1436",
        "cursor": {
          "ref": "dc55cfd9-1f33-43c8-a7e3-fab97a968909",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8ba23036-960e-49ee-ab3d-5098a5e5539e"
        },
        "item": {
          "id": "7bc60a71-1c48-4d0c-9adf-dcd4b52d1436",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7a310198-5fca-4352-b600-1da68c0845a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9e7902-8dac-4019-bc15-db45dac079d2",
        "cursor": {
          "ref": "1e4c74a9-0a32-4307-9c3d-078ef0ee9f41",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "346c0f86-d165-4da5-8cdb-1784f68910c1"
        },
        "item": {
          "id": "5f9e7902-8dac-4019-bc15-db45dac079d2",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "7a9395b1-39ef-4cf8-b353-751c3f1ce747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46cc0722-ea65-43b3-bfb2-c4af224c0729",
        "cursor": {
          "ref": "84e7a2d5-3f47-48db-9f07-be16b6870894",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c5439fbf-b62e-45dd-96f3-f5cd86dba0d7"
        },
        "item": {
          "id": "46cc0722-ea65-43b3-bfb2-c4af224c0729",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "58cd4b6e-635c-4dcc-96db-0ffcc4056770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0dde66b-f2cd-4040-b8df-1940932d63c5",
        "cursor": {
          "ref": "79a8ffb0-9be9-4b68-9a00-96179c07eaab",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "623ac1cd-cf4e-46a4-b3aa-6b7ecdf2ccb0"
        },
        "item": {
          "id": "f0dde66b-f2cd-4040-b8df-1940932d63c5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "62ed5de9-e274-4d23-805e-bf238ede8b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7835f801-b513-4a6b-8901-05b11f991e00",
        "cursor": {
          "ref": "f79ec394-5a6b-4f74-a878-79b425fb3cfe",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "0a4f0439-651f-448e-8eb5-ad0bb1bf61f6"
        },
        "item": {
          "id": "7835f801-b513-4a6b-8901-05b11f991e00",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "232eb324-6b3a-4b09-b93f-59ade876e3bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f5fb40-c01d-45bf-b54e-65647abb1c8f",
        "cursor": {
          "ref": "17aba50e-e3ad-4c42-9867-708c402cf520",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f029923b-98bb-4963-8954-34e4bea31f4e"
        },
        "item": {
          "id": "a6f5fb40-c01d-45bf-b54e-65647abb1c8f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e512d5a0-8a74-4332-957b-5c0afc7be579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3154ba3a-17c4-4416-963b-95a3728b23af",
        "cursor": {
          "ref": "53dce45d-cca6-4ee8-b734-5e6b27144e4b",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6bb97830-a408-4701-9832-e5fa07c6ee29"
        },
        "item": {
          "id": "3154ba3a-17c4-4416-963b-95a3728b23af",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8fcfdac1-76e3-4bf3-9e87-99afdceee522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2bf0251-5a3f-4e76-ace0-daf09d9b8753",
        "cursor": {
          "ref": "30a96b19-cddc-4b3a-b078-87e6cbb12b30",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "895fde24-e125-4547-a964-8113bb5aa429"
        },
        "item": {
          "id": "d2bf0251-5a3f-4e76-ace0-daf09d9b8753",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0228e617-c5dc-45a8-a4f6-631e76702e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fcee5df-426b-4b3a-b169-8250fdbb93f4",
        "cursor": {
          "ref": "47263fb4-4520-4725-a714-9032842902bf",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ecc6a2c9-f05d-474e-b17f-9acc184d61fe"
        },
        "item": {
          "id": "8fcee5df-426b-4b3a-b169-8250fdbb93f4",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "02513482-389a-43fa-8ede-50ce9743c5fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ab352d-7dea-4ffa-bc85-4a4acc7ff5a7",
        "cursor": {
          "ref": "3adb6419-6e1c-45c8-b5c7-d9042b399209",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1619858e-13ab-47e8-8068-0ca11b2cb506"
        },
        "item": {
          "id": "87ab352d-7dea-4ffa-bc85-4a4acc7ff5a7",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2222f796-f10d-4899-90c9-b62b1aace2cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d97ec7-46bb-4fdc-9f52-1062908c7092",
        "cursor": {
          "ref": "a70d1446-28eb-4cd2-8b30-eb940dbe304b",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d92d3416-116f-4b3d-b349-8eb41ba1c3a9"
        },
        "item": {
          "id": "03d97ec7-46bb-4fdc-9f52-1062908c7092",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "a076161a-abf5-48a2-b0cd-37553b4781c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b91ad9aa-1cc0-49fb-b0c7-0fee06e9a9ab",
        "cursor": {
          "ref": "77f140a8-cc97-45d9-bc41-6395b57f33ae",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f03a3c7d-3797-4f2a-a80f-c41204fd3b1a"
        },
        "item": {
          "id": "b91ad9aa-1cc0-49fb-b0c7-0fee06e9a9ab",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "75533da7-9435-448f-99f4-353bea22e7a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e07d5e-9610-41f8-a5c8-92d26363cc97",
        "cursor": {
          "ref": "b99905d6-e5a9-44b5-99f9-bad8cf9d9aaa",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3e11b0a1-5432-46e7-aa12-2043d4d42774"
        },
        "item": {
          "id": "a1e07d5e-9610-41f8-a5c8-92d26363cc97",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "bd22207c-c286-468c-8d60-afdb7118f1ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e420818a-444a-465c-b5ba-8026a8869566",
        "cursor": {
          "ref": "b6fbfef9-d059-4c0c-9efa-db13be4d4911",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b7bfa330-5850-441f-9d26-70289ba22182"
        },
        "item": {
          "id": "e420818a-444a-465c-b5ba-8026a8869566",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "2c9a670c-3013-4176-b445-c8020827faca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d1c3c2-580d-4fed-9f46-0dbc5fce398a",
        "cursor": {
          "ref": "00bfbe9b-41f1-47ce-8ca6-d2cee13bdb9b",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "072e92cb-dc93-46dc-92bb-34b4079ceb81"
        },
        "item": {
          "id": "e4d1c3c2-580d-4fed-9f46-0dbc5fce398a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b6426fb7-ebc7-4ac2-a276-c382f6e76e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f95f818-4b4c-452e-92a3-d61ff3bea170",
        "cursor": {
          "ref": "67fb0717-3976-4a2e-8e07-b906781ce6d8",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1ef9d7c4-ef4e-478c-8b88-a31fec562133"
        },
        "item": {
          "id": "8f95f818-4b4c-452e-92a3-d61ff3bea170",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ddc29fb0-d339-4744-b4f0-12811663422b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce51c684-d471-4dd4-9917-c22d2e9a7b12",
        "cursor": {
          "ref": "b59c6fb7-ec76-4c02-bb64-ea6bbf4ffddc",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e1794fee-8cf9-49b6-8668-01bb97c5dcd8"
        },
        "item": {
          "id": "ce51c684-d471-4dd4-9917-c22d2e9a7b12",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e8ef3688-2d26-41b4-a211-e6adb4a15e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb56356-1003-4919-aa97-c60f180c9684",
        "cursor": {
          "ref": "e74b3c71-1f3d-4832-91a8-ab7a5da5fc27",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "498a8df2-4f72-4d77-9163-aa81d4ca5568"
        },
        "item": {
          "id": "bbb56356-1003-4919-aa97-c60f180c9684",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "11ce1ebc-6832-4cb2-ad76-aec3e5b3366e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a347dcb-0c80-4d6e-b9b5-aaed63d928e6",
        "cursor": {
          "ref": "9e6b76e1-19db-47d5-af81-7b996ea578d0",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "dd4e9a69-376f-42e0-9086-1cc7e2e83e3a"
        },
        "item": {
          "id": "8a347dcb-0c80-4d6e-b9b5-aaed63d928e6",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7585c645-f054-478d-8bca-e600a9073c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6138a08-d808-461a-9051-68757f282712",
        "cursor": {
          "ref": "eb2f4eda-965f-447a-a59b-d0531a7dc4d2",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "87b3d877-155a-4670-bf8c-5270d586a511"
        },
        "item": {
          "id": "b6138a08-d808-461a-9051-68757f282712",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8af4435a-571f-4b57-8b0a-f332c620a8c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c82db587-558f-4494-a016-09d6f9738442",
        "cursor": {
          "ref": "e047be2b-0706-4a86-af4c-3c027760b475",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1deb0297-9fba-4334-adb9-ebfa5bf0072b"
        },
        "item": {
          "id": "c82db587-558f-4494-a016-09d6f9738442",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "fa538455-f24a-4300-9ee9-e040aee10266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3e8f00-40af-44a5-9797-c2405b2e2047",
        "cursor": {
          "ref": "d8212a2d-bb7f-423a-b189-707157c4e784",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "cdacd951-80bd-4de1-8daa-d7a099ba5dec"
        },
        "item": {
          "id": "aa3e8f00-40af-44a5-9797-c2405b2e2047",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5f9aec4c-e469-49a1-aa8b-9ff133993a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73564ce9-69d4-467d-b2dc-aea5bf4543fa",
        "cursor": {
          "ref": "47201433-d87e-45ef-9aed-b4db55a9782d",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3316eea2-04c7-432a-b47d-4eedb3da1f6e"
        },
        "item": {
          "id": "73564ce9-69d4-467d-b2dc-aea5bf4543fa",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6df769e4-afa4-4418-94f6-34d842d01d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "854cd21f-c526-4972-8d06-2b2543647c06",
        "cursor": {
          "ref": "965da8d4-edb3-4d99-a3b4-896ec626fd98",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "fe85406c-4bb8-4efb-8138-67f9e55e8a34"
        },
        "item": {
          "id": "854cd21f-c526-4972-8d06-2b2543647c06",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ad4ced15-5384-45bc-b8a6-a1a68e4c2188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "773c55f1-c569-4228-a49b-46fe44de244c",
        "cursor": {
          "ref": "41ac0a4c-2538-4806-9de1-7f66d77f909d",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4e3296f3-2f19-4651-a9bb-617053f9076d"
        },
        "item": {
          "id": "773c55f1-c569-4228-a49b-46fe44de244c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d5cdae07-6b87-485f-bb2f-4167098b77ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e4c3cd-c3fb-4fde-bca9-552f6282a406",
        "cursor": {
          "ref": "de9bc433-6015-4d02-b578-833a0e843356",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "3775cd5b-7a8a-4abf-8cca-9ecee9f0e2ff"
        },
        "item": {
          "id": "e8e4c3cd-c3fb-4fde-bca9-552f6282a406",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1b8a2169-509e-4559-89d1-273460567c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "699affac-0936-4f5c-a128-f24fe934153d",
        "cursor": {
          "ref": "fd6eb8d4-4779-4034-a5f6-c816a44c6193",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "26717130-60f2-4e5d-ac6d-5ed391f8f644"
        },
        "item": {
          "id": "699affac-0936-4f5c-a128-f24fe934153d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "024488d1-9f4f-402d-9bc7-93f5000ed594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789acdd0-3016-48e8-aa64-175a2b610b3b",
        "cursor": {
          "ref": "c9c0f254-c641-4a7e-b214-7438064558e3",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "9dae7fd7-7482-4815-93c7-b7d0efb7d1df"
        },
        "item": {
          "id": "789acdd0-3016-48e8-aa64-175a2b610b3b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e036b381-c20b-4088-9aea-09f04117c542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccda86f1-66a1-47a5-9152-3b36bc30876d",
        "cursor": {
          "ref": "d53b2753-d63f-4bfe-b392-61c45c6b7e69",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "edf7f975-b22b-4156-99d0-09f276cfedfc"
        },
        "item": {
          "id": "ccda86f1-66a1-47a5-9152-3b36bc30876d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "91fdff33-7097-4ac1-8bb9-23df50932875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0321758e-e75b-4912-b624-8d429604b4d1",
        "cursor": {
          "ref": "15d7e61d-e0c8-41d6-9526-ee5ca3e80d7c",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "90f60f0f-bbb1-4efd-b188-d2bd402a2652"
        },
        "item": {
          "id": "0321758e-e75b-4912-b624-8d429604b4d1",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0c3fde83-5735-42c1-9907-5ddd962cfa2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab31f85-ad27-4bf9-924a-3b8ce988a7d0",
        "cursor": {
          "ref": "3864fa5d-74dc-4579-8dbb-104049059d1e",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8dee52ac-e0d3-4053-9bc3-92e25a308805"
        },
        "item": {
          "id": "9ab31f85-ad27-4bf9-924a-3b8ce988a7d0",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a4c2f4d9-9830-4984-94a7-4805a9e15120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65675bbd-ad97-4290-b744-b361ef5e7989",
        "cursor": {
          "ref": "d921ef14-451c-437e-81ef-0bb53cfb17cd",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a2973f6d-2d9e-44f9-80ac-417ace723270"
        },
        "item": {
          "id": "65675bbd-ad97-4290-b744-b361ef5e7989",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f74f535a-9877-4600-b1ee-a01e32fc1a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b0f0dda-642d-4b21-89c4-a6f96a133385",
        "cursor": {
          "ref": "0ef385d3-f16c-436a-844c-e073540832a7",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "4cdbe74e-56bb-4309-be3a-258e0220158f"
        },
        "item": {
          "id": "0b0f0dda-642d-4b21-89c4-a6f96a133385",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "8919a9de-e4a3-499b-9802-90677b558f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87fb967b-bf08-42fe-a0d9-48bda94833ca",
        "cursor": {
          "ref": "e4cf5262-e37e-4cd9-9f63-c6352806ee20",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f7bf61bd-534a-4d0f-baab-29a6adb3bfc2"
        },
        "item": {
          "id": "87fb967b-bf08-42fe-a0d9-48bda94833ca",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d5e0c808-e587-4039-862c-6fabdc10855c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05f9489-533d-4652-880a-00cc4a03a51a",
        "cursor": {
          "ref": "aec30cd7-0da8-4bf0-88b6-223fccb8ef5c",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "9ee7cc26-23c3-4b1d-ae05-43c303edf6af"
        },
        "item": {
          "id": "f05f9489-533d-4652-880a-00cc4a03a51a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e1fc81e2-3e16-4c32-b40a-d34400721cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e0312a-7fb1-47c3-9927-29aa5a387d59",
        "cursor": {
          "ref": "7a1333e8-3ece-43c4-bdb4-db1a6d1edf0a",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f3d47c7d-8269-4849-8be3-75abe731beb4"
        },
        "item": {
          "id": "59e0312a-7fb1-47c3-9927-29aa5a387d59",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b2db0953-9b82-47a1-984e-7ac30af01c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d75631-0c81-49f2-9e9f-563c6833221b",
        "cursor": {
          "ref": "d61f2a94-be36-4465-be97-c8367a884651",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "754a7c56-50f0-41ec-aa2e-64931489e398"
        },
        "item": {
          "id": "58d75631-0c81-49f2-9e9f-563c6833221b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4e0dbcbe-7985-4c86-9ca3-53d83827073d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9820aac5-58c5-42bf-a8f3-e569490e87bd",
        "cursor": {
          "ref": "e1fa6701-e0e5-4c3c-af2f-451989ec4d3b",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "448c5d75-eb39-4515-a420-d6712a9ecf4e"
        },
        "item": {
          "id": "9820aac5-58c5-42bf-a8f3-e569490e87bd",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "074d5d24-6bd7-44d1-8bb6-b442e1002a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "299aa5f8-c559-4302-8fe4-e0963e29abaf",
        "cursor": {
          "ref": "45b8df2e-442d-48a8-ace5-a259da19232f",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b3554f48-efd7-4506-b2ca-4e36366f7b71"
        },
        "item": {
          "id": "299aa5f8-c559-4302-8fe4-e0963e29abaf",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "5c8ef7d9-88d2-4dcb-9868-50187c05c96d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d3c2a3-86ef-428b-8d23-8d414b7fc10c",
        "cursor": {
          "ref": "3541d9b5-4582-4e6b-bd24-654f7ac30764",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2f022324-b373-4a10-8a40-950596ca6985"
        },
        "item": {
          "id": "e5d3c2a3-86ef-428b-8d23-8d414b7fc10c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d03c0e0e-b8e6-4869-8e7f-82c5c865f3da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac0d67d-ec63-428b-a76c-2f8435ded370",
        "cursor": {
          "ref": "5e0b2b21-129e-4592-80d4-6cc37ee13fc5",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "eb0aa4d9-ede1-400d-b957-3f68dabf92ed"
        },
        "item": {
          "id": "dac0d67d-ec63-428b-a76c-2f8435ded370",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9fbc809c-bd27-4972-8e23-c2a7ea9718c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce4f7dc-58b5-4e7d-bc45-2837524f8be8",
        "cursor": {
          "ref": "cc8c532d-7de2-4d60-849b-601b30f10401",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "809924e3-3038-44fe-826a-f8b439ced0e6"
        },
        "item": {
          "id": "8ce4f7dc-58b5-4e7d-bc45-2837524f8be8",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "00168436-7704-4acf-a853-d1e2d44a2325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e02260a4-d738-41f3-b11a-90838fb70074",
        "cursor": {
          "ref": "21bd3688-e33f-44f4-9101-97741369cf34",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9efdc5fc-a16f-45c7-95bb-e076d3166947"
        },
        "item": {
          "id": "e02260a4-d738-41f3-b11a-90838fb70074",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e7c67a38-dfd0-4b03-9ad3-7ae6f1ff9c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf03a085-f98c-49d2-b5e3-6d0f6c6e14a0",
        "cursor": {
          "ref": "8b2abde8-03d1-44f4-83e7-d13ab36cdd40",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "89feecb3-6f3b-4592-a5d1-8b511c747f15"
        },
        "item": {
          "id": "cf03a085-f98c-49d2-b5e3-6d0f6c6e14a0",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d8ad1daf-803c-439e-a29b-2e744630d749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84dbd0d9-6bc4-462b-b67d-f1abfd9740e0",
        "cursor": {
          "ref": "7af0d70b-7196-44a3-81cc-fc78b1fbb369",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c907b79a-ed59-4564-9117-197049524d6a"
        },
        "item": {
          "id": "84dbd0d9-6bc4-462b-b67d-f1abfd9740e0",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "996cb9b9-7a44-4bfd-9244-84d2eb34987f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af92e9b-259b-40b9-82f0-2c8da304b7b3",
        "cursor": {
          "ref": "4c755afe-1543-4fa1-a3be-36c967c9070b",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6b2c1d9f-b7fc-4221-870f-1277913db4e4"
        },
        "item": {
          "id": "1af92e9b-259b-40b9-82f0-2c8da304b7b3",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "351342eb-c536-40cd-b03e-88f51acaf26d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e128684-6b31-40e9-be6c-9c2c01d10d10",
        "cursor": {
          "ref": "ccd0f7e1-d941-4486-acb6-ba20017cb780",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "1f1a64fb-5d69-4a13-bee5-9aee0e1b2652"
        },
        "item": {
          "id": "7e128684-6b31-40e9-be6c-9c2c01d10d10",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "7d7fa725-8487-4dea-aae9-dac4f2157144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ac9db389-5e11-4583-b88d-7504e5ee6dc2",
        "cursor": {
          "ref": "74f4100c-940f-452f-90d5-85444d5c3d32",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "01080e55-d9c7-4953-8e7d-51304d376b1e"
        },
        "item": {
          "id": "ac9db389-5e11-4583-b88d-7504e5ee6dc2",
          "name": "credentials_issue"
        },
        "response": {
          "id": "f36f4023-3cb9-4b9b-be03-7ccddabad276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "b0f65688-07a9-40f8-b1e4-e66f03957c98",
        "cursor": {
          "ref": "a1a5c318-63dc-4aec-974b-dd5e4aff6670",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f77ce705-05f9-4ef9-a6be-cea54cbfe7f6"
        },
        "item": {
          "id": "b0f65688-07a9-40f8-b1e4-e66f03957c98",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "0cf834ad-13c9-41a6-9d11-a9178986b370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "a9993b0d-b4d3-49e2-88ef-17ff5f5e00f4",
        "cursor": {
          "ref": "75c26809-6b29-4ac8-a694-81bb4df6ca1c",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d941129f-b369-490c-8ef5-12a2c23713f7"
        },
        "item": {
          "id": "a9993b0d-b4d3-49e2-88ef-17ff5f5e00f4",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "efad7d2b-9a97-466f-a60a-583648159da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "c9fdeaf7-f2d8-4db2-9fda-0ba87f62bcb4",
        "cursor": {
          "ref": "41c59c07-2f3e-460e-afb3-5a58147a0772",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6477ad52-89b4-43d4-a495-d45206858ef1"
        },
        "item": {
          "id": "c9fdeaf7-f2d8-4db2-9fda-0ba87f62bcb4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4a5050e6-ab8b-4ddc-b335-d7b4e710ebd7",
          "status": "Created",
          "code": 201,
          "responseTime": 12952,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3f727a-2c3e-4042-b0d3-17a87f1fc9e9",
        "cursor": {
          "ref": "c222edf9-3f2f-4f97-98b0-9a3dde61fbf9",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e657d35c-1a12-491a-addb-2c2a7b479411"
        },
        "item": {
          "id": "0f3f727a-2c3e-4042-b0d3-17a87f1fc9e9",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "73499eb6-ec02-45d0-aa37-87d45e227713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "f7eace61-825e-4838-b755-721554df7064",
        "cursor": {
          "ref": "a2ca20d8-8a0a-4617-b845-92cf750eaf65",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "802f1228-a611-4fbc-b372-af45171c2dd2"
        },
        "item": {
          "id": "f7eace61-825e-4838-b755-721554df7064",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d4d3a370-b4bc-484a-8262-3d4eee8becc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "0183b991-3b89-4d50-b3a7-e7a055abc9d1",
        "cursor": {
          "ref": "19904e36-43c7-47ed-9f84-ab48401a95f6",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "24c5c64d-6887-48b7-bd38-67d61ad0854e"
        },
        "item": {
          "id": "0183b991-3b89-4d50-b3a7-e7a055abc9d1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d278a903-555a-4b7f-a70e-09523f90443e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c40e8df-ca05-4160-8ae0-c8a6f8110a70",
        "cursor": {
          "ref": "6488893d-89f5-4fab-8db0-15bcfd8e40bf",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d3f01947-245f-4b90-aaf5-7014934ddec1"
        },
        "item": {
          "id": "6c40e8df-ca05-4160-8ae0-c8a6f8110a70",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c7d3848f-0897-4dc2-9905-7533ab765cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ccabb09-2a25-42d8-a1fa-bf17195ab9e1",
        "cursor": {
          "ref": "960575fe-c117-4872-9586-3b6ae60c63ba",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "68577573-79b0-4505-b5ce-9cd35a33d371"
        },
        "item": {
          "id": "1ccabb09-2a25-42d8-a1fa-bf17195ab9e1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8d03255c-1246-4c75-a2df-9ea2eca21aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45f4f9c-8fae-4b6d-a4d9-1046f353cc49",
        "cursor": {
          "ref": "51953602-2f8a-4c77-aa86-9527e1c30c7b",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ca5abec1-ec37-4593-9bab-bc71979ebb94"
        },
        "item": {
          "id": "d45f4f9c-8fae-4b6d-a4d9-1046f353cc49",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "01aca7a5-0e9c-447e-a179-795e623e3ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba69af2-4f94-4f2f-8905-7579d74f08cc",
        "cursor": {
          "ref": "f4f17799-b49f-495e-bc89-ac00944d886f",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0afc138d-efc1-4d34-af7d-b12b37d06398"
        },
        "item": {
          "id": "aba69af2-4f94-4f2f-8905-7579d74f08cc",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "90f92cdf-3185-43e6-ac3f-53a5f2c2b8ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d2054f-044a-4ab5-8747-9389e444f836",
        "cursor": {
          "ref": "072fb5ee-89b3-41ea-a382-ebd1f323abfb",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "2796e5ed-9e1f-4e7e-9ac2-f7a2bcc31fe0"
        },
        "item": {
          "id": "30d2054f-044a-4ab5-8747-9389e444f836",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "fa1043da-991b-4d2f-a8cf-e1e01a92bfc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afba4fee-5785-4c57-98f2-b1fe30fe01a2",
        "cursor": {
          "ref": "455a0654-656b-4f32-a123-d4e2f121b62a",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "45b1b995-8311-46d8-8317-95176d62dc7d"
        },
        "item": {
          "id": "afba4fee-5785-4c57-98f2-b1fe30fe01a2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1bd3699b-c329-486e-a69f-16ae6ab2cb22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b359f1df-6132-494b-8929-6fa3837c7555",
        "cursor": {
          "ref": "2528f120-478a-4456-9f83-76305f0e7fb6",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "52e6b4ff-bc13-4abe-96c4-a4a4f388d3b5"
        },
        "item": {
          "id": "b359f1df-6132-494b-8929-6fa3837c7555",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "863f2cfa-d04f-4686-ada4-99b902820b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c9fada-c008-4184-af00-116642c82880",
        "cursor": {
          "ref": "fb10fd1a-de21-454a-8f2f-640c4d1e7c7f",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "83629254-a6db-4af6-8271-ea5ac90c7c86"
        },
        "item": {
          "id": "18c9fada-c008-4184-af00-116642c82880",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d8221435-1365-4624-8f99-877898686e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f529f8a-497e-4f2e-93e3-f03f18545e95",
        "cursor": {
          "ref": "31bfa8fe-67c6-4937-a5fd-9ef6eae03927",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "07f5a2a0-44ee-446f-a977-bd36527cfd22"
        },
        "item": {
          "id": "4f529f8a-497e-4f2e-93e3-f03f18545e95",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b860090d-b861-4bde-b772-6b84d790420c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f52f1f-00d8-46e3-b690-fe341b89afe4",
        "cursor": {
          "ref": "1e3a9c90-19c6-4c15-b30a-c792db526a69",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b09fba92-4f40-47d6-9aee-4472070a6357"
        },
        "item": {
          "id": "33f52f1f-00d8-46e3-b690-fe341b89afe4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "095620a6-3883-47d5-8c8b-4bcf39eb7012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9ce639-07e6-4cd1-9995-8a4a4606a127",
        "cursor": {
          "ref": "7ff4ce96-35cd-4215-a69b-04c6e173e884",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "491599bc-2ab0-459a-8073-5268b488cea8"
        },
        "item": {
          "id": "9c9ce639-07e6-4cd1-9995-8a4a4606a127",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9a9f0375-ade8-4737-85b2-0b1d45c9fbe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6273141-cfcd-47a5-b4c6-9263947ffbca",
        "cursor": {
          "ref": "1f8ea9ee-3dcd-4a85-8a09-b45f68ee3849",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ea202807-99f9-4a1e-bef5-cbfa574211fb"
        },
        "item": {
          "id": "e6273141-cfcd-47a5-b4c6-9263947ffbca",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b549e7df-67a2-427f-b8fe-2e1b2550c3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e638188-d0b4-422f-8d2e-536dddc2dc2a",
        "cursor": {
          "ref": "6c7f311e-04d3-4d72-b173-c5e051b5ee42",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b6e821ec-de45-4630-a39a-b5c0200ec242"
        },
        "item": {
          "id": "3e638188-d0b4-422f-8d2e-536dddc2dc2a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "74b57c5b-4ccf-4094-93f0-e5d637ca4af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5db03b5-4013-4718-b2cf-449618fc7e52",
        "cursor": {
          "ref": "5985b5a3-322c-44cf-a2de-ad518e5248d7",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "09b3871b-3019-4ddf-9050-4838e9c046d2"
        },
        "item": {
          "id": "c5db03b5-4013-4718-b2cf-449618fc7e52",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8bd947af-29b8-4e41-91e3-bf60377b610e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4829c1-2b26-4487-ad4e-6c6dc83cd095",
        "cursor": {
          "ref": "4cb9be49-8dbe-413e-940f-28fceac1213a",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5e4d5008-562e-4558-bddf-a4512d0fca34"
        },
        "item": {
          "id": "6b4829c1-2b26-4487-ad4e-6c6dc83cd095",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2410a26f-cf66-495c-b8f6-72b0394c157c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e699fe5f-5ffe-4058-959e-b941fa7897c4",
        "cursor": {
          "ref": "7382a2f2-88e8-43b1-80b5-bddcc8c6c617",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8b6b289b-c867-4f76-8a9c-3b4d1f1e98fd"
        },
        "item": {
          "id": "e699fe5f-5ffe-4058-959e-b941fa7897c4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b58d752f-e96a-414b-9d4f-ce3623e1e332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c4ea9eb-cc30-4314-ad18-06c5d3c218a9",
        "cursor": {
          "ref": "d4fb832f-7f38-4fbf-a8cc-b0d0c3385be8",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "8aeb24f8-0f6d-4899-85c7-e5a076dd96a3"
        },
        "item": {
          "id": "6c4ea9eb-cc30-4314-ad18-06c5d3c218a9",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6e1c3de1-56a4-4a31-966e-427a58865b1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a23c4b9c-34d3-45f1-a94e-5055646936f9",
        "cursor": {
          "ref": "2308f4ab-2211-4054-9362-7910c39003ff",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "efb4575c-c654-493c-8012-b68c7a7e4170"
        },
        "item": {
          "id": "a23c4b9c-34d3-45f1-a94e-5055646936f9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f2684c15-af9a-430e-838e-7253d61ec472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5fbfdcf-25e0-41c5-9cfa-6809d332d7d3",
        "cursor": {
          "ref": "7b23e857-f736-4b60-acee-2635bc8622f7",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "33a6acd5-4efb-4119-92ea-c5ee2238730e"
        },
        "item": {
          "id": "e5fbfdcf-25e0-41c5-9cfa-6809d332d7d3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "34dd54b9-3501-4fa6-ba56-c2f8285bbee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e479ac50-a442-440d-852c-ff2aa1ce6994",
        "cursor": {
          "ref": "882ac6f5-47c8-4c9d-b94a-0499cec62ac2",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "00cfffa7-4be3-4c81-8f69-48642a13c141"
        },
        "item": {
          "id": "e479ac50-a442-440d-852c-ff2aa1ce6994",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5a9e5fb3-9719-43f5-bd44-549c5b1925e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e9dd385-44f6-4974-a18c-1fd22512ccda",
        "cursor": {
          "ref": "e0505aa2-d162-4452-89de-39b01c0f86dd",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "47f5d2ef-50ee-454e-a26c-1b5f18daba18"
        },
        "item": {
          "id": "9e9dd385-44f6-4974-a18c-1fd22512ccda",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "482d3146-6fe3-4c60-959c-4a253ed82aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "415cb8dd-5d18-4444-a7f5-2da6c321906a",
        "cursor": {
          "ref": "4e01d385-f094-4005-9902-fa3b129d574a",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7acd0c79-a917-4a34-b0ba-859ff300c984"
        },
        "item": {
          "id": "415cb8dd-5d18-4444-a7f5-2da6c321906a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "27a19d89-879c-4309-86c0-5bf47b9a6c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e060c6-cbe6-492d-b0f3-e24d9e937047",
        "cursor": {
          "ref": "089ef371-34d7-456a-b251-b6f016c41a77",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b74178fb-01d4-4785-858d-97ea14f4e6df"
        },
        "item": {
          "id": "f7e060c6-cbe6-492d-b0f3-e24d9e937047",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7121e217-f886-4a3c-ab07-4c12bb95c13f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58648117-dc1d-4648-9ae3-415640335bc0",
        "cursor": {
          "ref": "38ef5bce-5890-4e5e-811d-b69e24271a70",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "4c8a4986-b44d-4eee-82f4-a806849556b7"
        },
        "item": {
          "id": "58648117-dc1d-4648-9ae3-415640335bc0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f01eff3e-010c-4903-926b-5cea297aeefa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b36883-c79c-4be0-a6c4-9850f2421b77",
        "cursor": {
          "ref": "a237e533-355c-4e5e-9a10-57102f0161d2",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4fc67573-e643-47ba-989c-971d645dba76"
        },
        "item": {
          "id": "40b36883-c79c-4be0-a6c4-9850f2421b77",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "34d280e7-9329-421e-b7d9-3d183fc6a6b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d6f4c5-9def-4c76-b719-c7832559c5bd",
        "cursor": {
          "ref": "8ecca0a9-ea70-4af8-939f-61fe826b4072",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "17ef9af9-b55d-4977-a020-a8c35cbf1284"
        },
        "item": {
          "id": "e4d6f4c5-9def-4c76-b719-c7832559c5bd",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a835d1e6-7707-4b5f-b46d-b7f5dc78f0fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b9b9198-0536-4a29-b9ca-ee202fed4f2f",
        "cursor": {
          "ref": "b60d1800-0428-42aa-abf3-35e8df3f0639",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b28072de-f2ed-4957-9012-e50489482e12"
        },
        "item": {
          "id": "6b9b9198-0536-4a29-b9ca-ee202fed4f2f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "76858e40-0dce-457c-8213-f1b1aae0210b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ef239c-6bc1-4937-8fa3-474206b437c7",
        "cursor": {
          "ref": "33b831a1-9749-4c0f-ba84-d9aef7161249",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ce1bbf78-dbc3-4c06-ad0b-78e5e5015316"
        },
        "item": {
          "id": "62ef239c-6bc1-4937-8fa3-474206b437c7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "571174be-0a13-42d5-928e-8fb8bdf3932e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17bc6ae2-e14b-44d7-b901-0bb6d7e0a13b",
        "cursor": {
          "ref": "feb83ed8-6250-461c-b5b6-5034e75c2d61",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "7ecf9663-92c9-48ca-89e7-53005fe06215"
        },
        "item": {
          "id": "17bc6ae2-e14b-44d7-b901-0bb6d7e0a13b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "10763913-00eb-410d-9322-68bcce96bf9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0315e9c0-eb39-45b9-94aa-44d205178405",
        "cursor": {
          "ref": "d62d5260-591c-4076-b245-f9eb80359632",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "aa115105-a654-4b88-8600-5c9d87b2dcc4"
        },
        "item": {
          "id": "0315e9c0-eb39-45b9-94aa-44d205178405",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "93dcd7df-cd82-4f5d-80a0-667743fd6161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60923dc9-6b91-4d8d-adcd-413755d44075",
        "cursor": {
          "ref": "b3b74a05-c2d2-471d-adf2-3e150164f69f",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "0452829f-dce9-4f66-8ed9-303acb3b39bb"
        },
        "item": {
          "id": "60923dc9-6b91-4d8d-adcd-413755d44075",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "9746125d-f563-4471-9c3a-db1e5abab514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9451c1-fcf1-4571-a3b1-b4114f1096ff",
        "cursor": {
          "ref": "a69b6ab2-97d7-45c8-8439-41e6b6055599",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "506b093f-cb4a-4ecf-a656-0a4ef5d538cd"
        },
        "item": {
          "id": "3c9451c1-fcf1-4571-a3b1-b4114f1096ff",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "aaa6b704-b2fc-404e-906c-4213106c6085",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e3ed50-f1e0-4021-9bba-3333577b6725",
        "cursor": {
          "ref": "0be04ca9-a89d-4a9b-8733-917e6d31679f",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "8807f6a2-5649-43a8-84ff-613cd670eb8a"
        },
        "item": {
          "id": "06e3ed50-f1e0-4021-9bba-3333577b6725",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e42daa9b-d2df-40b3-b85b-6a7529cbc3a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74192cf-69d4-4771-9f31-cadf8ea337d6",
        "cursor": {
          "ref": "b4cee5b0-c888-4a14-9ce4-1eb8acc9b207",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "84b414ad-b816-4bc3-8860-968ffbeec3e0"
        },
        "item": {
          "id": "f74192cf-69d4-4771-9f31-cadf8ea337d6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4d856477-71cf-4948-ac2f-85f3484ca1ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b134f6-8b94-4552-9f87-cbcb0a5ef68b",
        "cursor": {
          "ref": "d06ce56b-550e-471d-a06d-9f784c9ac391",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1820284a-9787-4950-90f8-a9fb4ff8084c"
        },
        "item": {
          "id": "79b134f6-8b94-4552-9f87-cbcb0a5ef68b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8d7437ce-446a-48be-b077-a3ad5ac6a9d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b15861-90a7-4672-b3a7-7ba0eda840da",
        "cursor": {
          "ref": "f7ea0384-199d-4be0-9132-9d694963f06c",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "2c9fd59b-a905-47b4-a751-cb2ffdd649a9"
        },
        "item": {
          "id": "85b15861-90a7-4672-b3a7-7ba0eda840da",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "cc2df9c3-8d80-4313-bcf3-eba6dc56c926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c296225-f650-46ab-8dd0-88f37fb42544",
        "cursor": {
          "ref": "67de7312-2169-485a-9b47-31be007e95b1",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "283ed60d-cd2d-4940-b5f5-20ca5d6da13e"
        },
        "item": {
          "id": "3c296225-f650-46ab-8dd0-88f37fb42544",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c928fe26-2225-48eb-bb66-897fa41cd8cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4df0308-3f38-4420-98f2-bef7963f947f",
        "cursor": {
          "ref": "5be6d219-db76-4c6b-90ad-940401e64a8f",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "fac51c7a-4783-41aa-8932-7d8d2b6c6414"
        },
        "item": {
          "id": "d4df0308-3f38-4420-98f2-bef7963f947f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "570755d1-463b-45b9-8ce8-84609db4e155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2672ab7d-68ab-47bd-88bb-c78589ffe16d",
        "cursor": {
          "ref": "aacfe84b-2f68-4dc8-8ff9-daa1fa555fe2",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7bf5ef52-35f7-4b33-84e0-0b010f34f586"
        },
        "item": {
          "id": "2672ab7d-68ab-47bd-88bb-c78589ffe16d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "46237ad8-8c77-4d4a-83fa-fa3ae0b91ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39dde40a-f477-4722-946c-f309a654fc05",
        "cursor": {
          "ref": "be5cb69c-1051-4447-942e-1787a3199f20",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4ab9029e-09ad-4d83-9236-7b347c804f56"
        },
        "item": {
          "id": "39dde40a-f477-4722-946c-f309a654fc05",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "145f0b41-cc72-42df-abb0-84beca9747f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84869dcd-10b7-41ef-871d-a9daa6af4f65",
        "cursor": {
          "ref": "5c170d5c-7776-4045-845b-08255591928d",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "848a4f62-aa9c-4350-9bd0-cb1e20efbb74"
        },
        "item": {
          "id": "84869dcd-10b7-41ef-871d-a9daa6af4f65",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7df55cbf-f3da-4235-9596-ddbeeecfe66c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b02d12ac-c68e-46b4-8566-61ded36b8734",
        "cursor": {
          "ref": "4389d886-9e00-4cac-ba4f-f4b3270322dd",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e86daea5-283e-4a42-a96a-8b43d0fe949a"
        },
        "item": {
          "id": "b02d12ac-c68e-46b4-8566-61ded36b8734",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "df759417-fbce-4beb-8bf4-185d6d4144fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bedf0f52-313b-40ca-90a1-a960242ad1c8",
        "cursor": {
          "ref": "0b69788b-a780-46d4-9897-272ee05465d6",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "cb3aed65-3a18-45c3-bb3a-f84341faae91"
        },
        "item": {
          "id": "bedf0f52-313b-40ca-90a1-a960242ad1c8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "71ed054e-f167-4cd1-a2fa-a467b17d3f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20addc7-f2bb-42d0-b74b-92156173b300",
        "cursor": {
          "ref": "91388f93-ac88-458a-873b-37412d36d7a1",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "c241b166-5dc6-4c3d-a7b0-3af0bf920ed7"
        },
        "item": {
          "id": "f20addc7-f2bb-42d0-b74b-92156173b300",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bd93bd97-92c0-433f-86d6-d65462e010fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e566e60-aa8c-4279-adea-c0a4ab448fe9",
        "cursor": {
          "ref": "c09759ef-7163-4699-9a7f-09bc78082e01",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ce789df7-e33f-4847-9e15-e301efe7e0eb"
        },
        "item": {
          "id": "5e566e60-aa8c-4279-adea-c0a4ab448fe9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7dd3a933-6a92-4a7b-961e-c577e18aad39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb569e2-8d32-473e-9316-91be09ec0b10",
        "cursor": {
          "ref": "b2cc2f5e-3f98-4960-afb7-98dce3fec173",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "98eec786-41e5-4443-99f0-cbff82fa9839"
        },
        "item": {
          "id": "5cb569e2-8d32-473e-9316-91be09ec0b10",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2caf9117-8d2e-499a-8d27-0b5ef472a12f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04da21bf-b7bf-499a-a738-b41d23e656d0",
        "cursor": {
          "ref": "705bbc22-6561-46c3-a829-7974ffd072d3",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0a8ad16c-7029-4d5f-b210-a3663a86841c"
        },
        "item": {
          "id": "04da21bf-b7bf-499a-a738-b41d23e656d0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1a1c9a99-dd05-4991-91b4-2519db569c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e32910c-b4aa-4711-9328-63a4353b9019",
        "cursor": {
          "ref": "97e5fffe-1b19-45c1-9036-891d22c035af",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "40952dcc-eab7-4526-bf86-1b35e3632d2c"
        },
        "item": {
          "id": "1e32910c-b4aa-4711-9328-63a4353b9019",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "763bb597-5040-4921-95a1-01eb9a5b7eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5681a7bc-3c6e-4265-8a1e-da12117b584d",
        "cursor": {
          "ref": "6adfe68f-9f2f-420a-93d0-73547adebdd9",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "ec95536a-0d3c-44ad-b985-283163da6e7e"
        },
        "item": {
          "id": "5681a7bc-3c6e-4265-8a1e-da12117b584d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e388945e-c5bf-4477-b907-a56bf3b5c0e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2bffe5-8d96-40c1-bba4-e189faaa4041",
        "cursor": {
          "ref": "14087a95-adba-41f8-a111-03a2d17c3ade",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a98460e3-4bbd-46fc-8ee8-429d2b1b3084"
        },
        "item": {
          "id": "fd2bffe5-8d96-40c1-bba4-e189faaa4041",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fb03b5b7-9bc4-43bf-b310-349b3990af1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d4363c8-6667-4827-af08-600a6a85f033",
        "cursor": {
          "ref": "c1253feb-8051-4688-9180-141f3e32f00f",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "20140a9f-6074-4d44-b595-9513165d43b0"
        },
        "item": {
          "id": "1d4363c8-6667-4827-af08-600a6a85f033",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b7efdf60-20ed-4dc2-82a1-12b5508843fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "701e7bd1-5ec9-499d-b880-fae44de6cfa5",
        "cursor": {
          "ref": "2d4e5111-73d7-4f4e-9a77-26f71b2fdb80",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "213ffdda-f917-4aef-83d8-bb67982bf9ff"
        },
        "item": {
          "id": "701e7bd1-5ec9-499d-b880-fae44de6cfa5",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b8b70747-dca6-4d14-a52f-02c8fff524d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e17925-6c94-4962-8ae2-c6b0441c8fc5",
        "cursor": {
          "ref": "114b37b5-e603-4b1f-a57a-5f666e0a0143",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "7f13d7ac-009c-4c86-9ed3-093e51e97a62"
        },
        "item": {
          "id": "42e17925-6c94-4962-8ae2-c6b0441c8fc5",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7565856d-27f2-496a-9284-035b7c4bc661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed72b4a-96dc-480a-8463-f830ad09d5a7",
        "cursor": {
          "ref": "7605034c-dc9d-4528-9da2-530aba2586c3",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3fbed79a-4de2-4d43-ba8f-3918e86cbe96"
        },
        "item": {
          "id": "1ed72b4a-96dc-480a-8463-f830ad09d5a7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b88ee713-d13d-4678-b060-bd1c29fe7683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4aa121-e3f4-43fe-8c70-71942255216e",
        "cursor": {
          "ref": "474b1161-0ab8-442c-940d-7068aa0bee4d",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ec099ec8-e3e3-4f60-810c-3a3d6d2030f5"
        },
        "item": {
          "id": "9c4aa121-e3f4-43fe-8c70-71942255216e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "44985be2-bd9e-4076-9d01-352ce960ec2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9629744a-8253-40a7-9a04-5121384b995e",
        "cursor": {
          "ref": "0357f979-6ab7-46d8-8993-8bdb222013bc",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8516ec1c-4013-47f6-9f4c-07d31f68f968"
        },
        "item": {
          "id": "9629744a-8253-40a7-9a04-5121384b995e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0a5a45a0-32a5-48f3-991d-50156b07ac1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af1f4ea6-f01c-4a30-9314-b1d99f0b2c16",
        "cursor": {
          "ref": "01e7dbe8-d4cc-41b7-9073-b28f8fb3b1fd",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "2afdd320-a79a-4175-8c71-1e679d164af4"
        },
        "item": {
          "id": "af1f4ea6-f01c-4a30-9314-b1d99f0b2c16",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f47d8b85-9d0b-4333-a836-ec1840a77b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3620e843-70f5-4919-bfd1-ac20fced5fe1",
        "cursor": {
          "ref": "6d96a2a7-7ac4-4118-b879-73261bb389d0",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "68ea05b5-cdf1-482d-8550-1dbbe09b8c95"
        },
        "item": {
          "id": "3620e843-70f5-4919-bfd1-ac20fced5fe1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "71caa689-0a58-4ef5-8bff-e4336facdbbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a7af09c-8f6c-4aa7-a219-a615d0116819",
        "cursor": {
          "ref": "e073ae89-ff5c-43f9-b5f9-c220dab43e43",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "da59b60f-100d-489a-b889-8e19693eca74"
        },
        "item": {
          "id": "5a7af09c-8f6c-4aa7-a219-a615d0116819",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a022ffbb-00a7-4c5f-ac77-dc7ee90d7f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28fee1dc-b67b-4a36-84ee-6b10d68857b2",
        "cursor": {
          "ref": "8e003bdb-86f2-41a2-9db8-428f517a82cd",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6bf7fce7-7d44-42ac-9a0b-dfbe3eefdb8d"
        },
        "item": {
          "id": "28fee1dc-b67b-4a36-84ee-6b10d68857b2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "805cc12d-da88-4969-81c4-11ca11fb9f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "180a0f5a-8be3-4d0c-b5ca-3e5554cc04c9",
        "cursor": {
          "ref": "ba58e62e-5ff4-444a-9c88-4a31c01bc85a",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "2753ff61-f937-4d8e-9e33-2703d5c39af9"
        },
        "item": {
          "id": "180a0f5a-8be3-4d0c-b5ca-3e5554cc04c9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ce4a2ff6-2a87-4d81-8523-25d8daba6c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e384c316-643a-4d64-b14a-b9b5b5f2f4ba",
        "cursor": {
          "ref": "f8cfa2b4-c92b-4d0b-94af-bbf92aa6eb07",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2ab5c09f-7a31-4e90-85fd-bcbb9478c2b3"
        },
        "item": {
          "id": "e384c316-643a-4d64-b14a-b9b5b5f2f4ba",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "05af0179-ebc7-4598-8d20-bf27fef623ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433bdbca-2b94-4f5f-9f60-d6f02a87dc29",
        "cursor": {
          "ref": "9d93bfe3-f47d-4c1b-849b-8f47b6791b87",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "886aab1e-edbe-40c5-b457-f113679f2995"
        },
        "item": {
          "id": "433bdbca-2b94-4f5f-9f60-d6f02a87dc29",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f2327bbd-ba25-4ee0-8666-5470e6d8f93d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf858255-f31b-4d62-9c05-abd1d916fd69",
        "cursor": {
          "ref": "f910e725-060d-432d-92e7-64ba879be6b8",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e2cc4c52-7b4f-4de0-90d0-93b4d1c0f141"
        },
        "item": {
          "id": "cf858255-f31b-4d62-9c05-abd1d916fd69",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "792f42d7-5fae-4efe-b115-d842a161e543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d54ad2f3-6c3c-4f2e-8386-48a73ddcbf81",
        "cursor": {
          "ref": "38a93b89-7965-430c-baba-9fa62ec95ab7",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9e14e796-53f1-4acc-870b-15ec8206a5eb"
        },
        "item": {
          "id": "d54ad2f3-6c3c-4f2e-8386-48a73ddcbf81",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "29144153-3be2-4e2a-a8ef-7c8aec3ecc9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "442d3ca8-6d99-4667-ac74-a66db9041831",
        "cursor": {
          "ref": "c0a53227-dc5a-49d1-a2e3-f96ee614cfa1",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "461efe19-339e-4d75-acdc-7a54766856e5"
        },
        "item": {
          "id": "442d3ca8-6d99-4667-ac74-a66db9041831",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "6d0cb872-a393-4a34-8f91-057e83cedbfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e75007-87eb-41d4-a613-62495643e425",
        "cursor": {
          "ref": "80bd6a24-54e0-45c3-891f-7156728014b2",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "fdce4322-64d7-4a0a-ac4e-1334fb58c002"
        },
        "item": {
          "id": "81e75007-87eb-41d4-a613-62495643e425",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "2b8f4939-a5cc-4e3a-a2a9-b236447b2b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47003e9a-4efc-4586-ae45-5a3d878380c9",
        "cursor": {
          "ref": "09dc07fd-d417-4d68-a785-46e233b7a939",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4ba6850c-4656-4f3c-bcd5-db910810ffa9"
        },
        "item": {
          "id": "47003e9a-4efc-4586-ae45-5a3d878380c9",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "a84e5f8c-e919-46ee-be4a-876f40d5cb6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3667bb41-fc55-450f-9a40-c4217b3ab988",
        "cursor": {
          "ref": "66dca48e-c7ac-43e1-88cc-951d14700b24",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "5b680a15-90e5-4240-83f8-739afe3cf682"
        },
        "item": {
          "id": "3667bb41-fc55-450f-9a40-c4217b3ab988",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "29551b2e-d5d2-4bab-a100-7286a00abd8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e682f79f-414d-43b1-98e5-04f6c22ac592",
        "cursor": {
          "ref": "9fa3214f-d260-4d78-890b-5b76045173cd",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ccf305bc-f2a6-4fac-b133-3ceb78d0e3e3"
        },
        "item": {
          "id": "e682f79f-414d-43b1-98e5-04f6c22ac592",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "95e8589e-1539-4c19-afb0-ae97ff52746c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3418f1f0-ec2e-4ab7-b6a5-818c0a5c3bb4",
        "cursor": {
          "ref": "a69d8b30-3e53-4f61-a769-1eb8d74d266b",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "139f2291-b7dc-4382-a350-b143ddf2fea9"
        },
        "item": {
          "id": "3418f1f0-ec2e-4ab7-b6a5-818c0a5c3bb4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "90ba2abb-5027-4793-8164-221661aff437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0012994e-4956-4db4-ae9b-90724196e824",
        "cursor": {
          "ref": "3e0b3baf-f64b-4ae2-81cd-08b85451d20a",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ab53e929-bf5f-4d32-b69e-6aed601871bf"
        },
        "item": {
          "id": "0012994e-4956-4db4-ae9b-90724196e824",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "667d742a-4e11-40a8-9559-4b1863440863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb9f8fa-af73-4bc2-a873-ab5a6af98b0e",
        "cursor": {
          "ref": "4d0e7f51-501c-4a5a-8989-be3c9f828f2f",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0b2cc4e2-a76d-4539-b38c-1de905805533"
        },
        "item": {
          "id": "9fb9f8fa-af73-4bc2-a873-ab5a6af98b0e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "534467f0-a95c-4b28-b0c2-d999b5235d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d783724-3d5a-4caf-b7e5-f56588133484",
        "cursor": {
          "ref": "6d224f3d-f4b6-4ec4-9ff8-bed26fcb2fca",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "3fd02613-7338-4575-a02f-e40d5a7b2657"
        },
        "item": {
          "id": "5d783724-3d5a-4caf-b7e5-f56588133484",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6a6f9703-0c5b-4569-9045-e7c6aee9a404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cecbf0b5-a9dc-4d9d-a554-702ccb274152",
        "cursor": {
          "ref": "83258ae3-7e86-40f2-9544-197b42e0de1d",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1183a0ab-10d7-4680-a5e8-33dd8a67122e"
        },
        "item": {
          "id": "cecbf0b5-a9dc-4d9d-a554-702ccb274152",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0acc30b1-fada-4d48-8c04-44e73f31fbdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7525d60-65a4-4cf3-a9dd-5689d3b0c408",
        "cursor": {
          "ref": "123890ac-443d-459d-b0b4-a9011083cd19",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "198df803-ea92-425b-b77b-1d584ea9064e"
        },
        "item": {
          "id": "c7525d60-65a4-4cf3-a9dd-5689d3b0c408",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "abb2a52a-762a-4593-8cff-85738c45ac44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521d86da-0741-415d-9b45-5e877bca6b0b",
        "cursor": {
          "ref": "3faa4156-7e29-47c2-bbbf-1cade3429679",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "54c8a0c7-3770-4223-aeea-1ae5ba82f63a"
        },
        "item": {
          "id": "521d86da-0741-415d-9b45-5e877bca6b0b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "84bf363f-7f56-4d8d-8e81-0b6f715cbfbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fcbc50c-be9d-44dc-8813-9e3a7809e104",
        "cursor": {
          "ref": "b58e9a9f-726f-485c-bca2-7836f1fc1e73",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "47b6a334-c273-427f-9cb5-360d119c169f"
        },
        "item": {
          "id": "8fcbc50c-be9d-44dc-8813-9e3a7809e104",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f999bb38-454a-4f60-8a50-bd39cfa23c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5d590c-fccc-4c97-8f8a-a56505332c1c",
        "cursor": {
          "ref": "97c06c06-03d6-4c9d-a3b8-fc3c05ad0f48",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e0fc5eda-13b4-4823-9fed-85cab99b3016"
        },
        "item": {
          "id": "7e5d590c-fccc-4c97-8f8a-a56505332c1c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ab7f931f-0dd5-4007-88fb-64f3d735697f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f90c28b-10f8-4a76-aba8-1ecd1ea7f8be",
        "cursor": {
          "ref": "2fa64a96-7840-4b8c-afbb-3e65be1f5f46",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ee7a3c7b-75fd-49a9-94b6-bdecda7a5a65"
        },
        "item": {
          "id": "6f90c28b-10f8-4a76-aba8-1ecd1ea7f8be",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "abb63d43-e2ee-44d5-8322-d7cbd47a838b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e95ff506-a8a6-4887-9e62-642318ce9124",
        "cursor": {
          "ref": "258d6864-6ce1-46ad-97b2-01464cf9d037",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3eb3c1c8-38ad-40c3-b6db-5127e4dffdab"
        },
        "item": {
          "id": "e95ff506-a8a6-4887-9e62-642318ce9124",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a5762e67-2c74-456f-8a68-56732ce6547b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4af8ea6-a7ee-42fb-88ab-77491e5bd1fe",
        "cursor": {
          "ref": "5ea29bb9-f0bb-46a9-aa66-a5ee950723a1",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c01c1f55-6c08-4573-9caf-fe5007762ee8"
        },
        "item": {
          "id": "d4af8ea6-a7ee-42fb-88ab-77491e5bd1fe",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f7b058f9-6668-49cb-a8e8-12c0023f058a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a444d6ea-5571-46bf-8356-873d98331ba7",
        "cursor": {
          "ref": "14bdabcb-a8c5-4b09-bd0a-15932c10ad20",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a43c78a7-4ff8-4efb-8b98-ad2ebcd9054d"
        },
        "item": {
          "id": "a444d6ea-5571-46bf-8356-873d98331ba7",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "63d5ef2b-82cf-420f-ba9f-fcc8db4c25f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16cde6b4-e9d8-40a2-9049-26ad0a0e68d6",
        "cursor": {
          "ref": "e4643633-a3de-48e6-863a-54581760fe4a",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "73e3bed1-9f65-4008-953e-9a540939a6ea"
        },
        "item": {
          "id": "16cde6b4-e9d8-40a2-9049-26ad0a0e68d6",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a592532f-bc69-465a-aeb3-2932cd8a4b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57583f2f-d093-4148-ac52-5c4dac22bfcb",
        "cursor": {
          "ref": "55714cdc-1441-45d5-a8bc-94b8088a3a50",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "2ea0ff84-0df1-4379-8adc-5dedee8ad39f"
        },
        "item": {
          "id": "57583f2f-d093-4148-ac52-5c4dac22bfcb",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "5bf84043-afca-4103-907a-e6cfb9ef1d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 136,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c760054-7bb4-4b4c-be5f-a92f8da2ac95",
        "cursor": {
          "ref": "6fa21b51-7952-4405-bb71-65aba8299278",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "99ba8d1b-d999-4a7c-ab79-afbc4c874318"
        },
        "item": {
          "id": "2c760054-7bb4-4b4c-be5f-a92f8da2ac95",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "64991b9d-ae83-496c-b0c9-65b9e4af1fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb757f6-7476-4c33-aefb-9d2bef0fe8f2",
        "cursor": {
          "ref": "b2d40b7d-8730-411b-9142-517a59b76531",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e2a2f7c3-f2d5-4f94-bb57-566498c0fb50"
        },
        "item": {
          "id": "1fb757f6-7476-4c33-aefb-9d2bef0fe8f2",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "56230fae-7a61-4f68-b3e7-042c38d165dc",
          "status": "OK",
          "code": 200,
          "responseTime": 159,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "0d0b681c-9923-4a12-b22a-8ceb605f6a24",
        "cursor": {
          "ref": "a0a9d3b0-d777-4ef4-870b-9c6e26f35cd8",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ad762268-a25a-423c-b0d8-6b73f879f175"
        },
        "item": {
          "id": "0d0b681c-9923-4a12-b22a-8ceb605f6a24",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "aa784780-7532-4dbe-82d8-35a163d80b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0563d9a-c094-4f63-83b0-8ac4edcc0c20",
        "cursor": {
          "ref": "a3ab7d12-fe79-4621-9cc4-810f7047d4f9",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "39c7be28-0d46-4dfd-a747-8213ab6c26c5"
        },
        "item": {
          "id": "d0563d9a-c094-4f63-83b0-8ac4edcc0c20",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "520414a9-5e21-47c1-99d0-88f1a98c8c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c6df52-0cfd-4964-b78f-606d35f50ef5",
        "cursor": {
          "ref": "4767937b-34a5-444a-bd14-024ba30ebdf0",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "01d65aae-b23b-484d-b374-e40bd4462818"
        },
        "item": {
          "id": "48c6df52-0cfd-4964-b78f-606d35f50ef5",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c63c4af8-1da8-466f-9809-4d4a5f177668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d43c532-b716-4b0d-a841-2769df13fa34",
        "cursor": {
          "ref": "b03b75d3-48eb-4e4e-966b-da913827ce8e",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f9c41c18-98e1-49b7-993b-4320bfe414cc"
        },
        "item": {
          "id": "0d43c532-b716-4b0d-a841-2769df13fa34",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1108be48-65af-4e16-9094-b8edd9db2eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f7c4862-4949-4b0b-93a6-796e864c7309",
        "cursor": {
          "ref": "3b1e5b60-e076-467d-88de-48c98288d8e9",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "234289b9-b19e-4eea-b520-f70c3d3865cc"
        },
        "item": {
          "id": "6f7c4862-4949-4b0b-93a6-796e864c7309",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3d08b9a2-b9c3-44af-8449-0f48b19262e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b21271ea-d4fd-4cb2-bfc4-d5ef82f9c38b",
        "cursor": {
          "ref": "b33646c6-b319-455f-bfc8-222ef9d4b6ee",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "bf6efbc8-5911-46ae-98f0-ef36218654be"
        },
        "item": {
          "id": "b21271ea-d4fd-4cb2-bfc4-d5ef82f9c38b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "45d60c0c-a4d7-4851-9c4a-89f1978dba72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1ac692-281d-4deb-8244-ae79335c21b6",
        "cursor": {
          "ref": "8f4909a0-4f17-42d9-8dda-3d566c2f6ba8",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d9299198-62e0-4fb6-9ad9-55b40fafc871"
        },
        "item": {
          "id": "ed1ac692-281d-4deb-8244-ae79335c21b6",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8c9b5e9a-4efc-4d5b-9ba0-b1bcce51053e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73110e7b-eb60-4886-b600-0e565d3a9fb4",
        "cursor": {
          "ref": "ada28b3a-358a-485d-b462-916813fefa88",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7680df49-13b8-42bf-b888-77701e05483a"
        },
        "item": {
          "id": "73110e7b-eb60-4886-b600-0e565d3a9fb4",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "12e48425-7185-4f39-8f7c-a847135d2e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f488b0e-f752-42c4-9cab-113efeefb591",
        "cursor": {
          "ref": "24ba7676-a51b-4b56-989f-3abdeb874aac",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "7a67241d-bbf2-4f53-8086-11bf586f282e"
        },
        "item": {
          "id": "8f488b0e-f752-42c4-9cab-113efeefb591",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "fc0899f9-56df-430e-a6fa-a8668ab44b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ad9e2e-169e-454c-bb48-abc792d21c2f",
        "cursor": {
          "ref": "df3c2db1-8d72-44ff-9a28-3e995edd525a",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "89e0bc64-c36f-4347-b9a3-5f7b3ff89e7f"
        },
        "item": {
          "id": "55ad9e2e-169e-454c-bb48-abc792d21c2f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c75601f1-8a68-48b4-b1b5-39a68d893880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d87b77ed-f5d8-47cc-aaa5-c5ec22d04068",
        "cursor": {
          "ref": "82f0f86c-b8c7-4e9f-9383-fe8c49de25b8",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "001bce9c-5a3a-48da-9c97-63d23227f4aa"
        },
        "item": {
          "id": "d87b77ed-f5d8-47cc-aaa5-c5ec22d04068",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f7b45227-3307-4ec2-b789-f9365d4d87f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e542e764-eb49-4bcb-915c-ffaa6bbc2842",
        "cursor": {
          "ref": "bc098edd-dd46-4a52-a520-d0b61cc78cc4",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "5f9fc1a3-529f-4961-b6d1-123f9bca6d52"
        },
        "item": {
          "id": "e542e764-eb49-4bcb-915c-ffaa6bbc2842",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c6ef86da-7773-4361-abf0-cef64b7513e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85426192-f396-48de-894c-f35e2e193219",
        "cursor": {
          "ref": "fdb1705a-9edd-417d-bbec-c601dc67e8a4",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "cb984c2b-ddff-49e7-8725-138d3a3b6c81"
        },
        "item": {
          "id": "85426192-f396-48de-894c-f35e2e193219",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1d3b888a-068e-455d-a409-682bc4ddb390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03fb37a2-04bd-4802-a463-19b44deb79b3",
        "cursor": {
          "ref": "2573b559-bd01-45b2-b3f4-12913a6c845b",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "672e826b-c252-4172-ba9b-6c51accdd6fc"
        },
        "item": {
          "id": "03fb37a2-04bd-4802-a463-19b44deb79b3",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "6f145711-0734-4410-820f-b7f42e604de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204d1c17-1220-4bb8-b084-b92386a4366c",
        "cursor": {
          "ref": "571ae7c1-91b6-408b-8baf-297ec8956580",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "978edeee-2a4e-47c0-b4b1-dbe6e9b508cc"
        },
        "item": {
          "id": "204d1c17-1220-4bb8-b084-b92386a4366c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ddcc03ef-fb7f-41d0-95b1-f672c8190f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb03f974-334b-480c-b90b-420998f58815",
        "cursor": {
          "ref": "b8d0f578-0da4-40a9-894b-74995cc941e6",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "75fc31b7-d207-4772-a9ff-61a3e9225bb8"
        },
        "item": {
          "id": "bb03f974-334b-480c-b90b-420998f58815",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c9e6d7b9-dd4b-407e-be79-3d2bbdf3275c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3909772d-d7fa-4520-bc1d-5d3d2dd6b20b",
        "cursor": {
          "ref": "a36737b8-0a94-4d72-b630-952c7af2d729",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "35400b0b-d582-477d-ad48-8c1e1ba39e4e"
        },
        "item": {
          "id": "3909772d-d7fa-4520-bc1d-5d3d2dd6b20b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b89e9eba-a82f-4d9f-a850-386aa4c0c604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e950e3a0-a0de-472c-a391-bdf9baf57311",
        "cursor": {
          "ref": "682f419a-cfb7-43fc-ba32-a08224e8abc9",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "93400268-f647-46d1-bf7a-6db181c6c8e7"
        },
        "item": {
          "id": "e950e3a0-a0de-472c-a391-bdf9baf57311",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "1686fe9f-d2d4-4e6a-a06a-dc2b30c37ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd82b61-0ef7-4539-a856-0937b46ee340",
        "cursor": {
          "ref": "fc01b0c6-5b19-4248-9f35-5b103818a38d",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ff3cce39-9222-4120-b49f-2731545dc6f4"
        },
        "item": {
          "id": "8bd82b61-0ef7-4539-a856-0937b46ee340",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c90888a5-35d3-45a4-9d5e-a0f59c38038c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee8a166-253b-499b-97cd-027868bdd974",
        "cursor": {
          "ref": "7cc6b4e4-4c65-47e6-9d11-54b717341d8b",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0ba4b96c-48ad-4efe-ae1c-81f6b0de9470"
        },
        "item": {
          "id": "eee8a166-253b-499b-97cd-027868bdd974",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "242b1d6d-2183-46c8-b771-fc8a424b3606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f37dc6-ec97-4e73-9459-704aae91051a",
        "cursor": {
          "ref": "74f8db6b-3908-4b8b-83a1-3ac6e3a35205",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "70ba8521-e9bb-4b3b-bbf2-c82752f9328d"
        },
        "item": {
          "id": "f4f37dc6-ec97-4e73-9459-704aae91051a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6b49b6fd-7f15-4c2e-be50-0e32284d7dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43322cd6-f6a7-48ac-8930-2a1ef989b852",
        "cursor": {
          "ref": "2a70a658-79ef-4beb-9874-4073933e4515",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5be2b69b-ebe0-4ec8-8636-972e07d2a971"
        },
        "item": {
          "id": "43322cd6-f6a7-48ac-8930-2a1ef989b852",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7dc289c9-3142-466f-9d1f-a6a68b8c8901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ba8cfb-fb26-4b6e-8d72-d9e815b1b5e5",
        "cursor": {
          "ref": "f845fa53-d244-46f2-836c-06892359d494",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7ad1cd46-5208-44a5-94ee-5468b0854a1d"
        },
        "item": {
          "id": "d7ba8cfb-fb26-4b6e-8d72-d9e815b1b5e5",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4f065639-83a4-4e2c-9ae7-c71bcf9b1749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41893b53-fa8a-4385-b1b6-47574a322503",
        "cursor": {
          "ref": "9f9ee3fa-deae-40a9-811d-7877109050d2",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "364418dc-4a36-42a1-89b3-48c4033a239c"
        },
        "item": {
          "id": "41893b53-fa8a-4385-b1b6-47574a322503",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "281da37e-6988-4b65-a6e8-0556b404a290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04351440-35c3-4ade-8ddd-a7080c313964",
        "cursor": {
          "ref": "4a0b5eab-190a-4823-acfd-b35ed93f619d",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a77e773f-b5ac-4b30-8b2a-f9ae62d048c0"
        },
        "item": {
          "id": "04351440-35c3-4ade-8ddd-a7080c313964",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c65516cd-0a92-49ac-89f1-2ed821a7a965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee65fb09-9084-4afb-bfa0-30ff6678eea1",
        "cursor": {
          "ref": "82a0dc5d-2841-4759-acb8-0ffe8a206384",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f6f79532-fcd9-4c45-8bcc-1fd7f9ebb691"
        },
        "item": {
          "id": "ee65fb09-9084-4afb-bfa0-30ff6678eea1",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8d673961-30c3-4101-95a3-60a86151e646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa061f0d-1262-4c4e-8abe-818e8fe8e9ef",
        "cursor": {
          "ref": "ead19c05-8239-4f31-949a-d8c5e37dad6b",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8df7901d-5709-43ce-8c0a-261c5db863f9"
        },
        "item": {
          "id": "aa061f0d-1262-4c4e-8abe-818e8fe8e9ef",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0b63b6cb-a2df-40d2-95f5-bc11b606febd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e728097-85fc-40bf-b464-d0d220f14aba",
        "cursor": {
          "ref": "43c3fb33-4105-4e9f-aa25-0ca8fa3b446f",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "820d64da-cea4-4cd5-a48b-8a7f274ed7ef"
        },
        "item": {
          "id": "5e728097-85fc-40bf-b464-d0d220f14aba",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f0edaf11-f525-4651-9e81-849bccaab87e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031a508b-8104-47d1-ba95-c342fa692ee6",
        "cursor": {
          "ref": "30d9d798-741b-448c-8bbf-bff3c6a21aeb",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "7d531b78-6d80-4cfc-b995-a1c6cb3a1811"
        },
        "item": {
          "id": "031a508b-8104-47d1-ba95-c342fa692ee6",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "816b8892-2e41-491e-bea3-5b4ebdcdadf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a5126d-789b-4517-a308-8b97c40c2c50",
        "cursor": {
          "ref": "ff7e6b2f-1add-4c12-b535-1cd521ee6c49",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e2e691eb-ff7e-4228-af01-1d13dd4db55c"
        },
        "item": {
          "id": "b2a5126d-789b-4517-a308-8b97c40c2c50",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "4125908e-d4f1-42e0-a955-e0ef72379139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d67b47c4-de33-4b00-b44b-ab7a839d59c0",
        "cursor": {
          "ref": "3a3de5fa-956a-4671-909a-2646ec47b479",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "831f6581-3cf9-4a9a-b081-2466a3074a5b"
        },
        "item": {
          "id": "d67b47c4-de33-4b00-b44b-ab7a839d59c0",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c1494740-24f7-473f-a5ea-6ad34163f73b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e731518-8048-4238-8c85-3cbe47883ead",
        "cursor": {
          "ref": "b4e52aa0-8f30-4c56-aaa0-06578abf0499",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "caeff7f6-8a9e-415e-8211-2492fb73857e"
        },
        "item": {
          "id": "3e731518-8048-4238-8c85-3cbe47883ead",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "259b33fe-3e1e-4b91-83ac-2d94b6714a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eef19aa-c083-4992-8c73-0b3b4c87c6d7",
        "cursor": {
          "ref": "f4322d8f-2420-4b13-a77a-3b7c4da3ec83",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e0e45c0e-f8c1-4932-b524-2cab597f239c"
        },
        "item": {
          "id": "8eef19aa-c083-4992-8c73-0b3b4c87c6d7",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "85128e8f-a1db-4f94-8226-80929b77178e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d29dac1-7fe7-4b9f-b075-070e07b6bcf2",
        "cursor": {
          "ref": "ea23c437-c5c7-4c4e-b82e-f9e43b120ac2",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "9a0e9eb8-f4c7-45e6-b985-c8295e24d97d"
        },
        "item": {
          "id": "4d29dac1-7fe7-4b9f-b075-070e07b6bcf2",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b367f3a0-ac78-4077-ac41-d798d96c54e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a3a30a-23f1-4fd5-9df8-4708d434f106",
        "cursor": {
          "ref": "395d3bf8-42d1-48a4-88c9-3227aa37f805",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "7c436bc5-92e2-4e39-af63-4ea822897500"
        },
        "item": {
          "id": "53a3a30a-23f1-4fd5-9df8-4708d434f106",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a4d08825-073b-416b-b180-a43896c188f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af93c2d-8a9e-47c6-97a6-7282ac992e6d",
        "cursor": {
          "ref": "7a9cb6e0-8afc-4cff-b5bd-debd50a15300",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "aa876ed1-1195-441b-8154-556611e2e0b4"
        },
        "item": {
          "id": "7af93c2d-8a9e-47c6-97a6-7282ac992e6d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "7d792eb6-5842-47f0-9ef1-3295e633f565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6676f01-1b48-45c4-b4a6-bc66e5a8ddbc",
        "cursor": {
          "ref": "6fc54eb1-bbb4-4b1d-80a2-549731ee7dbd",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c1e456bf-33dd-4e0b-beb3-d9fa34130606"
        },
        "item": {
          "id": "c6676f01-1b48-45c4-b4a6-bc66e5a8ddbc",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "72dc3e36-7ccf-4678-a164-1b9a27b09c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60fe4170-b1fe-48ef-9c92-b6b6a373de0e",
        "cursor": {
          "ref": "d78d959d-3e60-490c-be7e-782950871d6e",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "06933fe9-0d78-4178-a047-93c2dd10f143"
        },
        "item": {
          "id": "60fe4170-b1fe-48ef-9c92-b6b6a373de0e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6595b10b-3510-45a8-8ba3-9a320b3590b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddadbe36-dcdc-4e64-9f5f-ef249f9d08e9",
        "cursor": {
          "ref": "9e3082af-1bc8-4a2d-a43d-5ecb6b85f20e",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "88aa3813-f5e5-4a84-b5d9-6b6d34c9115e"
        },
        "item": {
          "id": "ddadbe36-dcdc-4e64-9f5f-ef249f9d08e9",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "562520cf-58a7-4e50-9830-6e5a97542567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2e92fd-a918-4c95-86cc-ae02bbe1ff96",
        "cursor": {
          "ref": "b5d75747-ea6e-41fd-94e7-94ff4058133c",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "67d6ae9c-cac1-4851-a263-4a70cfe817cc"
        },
        "item": {
          "id": "8d2e92fd-a918-4c95-86cc-ae02bbe1ff96",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "509cd8ef-c591-46e8-aab7-426e6d575116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03d0bfe-cad7-42fe-8fc3-c8c538fb494d",
        "cursor": {
          "ref": "77b29ae4-8de7-453e-a4ed-8802798b2d9a",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "0dbfa3a7-f192-4599-982a-7cf6626b57ae"
        },
        "item": {
          "id": "c03d0bfe-cad7-42fe-8fc3-c8c538fb494d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ad801a80-af81-4080-9371-5845a3e1ba6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b69a12-3646-4d45-9615-f6e95e19f47e",
        "cursor": {
          "ref": "6c0ee1ac-d980-4489-8261-5e886af5a459",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a96d7807-35fd-4d50-90a6-5395baced7ea"
        },
        "item": {
          "id": "56b69a12-3646-4d45-9615-f6e95e19f47e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "0db22481-1407-427e-98fe-d598b0103930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7a18aa-c625-47eb-98e8-647444f2ca64",
        "cursor": {
          "ref": "3dcd8d65-7e1b-4e21-a4f9-ae889663d485",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "321633a8-a5b1-48f5-b644-c237ba93b3c5"
        },
        "item": {
          "id": "6d7a18aa-c625-47eb-98e8-647444f2ca64",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9e70f74e-6933-4a20-9064-3f757b41f0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7408ddf3-529d-4114-a015-5ac41b0f5b1b",
        "cursor": {
          "ref": "4840af68-de6e-48fd-a826-50ed0f61fae4",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c7ff78a4-d72c-4031-891c-23e169d44745"
        },
        "item": {
          "id": "7408ddf3-529d-4114-a015-5ac41b0f5b1b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ee368c4c-a2bc-468d-ab55-d0d464d4a362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3917219d-c78d-46ae-bf32-f0a521cbfca7",
        "cursor": {
          "ref": "c631cfe7-0769-4f5c-a198-62fdb2489233",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "0b86cd23-9323-4ba9-bfa5-a5b922fd2f1e"
        },
        "item": {
          "id": "3917219d-c78d-46ae-bf32-f0a521cbfca7",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "7d0ba204-5e8c-4ae8-8e19-94a4a55dcd3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293ad266-17f8-461a-9754-0dc98ee2e64e",
        "cursor": {
          "ref": "fc575793-51f5-4662-8f23-44851432dcbb",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "4c69c11c-bfa5-487c-a067-dbc3c13116a5"
        },
        "item": {
          "id": "293ad266-17f8-461a-9754-0dc98ee2e64e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "6cec0a67-a334-46c5-bdf4-6dada43cb1e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb928c55-983c-4e2f-b512-896b0fc88d18",
        "cursor": {
          "ref": "7f09eacf-ee3c-4ab5-8d1f-d161d5f9d225",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "51272e00-5f30-4294-855f-cd24f58fd41a"
        },
        "item": {
          "id": "bb928c55-983c-4e2f-b512-896b0fc88d18",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b86566ab-d97c-4862-8df4-754c32f00375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41012ea-8b40-43d8-b831-1bf922937615",
        "cursor": {
          "ref": "a823c517-4510-405c-b99e-9f8d9639f24a",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "fc5254c9-4ada-466b-8ede-7c9e98a137c5"
        },
        "item": {
          "id": "a41012ea-8b40-43d8-b831-1bf922937615",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e56a778a-702b-409f-8c4f-3e0714ca149b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0543c15b-d59d-4860-8be5-53f009873af2",
        "cursor": {
          "ref": "aa96d2b3-0c09-4b6b-ba0e-14a8f030eda2",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "51bce5de-e84c-4d9d-81d0-61c0f7b98533"
        },
        "item": {
          "id": "0543c15b-d59d-4860-8be5-53f009873af2",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "171d6e6b-91c1-4a6d-bc32-7504245c641e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2208ce73-3f9a-449b-a198-78286fa1ff3b",
        "cursor": {
          "ref": "492c42aa-8102-4b53-b6fd-c4c1e6407a4d",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2be5f0cd-fd0d-49ed-97ad-09caabbdec05"
        },
        "item": {
          "id": "2208ce73-3f9a-449b-a198-78286fa1ff3b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5a33a653-78bc-451e-bcda-85ec0f1d3da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6d3615-837a-49e8-8656-1f648460ab74",
        "cursor": {
          "ref": "7ff45009-c76d-4f0e-a530-fa7510fa54cb",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "507f92ae-b5b2-4b73-97a4-c228b34fc5df"
        },
        "item": {
          "id": "1a6d3615-837a-49e8-8656-1f648460ab74",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6c1f4479-b539-4075-be43-30edcc094884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "466bf5fc-fd0e-4198-8382-58bd6a62c7a6",
        "cursor": {
          "ref": "753643a6-f3c7-4def-b97a-9e3472c5ab3a",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2a5299bd-4e63-45c0-b0ed-73d1f753ad24"
        },
        "item": {
          "id": "466bf5fc-fd0e-4198-8382-58bd6a62c7a6",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "087b9957-c49a-404b-95d0-060973f59c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95db3af1-1b69-4028-a2a4-9a6a45672649",
        "cursor": {
          "ref": "e5a5d605-d48a-4276-8cf8-256a6589ba29",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "71a48c0e-eb99-485b-9826-f468883d5c81"
        },
        "item": {
          "id": "95db3af1-1b69-4028-a2a4-9a6a45672649",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a0036669-8686-4d6c-a2c4-f597cc5a49c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0de026e-8265-453c-ad3d-2e7273189a6a",
        "cursor": {
          "ref": "ca52d2f3-eb13-4cae-a9c7-601cb189651a",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "263dd199-ea36-4e89-8ca8-b2445f5e7e89"
        },
        "item": {
          "id": "d0de026e-8265-453c-ad3d-2e7273189a6a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7d0e4239-cd54-4fb6-ab6f-41cfe4a0bc95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d007c67-1968-447a-baff-a255c528a9c9",
        "cursor": {
          "ref": "3a74ace0-4309-46b5-a089-4f4660d38ec1",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "11e32b79-04c4-43b5-aece-aac95effe0a6"
        },
        "item": {
          "id": "7d007c67-1968-447a-baff-a255c528a9c9",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "08a768e6-1084-4471-a122-3be6fee11a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc5c949-d730-431e-9915-924d7455ba2d",
        "cursor": {
          "ref": "d66b7caf-77fd-421a-9eb9-99ed61d8d5fe",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "aafbe2be-1d42-45de-979d-37810535fe50"
        },
        "item": {
          "id": "fdc5c949-d730-431e-9915-924d7455ba2d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f5f7c264-1d11-43c8-889f-99b596e3dc47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "804afd91-6f28-4879-9f44-d2aa2ef6d0f5",
        "cursor": {
          "ref": "a53643ad-0580-46bf-950d-257d681b260c",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "b8b8872f-bfba-4e17-b697-c18a2b5f8808"
        },
        "item": {
          "id": "804afd91-6f28-4879-9f44-d2aa2ef6d0f5",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "1092048d-1eb6-4881-8546-6873b4997600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5313609e-aa5a-41ea-84ef-637674aa6ca8",
        "cursor": {
          "ref": "8291d94d-4a90-4a23-a0b0-b5af4c2a2fad",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "ce67c750-3171-4f96-8fd9-f69176a825b1"
        },
        "item": {
          "id": "5313609e-aa5a-41ea-84ef-637674aa6ca8",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "7c9bf153-4030-4b3f-b9ab-4bb54a37d6a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074ee3da-522d-4c51-8754-0f5dbee4a546",
        "cursor": {
          "ref": "22d1a543-237b-4183-ae06-5a5b92b445b6",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "84b7f337-0633-40e2-8b0d-f3e3ef85686a"
        },
        "item": {
          "id": "074ee3da-522d-4c51-8754-0f5dbee4a546",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "977c4503-1264-456a-82a2-d9143d9b39a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b3d846a-4de9-4060-855f-09a834b71f73",
        "cursor": {
          "ref": "f33b453b-aae3-4f10-8a5d-4b0ca729d520",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "b42ee93a-a227-463c-9ac9-48e64714a331"
        },
        "item": {
          "id": "7b3d846a-4de9-4060-855f-09a834b71f73",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a741b40a-90a1-4ea6-9a5d-225798282de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 208,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598d35f6-272f-43bc-9554-34c457999b30",
        "cursor": {
          "ref": "0434bcf9-0151-4c39-9a8b-eef65f19e5de",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "6ab5aeb6-9f7d-4a48-88b3-786614428623"
        },
        "item": {
          "id": "598d35f6-272f-43bc-9554-34c457999b30",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "bfeea51b-f902-4e3a-a4b9-c40ed33e8281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 202,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c766116-2ac5-4f0a-a8bc-2f963462494b",
        "cursor": {
          "ref": "bbaa8c00-b2a4-4604-92bd-93fca04b5aed",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "ae6fc08e-1ec4-420c-9bf2-e40d1c1dd080"
        },
        "item": {
          "id": "1c766116-2ac5-4f0a-a8bc-2f963462494b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "dad8dd1a-af0b-46f3-a194-ece9668129ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98519483-0c71-4b40-bce1-71d876b0abef",
        "cursor": {
          "ref": "5d8a6ccc-d4ac-444f-accb-4e841a493087",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "d00c96ea-dd2b-4436-8046-aec5fff98f95"
        },
        "item": {
          "id": "98519483-0c71-4b40-bce1-71d876b0abef",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "28b42311-04b6-4590-a867-e1a8dc805d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b826758a-341a-4b0e-ab88-c139f83978ee",
        "cursor": {
          "ref": "4c8f1643-7ce2-4b9c-b211-7e07ff3f9d3d",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "22bd76e9-f862-4ee7-9f1a-a055dfca1bc1"
        },
        "item": {
          "id": "b826758a-341a-4b0e-ab88-c139f83978ee",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "fdbcaad4-8667-4d35-b00b-9e531f48cfe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f4c032-ce24-457b-b41e-22fb15ce3072",
        "cursor": {
          "ref": "c4b928f7-1044-4a51-ada1-d1da9a065f11",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "1c794f6f-4ebd-4e8b-9a62-b050fe79fa68"
        },
        "item": {
          "id": "13f4c032-ce24-457b-b41e-22fb15ce3072",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c57b14df-d396-4eda-9586-e7aac34cea09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66e19cc-db4c-40cb-9745-40a25119da75",
        "cursor": {
          "ref": "bd7f2d0e-0fc7-40ba-80dd-afd45a31a97a",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "7467c443-39dd-40bd-8a58-757681d26c11"
        },
        "item": {
          "id": "d66e19cc-db4c-40cb-9745-40a25119da75",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "18b176d7-d8d0-4209-b146-ad196c8a547d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b759f781-01c4-4abc-99b4-1bb9be0a9f1b",
        "cursor": {
          "ref": "6680c919-fecf-4a2f-80ac-3f8fcd422963",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "86cffee5-ea29-44ab-bfa2-5f2e65914ac6"
        },
        "item": {
          "id": "b759f781-01c4-4abc-99b4-1bb9be0a9f1b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "488870ff-9461-4157-b0cf-59e7cca89577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa709e4-acab-4ef9-bfe1-aca547275226",
        "cursor": {
          "ref": "9ee5c697-e208-4a11-b568-628c08dc1e4b",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "c7a06341-dc6a-4f50-bc8f-a0e068976203"
        },
        "item": {
          "id": "efa709e4-acab-4ef9-bfe1-aca547275226",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e6389c28-d125-405c-9414-df6bbe4c581c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d46cf9-477a-46be-91bd-5e1e063375b4",
        "cursor": {
          "ref": "992833fe-a137-4a58-91d6-2cfdfbbbb792",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "6242f294-b95b-41cd-ab93-a74412f3bc52"
        },
        "item": {
          "id": "e1d46cf9-477a-46be-91bd-5e1e063375b4",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c220a595-8f65-4050-bb4a-c5d1f102bcd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41f2e6c-4e69-4541-a7fc-8ce30083ffd7",
        "cursor": {
          "ref": "b8e78617-bf22-4dbc-8ec0-861a6a16033b",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "8029f06e-1c7a-4254-a373-69bc6e4ab23d"
        },
        "item": {
          "id": "d41f2e6c-4e69-4541-a7fc-8ce30083ffd7",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "99b6bef2-501d-48b6-b023-953242a4fd9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fcdd13e-e43e-43f7-ac5a-cd937be0b1e6",
        "cursor": {
          "ref": "4a90a60c-1ec7-4592-9f37-6ad4c82b95e8",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "3a0681e3-d263-400b-9a3b-adced434cfd0"
        },
        "item": {
          "id": "3fcdd13e-e43e-43f7-ac5a-cd937be0b1e6",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ecc4bc67-b965-435b-a010-3631de317895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a41b05-f609-4878-b6c7-a6643efd856c",
        "cursor": {
          "ref": "838b2c3d-eaf3-47e2-ac17-b68c0f91e3c3",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "ceae4e05-1985-4ace-859d-24ad0a701011"
        },
        "item": {
          "id": "b8a41b05-f609-4878-b6c7-a6643efd856c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "045a8035-ae89-413d-8fbe-8df23db6c554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2501306f-e868-447c-b918-2fb8af4ad37a",
        "cursor": {
          "ref": "17a6c252-afc9-468a-b654-e022a349daad",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "b6bf4f3b-c5ff-48e7-b372-68660b4bc3f1"
        },
        "item": {
          "id": "2501306f-e868-447c-b918-2fb8af4ad37a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "1633be76-0c32-4f3e-b11f-60adf04c1d32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3286678d-8db6-47a6-963a-656edcefcfd9",
        "cursor": {
          "ref": "37543083-5f47-4b51-99de-15195673ff2b",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "66b8fc3c-96ac-4514-bd8b-2d9fcef7774f"
        },
        "item": {
          "id": "3286678d-8db6-47a6-963a-656edcefcfd9",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ee9cdabe-aebf-4cb6-b805-0af289e76502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d7e0ac4-8618-45ea-bd08-8280683ed92d",
        "cursor": {
          "ref": "5c5dfd47-b331-4981-8a4c-f7a7e47b94da",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "e5c22324-775e-4e2c-aa04-1a972ef57cc6"
        },
        "item": {
          "id": "1d7e0ac4-8618-45ea-bd08-8280683ed92d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "eb1f780e-aa78-47bf-9941-852217267e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5882487-f2e8-426b-9313-87ad21486eab",
        "cursor": {
          "ref": "4856c18a-55d8-4bf7-86e1-9c165c3e3a48",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "77e0255a-2e3a-45f1-92b6-d5950507b5f1"
        },
        "item": {
          "id": "a5882487-f2e8-426b-9313-87ad21486eab",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9343c870-b60f-409a-b14f-61fd2cbc077e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a950de47-05d9-41fd-9300-c4a7aeb9a598",
        "cursor": {
          "ref": "73c3b849-82ae-400d-85e8-5e890d13510f",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "0411784d-82be-4c2b-bcf7-6a67c7df07b1"
        },
        "item": {
          "id": "a950de47-05d9-41fd-9300-c4a7aeb9a598",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "2bf869c1-f110-4846-9273-2af2db76a531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba926bf9-aeda-406d-af76-8b7f4805193b",
        "cursor": {
          "ref": "89b0f1a5-0475-47b9-bb19-63c77f52383a",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "0f9d0017-4d7a-4fe0-ade6-0f6412f7c54f"
        },
        "item": {
          "id": "ba926bf9-aeda-406d-af76-8b7f4805193b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "932b0f43-79e3-4c62-991c-ea6e41282cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3014a67-6b88-4e56-a958-4f50d824c2fc",
        "cursor": {
          "ref": "eb9a4217-495d-41b8-a1de-10bd069249b6",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "9d122f77-0fd2-41a3-8c16-4b9b3a99952f"
        },
        "item": {
          "id": "b3014a67-6b88-4e56-a958-4f50d824c2fc",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "3be57a2b-7cd6-424f-9005-996f084bf548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9c2327-5c7c-4b98-a4e8-2626a44c903e",
        "cursor": {
          "ref": "d05d4427-c5e8-46bd-9f4e-6841a345bbfe",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "9683b3f1-ef89-49bb-a869-076d86bf64da"
        },
        "item": {
          "id": "bd9c2327-5c7c-4b98-a4e8-2626a44c903e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e8686bdd-0fda-4ffe-a268-8013832e1903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "771d51fc-b4c8-4529-b285-c914ca311c74",
        "cursor": {
          "ref": "3c0e7f65-2d96-468b-a27d-5a36981a298d",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "045d40c4-4fc3-4461-b62c-86e42bbd378e"
        },
        "item": {
          "id": "771d51fc-b4c8-4529-b285-c914ca311c74",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a13ee11d-ae67-4139-afe5-e016879352f9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33754875-df79-4946-ab3f-bba62a554fde",
        "cursor": {
          "ref": "2a557ad9-6c72-44d2-8555-4f9bce21bf92",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "fcfd1e8d-3b48-4f33-bc2d-becc65fb01ca"
        },
        "item": {
          "id": "33754875-df79-4946-ab3f-bba62a554fde",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "532a90eb-2a9b-4968-b934-92db21076d3d",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a79ec84-7409-451e-90ef-08eb10008cb8",
        "cursor": {
          "ref": "3a614f44-01be-4e4b-b0e7-5b90894743ed",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "e3a33e0a-58ec-4541-9bbe-8253f2769eac"
        },
        "item": {
          "id": "0a79ec84-7409-451e-90ef-08eb10008cb8",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2967d3dd-463b-43ab-807d-0d595f86b0ea",
          "status": "OK",
          "code": 200,
          "responseTime": 3164,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dbdb55c-9dcb-4ba4-9b1f-503584c4ecb1",
        "cursor": {
          "ref": "4304a17a-4b72-47c6-8bb9-452b41e3eb43",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "43e217be-04ef-40d0-a3af-51e1528266f7"
        },
        "item": {
          "id": "6dbdb55c-9dcb-4ba4-9b1f-503584c4ecb1",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "4c19a790-5b51-45c2-a053-51fa660eb505",
          "status": "OK",
          "code": 200,
          "responseTime": 2976,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f982330a-80ca-4190-afbc-145b7c98cdd2",
        "cursor": {
          "ref": "ce54ab8f-24d5-42de-97e3-625d9fb5a6f4",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "41f5cf64-3fae-459c-9843-006b1817f239"
        },
        "item": {
          "id": "f982330a-80ca-4190-afbc-145b7c98cdd2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6c5bbe35-071a-418b-80f2-6df427d98f70",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f982330a-80ca-4190-afbc-145b7c98cdd2",
        "cursor": {
          "ref": "ce54ab8f-24d5-42de-97e3-625d9fb5a6f4",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "41f5cf64-3fae-459c-9843-006b1817f239"
        },
        "item": {
          "id": "f982330a-80ca-4190-afbc-145b7c98cdd2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6c5bbe35-071a-418b-80f2-6df427d98f70",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4741695c-a5ae-4d51-8754-356bb4bcc0b9",
        "cursor": {
          "ref": "e93cfa2f-2267-47bc-99fb-676b33f27d69",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "a996abc0-c45c-4865-b570-55d0a6c2e2cd"
        },
        "item": {
          "id": "4741695c-a5ae-4d51-8754-356bb4bcc0b9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "997c75a8-b8b4-4621-9cdc-820d3613459c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22569fe6-b164-41c8-8df3-e3030d6b996f",
        "cursor": {
          "ref": "c2c0e979-51f4-4404-8a96-966ea0ba1cbe",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "ceed4ce3-43f8-4852-97ac-a943f047b1a1"
        },
        "item": {
          "id": "22569fe6-b164-41c8-8df3-e3030d6b996f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b6db2651-c340-46df-9966-0f7b0397e175",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}