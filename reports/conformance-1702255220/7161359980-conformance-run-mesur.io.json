{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "92c78264-aa83-4441-968d-b179a3cb1319",
        "name": "Clear Cache",
        "item": [
          {
            "id": "715d0d70-c762-451a-95af-06ce3f5a4690",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "da29a54b-905e-419e-a9d4-eda6c78cc915",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e5031ef9-ad25-46bc-839e-48dd661353a1"
                }
              }
            ]
          },
          {
            "id": "88ecf5d8-77b8-42c9-a706-5bb0dd3a6708",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "71c56f3a-a1cf-40a6-afa9-6ccc638a053c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e6e3b795-8d72-4ba0-9fcf-9994f6c99133"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ca61d2e5-883f-44fb-9356-8bc40b20d2ec",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "1b77dc1d-6716-4b59-92c8-bbb79d1dfa19",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fefe7e6c-18c2-41d5-b149-cadc39ce003f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f43df63-f83f-4b27-b88d-a31011f3ef0c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8bdef118-d661-4a16-a517-7c406e81dc85"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "88e233b5-1319-4c85-97c8-39cce64409c9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dc35096a-15eb-473f-9f73-f26f97b88c21"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "793c0d3f-d033-4c5a-ac1c-bd65b81bd8d2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a74ae996-5889-4b69-a502-430ecb51a330"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7cb60f08-cde7-4a4d-b4ed-5abb6106a139",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2fc8cc58-6810-41ad-b667-a7a5c4442df0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "70931f0c-73de-44d9-b553-77fe734c6799",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "93074769-ea49-41b3-881b-655cc422a06d"
            }
          }
        ]
      },
      {
        "id": "f76f0395-2526-493f-98fd-78c13c3d59d7",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c4f33d2a-c4d0-4fbc-bb2a-eab3d16e808b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fe19391d-f3d2-42b8-9b85-28c4e1729253",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "69edf1d0-ff77-46f0-829d-18b09634cc54",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89703ebc-9c9c-454e-a729-77536780ebdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "770fe5e4-cb89-41fa-9898-20a7a76d6584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a240ab7d-5b41-4a85-958f-778470cd3988",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ea455e-0842-4e50-9fa1-5b11e8f0223c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c5b3ab3f-ef0a-4c4e-9942-9326558c86c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aedd4c32-f1e5-469f-98ee-eceb84aba627",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4dc389a-a194-4e91-918d-2a4f0c05f1b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a710e96-1103-4d9e-81ad-cbdb4e102a00"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "08416e68-7903-4433-abd4-023d4db2073b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c1a16224-483b-42cb-ae69-535649dcff63",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8647373a-85a4-4e95-8a5c-6596600efe0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ca1f5eb-897f-416c-b235-140380ff6a24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb9bb21-5eb0-454d-b6ce-9229b637409f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47f89c72-6d78-4493-b558-00d8113198eb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2bd534d9-b68f-4cdf-8700-a566c9632266",
            "name": "Positive Testing",
            "item": [
              {
                "id": "01602a7a-ccc1-4ac1-a58e-8b83be0be908",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0996279-ebef-4eff-a1eb-0728e6888a81",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "eeacc67c-24b5-4d09-9d78-68bc1c435c04"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4ee7a09e-da85-4193-a9c7-5264e6392963",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "98923f45-af7c-40f8-b133-e1a4c90eb9bb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a722d527-6d18-4097-b289-51ca92a6813a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3184255f-be3f-432c-abcf-11e94506ee10"
            }
          }
        ]
      },
      {
        "id": "d6130781-06b0-4cf2-b0c1-64e6762f3bd1",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "97fe39a0-deef-47e0-bd69-8de769a7a1d9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6aaeedc9-a6da-408c-a639-a09b667cc81c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "30a4e901-18b0-4154-9b78-900740f1c99e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39f8933-74e3-4b8f-9319-065f698fc7ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ec863a5-93e2-4859-ac87-353d96e13fb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4836ea53-1000-4256-bd01-356a5cc39260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5329b0a-36d8-4bec-b2da-063574d876f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c3dc5b-c26c-4175-959b-c4bc7794fd01",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d13afe2-4b5c-445a-8089-563375e3c7ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2c14c79-321b-4f5a-8aeb-ea746eddc23d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e437cf9-f1c1-453c-ac96-3f24f1e57e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0e1b7b4-d3a9-4747-a277-f41cade0d0bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5147904-e97c-489f-b8e5-317129673600",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac191f0a-6998-467f-a73f-36cb0516e46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55671a4b-763a-4eb2-85cd-1c39e6d9e31b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e720c047-ccc1-4434-a1e5-dcb510769791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8cf768a3-906d-478d-a5c1-856af592756b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0043fbba-389c-4a7d-8c35-bf3b80a82d21",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df33e84-9bbc-4185-b987-f246d6fab42e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae58483f-eee2-4dc5-a179-2ea44bc40595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a51174a-f6dd-432a-9ae8-35d2a91cc081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f713b166-803f-4305-9466-e0170ab94b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db828f1-13d5-4e97-97b5-9af5f75eb760",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "970a3c97-3cbb-4f9e-a7ef-6abd390a958d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ee8ecd6-ecd0-433f-98c1-a8aa87183151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae8d9e0-646b-4a9f-9efd-fa04d8f42f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5ed701c-e75a-4c4e-acf4-0b4717753011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c3d8cb-5ca1-48c0-936f-4a15559038bc",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5ce1b4-e13b-4fb4-acaf-e0f2eb2bd280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "273b5eaa-b54e-4460-843b-c325d60b90a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c135f9b-2f65-43f8-87e3-0a2b983c9547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77fe09ab-4ae7-4351-8cc2-d50378d76c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb60c6a-1814-491e-8e33-66cac8ca85c8",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b958e839-3729-439b-978c-2ed7f8f423ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bee329f5-ecfd-49a1-9b9d-334165d9b0ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed572890-6510-4730-8e73-d1813b8802bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1fa139da-ac08-4995-a33a-8c4578f2d0d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca567efb-7330-4f71-a59b-47d81ed226a4",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b7e01e9-c911-4088-9f14-a38a2bef6ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3ce757e-170b-4def-9d36-2b29fa7cdf77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4216550b-5f06-4326-be30-bf22b9f4d00f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ae81b66-63ee-4dd3-bec3-a4a6644f8ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88072529-4f92-41c7-88fe-c0ab356f76be",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e458a39d-3f42-46ef-b69f-de880b5b1f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b59656c3-1294-46f9-a099-c537e0087f03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31c87b0c-45da-4de7-9ef5-8aad6fd0c753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36487f09-fc4d-4cdd-94ce-f863fd2014d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7900e0f-678d-488c-9ef3-865706de82f3",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc0e2c7-4869-45f1-85d7-5dec8d6e787a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cddf964-feac-42f8-86be-cb9543c6f6d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04bc8c04-9516-4f9f-88f7-2e2127593bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00ee340d-3486-47a3-88b6-8f8f92adb943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77273efc-d929-49fd-8326-fecd30d20f20",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4610700-3b89-4180-a13b-18c2e104d3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "045950f8-eb9d-4535-bfb4-49b97769b5af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9a2f82-9741-41b0-a368-106019f79130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "177bde79-4851-4861-a11b-27534f54e82c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e713c0b-14b9-40fa-91b3-d7d7d21870d1",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2365adb7-25c7-4f57-a173-c671c06423d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c47ffffe-241b-46b3-8b35-a59072a9a822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad1f6f9-c368-4a07-96c0-daef62e87275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b776295-a6e5-4e0a-b49c-081fc01a30d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "231a847d-2893-4d01-a249-74eb9cbdd4f0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e661fe4-5d38-4819-82d1-1152d232d0c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2b66f26-79b1-44a8-9581-7a4d0b8c8bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc1d7cc-3c13-4cd9-a148-94d2c4df71c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c26cd940-54fe-43dd-8e8f-43cdda02a497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e464ae-9329-48d5-8c76-953184ed23a7",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1bde029-b134-4c9a-ab55-12ed3f785962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d41da778-4e82-4c3d-ab92-b5477b1ea614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af1c6bd-7f15-4d11-b897-717a729cc0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58ebecde-53ba-49e4-8f5c-77b74e4c0c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "202f2439-64c2-4830-8842-1dcffd0ce056",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8825190e-2a4c-485f-af90-0f6549c0f31e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5fdc01e-44e1-44a2-8285-2c585454afd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da69508c-13f3-4a6a-94af-bdb4cea2270d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46575e0c-0175-4ac3-9a62-61199ad5694c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5912d935-229d-4d50-8a1d-f14e78bbf5be",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec9246a7-73fc-42fd-8007-e11e3e9b48bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9de7ece-276b-4ba7-bbe8-9914d8bb8bb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f00400-0cb6-4ff2-87a6-858289ac74fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "426cbd0e-a0c9-4adc-a411-6ccb54ea2618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59063f03-09e1-4570-9a80-9ea4305f3a13",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d0381b-1576-49c2-bfc3-7b9d33f715a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84035744-750a-4a64-9577-ccdf8afb5fde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f34013-5c52-4f0d-9832-14c53da81b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60b8c27b-d539-42f7-8c69-aa2bafcfb3c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afbe5197-830e-42d7-97a3-c19b9d015c24",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cfd9a71-314d-463f-a4cf-ee4ee253e5ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0fa8bbf-697f-4d1e-9afc-051e774a0c34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f2179c8-320d-4674-82b7-17583da7b54e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3e0a40e-f6a9-405d-a14b-f773c45da518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef9d46f-0c0c-4027-a5b3-9a6d98bab70e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d05b6e09-1203-4330-be03-e4050ab489fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08b57806-0832-4e92-95ee-36ae571c151d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed610c4f-ac85-487e-a276-5937e79fbb8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1eaeff25-1af2-4541-a940-b6df97281846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300f34d0-3c1d-436b-a435-7d1f0c131efc",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce646c0f-739f-48ff-9db9-5b64f3eb9b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82585042-1a98-43df-ad35-49111e90ea69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b029ea4-828f-4adf-96f5-ad8009c30e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bca96b0c-6012-4904-8d8f-81aa92b6022a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b92cd2b8-b394-4f1f-b8b2-3bca6ac0a8ca",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0163b5fb-d43a-4d3d-bebb-15bfd0c8fd25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b97078f-ccc3-451d-a0ad-62eaba9aa130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd17a239-4fcb-420e-828b-27a07c3c0d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4e7f1ea-7590-47ef-b3b8-f4b2c5293cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "004f7e1c-a0ec-41b2-9790-2b3458801475",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a88a9623-b86e-49a9-b1b7-558b0cc30f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "683bd2ac-2cce-44ba-8146-2906ea2b7226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d894e948-afe4-4aa2-91bc-28b552cc5218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dcc1f041-8a48-45ae-8aef-61aa52bd8599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7806b101-2717-4c28-a093-cd8b6609c4f2",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a465d7c-4144-4701-85d8-660941886c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f024baab-2509-4173-b1d8-f8aee3349142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e650b1-2fb7-441c-91f8-4069c555020d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "85b94906-e13c-4e86-b15c-e9d38e269394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b3ede9b-7bf7-4210-a120-c75d7baf98de",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd2aa00-f34a-4839-8571-10db70cedc08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "502acb98-fd0c-4d2c-87e5-9e3cd7bd0cca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ebcc84-1a8a-403d-99fb-8a6b8af78432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ae424b5-22bf-4bcb-985a-7f28c918dc2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42620b00-59e6-4f4c-9204-a52170a0ac5c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "726d5098-30af-457d-b2e4-f53291a4f946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c37b9dd-8ecd-48ec-a38d-6bc87e8281a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65419e03-8bf2-434d-b77f-ef12f34dfa5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ad5410b-e68e-4da0-a772-526f8854ca9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2df1a13-41e3-4af0-a41b-8d8157671bc9",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75dc0f3b-7fcf-435a-965e-098afd8512dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2b27999-6153-4022-b1c7-6cf752c63d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0309fce5-22ba-48bc-9a29-b0b594f2fbe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4576b727-5960-4b95-bbd7-f6a10535ec03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c453d0-7bc8-4880-b6d6-5c0daba31107",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee0b5b1-a5ef-4225-a882-297f99b8a62b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18f72117-a1d4-4813-b810-922dc21965b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96495274-e988-48b4-bc69-559454456a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "12d9bb1c-63ac-44ba-9f5b-56185ef5dcf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168b3d0b-6a60-4727-92c6-22c10b1f0a5c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9209aee0-0571-4e36-9d7e-271f335bd223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2287a662-caa5-4480-9b9c-9b6ea5786834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed113533-2dc1-4af0-91a2-b1c67e0953a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b27d458a-f0bc-4ac0-ae98-bdab09b76958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15982964-38a6-4605-8b63-2d7e18e8fcda",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d32a5d-de42-4d5c-b200-b5bb92a25f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "107ccdbe-abbc-4b6d-aeb8-e253e2232e6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e955ce9d-f52f-4fa5-9298-3a4e839b8165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c197c737-72d5-44ee-b200-52ef7177c404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ac7dea-f697-48ee-b33c-0a77ba3f0b90",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "426cfd17-49f3-4bec-b6a9-088cb5c2c542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6222327-23fd-4e33-8543-f6d61f389668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88856736-12a7-4057-8bea-b2d95d77b35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fe3bd19-b965-4a96-bd0c-efe487fbf9ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca974762-7e8a-493f-a89f-0476d54bb7f3",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0736b8f2-03d2-4589-9b4e-c5cc7260cf6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef07050e-eed5-4434-9981-347ad746f0b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ceb676-dd8a-4231-9c2e-da3323dc5e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "315ff295-fd5e-47d2-b71e-040f31e5c54f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e71da7e-cad1-4929-960d-f81f52af5d80",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd40bc0-d563-4b81-bad1-5eb18f3fc17b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baa7dafe-586e-4ee6-990a-7fd1f66ed509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dbfbbc3-912e-402d-824e-d8ca1c9bb508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "69727f1b-78f3-4bc1-b8be-6e5230a6ea86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a02e8ef0-2076-47e2-846d-56cb979fcdc9",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41c83a9-5bfd-4c2e-8d89-d6621636bbd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f438c9d-bd0c-4f16-8f79-b28932ae02aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1ff42eb-0d08-4d92-8bc0-17b80103a1be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9dbfe538-2a1e-4c06-b927-b32894ab9857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "355f219e-80be-4850-8ee3-143a16144448",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b84a6932-e832-4a13-86b0-f0c21c261880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "644653a7-a5a6-4309-a010-aa9d89f865e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0e5b2f-8646-4575-84c8-1b3e84c5bf46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7b6f3f0-fdc8-4a57-a14a-9807d2880253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "170d20e4-6f7c-4d89-a123-fcfc2eeca48f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5a7b54-911c-4a5e-ad20-b3633ae0942d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dbbd7ad-c365-4291-9187-3cc4f53bd242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e6d3af2-c70d-4288-8af0-16cad3989267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d5c6e6b6-b6fc-4f4e-8f30-d53cc67e0350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e32a1d-4c44-4243-8e5d-c4deea2f8322",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db9608a-07ec-4cc6-9aae-4f49c511bb21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "daad9a9f-a063-499d-af53-f77281c9f747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e908171-bc5e-424a-9d85-e98849c39c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a3f66442-d76a-4d98-85db-df2760d0145d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb0edc0-1d43-411b-b76e-0e5926e1c273",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ef5a18-601d-48e9-aadc-c02df04516b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a4aeaf5-e628-4bb5-b471-f107810e29a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35684b4b-aa8d-4da5-bfe1-9cd777e4a8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "da5c0585-ecc3-487d-93ea-3e710373ada7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da24b419-8289-434a-885b-e46fa410695d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30076635-1172-47ee-82c7-77b9390099ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8624d942-8ec3-4892-8d4d-dcafe2cb7ca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80815e1c-db21-43d6-9b2e-2b5e3d5a104f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0dce7ba8-a95c-42c3-820a-94033c4df0b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02690d47-ec37-4e97-81c8-f3ba1aafb1d6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd0137a-ab0c-4738-8d0e-379a822ed5d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ebd2dbb-0d15-4150-90fc-5343378b69e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8159b8b-e691-487b-8100-43e1d0b13d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b345724-fae7-420e-bfb7-c1bce353b686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a07236e6-065e-44d3-a0cb-938593891767",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3139ebcc-5b8f-47a4-901f-cd31a7ebd0bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "533a1488-7a70-49df-94e8-b7ce4ed60022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a5c6d7-09e4-4419-9f02-ac8012bf0d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f81c5c5f-25e7-4a52-8d9a-5bde954bc7d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1604cf60-6c93-4a7b-ba01-d8ae3ac1f62c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e123531-1328-4275-a459-3a44d186016c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "665542d1-1899-40ea-a233-1bbf73ae7cf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120f7a00-2d98-4c67-bf55-5e1ec791b683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0398738a-e672-4e98-87f8-9953b72b3fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fec7cb2-aac9-4988-b367-3169e162c50b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce42cd24-90c2-475a-8c8c-5bb04af64d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f752e83f-6f2b-4bb2-9a9f-3eb9eeedf3e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b4622a7-dd8f-4885-8484-2644f6af18b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d3903dc7-1c51-4f6e-8df5-9719d72ac082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92379a62-9661-405e-a6d7-1c82a04fd32b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dcba024-3aca-4707-bfa3-95d64746542c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "998c391d-475f-44d1-bbc6-6e422fcb3c14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25bf14e1-ec4a-41c4-ab00-7ee701a845c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8c88315-072d-4af4-a07c-586536ae20b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f97cc711-b98d-4dd3-a072-b43791de744a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ba4804-3ff8-43fb-9eed-2362e4157e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb5f32fa-27c6-4676-9de5-264179ae9a0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f8bb267-2b01-40ee-bba6-8dc197ca3ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "8783f9f6-4a43-4668-9956-f90a3408f5f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0cebf01-8cd8-42d0-9cb1-f83ffcdee11f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d6e335-4050-47c9-b63b-4f693ff63b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a5f140a-db78-4920-a4f4-a12a92798d4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9e7152-6baa-4b81-af7c-253a06c909dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd321c27-6549-42c7-aca1-ad0ea14c1853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7487449f-90b6-4bd5-bbcd-4dbcb8cbbec6",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15680c72-0196-46b0-ad78-f6021f019091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76221ed6-8511-40b8-9cfc-13db6b1fd9dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e68fe1a-1712-40ca-bf7d-a34461515717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9238240f-6968-48e5-8f2f-abc67a6f8a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e58052c1-f14c-4044-bbb0-c12d6e45b03f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b11ab7-a3da-4ed2-821e-afd8ac3cf407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee6728a0-d0e4-4e97-a235-16428253ad05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ab460a-0d02-4b34-99f9-72323404371c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a351b901-4e9d-497b-9525-6c22f00f0343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16824ca7-e3c7-4cc5-be93-ac9c7d72ef1c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d85b89-5935-46d7-b53d-5b388fbd9f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f93856e2-1109-4801-96c6-2651153a12db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4053ed5e-12bc-47f5-a415-37a6b2fed903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a666ef4-d3d3-43ce-9abb-e10beb15348d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15380f50-166a-4ff7-aff5-524574635272",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d727c4-7135-4300-a035-63a58fcc2dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a96d56e-b224-4fdb-a792-18f18f5dbc8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b9da946-e0b5-4038-9252-f88f7f30b4fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e11ef5d0-f03c-4ebc-863c-4c79f80238cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb778a22-3f0b-4e87-aa8e-47c81a0e3c6d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "381e06cd-ed13-496a-a3d1-60d3f1503339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8a332f5-2249-4dc6-8b7f-c9f1c2db69bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3beb105c-a1e1-4482-a35a-c57465c2b1c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ba5e9871-dcb9-497e-a33d-a57178164593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1608cbb6-db7c-4c63-bc59-87b453d0d71d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "affd7e97-89a6-4b40-a099-c95bb397e418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "962987bb-a33a-409e-8dbc-5097a9a74427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf8cd03-28bc-4e81-93f7-0322ac22528a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "97400015-3a64-417c-a2ac-2e5d57ca5f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b49caf-4fed-418e-9fff-68430bef8ba6",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a94b3d2-c2fe-4666-82d2-6d5e10dcd581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "569d874f-5f22-4797-80b6-0a9239fe8115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e56894a-1f66-40eb-a404-3d2d5fecfc1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a5d5186-bb28-4c58-abeb-d50552b55b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35bdf83e-4a84-4895-955e-75340b1dc722",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40fc322d-78d7-42a2-88e5-b8e9daef9c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aaf607c-2aeb-42c6-ab5c-e8a25c203bac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "addfb7dd-0267-4d12-8d19-af48326e2a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "341e03e5-e5fe-4ac4-b95d-4badca15e400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb369ae-8586-4508-a7b7-ffd9755417cc",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5841c1de-ccf9-4281-9811-aba76fabfec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97df0d95-b927-4aec-8e08-21f22b57e95f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff2f8409-b391-41b0-9756-d7d462f9e936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa872d67-5084-4898-a67d-40440d5a37bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acce8723-150b-4d62-8e76-1cb4e9af187a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd4f52b9-0aac-4730-822d-3e981d95255e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7464148f-bf13-4bbc-82e6-7edfe98ea48e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbaf6605-f8c6-4449-9f33-bf2384bd38ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b901cf2-90a4-40bb-8e08-674e3d4ea38d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b4c17a-ff23-4f64-b665-4a890ba85b66",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "367994b8-3970-4181-90d6-ef83065f34fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c20719a-5ff7-4339-b127-25e91f72ce32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1aed94b-b192-4d1f-bc80-2b9dad96c8b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1ccfde0f-0214-449a-9fa2-5542f1485a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e574190d-27f9-4aa0-b2c0-aa6e5384ed45",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2898db5e-dfdb-4a26-9841-b3d03f85f922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87d8927d-5666-4fa2-b0d2-e591f1250ff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e919fa-9394-448c-b432-9eafcbc29a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a4468ea-1100-43da-9f50-1c9ca2ec6c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec79463e-f0c7-43f9-8e87-d56c4d366422",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b01d27-9912-4877-ac52-e7dadb7eae6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd46632-4de5-4dbe-a03e-e78dbaa12b56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b63255-6c86-4f43-990a-6e65a367418c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2efbe618-b73e-43fd-8dc8-de7439f5436b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b353306-8126-4d5e-867a-e17cc4cf9656",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff42f02-8f7c-42cb-9151-f4ec726762a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "627f0d97-0f51-4525-bc43-3d43ecd5d59e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d0d5cd7-f21a-4173-ba8f-5efccaa9185f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1902171a-8dd0-4541-b462-0820fb234700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e85ff3-d9bc-4e1e-8b99-00ac78e15930",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5cd36fa-7d33-4e33-8fb3-5fc93a290737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0528cb6c-4732-4acf-82ad-1d75de750749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6178fa84-06a9-41d3-ae34-949143f43dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a677bc9e-b3ad-4f73-86a2-858f8cd5790e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "304f315e-6dbd-4132-98e1-3737709548d6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "793832d2-e3b0-4a5a-86c9-324122d40c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01f4a541-b431-4742-91e1-3f010dc74af3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96c35e7-0855-47c0-9a47-7bc50ae9ab0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "215c3395-edc1-4bb9-931b-21baab90c583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e74ea8b-b3e6-4f6a-9509-b0067cccc2d4",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ab03c1-77db-47dd-9e45-80f76002f78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "466fc88b-dc4b-49e4-bde2-c064467497d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "047db16a-5b8a-402b-9ec6-e94c0b4b4600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2cb6f08-fec1-4bf1-8bb4-926c5dd67136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e13123-da73-4786-bd0f-860d1ea27f45",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85463c5e-6973-4f46-80d3-2af8f588c606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db25341f-7f79-4622-9435-f639cdb050f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ee7b39-7b67-42c7-bc9e-1b7322582183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d662b70-301a-4157-bce1-b70c534a5db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bbce7c9-e797-47de-bb8a-4230261d2471",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8066737f-5e0c-440d-af0b-f740a323a429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f16fb5d6-12a2-489d-9428-286cc3db4760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2b8c69-8b47-4c4f-a59c-4598796422df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0c3ceca-4bdd-4d54-ba4d-e5a2b586dbef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3dba05d-a187-4fc7-9311-fbf00bbd393c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c2cae6-a452-48e0-be3a-b862ddb2273c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c91ea97f-af37-497c-bbba-f61c37ebe442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f265f21-75dd-4671-b93f-28272c5730b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d92b088-b142-4e3e-b58f-130e7820a280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef2360a-9630-492e-84ed-b87547a41287",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e502f13f-fbda-4209-a897-99046e353ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba3ec9c3-4cbd-4159-9990-a68944c96585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c72dbc6-fc82-4140-9601-b51e4fb2bb1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cfbab9c-0668-48d9-b613-c5b152c7b79b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20cb29b-3bfb-44cb-b740-2c3e7dd72875",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "869e6c38-06b9-4e14-b857-8e0a899258eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2299ea36-4b87-4c51-99a0-e08e10b5529c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "626750cc-d4bd-44ac-8c48-1f273a37e67c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0d9a2c6c-37e8-4297-bfc7-8c625dbd3f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796f10bc-d72e-4190-9bba-47472835d8f8",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33befefd-21b6-4f34-b540-c4dfbddfaeda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c64810d-4f4a-406b-91c7-237d245efae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f6996e2-fedc-4342-bbf6-28e84435b4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc523666-e393-42a0-a3e5-834492fb063b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ef41d1-346f-4252-94ad-c0f1c759d3ce",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2250c2-7c16-42a9-9012-aefe2e4cf4b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e1e03cc-4664-42bc-8a5d-ac56b8e26f67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9822b2c7-9846-43e8-b056-3cfd0e33494a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4976d2b4-e9f6-42c5-9ace-49794c41e0b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f21bf24-dfe7-4795-9161-62c0b0e33871",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba94f0f6-9d9d-4c87-a88b-92c2af8693ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41e932c2-4e7b-4cf4-8783-8e130264b454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc76e45-a454-4071-8027-4c08473361fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf3f3945-57b4-4b49-a435-7d27a64d93e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e18cd263-d44e-4f97-89a1-798d6122761b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a19314-04ac-4dc0-80d3-ee55812c88e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a56c7291-dbff-47de-9144-16c09d71c2dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ccb8e7-45d5-491f-87bb-458eeaa9b217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d85e6b7e-d999-4312-8450-d666ac5e78ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "351d76fd-c19f-41d4-9089-72fc1ee12414",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d860afe-61e9-4455-8fb2-aa877d0b9853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15de9a85-3084-4fbc-bca2-a5c8ad717d18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "547b3677-a4b6-43b2-ad16-d0acf37bc38a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "88740fa0-3379-45bc-8b4b-ea7cbfef08ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0445fd6a-73a2-442e-9966-55be04bc6f20",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f92c2b-20a1-46ba-bbcb-d910436d30ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bde17bde-de49-4eae-b2e6-d38c82230d4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd92026-5d8d-465f-9565-c94506f20559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5aabfd40-4946-4a32-9955-71fc392ded5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0db1ac2-7389-4d3b-827b-5f8e530b092e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c4652c-52f9-45e0-8997-1ee5a12ac0d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fda7b274-80f2-4c0c-8388-5ffa9de153fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7ff76a-3138-4fda-bdf9-ddb7e555c3b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "113ff03b-50d8-4b05-bce7-fdf1d2a00311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e21627b-8401-407a-a333-4d243cad0709",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db263bd-3cd5-4090-971f-5ccfc5c06075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3865214e-c569-4ede-9df8-2cd6aa55bd47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "645f1ba7-fbbb-44db-8b28-9baf41a199c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7be36511-1d56-4ea7-a302-db2053b7c8b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65f9c47f-8f25-4c63-aed5-6661478e3256",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5abf2547-d604-49fe-ad6b-749989b7e98e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f1d7b20-6b28-4152-9801-0ea9d31b33fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8d0d73-4a43-41eb-9244-1059e95ca4ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "95ad7ad7-74c5-4507-ae01-10489a49684a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "808d4f8a-ec0f-47b7-a333-61a7d47adecc",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9a3e6b2-38ed-407f-a863-b5ec809aec4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "415192ac-9894-45d4-9f72-97ab0ee616a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca5ee59-696c-4870-8852-77357ccb50e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ebee5ce-152f-4be9-ae1b-0a98894237b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0074a58a-9244-4e63-a379-1c3b889b5cc9",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae4edb53-adf8-459c-934d-227031f736f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a593b1bb-7b8b-4d0c-a9c4-447c45968590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ae4a69-79c2-4c15-bc41-49aa7cfbd5d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a8509ec-20f1-4ae9-aab8-aeb6d46aa94a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80aa1c33-cf14-4ba4-961b-814b39c43976",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7083f409-0ce6-4ac9-a9c1-449af63acaf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a562ad2-92c3-4185-8bd3-f8b557e88fba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51df0ed7-a5cd-429a-8e8e-58639c0425c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb7bd52d-45ce-4101-b7d7-642151481571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9abdf954-d9e4-44b9-9d8b-103301293518",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa486ba7-117b-46df-abf9-09f338d17d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c3253ab-18ca-4364-abb1-cce12df2bc65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a21ca7-f96a-4cdc-9034-715444cae76a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e14c413f-dfe8-4e11-8c97-5d55905819ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "343668de-c490-4349-aa7f-37111a9932dc",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2dd5ea3-3370-440a-9696-036f9d1366c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf6d2134-5786-4b5a-82a4-c07f6e228c17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1d5426-08b2-490e-a7f7-5591fa245f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "74fb0582-202e-4c74-ae6b-d7c4e6e98aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "446eb79b-9730-44a0-b90b-9a8dfee72b7d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74418a1b-cffa-4534-8350-d6b6ff1b39fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfad79dd-1286-41d7-adbc-5c06b3e1ade7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a2a639f-6d6b-4fe5-8a81-4d507499193f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbae25c5-9747-420e-b871-c0c8fa44a4b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a5d560e-356d-40d8-948b-8d3c04cdeab5",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d4769fc-702f-4ca7-a912-84e2ef013d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ac028b7-4191-45d2-9fc2-149eb4e4931e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be17631a-c3f3-454d-8bfe-4750c2f984b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "263a798e-1ee0-4975-8fdd-a7e30c03eada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d250bc69-6acb-40f5-a82a-70d701029364",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e6eed3b-baf2-4beb-ad00-eca8b9b29d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "699085fd-9a22-46f3-b6bd-220cebbb426a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0f82b6-fe14-48ef-b887-7bb2017f8511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fea0d70d-82f9-4f8e-bea5-14bb9f329567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e34a72-cbfe-423a-ba70-5c3f0f280278",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e4c55d-32ad-4507-ae17-68a78b430dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36702576-587a-4523-b602-c462bab95a61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c146b201-74bd-49ef-a1a0-53d52f62956d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6200c3ea-bc34-4ea2-8fde-12ecc18b8ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30698884-8177-430c-a674-d31b9599b036",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a2e243f-829f-4d7c-a5ee-d9f12174d36e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d56cdcf5-4b91-4405-b467-864a9168c6d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c297f3-02f2-47db-bced-02e3aff2f79e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "88b3560a-b0b0-4f66-a57b-954c5e6b6733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6353d37-e10c-4537-8588-47a1f3add4bb",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88823f96-075b-44d8-a719-60f6f43cdb5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ffcd6d1-3248-4df1-b4ed-a0939c4d93f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf4131a-4bdc-4c43-8c27-803f9691a22a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4415af2f-ef47-42eb-84a1-83881278cfbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82fdc24e-9ee3-44c2-992b-4fb69fee2a60",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e90b92-cacd-4204-9038-8e98bcff0c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffb10dcd-2036-4263-a686-e6463d691c27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc86741-9396-4b9a-bd65-73efa45fff75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2db0c0be-c3f0-4058-b26b-e9d685f5ae05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab46b705-1ab8-4f1b-8d5a-b7fbafa13454",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b3eb147-695b-47df-910c-9961c08bf3f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc61222a-7569-4ae6-8ff6-11d26ca10c43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef6bf93-7708-4829-a0b8-fb8f4ff2239d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "54d62279-4518-4703-af2c-30510c31d91b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b50b0c-8e33-4a28-b115-5e7698e2670e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "020d2150-86b6-41bf-937d-fb6f68527a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28504f0b-188b-487a-b39f-f81c7b3b2a48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd160ef-6898-4dca-90a1-5806c814364a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3617a5ff-6a68-49f3-8e0e-d9b03be0e9cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98cb4f40-3306-4c9b-bf3d-6466757490c6",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cbaf5b3-2f1e-4810-af4e-087223b76f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3df1bf7b-1cef-4ca1-a1bc-cdc93eaa748e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c812eb-f6ad-48eb-9c0e-feccfaefa14e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cee86e59-278c-4b73-a051-295c4feed2c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ededd5-fc62-4002-952e-7da1ff837744",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aaab640-eae5-4fce-b56e-3ee52968be42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "93462b53-81e2-44a8-893b-7d57c8046ef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b9225a2-2fe7-476b-b8dc-5db277bdea95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffeed9e9-502c-4b9d-92d1-6ed8e74d4b02"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9895aaff-0b04-4292-bdfd-36422e4353aa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c4077df8-56e6-4cd3-93c3-309c51309538",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc9e0c99-9cc6-414d-b920-438ed7614f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b6ebf635-e8b8-4294-9c97-b156f0e53692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a093bcf5-527a-4107-877e-7f168fb26131",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac304025-0a76-4b2f-929e-d5347e168db6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d765cb2d-fbc0-499e-ad16-78964049482d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5277aabd-3284-4fe7-89bd-905afbf159c2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c15de637-b100-4079-802c-ab429053bc9c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce511811-4edd-4e5c-b18d-7dc559076a4c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "72289dc7-a601-4648-a603-da8e25360045",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "76b6acf0-b900-4321-820f-63956f41dcf7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "825d541f-cf88-4bc8-b7a0-0319498948ce",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "78206ce5-e3da-424d-b6f2-fc58a3842825"
                }
              }
            ]
          },
          {
            "id": "c7be9d6c-9a2b-430f-ba13-339cd85a3930",
            "name": "Positive Testing",
            "item": [
              {
                "id": "aea053f3-8390-48eb-9a3a-56184881c2da",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "9baab8a3-1b53-47e7-95d5-aaad74d8feae",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9158a5d7-34b9-4ce0-b6d4-4502fb4ebd49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7fc85c6b-226b-47e5-b5b5-11b5af99a315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e25880d-f04a-498d-8b73-9deceaa7a78e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f776dc8e-8c97-474b-b7e4-3fcf7704f657"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fb683a91-1985-41dc-9057-51977016757c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "79576355-a448-4541-bc77-cd90a4d324e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7b4668ed-d821-4364-ba23-519f747cea9e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c62e0f2-9985-48c6-a634-e3cd4d17cc1f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b83db071-d428-44f3-b180-e01737a8af4f"
                    }
                  }
                ]
              },
              {
                "id": "17ba7920-3f9c-4a83-ae73-bfb2fddfbda1",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a851ceb-6fa2-438e-bbb8-d82976b077f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5bc77645-66d3-4f3d-a795-8959f363fd90"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3abcfe4e-d8ab-4f5f-bc65-4de116758dcc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3d1b7370-1fc7-471f-8138-373a91f41fc0"
                    }
                  }
                ]
              },
              {
                "id": "7f77814c-1385-46ea-b9ef-11b386668ff9",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "111610c2-0736-4552-bb9f-0f2041ca4db2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4ab77e3d-8fdc-4cec-9a34-0981cd2d32ea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "807b08be-2aaa-4c79-9bca-69619b8bc425",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e3364c3d-cab6-4ecb-bf85-e08a7a15bb21"
                    }
                  }
                ]
              },
              {
                "id": "82997b88-2e17-4a72-b39f-0e5f2d0744ee",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e47ab94-b9ce-4c5c-9661-ee583dd13c9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "db0adf32-dd82-4719-ad02-9804027d90c9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a26b9e6b-418e-44e6-b1bc-6e8e28cbc177",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e1ab6a9d-f179-4a8b-8ba7-6d40c1202c17"
                    }
                  }
                ]
              },
              {
                "id": "78b1765f-4788-478c-a1bd-4d3972dcbf1a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2822c01-36cc-4b1f-af00-28fed35e8994",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "16af16b2-9ce6-49a3-a0b8-10743c09216a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "14226299-e48b-4013-91c6-5d36478c73f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e3c54cd4-b7b7-47d8-990a-0bf095d39b58"
                    }
                  }
                ]
              },
              {
                "id": "e4731159-c57e-4d26-8e55-f4e0cd537d01",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3c15496-c617-440f-8763-b8f063f51de6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ab20d777-3db3-4aee-81c7-2c128edb0d70"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b70a0b2-af79-416a-82ee-18a17ecd0469",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c5ba19fc-b401-41fd-b8cf-82eb60978b23"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "084c03e5-73b9-4f41-b306-73274b1f5958",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a7205aac-5dbb-4215-be69-7771822aa734"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "82c8fc72-9533-4f23-92b4-d7548902c0b7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c64991d1-9124-46e0-beb4-7df9de5fd820"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "992587da-3057-40b1-be5d-cb22e3a1256f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "feec8e5d-e688-4866-bb61-ec32909a9f4c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c0d2078f-1856-488b-ad86-883aadb4ec1b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8d88572c-4a1c-40e9-9242-3b09a5adf962"
            }
          }
        ]
      },
      {
        "id": "4f4f04b5-e03c-45fc-a98a-4c71780af51a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b95b2d17-7e79-4269-b641-fdfee9cb472c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7c733e52-604b-424d-8959-1517b69a4fb9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4ff77065-1f43-4c07-a1de-d141abd82abe",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8197eda7-45e8-4826-bb16-d57cce13a0a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7704360a-450c-4c49-9a55-f715fd29ac08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3941b711-fe81-4922-866a-d87a32121304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d6252b2-d3c9-4c2a-86d8-8bef83a787cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "693bbc40-a6ee-4ef2-b4e0-dea2994c2ae2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e6d009-90a3-4f79-b12e-e526ecc40c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0bc6c1a-1334-40fa-9588-e131e6f3d4ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2017f5bf-3982-49f3-a086-8bfe295ac88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a03db73-e4de-4f2e-8fa2-7b48d1c5217e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e179629a-8128-4644-ab39-a4bf6d68be32",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f737f10-644f-4178-ace4-fc9c6f9a93c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70373921-899e-4b25-a4d9-3063cd35f776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8021aa57-331b-4724-be23-70bd04ed08bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5eeee781-9501-488d-aa1f-e53bad2198b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0255368-3f25-438c-9172-4115f531867b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ff9db6-f512-4ce8-9a18-e2fb785acb07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f7b731b-b0b3-411c-b655-7a1dd23714c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ed84f6-4b82-4dee-a7b1-7b46562d92c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1354673f-bfa4-4ccf-a404-d07c678b79a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e065d42c-59a8-40ad-ac86-1a2da0b63637",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d8595f8-b37e-4c99-b0e8-67bbc8db8b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bac07f00-02c8-4f21-b09e-93c6967e585c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d0068d-7667-4b70-b1c8-33c6aa9f5a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "33df5eca-4205-479a-8153-7ebdb1d4f88a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7428f5e-2b51-4641-82d6-004b137e1f1f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "119ce4f0-f4f4-49a0-ba07-a700e791935b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9c74769-cf27-4d07-9cc8-cb48625bcec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a057084-27b0-4421-9f81-8e71d34b6adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c763bcf-dc5f-414e-84a0-3666d713968a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89cdb129-0cf0-4505-b15d-c52cea01698a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8280be4d-35cc-4127-8dbf-42c9070a0a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8945be8-6b68-46a0-ac32-8521cf7ededf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c58f1b0-6830-4fb4-b136-45ea568d6564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d8f0ccd-f4b1-4c10-b4b1-73bcebd532c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9fad063-35e0-4cfb-92e5-ddd5857750e0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2386fa4-65e7-4f21-9650-1f04def71fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ed9be46-a089-41ea-a180-51d7b84a7b43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c9595f-6ce2-488f-9759-0d93e77e3d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "de9195e5-00c7-4b70-a8ab-415c2e293fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65cf88bd-1634-4f61-ac21-a2fce0fd0729",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9a0bb8-ed5e-403e-8f0a-3b5ce1c83960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54a44987-1767-47d0-bf0b-956da733098d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d28eb050-7e78-4b8e-9916-92fae1cd0c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f1fb58f-bd17-4e6b-8e6d-7f9d07ce4301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c66a7f4-798a-4aa4-a4ed-d0f3fb24273a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da23b66-7b0d-4f1a-8511-2a66531fb0d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93aca317-5193-466a-be9b-5fa0e2d206d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1487ae60-1068-471d-a7fe-c682a8fa6635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d04ac76-5a4c-4ae3-8f36-fd9025d47d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e84fce-2f17-474d-b27d-63f71f12b5b1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f39d6a-df3e-4186-afe7-14797c71e16b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14119636-cf39-443e-81ed-a764a6a464f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af0982df-f547-4724-9535-55d1152e0f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "cc155ae1-42f4-426e-9c0b-6d5075c38501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b53a3d0-ef8d-4fad-899f-106c3affcc4f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38624484-33fe-4418-9c58-7bfa4daa7be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e94c5483-6d1b-4f54-aff1-94a1a87c3273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c237fed0-5096-411c-9a8f-89b605f77a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9ddda6ab-7d0a-491d-abb7-c5e3afe0efaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "466b7c14-8845-417d-add4-fc450a43af6a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d76efe-e41b-41d3-aab0-ffb2282fcd04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "108eced1-9835-414b-ac06-ea8ff92d5459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd80b3a1-e1d0-46e8-94d8-60055535f1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe1eba41-b929-4a1f-af09-d0a2d5353c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60919f8-b55a-401d-84c4-adc7a9bca0a9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc89e89b-400d-4ee5-88fa-d6d247e42d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c97208c-93aa-4547-9f21-9de7807b4fad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "772c5517-5c42-43bd-a371-570962036dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1565f256-5617-4727-9fd5-822fef168db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8825a808-8854-46b8-80cf-e04884c21608",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c9e8e27-cb8f-4802-b719-3cc86bfb111b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12aa3b99-b853-47c5-9183-f545e3b571c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c2457d-40e4-4475-bba0-477b9969e460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3123b0c-ea77-41ac-8598-846fe8708b8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffaebc27-07b3-41a8-981f-f9f8545c5374",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41b6df8-68c7-4ea1-a79b-7b58bb4c8da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa90ca11-b314-462e-8e69-cc5c5cf227bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073f4f6e-500d-482b-9919-5ef701952e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed449234-5645-45d0-be47-9d769cf1ad7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b98ef1-1721-4e2a-aa58-c08a8865bc40",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f44a3d19-16c9-46f7-86d1-94ddeaa687a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6ce66ad-5b06-4eb8-8944-f40310ee3fe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afff5ad2-397c-4e4e-8a30-538a69394a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2c47aab-f7e7-47be-bcda-c918bfbba458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7469996e-81c7-4e83-a276-d50b55d9d070",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2152ebb-8cfd-475b-9ce3-c5e8efdbd787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7279ec5a-a854-4ed0-8ecd-6b567d83d070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20f0719-9d4f-432d-98a0-2cf30c8c0565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "94603167-03e8-4845-8a49-8a909c4a71f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6206bdd-82fe-46b3-8322-edcc47357413",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb2a995b-50ef-4c41-bec5-d439975aa6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1e0e193-e8be-431c-bb1f-f374b787e6ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "715da716-cca1-4c10-b032-5527126d62b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a6cecf2-0d67-4981-a473-3f1d55073c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a016d3-86d8-404a-a217-d476bfb2f12b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2575c47-beff-4f12-8ea3-3360feedde01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16813e96-6cc2-4858-a958-8d04c76cfc83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed50945-09ba-44a1-9967-6422795b2c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5b65e00-2967-45df-b9f4-9a70fbad1f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967da566-e1ce-4dc5-90bc-c376691d34e0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df0cbaf-f794-460f-b32e-5108df8c4efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23673042-be31-46c5-89f8-2ac8618b2af2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aafb99f5-9f4f-4c08-9581-285d38f250a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43190d1d-f094-469d-bf66-3cdfcc63d5d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d36b7ca-dfb6-4a0b-85f7-97d36f51bc73",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd59712-74d7-4fc4-84ab-8e69e7368ed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89ab6287-9ea0-4609-b970-49782712acde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c79213d-8642-496c-a025-c7afe9c634f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c37c108-4451-48c7-bcb7-d7f5d17333dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13bc8b1-b889-4242-920d-34ce7e79846d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2d3f2bf-a6a4-4996-b16d-341f3e6340a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9d804a4-73d5-476f-8155-b404e0bcd2f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7869217c-90c5-437c-b3ab-4230632409b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e240021-f286-41a9-8278-9afa1d51fb78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b25471a-349d-4ba1-ad26-faa5baa815db",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8354003-598a-4960-b7f6-c4b31976a13b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62e36592-bffc-4f77-8580-59bc14262728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd5364d-48d5-422a-83a9-4501c4d70171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e33a507-ad41-4ed8-845a-f150ec025a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6adb60cb-1234-428e-adab-d24dddade21b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa0d1aa-bb26-4336-9fdc-9df7b46a94c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec9eb763-4d83-4a57-a6e5-1b98696f5015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "438a5f04-f2fe-4b5d-a4a3-1d8bc8bc6ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2045291a-d552-4b2c-ba48-5eb8ca47eed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83097e91-aad3-4c95-aecc-e5104714b610",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec56f5eb-5f60-4bc9-850e-681080a71211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6ad6d0d-4916-48fd-8258-6ee145e0f126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ca02c1-4675-4e4c-9e4d-b75a4ff7eb65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ba11caf-727b-4f15-8420-e249cd35cbfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5410a467-ca82-43a7-a8fa-d080e538d688",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f25c616-ab53-4168-b08d-c514029b952b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30974818-6f69-4fa1-934c-427d48c0bba1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "035cf763-221a-46c3-9ba5-9b761eaf1a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95ba3beb-cfbe-4f5e-b3f8-5b345e0ab2a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e6e55b-71e4-4b75-8250-1ce2cc1eee29",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d54cfdfc-e89d-423a-a27f-32b0567594f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41a01047-21c9-4d09-b108-47c3ab07cbac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b09f03a-cb40-469d-90c6-828ff94269af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6f878c1-f105-479a-92c4-51050343dedd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3692b4f5-5a5b-42ad-b7a9-d943a656a40e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea424c7-72eb-47b1-b2d2-927235193be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e9a08a1-fba3-4676-ab86-4023c9f494c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f267a04-2de0-4cd9-902f-ac5a908df46a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eabed9a5-92e8-4d50-9d8c-9b6d2f7cb2b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b2c065d-c466-4e1a-8ccd-6c20c274ecce",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9334701-f04a-4be6-977f-82a67e71bfca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85570b6d-78b3-43ee-9def-f5ffc57210c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5c5b05-18aa-4a29-9b51-7397b710f237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c8fc11c-a074-427c-8aa9-acef5163bd18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe859f02-0693-45d3-8d66-e5cdf7c00232",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0696ede-bd9e-4f3d-8676-824f237229fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e28c87e5-2bf9-49bf-9fa2-4dc8d6c6209f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f60724ea-2526-49ed-b424-ee949a273919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e55eff63-5b49-481b-87b1-40f9f7b33fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b326b121-9abf-41b4-ae4d-cff414251c20",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e685741-19e9-4e08-94ff-c538146801d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a709669-925a-4df2-a742-341a12a818d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3baf556-4dc6-431a-bbbf-f68718533345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcf0f1c7-6e86-4086-8f63-f368fc56bfc9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ff68a9fb-0b4c-4df1-ba2a-fb47e9696f55",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4cf01d12-2a60-4972-ae59-3a8f72e9116e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41174887-5fd6-4787-bda9-b7291393a7f2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3d686a2f-a30f-44fe-bf3a-dd32ac6772c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea1f2549-c9aa-41c2-ba9c-ce8ea9612981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4697e9ac-0e4f-4d9e-908c-f8c35613b205"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "639c1182-47ff-4fe1-bc64-d5ebc3d0d760",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6cf30fa-ac02-460f-af28-e6b7103ef11a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a36d4eeb-b790-4af2-8d96-c9c5af911f70",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "66c690bc-c546-4f3f-835f-023c23ae1143"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bce5f00e-6d87-4d27-996d-402bf46a5894",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "95442523-e6e9-413b-9e4a-cb8f00df9206"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "786d1d97-9455-4741-b029-30ea64881b83",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c21cbde7-1fd1-4d31-99a8-27c19db94f80"
            }
          }
        ]
      },
      {
        "id": "e35fa6cb-2a57-4f7c-a9e0-ae13ed33ad12",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "4cbd5ba1-9f2e-447a-be3e-ca7b88805c42",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fc3dacb1-4a96-41da-b88d-ea3347c7a8b9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5873bc65-e747-4f9c-85e7-989d2db4b654",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6aadd5a-8d9f-4a2a-bf37-02542f74f479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c40fa98-af76-4b98-b385-2823f7a8b8fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ff267b-0829-4f8c-866a-c085a8fd5ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "99720fca-9239-4308-b89d-271fc9cc94b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8745700-cd63-4e21-bb6f-5b69476b46af",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "827ce178-2937-41a0-b6a6-ee86b750cc15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15c6e811-6d91-4798-9468-032a3bb3ad48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b44e4f67-0921-4d8c-aad0-99ae811db6a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b71e0313-923c-4582-b1ad-4a7623ac4e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87cbc034-8705-459c-8737-ab1cedcbb12a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1fb58d-3697-4087-a333-21e2c4e96d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7438b7e-a5e2-4222-b142-b67c2debad54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "928e812e-9973-41cf-8097-0c55d4f9a6d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "52afd698-c801-4238-a1a9-c3b8a8639438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22977793-7a2b-4212-be19-77e75d8737ce",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6825e099-e9a2-48f8-ba4d-25eb1e5971bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d2b08f5-c10c-4292-a5cc-301a5b9bb1e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b47f1be9-8ca5-4261-92cc-8641245e2e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e0c26ba-7ca3-4c2e-b36a-f2c25e34ec9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533e3def-7c2e-4665-9493-103d44e75a50",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e35eaa4-3a93-4ae9-bfba-daf68760aad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdf2e044-61fe-4c82-b394-bb52a39bf0ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a37e230-c34d-4722-a5b0-567ed97b80df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "322977f6-37ca-4414-9573-7d25017ed05f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b543e75-5349-455d-995e-37ab89738fe4",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dce5305-7796-4d81-90df-a10962535e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "686920d8-87fe-4187-8b6f-865e57238ba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c46e4dcc-b5c8-4541-bd9a-9cb791e21f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a7d295f-157b-47f2-bdd1-7e15d058cbad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d2cdc5-0169-4cd4-9fd6-40efcbe249a5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d68bb26-8020-4c17-83df-fee293f11613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a51b405-8395-4ca9-bcdd-5da2f772b218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1570036b-113c-446e-ae21-d5790ca30ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "50ae83a0-dec6-4762-9db3-8a5426823f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e29aa3-f15e-45b8-9504-8f71cedd6afc",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19371dcd-3dfe-4d5f-ba19-7bac1dc610b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5951f489-1806-4395-8b23-1f3602c52f09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c9abfc-47f1-4741-8a1c-5a25861e97ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "14ca4963-60ef-47b1-bbd7-9c17fb947441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bfb7c27-76f7-4835-829b-5d4b6f083500",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2010644-bc26-4780-be42-f75873a30de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9b550b1-7114-4751-a1a8-819599cae1ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a51ad49c-151b-4d31-b20d-54645034989d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5027392d-6aeb-4c7c-8e07-2f33d94b2ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83adb49b-610f-4122-9a57-e02b8c60f6bf",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09073310-e967-4ade-a3d8-6a8de04deb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4832bddf-e8c5-4f5c-9210-9a7cfcadd32e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7fc200f-82d4-4eab-bcae-d255e04ac3aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f05bdf4e-b05d-4d88-9130-00d7785ce9cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4045a03-b050-4ab1-a3d4-64ba73ca1661",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "569d0e5e-1e0d-4df9-9c62-091df03ebe4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6d7bb6a-c482-4ca7-a7b8-ba0802e68897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c9f2c8-0184-4676-be1b-028363df5cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ab852285-0ca7-4501-b131-af1652ee6448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748f2be9-d87c-4cf6-9b2a-87039348beca",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9259e891-2582-4579-83f7-581f9a019e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9d1bb7f-4df6-481a-9bb9-004bcd44eb6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1db457c-f942-4f51-9256-1d0663e6e9a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "63485182-cec9-4bd8-a86c-5280a186259a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "790f92c1-1fad-4ebb-9cef-bebd318be1c4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c881cd-8401-4f60-ac50-6dbb86f5f99d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0752d6e-6966-4bed-9c54-c89a8ba715f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b8ed75-89d9-412f-a6a3-b41edb6a79f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "95986e7a-4eff-4a2b-bf0f-b5a84720d04b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55aaef1d-51d7-4077-a3dd-4f64c01c710f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58706006-f038-43b3-9a07-ee2438947fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b4623b3-2354-4c9a-9eb5-e9269bd49565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d82a80-bca8-4611-a68a-fef8eb053a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6be9c5f-e1d5-4926-ba86-957ec94fd377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "704316ad-877d-434e-a133-1288746a6d71",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52828cc1-db8f-4c64-b28b-0922ef55320a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbdbaa5c-33e5-4b3d-9e1d-49e8467f1f79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5508713-43e2-4741-8e40-616caf14e39b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "038d3519-a6d5-4ab0-9428-d8cbc3a4806b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e063ef4-febf-4f0d-800b-c32ab0e2686a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bbee327-46a0-4cbc-9452-14b2a1c5e9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b97a59b2-81b0-455d-a8be-ba5c69333887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40cf2824-41de-4800-b736-684b75e273a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "74bdacf1-8b63-42b0-a7ac-c54304926cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e224212-b612-43a7-82aa-d0785599447f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "812b2af4-cd2d-4f5e-bc7d-79c8b2dd4645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19e50c21-cdea-4200-b12b-4301d37c289e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a9afbf4-177c-48cd-913c-8406bbef8fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4da9de76-de3e-47a7-b1ac-949fe2a3f676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e8e869-cd2f-484d-bc0e-bcb01f0df313",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f881b4-a2c1-4929-a5c8-933ee7df0bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14c6ffe8-8bdf-4f62-870e-597fb3c49ca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0b0b93-1dc4-4acd-bc57-35c587d42251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d2935f4-5ae6-4a12-8767-c17b98f98bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "432a5e13-16a6-49d7-b992-9cfbb8d5dc0b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "306a2dfa-4686-493e-9ecc-d95614d46fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87e4e2e9-2d55-4beb-9bf2-4e90a2e8d646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b24cd80-18c2-4630-a539-6f7e67fa2ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ea45b05-08a0-40b7-8b28-130c8c4efad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b2c2d3-7a3a-4717-bdb3-00159ec99ad6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db378e61-936d-4f4e-b21a-4c1ac445fbe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a32e631-fb35-4dfa-8d7d-f9fa0454ac55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce04cdd0-4d2a-4717-b95f-b359c5c9197d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d91c6be-8351-4d6b-babf-8a2ff75ed06a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475fbfd4-feab-4f9b-94e9-96502770350f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65ca29fd-3d08-4bbf-a8a2-55d18b0dbd3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e3603c0-300b-4dd5-a7cb-217492584fb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf116d5-148d-47a8-aeb7-9ebaa3d00b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87e9d8fb-8cd4-4599-a311-8c7cd5f90685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62589e9b-31bc-4b34-9aa3-aef46130661a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5102ce75-3d8e-4b11-b9c7-0a7555a37e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b700d8c0-e71f-4345-8de7-a908cc821e17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d2e5ed-d35a-4acc-ba6b-7427623d0a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44193ada-1bac-404c-8c2f-7774665b020f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e0798f-bdb4-4808-bf0a-078da5506e98",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d6cab9-8b58-4b6f-8da0-d04303b1823c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad097304-559a-49eb-b8e8-88236dd7b059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9123a4bd-9799-4a22-8b51-67caa85dd239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "030a62d2-4319-4866-ada6-ddf0612ff89f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c1488c-db8f-40f9-aeaf-263d0e34ad5f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4389b445-6887-488f-9c7d-ab4412c1322a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cbb02e7-b826-445c-a3ac-284f86d38226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8c6948-9e4d-45bf-b023-01379d8827ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "288d5444-1818-47f3-ae70-d68e38dd84e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bed976f-9f16-4ed3-93bc-aa14ba965ccd",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "476f253a-3480-4a9b-a4db-1ddda6664ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce7eca5b-2b47-4c82-bde7-414f95483dfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea058bc-6d85-4ed4-8c72-c6da173da550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "819aa7b8-2cf1-47ff-865f-3a73994de386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab9fea05-f52f-455e-a78e-a7fee7d74ddd",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88df15c-13ad-43a8-8187-01051b5851f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac1e1fde-1564-4ee6-8d16-3e514ae9880d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f40a1aea-810e-470d-81cc-b78179bf656d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6152083e-35e9-4d8b-86f0-02cb02bb7e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c73ff8-8e36-4f26-83ea-0b5d5e3ca3cf",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8873dd2e-c4e3-416a-8a18-13b07a43d93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01a23f00-925b-4a3c-b1a4-6ddd10cb4204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92124332-df51-49b8-a31c-66e398fbd644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86500c1e-268b-488d-a682-803dd1e2c87b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae015360-c6d1-4bac-ae9e-6e305a01a2dc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b24d481-ae70-4bfe-869b-55a9b59251d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6692ffb6-7893-4fdf-84cc-08a3f6c432a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e183662e-c319-4d5f-950c-c540f23ee9bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5fec7b9-d80c-4241-ba82-ca1bc3ec12b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7582cb69-b908-4f83-b817-65926841f153",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1b49ba-b620-4cc9-95f7-83c832190d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "747eb610-b34f-45a3-b4eb-b45ab1efe58f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c2553bd-d82c-48f7-9e10-6676672e3812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "243fb255-2795-48af-8713-4802111e4211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4635036f-57c7-4cd5-8d38-49353a5b666f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28fe5cb7-a28c-4172-aa0e-d52d729b9cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91cd14c9-81d5-433a-aaec-a994bb852943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061c23f7-d60a-4bb8-96f6-34b00009b416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3888660-8ad8-401a-8f6b-fb1a79ed1bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998f27d9-3f72-451b-b814-35d983172c4e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18115114-97c6-41ad-9ea5-33c874bb49ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15825417-4795-40a5-b24c-599efe3c6d48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c240ca-5af4-427b-8e10-df7dacc0c552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65684ece-d1f5-4018-a866-a81d531ae1eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c43a12a4-ba3a-44a1-91ea-a4710208840d",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4421dbad-a509-4ae7-bcad-82f3533c2d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f939ed4-ccea-49f5-af15-1f05167588f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d33ecfae-819d-45eb-8146-a99c10ef3d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8596ea59-b6da-45c3-8a40-96758fb40257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802ae8c0-f5b3-405c-b362-ad19fcc3ee58",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec88b5c9-784b-47aa-8735-4a428324c1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "372db489-7551-4d11-a8cf-18bf8b08ce10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd1b12f-f55e-4879-a416-a735e232d85b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e29fc9eb-dbcf-45bd-8a13-225ab053817c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ae6eb5-16f8-4045-84f4-202f0991b94f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8012623-e948-4de3-9205-58bb35f507a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c83813e9-5e8b-4cc4-8f6a-bdf2d6a5ff1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b8426af-210c-4530-9e06-f1c8e62a8f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11ff8751-0fe6-4c9e-9355-5d494815123d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe07ef2-aff8-42e6-9ca5-bb1bac5e834c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cceee0e3-581f-491f-b178-1ea40ac5acd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67d5a7ec-0c79-4f7d-b5c4-2fbec9a3b76d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa9ba4d-7505-439e-9cf5-a776d7732f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3487ba22-b8ae-4f53-bff2-a8107a0d974d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267868f3-c0be-44fb-b6c7-5ecf4888a973",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20115c88-ea28-4c9a-b44c-8c5e022b99e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f239516f-8811-4a95-9e73-bdf9afde5c58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "290eb225-a0e8-43f5-8d97-c49687931d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d10f0313-0277-4a12-9013-54cf7756de6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8592c753-af04-4243-87ba-81d6bb8e1b1f",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a98c6de7-7afa-4a09-ba7a-0e8c4da66cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3623db79-c41a-40bd-91d9-86656c695da6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e6731e-523a-4771-911f-0ef8a9cc32a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbcb0a4e-bcc6-4bb5-86f3-78f90268d8b4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "14299f17-2beb-44d0-8adf-a86386574630",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b301477f-db49-4905-9188-78f4b77c3379",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f7084da-0380-4ed9-8365-ad81d840646f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "086e1f82-6705-4c72-b0ab-e01d54893bdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b6c37a0-5083-41a8-ade6-b14de68bde38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5eb1215c-a73c-4fc4-a880-e6a6e0ddeff8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a42cefb-6256-4850-8efe-53667565a57c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "03c949cb-cf60-4749-aa3c-9ae6b01705d4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e52d3508-d0bd-4c61-b000-60a59fc2fbc0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dcb30fe7-a80f-4512-aef5-3c9f6c18932c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c09efaf6-9ebc-4dde-8e9d-9de085db0815",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "16ea2c56-9148-460c-b732-8f10fe90d3de"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2d171f42-d825-4eed-8b6c-5a9678b42660",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "114f5472-ead9-4815-a14d-4a3cfe3cc5de"
            }
          }
        ]
      },
      {
        "id": "be16d0fa-6146-4c66-b35a-5595579ba696",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d7e7855b-c1db-4235-84d7-a0d76e34014d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a2a95603-0a83-43bf-885a-4c86662273d0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c4c2b56f-6dd9-4d76-a5bd-d466838d68b7",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27bfc475-761a-4342-8665-a27621cdd9f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "588e7cd7-efcc-47b9-aa7a-e9c71009cd9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff314ab-c953-4ed8-885b-6b8e78572da5",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8fb7ee-b005-40d4-b809-340433a50a30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5328092-ac1f-4a5a-8b55-9098fc109c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9aec990-0126-409b-b72b-2359194378cc",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e706ea-f295-40eb-8f9f-17f1472a1ba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6a132da-1dac-4c4d-add0-3f8f086d3679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da0534a-46ff-4289-a3c5-205111aaca9d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f457e3-ace8-43ea-aa3b-26eec2579b90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a7d4510-08db-4d23-bfb9-e588e564227e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be7668f-cb28-40bd-961d-bb770008f34a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c17de3-5af1-4107-839c-0c461d74f2ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e34870a-9c56-406d-81ee-6fc936fbcce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dfb931e-f507-4a61-9260-4921c14ba47a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a9d02e-3eb7-4cc4-babb-053fb98b9bb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4552ec7-6095-434d-8941-e6f91d1eab52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa2389dc-e144-45f3-ac5c-df223253a67f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa61bcce-8d66-4509-bf60-002d744e709c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fd67cff-6f38-4dda-bdf0-b1cac230cb8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2119f0-8325-496c-9b2b-5272a3e0017d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef007b54-d6ff-49a0-aa27-8f90ae32801e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01dc5150-18b6-4c0d-a05d-a2be285a07a3",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65045c00-c9ee-4402-873c-5c011ff7f159",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69e3c8a7-8a2b-4ea9-ab29-4da05233069e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f6795ab-270f-4fbb-8bb7-d25bc567ae51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "500a4ea5-ea18-4bbf-84d6-96e19ff31f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f439dc63-2ae2-494e-963e-c15661fcb0a2",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4062d25-2463-4fe8-add5-e6a3f01b0140",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e44bc9a5-f620-4dbe-b433-01ae839e8108"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa893a4e-eb84-4733-8bce-7aec31c44fab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a35f568-0c71-4438-8e38-47b6baa1af8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5300a87f-b7e9-490a-9f49-0b4157c9bc81",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e914ce-ed06-4401-b23e-ac6f660dfcb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4767f36-6161-4959-abb9-dd355aa1190b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "883c0ad4-9bdd-458a-9852-56ed6312a85b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b659118-140c-4346-bea9-cef3f42e5a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e8f1f9a-9de8-4384-b4d3-b180dea63c41",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a50f08-a2bf-44dd-aaad-407d8d40005b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a13393d-292a-48ad-b6f2-adecaa791478"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ab5afd-cf92-4599-9ac0-ef0e7b82cfec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e7053ce-908a-4e45-8947-f237da85602a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46a3faf-bb59-4497-a953-07327e5f8c1f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aad22f4-147e-4875-b6b9-99a6cb8e6e0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69d1e553-676e-477f-a50a-058171f88088"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb405706-2647-4377-a9ac-f06f11647361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "593f91d5-0cd7-41fc-944f-67f097cede9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f195b5ef-6166-45d8-9558-f610414978c9",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a0c81e8-0a8c-4ef6-8049-09a941e51bdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2505f483-6885-45d5-a184-3bdb0632f6f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd551e68-4cb4-43de-9273-24e62ec14a95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31a71255-bf58-4f4f-a916-9088752bc7d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4edc0929-6bf3-44d8-a24b-6b3b5380ff18",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e5c8516-fa2c-4493-be2a-acd0627db8f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cf36656-a6d9-4e28-849c-ae75907221ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f0f959b-4db6-47d8-bdcf-5db51e49e8dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "346c04e8-7dc6-4bcc-9294-bd538a1ba9e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65faee7-4087-4c5c-80d3-b4896e575368",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd415236-c1e8-4d7d-b552-0d35d27a5434",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04223388-2617-4226-9d7e-b0469edba0c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "940192a6-a792-43e6-a65f-bddb82631557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed16c6da-5d97-48c9-a4ee-685b2cc34aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0cbea06-10de-4526-8974-1b99bbec6246",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7161814e-27f7-4a1c-ba26-69317d67a990",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6048ab7a-4f0d-4ed2-b195-13f88fe30015"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "410a8b14-ca55-4ef0-a16b-955e71312a79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2ea7721-38ae-41f0-a6e1-33884a5d1943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb7e630-161d-491f-86e6-8073f419bf2d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80451836-001f-4c47-bab8-c07e0335f218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "721506a4-ffe0-40c4-8447-0b205756949f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f360999-e230-4782-a7c9-485329b9e731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a88a79c5-63d4-451d-9870-95665fe475ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a68475-b42f-4cbc-a486-1d55b7b41847",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55cb4f8-f173-49a3-a32f-d0920a53357f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7d84072-4a66-4f43-83b3-eb80e883aefa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "248bc009-ff8d-4a48-a480-500055621e24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d12b6a4d-503d-416e-9693-3990aabd5cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b62c9e-da00-429f-98f2-49d83d31691f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c78962-30dc-4901-ad29-ef3f5a1df318",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2cbc26e-512b-49c0-9330-281b98d7cd09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c67f0d-cc9b-40ef-ba66-fb948f92b5bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "510ff770-4703-4539-b608-28b3e7d90583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a6f3c0-c5f0-44c9-bd8f-d6dcf2e2cca5",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57cc139c-5e53-4362-ae1b-4226676e3875",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eae30de-ff33-4783-9b1e-ca94144cdd88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ab76ca-4088-409b-9aa3-b47232d35b12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a67306d7-8f69-4b80-89cf-540315333dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cef4844-677e-43da-a638-b86e3e58a27c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbec054d-4b02-402d-bd0e-9364df9d237c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54d2c59b-aca4-4177-a2bd-6b0e0c2f0187"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f748b4b-d325-4145-b20a-df483fe247e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "533b4c7c-6a76-4215-b0fb-b3cdd36de396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2881a365-a1a2-4813-b578-75c74941cca8",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f9a39a9-055d-4657-bbb9-8b27ebd0db9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f35d874f-4dce-454c-aceb-2f1f13ffb96b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5603b6b-172d-4b39-9994-729640f21460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7ae8c3d-c2b9-4e0f-9aba-3390f4237873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b945532e-f837-4f66-89aa-3d04aae18f31",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75a324f4-6eaf-4300-9b86-98e35f414c39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ec8a3e8-eddb-4aae-90f4-82ab4a98c3d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "407a55cc-86ed-4e75-a41b-1f54702345b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd245160-cfea-4ded-8945-4c2881a04968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae42acaa-602d-4529-86c0-b4560962912a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55710d76-14eb-4989-8f7b-b8698ab3d3ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b50b03e-6926-4732-83a4-61895d3c3ba0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "757483b6-a34f-4067-9c37-b9d9e28b4881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e463ec89-eb33-4b7d-9c7a-02237c03333c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "284dd873-3ca9-400c-b58c-6ad8bb386854",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864b7ade-7928-4ad0-a925-3539c29e86e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f54b6cd8-d75e-48f7-a183-5bc14e948c06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e8f2ce-eae6-4163-b879-6997c2ca7b57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2adde560-0af1-45c7-a8e9-d6053b57e55c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2357ca-ac60-44bb-8de2-ae52893a3e0c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2451a592-3d0a-48b0-9e83-75ac5ee7163e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85287c20-3065-4ac7-a9a4-fe475fc4dc88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "335217dd-1868-4562-ab73-976c87506ba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89a33eea-16ea-4bcc-b526-7130dd56b5c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "392f4e70-cd05-4fa6-910f-bcd1f551b29b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55fd1d45-928d-42e3-97a5-f325e2f73a6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d25199d0-92bd-4c04-8257-64658feebfa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "531e0ac2-801c-45b6-8613-a18ba05dd5f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f107fdde-3c63-4c20-8740-caa7ac37f2b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e89cd09-34c9-43ad-84b0-085797e38daa",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb55abf-8de5-40f3-8a8d-4adcc93aad6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22e330d8-5177-4c79-b1f3-62ed0ba920db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc20308d-ba0e-406a-bac6-bbcfb9c0faa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eaa413c-b7ff-4be7-b273-c27caa0181a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31339b29-3158-4d36-9ad6-77e46c99401f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f282fe-67ba-4cc5-87be-9493088283c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa91cb2d-f77d-4ccf-b1e7-e92f4db7a0bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a15be5-b4d2-420f-b41f-1700268ca339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e679806-10ce-44ee-a96c-e2c93acbb3f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350315ef-4ecc-4923-bd2f-435f7f35d48c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e282412-2e61-4777-b091-354f4954ad30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e06c962-43bc-463c-b037-ef04947ea8e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c9b8c6-53aa-4c2d-8c42-7a01a764869c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fd73b0b-e2dc-4253-b09d-284ac2c22a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc209da-2712-4dc0-bc5b-af1a9ef38df4",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78132644-7b2d-44fd-8d58-05cd62d8e0ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13f0e071-d30f-4c07-ae5f-bbce1d39a82d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a6021ef-f98d-4faf-861e-b660d57593d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b9c26cf-05e9-4853-a442-f50e90365c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3069233d-9357-423b-9227-5e44ed53bf86",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e48660-882b-44b1-bc42-14f54097f395",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4533373-1a57-40e4-aa9e-67f0b8422cf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a512d2c3-8495-4031-b0a6-62a8059a1cc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3542817c-fca8-48e9-8a6f-9d1cc4680ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ffac170-259e-4b57-bac8-c6c6e2a1b42d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6537d258-7965-4de9-a348-ebe508866886",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43150501-9761-4784-bb6d-439da153edfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5744e364-a5f7-4f44-b16a-535a75c005e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "677dd9d9-d535-4761-83b4-860762a3a5ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba3c8a1-5bf9-447f-ad21-36f543d1cf4f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc8fd5d-8bcc-43d6-bdb8-9e3149696f07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a86a71f-129c-4cf3-a9e3-1a73413c7050"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a68807-2a37-4b92-a121-5b3ad7adcb73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bc475a0-ef31-4bb5-abf9-044585d25f7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1073f2f6-ed0f-41c9-b258-42ee04c73791",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c35f53a3-cac4-441e-a02e-675d7320a67a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e0757e4-d84a-4b06-84f7-dfe3efb55f81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "809af66d-e621-4027-af19-4a3b1e3e90bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "558e6d3c-538c-4e9e-8e9e-be6b0fd76298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5935ba6d-d0d1-4276-9ac4-ee5b3e849f8d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8acea03-2f41-4bce-b2d2-bfa04360f9dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec952fad-6af8-4f38-920a-0df84bcac70d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e5922b-92a9-4499-bc8e-aa9fd97969b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8836e96-6fce-4554-bba7-b7377c6c0d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc2f5dd-ccb4-4470-8287-f4947e40b411",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "801c3ccf-e540-4e76-bca4-26daa4d9b498",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "206b6781-4b26-4976-a104-915c6dfb915d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60901ed-134a-4443-98b9-c1833565da0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f911701-e825-411c-876e-d81904af66e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec9b055-8099-429d-a73e-e858061c65ef",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5201207f-021d-43bd-bfc7-876fce71939a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ab4569e-69a6-48ee-83bb-6c78fc915040"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf49b2e-ce9c-4be3-84e3-25f819abe8af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ab1b173-63d0-412f-a85a-00a41383abf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a8f25d-c214-4788-be35-e28114642b02",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "174ebe6b-8d45-458d-ae22-94349d63757d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60ca4987-5da2-4783-ab1a-d103250614f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a86c05-c467-41c7-8644-1c314f8d0d38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "873c9f5d-7418-456c-921d-291da14999da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e6a4fb-d05b-47cd-a832-ef1e307589ae",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeed469c-0a89-4fc4-82f8-f8a8ec72e91a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8344aec1-633c-4abd-9351-5874b95467ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1221c1ad-8a0c-4ce0-8a5c-a8b3861a086b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "675e47f7-d1f5-4d75-9146-269bac300b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60a2f15-d54b-4504-90ef-2778fa12d2b6",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0987dd8-d145-4567-aeeb-63066c8bdcc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93bc9f16-8856-4f47-9f1c-251ae83ca93b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82fa3b8e-6989-480c-bd26-ea8603dbd826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dd6e70a-bde6-4314-b486-b5205e9c8682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67fc5ef5-c61c-4fa1-aedd-6094cf3ca024",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac714111-d2ca-4413-82c0-82f6605e47ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e12f2986-185d-47aa-bd44-f0ca660953b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f576db8-a30e-44e6-8dc4-e388d564c123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2938fe3-5711-4b3d-a9a8-8b3d1a3187a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af0ec398-24c4-4625-ba58-6abc1bf56c2a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "920a6556-b680-48f2-b6d5-efebd7f9ba59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "653291ae-5d17-403b-ae23-d4d849edcccd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d0bde3-6a6d-4d3e-ba62-5299349e8ae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "110a8889-84d3-469a-9f05-380aae4fdbdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d123d91b-1cee-495d-a766-a9daadf8c5a5",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb206bb-4380-498d-b111-c39bba241dfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "176232cd-284e-4cc2-b5df-d183e6d9d23c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68534ed5-7e3a-41fd-a60b-a0fb67d1689a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ba00261-395b-4df1-9c0a-0bd10372ec5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df87456c-36cc-4a45-b193-b92629034b8a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76426c6-32e9-4e32-960b-57016f86fddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3af1bd21-fc54-4bfe-b511-d9332db19de3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62382c7-d01e-4885-86e7-7d29367e8a80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f391b96-2882-46d4-b3f7-56be3e3c2a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49dcea05-e9f6-4faa-938c-e4c195ad8b94",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61200474-12f6-41bf-9579-d328bb802e4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f29028f2-7e1d-42fd-9b8b-dc384ff83bb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98780d83-dde1-4770-a83b-5a9f90f4eace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc51c52a-34fe-4647-af41-d8390b3dd2dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4488892-344f-482f-9b28-dbce7677c64a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2703d3-ab20-4ec5-9183-8836d4dc0e82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3844e0a-a353-4077-a1cf-0b903d9fd9bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89485a1e-6330-479b-a960-2a6adcbd1491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d1fbd13-bfce-4e5b-a966-572366283b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d6da07-ae03-4775-845a-6bcce2bb92df",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56dbf25-d4ed-4557-a382-75a48a74f9f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1abd8fd-d561-4ee5-8def-3d38f04ac53c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3398f6a-db2b-4bc4-a613-981389890b5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "357588de-8cc0-4f37-90dc-58a79187f2ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38fcac92-d0dc-4d77-93e3-6c3477cabbec",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0545e7b6-1c40-418a-8c6a-eca458fdfe33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d027264c-dbad-4cda-887b-e5fa01a936d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f51fba-abe4-4fee-bfbe-5958a876c0e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f74260d2-0b82-4a4a-ae9a-c23ff904715b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ffec78-fc73-4248-8bb0-3af0bc2de92d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82288517-f401-4245-ba5a-78698e896c46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00293da4-64b3-4f4b-8a98-199c9340cafe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ed65f6-75f1-47f8-bb62-a19a62eabc81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90736e4e-060c-482a-9084-4b6673e79979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9cd7dec-c5aa-4466-9829-e3d0dfa34d97",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35cca85b-baae-4bc6-b5cd-97b98e9448ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4e2408b-dc16-49c6-b4b6-47f3a959cc21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42a2d70-75e3-4235-9d5e-80019a655430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04da94f2-6242-43bd-baad-974e34a80441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b4cf678-f192-40bc-895f-efb1372dad0e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da3d2f7b-e261-44b9-8914-95b2d22c182e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7619adfc-4e7c-4772-96ce-f1df55689442"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaacd175-7f36-4c0a-9936-88d17b7ebde5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eb04c41-7312-44fa-bac7-2a180d1737a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "496a22fa-168c-4c2f-b788-4d29c259b2a7",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e37d2384-9ef5-471e-8abe-e7bd759ddfe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "747cf7cc-3d01-47c5-bb9c-99465da88a95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f6cb96-42e7-4e38-8c81-15db35c22087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6e42473-b19a-4284-adeb-e71912497a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48edd67a-e21f-4ec8-a4d6-56c275a6f709",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18126bcf-9e49-446f-a447-eb799b7e18f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bd1c858-53ea-473b-9779-85aebb84f1c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ad72d3-2d39-445e-9afe-1110d55a6945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f326f53-3654-4da2-ade2-5a5c4d4417d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b6132d-d3fa-41d6-bf4f-631449f8944e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160b42b7-8c9a-46cf-a0b8-3203c39b9187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b1e5f0d-1bdb-4c36-8bc7-c3e9b2274c43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff94907-fb58-421c-87d0-6894869db90a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0e23004-1eb4-4091-a42b-3833151e7914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e11a75-c168-48bc-a943-d0d4de95a7c0",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2602b4a-e190-496e-886c-e6a23336c846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d5f4511-0967-4fbb-8225-93cbbc338b2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e86fe2a-de28-487d-83ac-7aa8e6d78830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3a0bc0d-fb9c-42e6-8660-17c0c712c0ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1992b5db-82d4-4b16-b99e-068d344645cd",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137aeb26-06d8-49da-bf61-bec298095ab3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd50273f-f5b4-4772-936c-ce2bbe92ff47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8bad304-0268-46e1-8c47-b39dbcf08323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d08aee5-18bb-48f1-9a87-625a251c2ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "496caec4-20ae-44d9-b547-00688e161744",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a99100-0d16-4870-bb1d-5e6f5fd8c411",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fa62df1-a47b-406d-ad1b-0e1c8afb8fc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6499843-cd2a-40af-8aba-6008ff7d9e25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2407071-c732-46af-b198-2e508f26b575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b887a28-8cf5-4376-af45-137f48c9c4ea",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae49a4a2-e803-406b-a36f-80e82fa15ea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9044ebb-0424-4430-99ce-01429095541d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d899cd93-812f-402b-83f4-bcc2234a97c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dffd8110-acb3-4fc9-87f7-c14cd96973a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db97559-a058-4173-8210-4a6d1a4f7043",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c14e89af-a9b9-40f4-af89-598611457794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7907dac-2c91-493f-97e3-92db408a80cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7a5855-6020-446d-a3ab-ea9b5233cc1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0c00728-8cb0-4d37-a5ea-bba50ad09864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf00c93b-a15f-4e7b-9517-f1d506fde9f7",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c39adf7-a352-4305-966b-c1737aa2aed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc0e129d-e3bc-4ef4-a556-0ce06fc23d7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88560cdc-1440-41fc-a119-2e7679b327e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13a37d36-5bd4-43f7-9b8c-665ad6aa082f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b5b2f0d-22b5-47f0-8391-99b2e5bbb654",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af60ec53-3c76-4865-a719-3ac017fd9c53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bde901ad-ec43-47c8-b445-0d7ca2f82eec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b0f0c8-9276-4998-892e-5dd06703fde6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7783130d-45bb-42b2-902d-b023a3b8ea22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dbd2cdd-1029-4c4c-bfe7-789e8f0b1501",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad88945-e062-40a1-abcd-eaea27a9427a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdf80b68-277a-4619-85f3-64762a080230"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee92108-4913-4052-ac2f-3fc9c39e74bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d7289ea-235f-4320-ad43-aef3f16e492d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd28746-3172-4238-a29e-69587b43b4ef",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a819fbfe-eaa7-4a47-88e0-5f1032e0f036",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f75e21b-8b76-4cd0-9006-38c20ee1b86d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f21b0ad2-36ab-40c2-942f-68b7217a50b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2882d029-8374-4bc7-831c-aef86ebc1dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d46aa2e-85d1-4e5f-81b6-e8c2d05f8718",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db80de4a-f0f6-4bce-ab0f-bbef610aa08f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20682fe7-9ad6-4e7b-a134-03d86096fa00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7943cec4-e255-47ff-a270-987034a1ca56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5afd3cb3-08fa-4ae9-9d6e-38c364fcf1ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e6a85a-e553-42b3-aba5-9250930af0e5",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b56d59a-da94-4254-96c7-72aabb92bb34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90713ff5-b6e9-4ced-893e-cf52ccea3208"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10149d5e-0a54-4ad1-9d04-b5f25b0ad366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66d4110a-88d1-45a8-9d37-3dde04633a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "820741bd-48a4-4158-afbc-9f4f661bfb05",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4bd34d-5713-400c-baef-5f825776b2c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6f18bfd-dec7-474d-a77c-92c018941c8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1dc9d9-43fc-48f6-bc3b-6714a86db62e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf146df1-7f0e-4b24-a8fb-6b892fa556b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6368df78-b063-4ff5-a0fb-e5c16e26600a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45126f22-58e9-4d4f-9332-e8352f0b4e13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54749f27-e992-4163-94a0-aee9e1fdfbaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c9eedd-41e1-4106-8b64-a589b105b89e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68879968-6e3a-4efb-89da-087e9a5aa4f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e9f5501-9e28-4aa5-8c83-e4dde710a55f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa05beb7-8113-44d9-b20d-128e8a68ef1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "635e496c-dc54-48c4-a860-7677f3e6573c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1192af05-731a-40fb-9d5a-30d393995dc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1292e3ab-490d-415c-a867-a23b8fb4d9f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2301c979-3621-4195-832f-efd1c034877b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aecd4ce9-816e-4e89-9bf3-8a1e84e48f5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "422f91a2-9169-4bc0-a5e6-9e3eb8a8ea9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f03e280-8941-4c44-b0c2-d2a1d44b0ce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "591cf13f-119d-452b-96de-2b8dff163e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513689aa-c0a7-4192-ae5c-af037cf5b637",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa95f7cf-f909-44a8-9b75-04321e82557c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89943347-cd89-44ad-a6cf-101866e27bb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "955de7da-5b3b-4e80-a769-547107ec2169",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddfe03d3-dcdf-49df-973b-0f8fffbc2789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb9b37df-9745-42ef-a156-4eaf04ce85de",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb68d7c-cd9b-4503-99d7-89a7210c1928",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97c6df7a-0508-444b-b0c4-2262b69a8036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fffcf1f-2eb0-45d6-b2d1-1aaba776787f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbf00eb7-40ce-4868-8029-43a4c74682bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8c46fb-1c49-4ca2-8af6-da10b7c04363",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d78ec405-b228-4317-b512-d010db57ebce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4331647-fff8-42d7-8bd0-66cea7528d7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7604647d-b2cb-45af-90d7-b2e75804ea44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "895c64da-54dc-441a-99ff-912d2dd0cbb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "928cb884-05bf-4c97-84d3-3941ebace4c2",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d5c394-1a91-43fe-b16b-5032d7b852d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "973c0f3c-fa4b-4e6f-9c51-f0df99a2f508"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3908547-8b00-4efa-85a7-cd714c3d3e44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e5975f0-20c9-4cb3-99d8-09471ec494d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611b89f1-b1a1-4e7b-8374-b5da7938c3da",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "090c1c3e-c690-4cac-a0ff-276cbfff8c90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a11b9e58-d247-4ce5-af04-bad9d56e717b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9434c46d-d129-4ccf-84bc-c0d216beee0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f32105e9-9d34-4dcd-b258-11ca725d7331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8820da4-f178-453b-8e05-830739b0c97e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483e8304-35f3-4512-9da4-a290f5a81d77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15ac845f-37e2-47e1-8ef8-19b1990afb6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a88e78-6ed7-4749-816b-a276a18e7ee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f6f7eaa-b52a-4fd9-8ba1-c4e80cc5fee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c50cf95-66fb-43fc-9e1a-bea297e254f1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fae7c26-5e43-4365-b0c6-cd7a09bbc917",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64ee4ae7-86e0-4ab1-a853-94b9d67979eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9237a544-3779-4b3e-b6a6-e6bd8c8e7297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1ffc955-5fe1-4667-a415-e8cfd42cec61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "349e1441-c7f6-4314-821c-fae8ef77f83d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8df2aa5-1c4b-4d43-92e2-08820b2c4e2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "589fb329-6862-4343-a586-8f521d171119"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8c3b9d-d5a1-4f97-8d4d-1405d9f8cd23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12ba74be-099e-416b-a64d-fc732de24f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2277c298-ecf4-4797-9433-488df8478c0e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65925036-994b-4c44-81e6-39faa3c33695",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "974f185d-d477-4dde-a582-0bf60c0bc5fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8232f2-fcb8-48e4-a8e8-2f61846c1872",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2319b01d-3025-4ed5-b643-8e47a6042350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd16bc5-1c1c-4e4e-a07f-69eeda226dc9",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d7442d-302f-4f53-8d29-a807e3be4829",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "515b763d-3856-47e8-aef1-6446a78acb12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9769fb34-245c-423b-9df0-4ceca8f4bb0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "474fa44c-84a1-4d34-add9-6d5a85b75ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4839d3e3-84bc-4892-ba04-18428d55e14a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd114fa-770e-4aea-b53d-e822894f129d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c95e71a3-651b-44fc-95c9-f637cb8da33c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc61a4e-0b24-4045-81e9-4bc84b2c8a86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aad2dcec-a30e-4f92-ab9f-734ed3e88b29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad341c44-85ab-4bec-859e-7f2e526e565f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf56608-a2c2-4b3d-b1b0-b75c1eed1ea1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c17c8f9-d0ff-4c0a-b224-3133c459f92b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05928dfb-89c4-4237-996b-521263e977bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43c60a57-d348-4a27-afdf-f6fd23ca2269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4adcddd-fc34-40f5-b930-981cb7152de2",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a1d5c8-e4bb-4a23-acdc-12f29bcdbf24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "762763dc-ef20-45c4-93a6-74c96f48e6f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d82172e-06f5-43bf-ad29-c0fe9222c221",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44b8d994-57c9-4118-9e5c-e4c6a61814e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "384e35d9-b99f-4381-8d7a-4af905c592d1",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbbaab28-f2b5-45d0-a411-c13fa584cc44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7e20ee1-a5f3-4ada-951f-e86e1a119308"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b5ccb3-ccd0-4ee9-9b73-d52039da01b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e93825fc-b554-44be-bd95-f85a0645479c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac49f962-e60d-4951-bc98-c6d4c9d8b538",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68fae9d0-a6be-4d8b-b7d5-32cf2f932d91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8e5123a-2abb-4692-b84c-ebd592ce4d66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5886a19c-1074-4d03-baf8-613beb3edbeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90e50950-3ccb-4843-b335-4dbe6c0759b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbac1167-766f-4417-9108-2584897b6fcf",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf7ac9f-81e2-4b7b-ae62-b3768d382afa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbc6e162-7621-4a92-afab-3772e82c48ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00190fc4-826a-4c92-ba7a-fbabd0cecb2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff0d48bd-75df-42c9-b1a8-f70565fade17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909f3075-a7da-4109-83c1-73dffd125d68",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95582231-4e20-4f83-bb73-9f22a2104f50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f989c190-30c0-4970-b094-44cd816ff969"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ffadf5b-12f1-4709-8f29-d150b4ebc3b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "796f9f6f-4577-4c23-8e59-986999d3b6b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb35c6a2-02a2-472d-8261-ef20d1afd5ac",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af30587f-d46f-431f-810a-bcae3b61f1bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9b1625c-ff71-49db-a6b8-70f53dc44881"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a491b455-fde6-4b73-a6b3-7acbb4541904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f910c722-0024-4a8f-9da4-63026efbc133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c062443-577c-4ca6-8efe-23fec6015a5a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57fccb3e-c261-49dc-acce-c14e2cd3205c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c17798ea-afe5-4fdd-8bac-5071b902d092"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00170912-a7c9-4232-9650-11549504390d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7814c90f-019b-4a05-8738-35adb951ddf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c08490-2c47-4021-b681-1d8a2d3d82a6",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d73a47-eb64-4d63-a323-acccbf11068d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "618f1b95-8fcd-44f2-be2e-3b07266bb466"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebbbc382-591a-4e72-87ea-d7f28464c4f5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba798923-c120-4d51-ad22-7c21af5701f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d64275-fadb-4db4-ab52-4b2448b02c8e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8529bda-e6ef-4adf-87fc-01f29048e7c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26a047a6-95b5-42b9-8d0b-3e2d2e466024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ae3165-2be4-4560-afa3-4e0383ddc8c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "883c8f8f-c3bc-4058-af0f-1640a1ae57c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee3bd25-adca-4539-a13f-face53112c80",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac9a011-7509-476c-a6bb-a00592a4ffa9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "397a7d65-9225-4af1-8102-d4367b4b2434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71aa33b8-dd48-4360-9fcc-1916d875751d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfc31cda-e2d5-445d-a82b-17c173c235af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d99fd56a-e039-4f7c-bc92-675e3f41b11a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c332a23b-8bd0-4e35-a89f-16fa549987bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73634b36-1381-48dd-b72c-1b2af293f2a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d37499-f49e-4e82-9061-fbe999f31402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b03a1d8-5c9e-4ba4-a788-3253740d5c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d254a1f8-dc67-4cad-843b-569deef5de18",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd44898-fc23-4849-ab3f-cbc7a78137da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a80156ba-d6ac-4b5a-b70e-8f0539bcdca0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b67cecb4-aa7e-49fe-a871-7ff6d03300c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6811d3f4-e03f-48ce-817b-8fab8126a088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a99cb6-012e-4cf2-8909-6e6f6830ea20",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8223071-3adb-42e7-bec0-10b976f0b636",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4686f021-8bf1-4ef3-a607-71e8e6792a03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bed87c4-62e6-4a12-93c7-adefff2e44c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adae6720-40de-495e-a86d-e3af1d0da49f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b4a303-9c5b-45ce-9f11-60aabe9fe67d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66646986-3c32-42a7-b4ab-af30181cb78a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14b12613-cfef-4ef4-a65a-7922b8399d93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3784b5b-0ba3-43ef-9168-5451f623aabd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4c33c1d-3d6d-44ae-a7a3-fcb4231acb77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc0341f-3700-4e72-8b81-3ca910bdc509",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6832fb01-bf9b-46d4-92ea-ca30b6e8055e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6690a4f7-979b-4302-98b9-f114a39b65aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc7c0fd-ba1b-4b3a-8bc1-5e1222303880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39de4ad4-c315-4fd5-ad9c-dd480d4a4069"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0291bf5a-a6ee-4909-b9a9-58e5c2f2d79a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d626bef0-a3bf-455c-a974-af999b037419"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c5c5160-b857-438e-87e1-a28fc481cff0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1e39ea82-87e8-4508-96ad-0a4e7ae72227"
                    }
                  }
                ]
              },
              {
                "id": "e4a32fe7-274c-446a-b829-667904478adc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "76cce772-d00c-4e5d-b908-75d57eb68848",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d414ac5-1e74-4c77-8663-73f7ff0ef59f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c74d943a-4d8e-4ee9-ba86-de163fe20a7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8496f0ee-5aa1-4e10-afdb-edeab820f7c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a498a327-a604-4271-8c0b-3f08ed900c33"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3088956b-ae8c-4aba-bde7-64c1e319c0a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23d837fe-f01a-4c31-b677-f0ce48259130"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea98d0c4-9cd5-415c-87a2-56b1b2cef967",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7172025-e41e-4534-ad02-7630303b9d7e"
                    }
                  }
                ]
              },
              {
                "id": "90f8ddd8-817c-4cc7-8b29-0f6102069381",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "da4afc86-25db-4e3a-a5f0-3557e8cc2a7b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f5b96f-a054-45f5-b93a-c0f350685bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "2c8e9952-2a10-4ed8-b659-5189896fb114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "305164da-aca1-45a1-91d6-9c8eb8a76234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71e48a40-e3a6-47d4-bbe6-6dc589016194"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c9a0327f-931d-46dd-b792-f9dd1d3dc31c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "33b94744-1a86-4e16-a4da-089a360ff9dc",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "36488cf7-234a-41a1-9286-0b4f57e8edd8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b323fed6-0c89-4f75-854b-3b9f2e21b193"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1060571b-f0a5-4f51-a387-c7059d8c79d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9224e746-88dd-4350-ab48-259d21f7faab"
                    }
                  }
                ]
              },
              {
                "id": "43ed7006-ee4c-4194-935e-663ec9e8cada",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b804737-9210-4e36-9552-9cd376f43e9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "46321d8e-3ea6-466c-adf9-aabd3ab55187"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b28ee36a-cbb1-4d93-808b-3995eaba10ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e42c82a5-7048-493e-b17f-cde0609cda56"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "33580a13-5eb9-43ca-8a62-e2b974a5bd18",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "49ee78e5-ba17-4f6a-ba23-398ee10b8bb7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5b949039-bc91-4499-92e8-ce8002849130",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9b0a7b6e-3bb3-4a25-b43e-203fd2d65832"
            }
          }
        ]
      },
      {
        "id": "77e002d0-d3b7-48ff-9a79-b76713a46c31",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f363ddcd-44db-4899-a702-febf5dd07b1a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0f2441f4-33d7-44c6-9c88-5953b8bf5e70",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c90a8498-38ac-413e-8f7d-905f2524de23",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8272de60-8c76-4169-8c89-2a4342eccf13",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d570fc05-4e3b-4bf2-b690-18292d4adfea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31882d70-126d-4c90-8284-e24c22ea7119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f30a8a1-9a22-4d1c-90d9-df92b4a7fcbc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6171623e-8b24-41de-9a1e-149de8819c13",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d2d789f-f124-4268-8979-45243a3c020a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "91fd8da1-e7a5-462d-8717-4c629078d9d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c35b01f8-0335-423d-8e9e-0dd7f2037ba7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b8494ce8-1ded-4afe-a7ca-0ca8e7adb08e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8b241a24-e85b-4f77-88ba-04af1754d353"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6bfc4ac0-3a32-4078-adbe-d410c8d1b254",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7ae5f57e-b242-4889-b819-b97f60a4fd44"
            }
          }
        ]
      },
      {
        "id": "a8bc995f-b178-48bf-9ac1-4538ebe5f4e9",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "db89b806-d9b8-47e5-a007-ea7446a4e533",
            "name": "Negative Testing",
            "item": [
              {
                "id": "16caf5af-ad63-4de5-b1d4-3731c737babd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bf7528f3-1ce6-4543-9fa8-4594332eb7d8",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd743593-5b74-44c7-aa21-ae87cf58bbf7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "770a9219-2b75-437e-92d4-8b57948ed150"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18104dfe-b555-47e3-8e67-1a932fb47023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4539bc28-af73-43c3-9317-81e07be9b626"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1b18337-15ee-4457-bdfb-ce2dcfa2eab3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "894cab6c-be85-4e10-afcb-341518c6c5aa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b4a2f6f-4519-425d-95dc-18849684eada",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fca38960-583f-41b7-802c-3cb50ea79e42"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cd1d178e-04f9-4af5-9b1b-d72383746b1a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9dc42fde-1952-4ac4-8830-05089a4f3588"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "59db2c5d-0430-47a4-ad43-1fda8e7cd409",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6d1c5dbd-8264-4e5a-a885-2050a0938067"
            }
          }
        ]
      },
      {
        "id": "4e50e6d2-ec4c-4d95-ab5e-3d669e48bcde",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "6a9dedba-4f8a-4384-9a96-4022aacf3d70",
            "name": "Negative Testing",
            "item": [
              {
                "id": "57f7e70d-fe92-49ec-9335-be2bd38e4e8a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "836da113-1bf5-4098-9090-72da57bf81f7",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc7ff92-d1c8-41f8-b216-4afa4b69aaa8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a676815-a488-42fd-bb49-88575833378f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16198083-8068-45f3-ac4d-a7f667ab391f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5aaae60e-a610-4648-b5d6-b55aeea986e8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f821eba-d523-49b3-bad1-5dd0efe9d333",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c913924-6099-46d0-8360-0bb3f37e4648"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0f758a0-4686-43d8-9b16-acf2e26d0cfc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f633849b-4603-4adb-a81f-a2130f857d15"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0808af22-48e7-40d1-91d4-d2fe1b1863e9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e2b5eccf-ce6a-4a92-877b-4dfe14f90d2d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e3b9be5c-5a6d-42a5-9283-412edd2bb29e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4e99b320-68cf-418d-91df-138e963cb1d9"
            }
          }
        ]
      },
      {
        "id": "a69f27a1-a63c-4eeb-b987-791f577bf878",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a6f3c51a-ca58-4fe8-8432-f9ba06fce03c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e9a34b8b-7b77-49c5-a298-81e2bf84ee02",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "0a9ac8b8-52e8-4a26-a1b9-c2b6bb10ff63",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e50de932-1cdd-4364-9c10-c24aec94ba92",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9b1ac33f-6d23-42c7-8483-53301c60b1ec",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 69.04912280701753,
      "responseMin": 5,
      "responseMax": 260,
      "responseSd": 22.20568224108273,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1702255016232,
      "completed": 1702255044924
    },
    "executions": [
      {
        "id": "715d0d70-c762-451a-95af-06ce3f5a4690",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "fb9f5f44-cf66-4f13-ac6e-2722968660de",
          "httpRequestId": "3542a6ae-1e84-4910-8195-937efa7fcdba"
        },
        "item": {
          "id": "715d0d70-c762-451a-95af-06ce3f5a4690",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "901efd30-15e3-4e14-94ac-2517e5602d61",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 0
        }
      },
      {
        "id": "88ecf5d8-77b8-42c9-a706-5bb0dd3a6708",
        "cursor": {
          "ref": "c5abe4f0-002b-4d8c-99c2-00f9043aefd5",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9d666fa3-d1ec-4f84-93b0-0f78e2c638dc"
        },
        "item": {
          "id": "88ecf5d8-77b8-42c9-a706-5bb0dd3a6708",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "739b2156-4753-4695-b8dd-427a7c9d2649",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "fefe7e6c-18c2-41d5-b149-cadc39ce003f",
        "cursor": {
          "ref": "3b9c306e-257d-4e40-b6f8-3747103add80",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "351a6176-9181-440c-bc52-abf3a328bd5a"
        },
        "item": {
          "id": "fefe7e6c-18c2-41d5-b149-cadc39ce003f",
          "name": "did_json"
        },
        "response": {
          "id": "b4289611-676a-4f50-9415-7abcc0b5170d",
          "status": "OK",
          "code": 200,
          "responseTime": 211,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69edf1d0-ff77-46f0-829d-18b09634cc54",
        "cursor": {
          "ref": "b0f8b581-6bdc-4fcc-a098-27d5d4bebbb3",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ea508663-876b-44c0-ac0f-9a95ca13912c"
        },
        "item": {
          "id": "69edf1d0-ff77-46f0-829d-18b09634cc54",
          "name": "did:invalid"
        },
        "response": {
          "id": "ad67a1dc-f069-4e52-8088-db7c23833a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69edf1d0-ff77-46f0-829d-18b09634cc54",
        "cursor": {
          "ref": "b0f8b581-6bdc-4fcc-a098-27d5d4bebbb3",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ea508663-876b-44c0-ac0f-9a95ca13912c"
        },
        "item": {
          "id": "69edf1d0-ff77-46f0-829d-18b09634cc54",
          "name": "did:invalid"
        },
        "response": {
          "id": "ad67a1dc-f069-4e52-8088-db7c23833a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a240ab7d-5b41-4a85-958f-778470cd3988",
        "cursor": {
          "ref": "d6849c63-4ee9-47c5-ab08-c8064c868226",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "9ee8db26-feaa-4afc-b6a5-98c584064d43"
        },
        "item": {
          "id": "a240ab7d-5b41-4a85-958f-778470cd3988",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7126e0b2-daef-4142-bdb4-46db91734855",
          "status": "Not Found",
          "code": 404,
          "responseTime": 102,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aedd4c32-f1e5-469f-98ee-eceb84aba627",
        "cursor": {
          "ref": "559c5682-b532-46b3-9cd4-474257ad9c84",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "52cd67c5-ce6c-41fc-aa78-7fc8a62bfa8b"
        },
        "item": {
          "id": "aedd4c32-f1e5-469f-98ee-eceb84aba627",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c954ee46-2e27-400a-b9cd-ca04e1da1fe1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 62,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a16224-483b-42cb-ae69-535649dcff63",
        "cursor": {
          "ref": "2332df4b-b0b1-4003-b5d2-7393b37fc603",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ef625c20-23ab-4dc1-94d9-c35f534e9216"
        },
        "item": {
          "id": "c1a16224-483b-42cb-ae69-535649dcff63",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "406c339a-27be-4ff2-b704-ca56b9f57185",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01602a7a-ccc1-4ac1-a58e-8b83be0be908",
        "cursor": {
          "ref": "0eeebccc-956f-4aa5-8074-0d389472abe9",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2f38485e-fa9f-4429-96e0-8a801fd2db80"
        },
        "item": {
          "id": "01602a7a-ccc1-4ac1-a58e-8b83be0be908",
          "name": "identifiers"
        },
        "response": {
          "id": "f8f9c964-ce8d-4162-9789-e2f566301510",
          "status": "OK",
          "code": 200,
          "responseTime": 250,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a4e901-18b0-4154-9b78-900740f1c99e",
        "cursor": {
          "ref": "faf060e5-7e84-4f31-86b2-7d277304e1a0",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "56cfba91-c29c-40f9-93c2-7440cbcdd3b5"
        },
        "item": {
          "id": "30a4e901-18b0-4154-9b78-900740f1c99e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f1b6face-d18e-4c07-b66a-dc68d5ab970b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c3dc5b-c26c-4175-959b-c4bc7794fd01",
        "cursor": {
          "ref": "e28c3906-32fc-4ac8-90ae-d30b58a1ce4e",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "dcdcb562-6716-4581-bced-55dd715bf482"
        },
        "item": {
          "id": "e5c3dc5b-c26c-4175-959b-c4bc7794fd01",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ab883b0c-ff5d-46ee-aa44-7a6ad4c3cbd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5147904-e97c-489f-b8e5-317129673600",
        "cursor": {
          "ref": "14d90d3a-8f33-4dea-99d9-0d51a1b5c349",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "bfcdc86f-e3c9-4dbc-b3a9-2c7fac6402b8"
        },
        "item": {
          "id": "c5147904-e97c-489f-b8e5-317129673600",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a355dc3f-90b8-49ce-818c-e46b7d34e5c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0043fbba-389c-4a7d-8c35-bf3b80a82d21",
        "cursor": {
          "ref": "b0aae836-13ae-4e21-b64a-108a13ddfce7",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "731551da-7e50-46dd-b4a3-fe38c1f88471"
        },
        "item": {
          "id": "0043fbba-389c-4a7d-8c35-bf3b80a82d21",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "bd3ae171-c94e-44cf-8655-37ba101d9806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db828f1-13d5-4e97-97b5-9af5f75eb760",
        "cursor": {
          "ref": "e9997987-f91f-4de1-87ae-916f4b33f705",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c45710b0-b796-47aa-a80a-6cc268372adb"
        },
        "item": {
          "id": "2db828f1-13d5-4e97-97b5-9af5f75eb760",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ede196d8-1017-44de-9ca9-f499b6064867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c3d8cb-5ca1-48c0-936f-4a15559038bc",
        "cursor": {
          "ref": "dc8f1cf9-d9a2-473b-9195-276cf9eceeb8",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f96c5a02-f9e2-4dbd-b226-14a4727ad479"
        },
        "item": {
          "id": "e6c3d8cb-5ca1-48c0-936f-4a15559038bc",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "525de7d1-375e-4db2-a2b2-f3c5e235b6e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb60c6a-1814-491e-8e33-66cac8ca85c8",
        "cursor": {
          "ref": "d208bbcd-87a2-45cc-b1a4-957c13de9d51",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "63617c15-8d6b-4d85-8970-61b73a2c67ee"
        },
        "item": {
          "id": "1cb60c6a-1814-491e-8e33-66cac8ca85c8",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d18bcdcb-4293-4995-b965-525d4648bc59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca567efb-7330-4f71-a59b-47d81ed226a4",
        "cursor": {
          "ref": "d58f3b29-31e4-4e27-b223-015e2be8669d",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d697550f-1d58-4313-861c-230ce7a46de9"
        },
        "item": {
          "id": "ca567efb-7330-4f71-a59b-47d81ed226a4",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a0e38307-e4e9-4b31-b123-9b919cf2ac93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88072529-4f92-41c7-88fe-c0ab356f76be",
        "cursor": {
          "ref": "3718b77d-ff45-49c9-a25c-542ce46ba3bb",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e656e887-cf27-4397-b10e-ab94940e4a94"
        },
        "item": {
          "id": "88072529-4f92-41c7-88fe-c0ab356f76be",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "04d1fe02-1731-46bf-b28c-da5127afb38e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7900e0f-678d-488c-9ef3-865706de82f3",
        "cursor": {
          "ref": "24b5ec04-9619-4868-8d7a-932579568c53",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ce55fda3-4568-49c5-ac47-46c6404ca701"
        },
        "item": {
          "id": "d7900e0f-678d-488c-9ef3-865706de82f3",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "af23292f-657d-4d3f-8ae2-a0adbcb2b025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77273efc-d929-49fd-8326-fecd30d20f20",
        "cursor": {
          "ref": "6256d653-9c6e-4420-a287-d76c6e9a908a",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c14a37c6-a4ca-4990-a95d-99b14d854fb3"
        },
        "item": {
          "id": "77273efc-d929-49fd-8326-fecd30d20f20",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "84d54281-6809-47a9-b2f4-d4262dce1c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e713c0b-14b9-40fa-91b3-d7d7d21870d1",
        "cursor": {
          "ref": "3ce2a814-7a6f-4748-a52f-a8aa6f6fb970",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "db1ce2b0-7c8a-477e-a154-3def421c155d"
        },
        "item": {
          "id": "6e713c0b-14b9-40fa-91b3-d7d7d21870d1",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b07275c2-7105-4f20-a81f-6a3571cdc84e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231a847d-2893-4d01-a249-74eb9cbdd4f0",
        "cursor": {
          "ref": "a2496717-2c80-4708-a91e-a2dcb26079fc",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "6b49f40e-9298-4d01-8aee-e8e86b17e8da"
        },
        "item": {
          "id": "231a847d-2893-4d01-a249-74eb9cbdd4f0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e99c3ed9-6034-4fc7-83e3-8111d7d38656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e464ae-9329-48d5-8c76-953184ed23a7",
        "cursor": {
          "ref": "7b395bb2-81cc-4375-87f8-c728f5f4265a",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "2f942a1e-3784-4fc4-8e2a-25a1fd69cfb6"
        },
        "item": {
          "id": "e8e464ae-9329-48d5-8c76-953184ed23a7",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "49871ab0-9179-4401-9286-a8184627f1df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "202f2439-64c2-4830-8842-1dcffd0ce056",
        "cursor": {
          "ref": "8ce106ac-13a8-4f18-ac9c-b0de69dfb31a",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ee5a3b3c-7ef2-438e-9047-da76609b74b5"
        },
        "item": {
          "id": "202f2439-64c2-4830-8842-1dcffd0ce056",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a6b6bf4a-edd9-447e-9ba7-8a4be6383a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5912d935-229d-4d50-8a1d-f14e78bbf5be",
        "cursor": {
          "ref": "57e8507d-8cdc-4c9b-9e5c-c7c0f6c5c4ae",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "093066c8-d0c6-42a0-a980-399bcf2b1194"
        },
        "item": {
          "id": "5912d935-229d-4d50-8a1d-f14e78bbf5be",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ff6eb9f4-f9ab-4f1d-9949-2f51b3ef89fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59063f03-09e1-4570-9a80-9ea4305f3a13",
        "cursor": {
          "ref": "ef1eaecc-a237-43c1-92c2-cbea644bd396",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "afdce890-12c4-4c90-968a-6e69befaed89"
        },
        "item": {
          "id": "59063f03-09e1-4570-9a80-9ea4305f3a13",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "eff71c45-2cbd-4564-8e62-1de2036db627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afbe5197-830e-42d7-97a3-c19b9d015c24",
        "cursor": {
          "ref": "85f51992-b418-4bf8-a37a-1b415fd9bb7e",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "328baf52-d328-421d-8a7d-343552cb0e59"
        },
        "item": {
          "id": "afbe5197-830e-42d7-97a3-c19b9d015c24",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8211ee29-0aa9-403c-b917-daa532ad3ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef9d46f-0c0c-4027-a5b3-9a6d98bab70e",
        "cursor": {
          "ref": "1ecb66bd-e49f-46a1-903d-655bed113b81",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ab639238-4b72-42f3-97a3-e5bd931e2487"
        },
        "item": {
          "id": "9ef9d46f-0c0c-4027-a5b3-9a6d98bab70e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "072ea67b-1c77-433c-b995-30345e83c822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300f34d0-3c1d-436b-a435-7d1f0c131efc",
        "cursor": {
          "ref": "3c77568d-acb7-4201-adcf-9b8db4d98287",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "292b0bfc-c93c-41ed-b85e-f4210e848685"
        },
        "item": {
          "id": "300f34d0-3c1d-436b-a435-7d1f0c131efc",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8d193d8c-1d89-4e53-971d-815d3b173f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b92cd2b8-b394-4f1f-b8b2-3bca6ac0a8ca",
        "cursor": {
          "ref": "db2d81f7-fa7d-47a1-adb7-e181bced53ab",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "fd72aca0-853e-4a1b-9386-94ce59da7238"
        },
        "item": {
          "id": "b92cd2b8-b394-4f1f-b8b2-3bca6ac0a8ca",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1d01d36c-57dd-4e3e-b8b3-84c71c76b5b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "004f7e1c-a0ec-41b2-9790-2b3458801475",
        "cursor": {
          "ref": "f3281beb-9b0a-424b-a72f-e46d464c47f7",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c9ad3809-57f6-4afa-92dc-4f751611224d"
        },
        "item": {
          "id": "004f7e1c-a0ec-41b2-9790-2b3458801475",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d7b98c79-b57e-4104-a909-21b96512edb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7806b101-2717-4c28-a093-cd8b6609c4f2",
        "cursor": {
          "ref": "1ee44c7f-f20d-42f6-9301-1783cdc83071",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9aa5eb0c-5fab-45bf-bf44-1e23a5750cd0"
        },
        "item": {
          "id": "7806b101-2717-4c28-a093-cd8b6609c4f2",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8d4af4b1-b49a-443f-8ed7-0ee531ac0ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3ede9b-7bf7-4210-a120-c75d7baf98de",
        "cursor": {
          "ref": "2d20d0ba-517f-46df-ac3e-a014d64fbd97",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5455bef5-2df5-4f40-b2da-6eff83ade8f5"
        },
        "item": {
          "id": "0b3ede9b-7bf7-4210-a120-c75d7baf98de",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "9f6385b4-6d62-4fd4-817a-e0724eb275a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42620b00-59e6-4f4c-9204-a52170a0ac5c",
        "cursor": {
          "ref": "f874a400-f87f-4361-b904-49c0626b1e35",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "1dc4b138-07a2-4f52-9f75-db650d7f8b80"
        },
        "item": {
          "id": "42620b00-59e6-4f4c-9204-a52170a0ac5c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "1f35421a-9fc5-4b26-913f-bb1ad5b03bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2df1a13-41e3-4af0-a41b-8d8157671bc9",
        "cursor": {
          "ref": "d10f379e-66a5-41ff-b1d9-c0bdb8adc298",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "7ff41647-8f66-422e-94e0-99e5ccd298e4"
        },
        "item": {
          "id": "b2df1a13-41e3-4af0-a41b-8d8157671bc9",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "25e47b25-53c0-4b7d-9243-2520d11ccdce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c453d0-7bc8-4880-b6d6-5c0daba31107",
        "cursor": {
          "ref": "183aaf28-fd2b-401d-9fa4-e3345f769f20",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "0c74fc8a-28e5-410b-a44d-781512435689"
        },
        "item": {
          "id": "37c453d0-7bc8-4880-b6d6-5c0daba31107",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "dfae951d-d780-47d0-b30c-23c0b1ca3240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168b3d0b-6a60-4727-92c6-22c10b1f0a5c",
        "cursor": {
          "ref": "d7911b31-7191-4ce6-8683-0a07c42e4e6c",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "976a5e75-2175-45ab-9dd5-878df505372d"
        },
        "item": {
          "id": "168b3d0b-6a60-4727-92c6-22c10b1f0a5c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f6122345-1c92-4f51-a641-90c851d1f250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15982964-38a6-4605-8b63-2d7e18e8fcda",
        "cursor": {
          "ref": "40b6e704-a07b-4969-9c58-b1dd32decc96",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1db91945-e691-4003-9ced-d02ca9a7a5c4"
        },
        "item": {
          "id": "15982964-38a6-4605-8b63-2d7e18e8fcda",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "73063240-59ee-4510-9b61-6907d69beddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ac7dea-f697-48ee-b33c-0a77ba3f0b90",
        "cursor": {
          "ref": "3f7b6f31-a70d-42da-ac47-20f07b8020ce",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "259a2cc7-4995-4379-aa50-9287a55af8bd"
        },
        "item": {
          "id": "b9ac7dea-f697-48ee-b33c-0a77ba3f0b90",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0e9c36bc-25d1-4930-8d7a-3de4b6fbda7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca974762-7e8a-493f-a89f-0476d54bb7f3",
        "cursor": {
          "ref": "ab6ea580-52a1-4c78-8478-0fe7ce5f33b3",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a4105f05-5ca5-42e2-a38f-c7be069cdd65"
        },
        "item": {
          "id": "ca974762-7e8a-493f-a89f-0476d54bb7f3",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f8d623bc-3ee8-4cbc-903b-f1d25b522cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e71da7e-cad1-4929-960d-f81f52af5d80",
        "cursor": {
          "ref": "b1a98432-e221-4926-8751-f885bfd11213",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8c83b956-0cb5-479a-861f-d65496d01bba"
        },
        "item": {
          "id": "0e71da7e-cad1-4929-960d-f81f52af5d80",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3dcf65b2-7994-4e65-b9fe-b9cf7a884b7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a02e8ef0-2076-47e2-846d-56cb979fcdc9",
        "cursor": {
          "ref": "fb6fe68e-475d-402e-bd2a-00395b1e56ca",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f712f845-be7f-471c-bf9b-bd89570c1d62"
        },
        "item": {
          "id": "a02e8ef0-2076-47e2-846d-56cb979fcdc9",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "7a49530c-20e5-49a9-aa07-451f139a053e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "355f219e-80be-4850-8ee3-143a16144448",
        "cursor": {
          "ref": "c23bf3ed-40ca-45e3-966b-464b77e0a8ff",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e4e3c869-6c44-4faa-9d51-b08fc6ee5b5c"
        },
        "item": {
          "id": "355f219e-80be-4850-8ee3-143a16144448",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7be0a220-3f4b-4d42-926e-98c089273d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170d20e4-6f7c-4d89-a123-fcfc2eeca48f",
        "cursor": {
          "ref": "47d7c7c0-865a-4d68-b94c-dccc629b6b87",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "51343bbf-3887-457e-80ef-5151f05c63f5"
        },
        "item": {
          "id": "170d20e4-6f7c-4d89-a123-fcfc2eeca48f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ba2a3822-dd44-4fb6-b969-65363f8c9d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e32a1d-4c44-4243-8e5d-c4deea2f8322",
        "cursor": {
          "ref": "d7106a36-eb55-4a2f-b4f9-57fc8977ea45",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "148e70e1-8dc3-4d79-b25a-2a859631322d"
        },
        "item": {
          "id": "14e32a1d-4c44-4243-8e5d-c4deea2f8322",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "6c1c8d8a-ae17-436e-bb95-0ecb85576552",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 84,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb0edc0-1d43-411b-b76e-0e5926e1c273",
        "cursor": {
          "ref": "118b882e-4499-4a29-9750-6f5e19411d48",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "37650565-7eb5-49cb-8fb6-d1767c27860a"
        },
        "item": {
          "id": "7eb0edc0-1d43-411b-b76e-0e5926e1c273",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "db45fa36-82ab-4f63-ac3f-70102f05aad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da24b419-8289-434a-885b-e46fa410695d",
        "cursor": {
          "ref": "bb6772ab-972c-44de-8d6d-6d84947ff6ff",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f958812c-774e-4047-afc9-3691e1834445"
        },
        "item": {
          "id": "da24b419-8289-434a-885b-e46fa410695d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "12d88596-964d-4e2c-9d18-43d655ab9a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02690d47-ec37-4e97-81c8-f3ba1aafb1d6",
        "cursor": {
          "ref": "9c961b85-80e1-4cd1-9f84-2755959a2c71",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "969ed1fe-9e3d-4a5f-8b3d-7deb8b36dd6d"
        },
        "item": {
          "id": "02690d47-ec37-4e97-81c8-f3ba1aafb1d6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "06ec182b-b973-4eef-99c5-2d699ab75601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07236e6-065e-44d3-a0cb-938593891767",
        "cursor": {
          "ref": "9500a8c1-9e72-4c62-9586-06901913e712",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "96671592-7bff-4008-9586-2dd39a9ee2e1"
        },
        "item": {
          "id": "a07236e6-065e-44d3-a0cb-938593891767",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "092a55cc-09e3-42b6-aace-7778c61842ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1604cf60-6c93-4a7b-ba01-d8ae3ac1f62c",
        "cursor": {
          "ref": "734a41d8-e36e-4e6a-872c-3bd070362b57",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a150df46-34e1-4c3e-b2ba-df1896260955"
        },
        "item": {
          "id": "1604cf60-6c93-4a7b-ba01-d8ae3ac1f62c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2e343370-65b9-403a-bc69-3dda440b086b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fec7cb2-aac9-4988-b367-3169e162c50b",
        "cursor": {
          "ref": "82b76a93-105f-4e3d-b8b7-8ceebdcf54fc",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1b54ef83-7004-40fb-9706-9b6a03bd772d"
        },
        "item": {
          "id": "0fec7cb2-aac9-4988-b367-3169e162c50b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "2340ee25-1687-447c-930d-b31b7f024908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92379a62-9661-405e-a6d7-1c82a04fd32b",
        "cursor": {
          "ref": "3f83e0a0-4942-4c94-a18c-4a8063f79f6b",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "2818013f-6abe-4d1d-9eb9-b3d1c1d2f4bd"
        },
        "item": {
          "id": "92379a62-9661-405e-a6d7-1c82a04fd32b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "4d13dd5d-8ab0-4bd7-80fb-0ef42b4b70ac",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 75,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97cc711-b98d-4dd3-a072-b43791de744a",
        "cursor": {
          "ref": "fb9f075d-4008-4811-a261-b98f6cba54e9",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "be188c73-5016-40fa-8fb8-2e3295978e24"
        },
        "item": {
          "id": "f97cc711-b98d-4dd3-a072-b43791de744a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2d047eee-537a-4de1-aa98-27a5d1d530b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0cebf01-8cd8-42d0-9cb1-f83ffcdee11f",
        "cursor": {
          "ref": "7597ac72-77ba-410b-a3a3-0dabaa7bcefd",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e67098cb-78ff-4fe4-809c-c03a4496a5d9"
        },
        "item": {
          "id": "c0cebf01-8cd8-42d0-9cb1-f83ffcdee11f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a4661c8e-6db0-47ce-be81-ff4c1353893e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7487449f-90b6-4bd5-bbcd-4dbcb8cbbec6",
        "cursor": {
          "ref": "7fb2dbdb-2535-48bd-930a-855b505e36ab",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "8b7a1592-6d94-4a96-a149-cdc0b592f68f"
        },
        "item": {
          "id": "7487449f-90b6-4bd5-bbcd-4dbcb8cbbec6",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7ec9689f-d014-4b2d-a183-4fff19e8318a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e58052c1-f14c-4044-bbb0-c12d6e45b03f",
        "cursor": {
          "ref": "a05d0cc4-050f-4727-bae7-a149ba0fb1d2",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4e44849b-65ac-49ab-b3cf-9daad7c001ed"
        },
        "item": {
          "id": "e58052c1-f14c-4044-bbb0-c12d6e45b03f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "82e5425b-08aa-4869-9381-a20d0502c75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16824ca7-e3c7-4cc5-be93-ac9c7d72ef1c",
        "cursor": {
          "ref": "d7f9fc2d-c8fe-4e82-a919-3b20f87f1b13",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9353b759-ee73-4d0d-a24c-09eac20aedbd"
        },
        "item": {
          "id": "16824ca7-e3c7-4cc5-be93-ac9c7d72ef1c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "557403a0-beb3-433a-8ab4-c2cf51e71ed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15380f50-166a-4ff7-aff5-524574635272",
        "cursor": {
          "ref": "feb77470-7b23-484e-adb8-44ebd5955233",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "aa5f2f14-5ac3-4d8a-a631-c529a5f0305d"
        },
        "item": {
          "id": "15380f50-166a-4ff7-aff5-524574635272",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e0e68339-6613-4e48-b4dd-1bb5d3f7c27f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb778a22-3f0b-4e87-aa8e-47c81a0e3c6d",
        "cursor": {
          "ref": "4879ad31-cace-4e3e-8732-0ebeb0443462",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "651be292-b687-4f42-a08d-37fb8d157529"
        },
        "item": {
          "id": "bb778a22-3f0b-4e87-aa8e-47c81a0e3c6d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6e9430a3-38a2-4537-a2cc-eae174e381c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1608cbb6-db7c-4c63-bc59-87b453d0d71d",
        "cursor": {
          "ref": "c66134d0-74aa-45b0-8d51-8436d9d29c3d",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4207736d-d5f2-48c2-a97c-3b0275bf6c5e"
        },
        "item": {
          "id": "1608cbb6-db7c-4c63-bc59-87b453d0d71d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "faeaf775-44c8-43a5-ac85-0ce3bcc68e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b49caf-4fed-418e-9fff-68430bef8ba6",
        "cursor": {
          "ref": "c238388b-66a5-4d50-ac86-9f3ee4873ce6",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "8dbcb8ca-bc48-4817-915a-d9e9cd270f29"
        },
        "item": {
          "id": "06b49caf-4fed-418e-9fff-68430bef8ba6",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "5a5401ff-fa41-4f3c-a894-cdd30b0c1d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35bdf83e-4a84-4895-955e-75340b1dc722",
        "cursor": {
          "ref": "4517065b-5d4c-48bc-b97e-b1612ace3320",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d45c66fd-b847-410d-8cf4-09392c6a6ddb"
        },
        "item": {
          "id": "35bdf83e-4a84-4895-955e-75340b1dc722",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c3a7c033-d5e1-4a69-9640-521f53ef7f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb369ae-8586-4508-a7b7-ffd9755417cc",
        "cursor": {
          "ref": "efbf9850-efe9-44f6-b1ff-b4bc03cd5a05",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b790235c-3961-493d-a003-512bb9ebeb38"
        },
        "item": {
          "id": "eeb369ae-8586-4508-a7b7-ffd9755417cc",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b9480dec-357b-4d8d-9e3f-3d91d44e0686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acce8723-150b-4d62-8e76-1cb4e9af187a",
        "cursor": {
          "ref": "160eb36e-8637-4c0c-b0cf-a8bc80c21ea5",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ab723823-0684-456d-a865-9a1f84b17d4a"
        },
        "item": {
          "id": "acce8723-150b-4d62-8e76-1cb4e9af187a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e6a08c12-90b1-4c5d-9e71-ca3329bb3443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b4c17a-ff23-4f64-b665-4a890ba85b66",
        "cursor": {
          "ref": "357d8165-12e9-4546-8894-bf397655490b",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "30b30f55-6565-459b-a579-41603d501433"
        },
        "item": {
          "id": "d8b4c17a-ff23-4f64-b665-4a890ba85b66",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "6466d6ab-2c0b-4df9-9ec7-662c54ea3bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e574190d-27f9-4aa0-b2c0-aa6e5384ed45",
        "cursor": {
          "ref": "1a3355cd-c1a2-414f-873e-663df5a51571",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "bb825337-1d1a-4316-91d9-748ad4332563"
        },
        "item": {
          "id": "e574190d-27f9-4aa0-b2c0-aa6e5384ed45",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "efaf6c9d-5ddd-40bc-8d95-9e325914bed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec79463e-f0c7-43f9-8e87-d56c4d366422",
        "cursor": {
          "ref": "26ed5856-3197-4382-a4cf-5a93dd50b6c4",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e4954107-04a8-4b4d-8903-e2997187a56a"
        },
        "item": {
          "id": "ec79463e-f0c7-43f9-8e87-d56c4d366422",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5e0fd055-da08-40c4-a45b-b1cd221516c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b353306-8126-4d5e-867a-e17cc4cf9656",
        "cursor": {
          "ref": "1cf60b4e-39b5-4325-9026-38f7d546c3e5",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8bdfde1d-c9bb-4df9-a290-9a880b0f8cbe"
        },
        "item": {
          "id": "0b353306-8126-4d5e-867a-e17cc4cf9656",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4b448652-83f7-421b-b6f5-1cad9325b86a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2e85ff3-d9bc-4e1e-8b99-00ac78e15930",
        "cursor": {
          "ref": "bd67fe37-5849-43ec-b6db-3acc9a580fdd",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "451c4c32-b122-4993-afdf-e8eb1d10bfc0"
        },
        "item": {
          "id": "e2e85ff3-d9bc-4e1e-8b99-00ac78e15930",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "471fd3a6-79c4-4ea6-8483-26ecce66e418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "304f315e-6dbd-4132-98e1-3737709548d6",
        "cursor": {
          "ref": "782e02a1-100a-4559-a44c-7a0d3123317f",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6097d279-836d-4185-a591-850fed613414"
        },
        "item": {
          "id": "304f315e-6dbd-4132-98e1-3737709548d6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4c6f0be5-b15d-43db-b7d1-53004e9bbe18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e74ea8b-b3e6-4f6a-9509-b0067cccc2d4",
        "cursor": {
          "ref": "9fbe54e6-4395-4e04-bb5e-c84ba890b527",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f5a156b0-24dd-4cc7-a4ea-3e11b5976686"
        },
        "item": {
          "id": "3e74ea8b-b3e6-4f6a-9509-b0067cccc2d4",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "887c4351-64b5-4626-90d7-94853db0ef83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e13123-da73-4786-bd0f-860d1ea27f45",
        "cursor": {
          "ref": "4bd5ae9d-f61f-4f05-b09d-b03f7373e7d1",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "30b9df19-d800-429c-9579-84205f7bb7d8"
        },
        "item": {
          "id": "77e13123-da73-4786-bd0f-860d1ea27f45",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c013b1a6-1fbb-4774-b956-a85a11a486a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bbce7c9-e797-47de-bb8a-4230261d2471",
        "cursor": {
          "ref": "f9531919-9379-4026-804f-a6b21e20b178",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "9c7f6e98-a6d5-4df6-8151-bb142f7133fe"
        },
        "item": {
          "id": "1bbce7c9-e797-47de-bb8a-4230261d2471",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "00808de9-3def-4ce8-b7a4-e314432927dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3dba05d-a187-4fc7-9311-fbf00bbd393c",
        "cursor": {
          "ref": "37988289-9526-413f-8d42-ff6e3bc8d71f",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4b45ed8c-1bc9-4762-ad43-c6c138b54f6e"
        },
        "item": {
          "id": "a3dba05d-a187-4fc7-9311-fbf00bbd393c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b06845a3-933e-427e-b674-0195dcac5bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef2360a-9630-492e-84ed-b87547a41287",
        "cursor": {
          "ref": "7bc45174-1d28-4835-a2a1-40695271f3dc",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b3de955e-5c74-425b-ba1e-00c2f34eeeaa"
        },
        "item": {
          "id": "8ef2360a-9630-492e-84ed-b87547a41287",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7e4c6481-78a8-4ed9-a9e0-c10c1319afa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20cb29b-3bfb-44cb-b740-2c3e7dd72875",
        "cursor": {
          "ref": "6368da87-2a25-4bd2-8a08-cfa003bde645",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "50d2031c-9ccf-4f6f-a7a9-7c076256e1f8"
        },
        "item": {
          "id": "d20cb29b-3bfb-44cb-b740-2c3e7dd72875",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d127ebfc-afd3-44ea-8878-60d53b790ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796f10bc-d72e-4190-9bba-47472835d8f8",
        "cursor": {
          "ref": "03659038-ab70-47e3-95e7-315635055b05",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c2eeec06-f0fc-468a-800c-e12d334987b0"
        },
        "item": {
          "id": "796f10bc-d72e-4190-9bba-47472835d8f8",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "378c53c9-3aef-40b6-a6cd-eeaa96dbe243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ef41d1-346f-4252-94ad-c0f1c759d3ce",
        "cursor": {
          "ref": "c56068c7-b11a-48b1-9a52-d74a9f7dd747",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "454b0cdb-e0ea-4d1f-8a93-34e06c763c6a"
        },
        "item": {
          "id": "e9ef41d1-346f-4252-94ad-c0f1c759d3ce",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5da7b34c-7e65-4f79-8555-f7c0f93f6240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f21bf24-dfe7-4795-9161-62c0b0e33871",
        "cursor": {
          "ref": "c9978a3e-86d3-4ea4-b9c6-8869fd4d83f2",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "dabea981-3429-4b95-8411-7219523b35c1"
        },
        "item": {
          "id": "4f21bf24-dfe7-4795-9161-62c0b0e33871",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "880fa144-300c-4850-b26e-057f00d82470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18cd263-d44e-4f97-89a1-798d6122761b",
        "cursor": {
          "ref": "f3288ce8-a893-4c8e-a6fd-50fc8e20b82b",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "0fcc9294-187a-4025-90d6-78d1982da717"
        },
        "item": {
          "id": "e18cd263-d44e-4f97-89a1-798d6122761b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8475cd6a-a229-4bf8-81c9-475428f0a737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "351d76fd-c19f-41d4-9089-72fc1ee12414",
        "cursor": {
          "ref": "b7fea4da-e994-4533-84b4-16d57e614bf8",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "67f4511b-791f-42d3-947b-5f185b868a6e"
        },
        "item": {
          "id": "351d76fd-c19f-41d4-9089-72fc1ee12414",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "7cbdc79c-32c5-4d4a-a096-ac8f1166f2e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0445fd6a-73a2-442e-9966-55be04bc6f20",
        "cursor": {
          "ref": "68dbab02-af96-4cb7-9258-355a06b6c276",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5e9cd812-6e91-4ca6-bdd5-2ed4eb783716"
        },
        "item": {
          "id": "0445fd6a-73a2-442e-9966-55be04bc6f20",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "34d43c4f-7ddb-4e44-b206-54ff53d0569c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0db1ac2-7389-4d3b-827b-5f8e530b092e",
        "cursor": {
          "ref": "364b1254-c567-43b0-ae6a-94789d32ab7f",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7ab6d220-55d1-4577-b00f-b4aa93aa37b9"
        },
        "item": {
          "id": "e0db1ac2-7389-4d3b-827b-5f8e530b092e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e705e4bb-b854-4dbb-9127-f7850f41d5f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e21627b-8401-407a-a333-4d243cad0709",
        "cursor": {
          "ref": "e823b3b6-3c29-4e99-bd54-20482f09de5f",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d6ac3c16-4c9e-4251-bbe2-4171e59f69e4"
        },
        "item": {
          "id": "7e21627b-8401-407a-a333-4d243cad0709",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "8a0c1a55-ea05-4d13-b840-9b94c90dbc92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f9c47f-8f25-4c63-aed5-6661478e3256",
        "cursor": {
          "ref": "532ad955-e25e-4e37-bb38-5b8d5b34baa7",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "515d22a5-518b-49ad-9ff5-8193fcf6ad4a"
        },
        "item": {
          "id": "65f9c47f-8f25-4c63-aed5-6661478e3256",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "28cd28af-7306-4b1f-af4f-c8d4fb72b83e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808d4f8a-ec0f-47b7-a333-61a7d47adecc",
        "cursor": {
          "ref": "48a307ee-f865-4fcb-920b-607bbfc81cc8",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "48c70011-e921-4eda-9373-ce4f38809833"
        },
        "item": {
          "id": "808d4f8a-ec0f-47b7-a333-61a7d47adecc",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "94273379-58d4-4ecc-ae20-3e78587ef039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0074a58a-9244-4e63-a379-1c3b889b5cc9",
        "cursor": {
          "ref": "895b6651-2cd7-42e6-b629-2930d777ea32",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d1c51de1-1608-481a-95af-36c30dd4fb07"
        },
        "item": {
          "id": "0074a58a-9244-4e63-a379-1c3b889b5cc9",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "53be5adf-5fab-4863-a5e2-a4c7094706e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80aa1c33-cf14-4ba4-961b-814b39c43976",
        "cursor": {
          "ref": "853e7594-0c22-4069-85ba-b2f2a4741d43",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "edf00da4-a3c5-4315-85a9-68f19d3b0851"
        },
        "item": {
          "id": "80aa1c33-cf14-4ba4-961b-814b39c43976",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8eb9af9c-36b2-46a9-ba68-8a94abc6b6d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9abdf954-d9e4-44b9-9d8b-103301293518",
        "cursor": {
          "ref": "b66c29cb-3ab0-459e-9045-4d9fb80a04ca",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f6a21cab-260b-4000-b5bd-7e720bb42749"
        },
        "item": {
          "id": "9abdf954-d9e4-44b9-9d8b-103301293518",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "7c84f5b7-96dc-403a-8726-de9405f64750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "343668de-c490-4349-aa7f-37111a9932dc",
        "cursor": {
          "ref": "b7c1bcaf-39b1-4f71-8aa8-bd64be25073a",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d1569de4-c6e5-4426-b44a-20ceae7b3a60"
        },
        "item": {
          "id": "343668de-c490-4349-aa7f-37111a9932dc",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "692bfd85-19b4-4d1d-b0b8-bcab14ba180b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446eb79b-9730-44a0-b90b-9a8dfee72b7d",
        "cursor": {
          "ref": "c920edb9-4001-42d9-b3b8-d3e4906639e3",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b6b90733-7530-4f0c-ae33-859350359ef3"
        },
        "item": {
          "id": "446eb79b-9730-44a0-b90b-9a8dfee72b7d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ab5fa93b-bf0c-466e-9a1d-aa95ab7b5778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5d560e-356d-40d8-948b-8d3c04cdeab5",
        "cursor": {
          "ref": "534a5f63-e676-4678-be84-1bb45f2d4587",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "8421155c-5976-4696-811a-a0a00132d398"
        },
        "item": {
          "id": "9a5d560e-356d-40d8-948b-8d3c04cdeab5",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "689acf42-6eb2-4c2e-8d2e-8b8038315359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d250bc69-6acb-40f5-a82a-70d701029364",
        "cursor": {
          "ref": "80270048-1bf9-403f-8d71-ff613ec83a42",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f7ee88a2-846a-4212-a6ee-c643a10efb0c"
        },
        "item": {
          "id": "d250bc69-6acb-40f5-a82a-70d701029364",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b859b14f-0e83-4284-a414-aac03021d0b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e34a72-cbfe-423a-ba70-5c3f0f280278",
        "cursor": {
          "ref": "a2c92bed-2591-4bf6-a11d-d142c7b0e0d7",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f195aa53-f943-4eaa-99aa-ab9c8c2ecc8a"
        },
        "item": {
          "id": "03e34a72-cbfe-423a-ba70-5c3f0f280278",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d793d564-4003-4a3e-bc98-da2eb80069d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30698884-8177-430c-a674-d31b9599b036",
        "cursor": {
          "ref": "ad12a507-3548-42d9-b180-a73c9326879a",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6c21567a-de68-4e02-92ba-9a9dcd4f53f9"
        },
        "item": {
          "id": "30698884-8177-430c-a674-d31b9599b036",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b6273726-9257-4130-a61e-dfeb0137c42e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6353d37-e10c-4537-8588-47a1f3add4bb",
        "cursor": {
          "ref": "c01dfab2-8eb1-4841-a229-ab348712f16e",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "cb0019b6-4ee8-47ae-9f2b-daf13ba5fae7"
        },
        "item": {
          "id": "c6353d37-e10c-4537-8588-47a1f3add4bb",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "7a7295b1-c794-4ec3-a81b-2f72f2deb1dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82fdc24e-9ee3-44c2-992b-4fb69fee2a60",
        "cursor": {
          "ref": "537702f8-4278-4a0b-8d46-67d3a788166e",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c903a6e8-74b1-45f1-ad18-113159096f17"
        },
        "item": {
          "id": "82fdc24e-9ee3-44c2-992b-4fb69fee2a60",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "79349f84-0b31-4b0c-a5f1-8c2371426f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab46b705-1ab8-4f1b-8d5a-b7fbafa13454",
        "cursor": {
          "ref": "b93eb183-39cc-4aeb-93bf-19af5db5d8ff",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "fdb9a3de-9f75-42ee-9e50-e8b829fe2996"
        },
        "item": {
          "id": "ab46b705-1ab8-4f1b-8d5a-b7fbafa13454",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "251e31ce-ed9c-4968-bbbe-f80c45125032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b50b0c-8e33-4a28-b115-5e7698e2670e",
        "cursor": {
          "ref": "0e573868-9aeb-4e49-bdbd-f3d7b422a3af",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "17c9903e-9d72-4cce-9c2b-c02dade12821"
        },
        "item": {
          "id": "95b50b0c-8e33-4a28-b115-5e7698e2670e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ab37e8bb-136a-4f93-9517-4282da05ce65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98cb4f40-3306-4c9b-bf3d-6466757490c6",
        "cursor": {
          "ref": "6985d6d2-d044-4c3a-be23-24a7207f2833",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8fe86983-0610-4ef9-896b-0d40351919d7"
        },
        "item": {
          "id": "98cb4f40-3306-4c9b-bf3d-6466757490c6",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "327d3d27-fe3b-48e5-add9-ffa020966d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ededd5-fc62-4002-952e-7da1ff837744",
        "cursor": {
          "ref": "f8e9b6a8-6c0d-4189-8d77-efec3e89b9a0",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "3c9a3008-f417-44b5-a486-b7785beb4ad4"
        },
        "item": {
          "id": "44ededd5-fc62-4002-952e-7da1ff837744",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "dfbcb4f3-b386-40d8-873b-fd468df41cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4077df8-56e6-4cd3-93c3-309c51309538",
        "cursor": {
          "ref": "0fbe76cf-2c9f-4ff6-b856-8f5b2f8baa48",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "478e65a0-238e-4a67-a204-84825c965798"
        },
        "item": {
          "id": "c4077df8-56e6-4cd3-93c3-309c51309538",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0f07ac72-0838-423e-b453-564b77a19e67",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9baab8a3-1b53-47e7-95d5-aaad74d8feae",
        "cursor": {
          "ref": "6c4d00bd-693c-43ca-8d08-0740d6f783a2",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f5f6b050-6e05-4932-9b10-d3eb128e1893"
        },
        "item": {
          "id": "9baab8a3-1b53-47e7-95d5-aaad74d8feae",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "0019cbaf-dbc7-44b0-82a4-1b53f06653a5",
          "status": "Created",
          "code": 201,
          "responseTime": 114,
          "responseSize": 918
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb683a91-1985-41dc-9057-51977016757c",
        "cursor": {
          "ref": "f95e29aa-a67d-4b74-af60-63dd8cd2ff93",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a80c5cfe-b689-4617-95fd-0517ac84cbf5"
        },
        "item": {
          "id": "fb683a91-1985-41dc-9057-51977016757c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "2b53f4e4-a975-40eb-a335-130c03b4973c",
          "status": "Created",
          "code": 201,
          "responseTime": 260,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ba7920-3f9c-4a83-ae73-bfb2fddfbda1",
        "cursor": {
          "ref": "e5d7d08b-c510-4612-b502-1801cf62e615",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "005a47f3-8b6e-4b68-b755-c8311bfdd393"
        },
        "item": {
          "id": "17ba7920-3f9c-4a83-ae73-bfb2fddfbda1",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "98d29d55-f80c-40cd-9232-a7afa924bf33",
          "status": "Created",
          "code": 201,
          "responseTime": 103,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f77814c-1385-46ea-b9ef-11b386668ff9",
        "cursor": {
          "ref": "6837787e-d6f1-4119-bae8-363c5dc6a12c",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "7344ab25-f8b7-453b-91b5-498427fcbd28"
        },
        "item": {
          "id": "7f77814c-1385-46ea-b9ef-11b386668ff9",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a465aec7-6bc4-4d33-b2f8-9f17a75fb597",
          "status": "Created",
          "code": 201,
          "responseTime": 92,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "82997b88-2e17-4a72-b39f-0e5f2d0744ee",
        "cursor": {
          "ref": "7a4d76e4-775e-4792-8fec-83c1fc3ba5f5",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "296f5193-e751-411d-b574-bd9e916c384e"
        },
        "item": {
          "id": "82997b88-2e17-4a72-b39f-0e5f2d0744ee",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "478d32ff-dbab-4e12-9650-bf24ff3e3f9e",
          "status": "Created",
          "code": 201,
          "responseTime": 98,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b1765f-4788-478c-a1bd-4d3972dcbf1a",
        "cursor": {
          "ref": "b20b6e64-d9df-419f-934f-4090f13b13f2",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7170264c-c1d1-40c5-b031-8a506d8c12a1"
        },
        "item": {
          "id": "78b1765f-4788-478c-a1bd-4d3972dcbf1a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "78adeab3-97e7-42e2-8696-b88edbde332b",
          "status": "Created",
          "code": 201,
          "responseTime": 91,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4731159-c57e-4d26-8e55-f4e0cd537d01",
        "cursor": {
          "ref": "cdc64d46-0874-4c09-9827-965df229a67c",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "4551642b-f00e-4b33-9deb-814acbaefc8d"
        },
        "item": {
          "id": "e4731159-c57e-4d26-8e55-f4e0cd537d01",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "cfc0417a-571e-42cf-a9ad-8d2b2c0b83b3",
          "status": "Created",
          "code": 201,
          "responseTime": 91,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff77065-1f43-4c07-a1de-d141abd82abe",
        "cursor": {
          "ref": "c7fa1bc2-1a60-457f-8d2f-19b5b2f8b792",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "71bbc9c7-f712-4fb3-a24c-aa8a6dcb6fdd"
        },
        "item": {
          "id": "4ff77065-1f43-4c07-a1de-d141abd82abe",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "94a8ad28-d89a-45f4-bfdc-a89be11facf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "693bbc40-a6ee-4ef2-b4e0-dea2994c2ae2",
        "cursor": {
          "ref": "0a39c83d-fd4c-4a5b-acc3-8c862376e819",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "fae26147-1029-46e5-b858-332446165fd3"
        },
        "item": {
          "id": "693bbc40-a6ee-4ef2-b4e0-dea2994c2ae2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3e784013-ac99-4e50-a6bb-3587f905ec42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e179629a-8128-4644-ab39-a4bf6d68be32",
        "cursor": {
          "ref": "dbd2a8f5-3855-4933-9d80-cf3581a4c1bc",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "184d7060-f885-431c-b4d0-dccd80ceca9c"
        },
        "item": {
          "id": "e179629a-8128-4644-ab39-a4bf6d68be32",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d05f5524-c85b-4461-a124-3971233e8a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0255368-3f25-438c-9172-4115f531867b",
        "cursor": {
          "ref": "8f935e27-3625-4507-8bd5-e86f6cef3ce5",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "2ebf61c1-d6bf-4306-a3eb-b90ad9a18978"
        },
        "item": {
          "id": "f0255368-3f25-438c-9172-4115f531867b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e5d7a61b-7f94-464a-8aac-b5f03e137822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e065d42c-59a8-40ad-ac86-1a2da0b63637",
        "cursor": {
          "ref": "4629b59f-8312-486e-98b1-7a174ad99675",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e1fc46e0-a0fb-4a80-82d6-88ca11ff50bb"
        },
        "item": {
          "id": "e065d42c-59a8-40ad-ac86-1a2da0b63637",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "08238e53-1017-4eb9-90e8-2006770ca520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7428f5e-2b51-4641-82d6-004b137e1f1f",
        "cursor": {
          "ref": "488f04b7-f459-4226-a579-f04322c81ca9",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "798add42-f396-4ca9-9253-9bbe7dbd78e2"
        },
        "item": {
          "id": "f7428f5e-2b51-4641-82d6-004b137e1f1f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a82b30eb-5153-413f-8aa9-3b1aeffc49f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89cdb129-0cf0-4505-b15d-c52cea01698a",
        "cursor": {
          "ref": "6d42ed51-fe75-4225-b38b-5202c8168c5b",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "43f5ec2c-a5e0-4823-bd97-6f864a0a9369"
        },
        "item": {
          "id": "89cdb129-0cf0-4505-b15d-c52cea01698a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "64cdf393-c141-4528-8eb1-ecd9999b9701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9fad063-35e0-4cfb-92e5-ddd5857750e0",
        "cursor": {
          "ref": "6b29b31b-9357-420d-9c82-a4218dce975f",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "23a209b9-4bd7-42e1-a7c7-579d973fda25"
        },
        "item": {
          "id": "f9fad063-35e0-4cfb-92e5-ddd5857750e0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "62a472ec-52fb-415c-b054-d125ab631161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65cf88bd-1634-4f61-ac21-a2fce0fd0729",
        "cursor": {
          "ref": "e0174c7a-fc3a-4708-84a7-df81997b63ac",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "acd529e0-16ed-42b3-bc35-739b904db9ef"
        },
        "item": {
          "id": "65cf88bd-1634-4f61-ac21-a2fce0fd0729",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a250d958-93c6-430e-978d-aaad72e592c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c66a7f4-798a-4aa4-a4ed-d0f3fb24273a",
        "cursor": {
          "ref": "d9da7083-5299-4aed-bdbd-25a077bf33c7",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "4281531c-f218-436c-b22f-59a5f3863beb"
        },
        "item": {
          "id": "6c66a7f4-798a-4aa4-a4ed-d0f3fb24273a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f061b5e6-180a-452c-a97e-f8b34014d440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e84fce-2f17-474d-b27d-63f71f12b5b1",
        "cursor": {
          "ref": "a6d9b7ff-4a45-4060-ad27-9aa911a85f53",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "49449458-d363-41ad-b9de-d963e295ed9d"
        },
        "item": {
          "id": "52e84fce-2f17-474d-b27d-63f71f12b5b1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "baa842d3-43ad-4e48-9e44-4cae6786fccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b53a3d0-ef8d-4fad-899f-106c3affcc4f",
        "cursor": {
          "ref": "d281d96c-f87b-44e2-84a3-f43f19de9e76",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "448cce96-8aa2-48ce-8232-2635ff9d40e8"
        },
        "item": {
          "id": "4b53a3d0-ef8d-4fad-899f-106c3affcc4f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8120d106-8792-497f-bbe1-1d402975c75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "466b7c14-8845-417d-add4-fc450a43af6a",
        "cursor": {
          "ref": "9c2f0a70-250b-4c8a-b805-1688c664ea4c",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "63b334d8-39e0-4ac8-b97b-c93e40bb802b"
        },
        "item": {
          "id": "466b7c14-8845-417d-add4-fc450a43af6a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a167d7cb-b63f-4b64-bc28-337a055e0812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60919f8-b55a-401d-84c4-adc7a9bca0a9",
        "cursor": {
          "ref": "26c8bb67-9f94-45db-9c62-ade2a08d7571",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e0b7b1f9-bcc6-417d-9b71-e4fbf0fcef38"
        },
        "item": {
          "id": "d60919f8-b55a-401d-84c4-adc7a9bca0a9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "36d21d55-6afe-47f1-b606-04a0e7662a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8825a808-8854-46b8-80cf-e04884c21608",
        "cursor": {
          "ref": "3d31ae23-e920-4df8-ac8b-36233010b45b",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "cf5003c3-78d1-4347-b7df-cf4ef23f402b"
        },
        "item": {
          "id": "8825a808-8854-46b8-80cf-e04884c21608",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "61a2178b-236b-461e-a6db-c97e69ba1607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffaebc27-07b3-41a8-981f-f9f8545c5374",
        "cursor": {
          "ref": "5a09e5a2-823d-4582-b9da-98df655ce372",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c9054985-5fc2-42c3-ba32-be105e4cb562"
        },
        "item": {
          "id": "ffaebc27-07b3-41a8-981f-f9f8545c5374",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "abece344-9277-45c1-93d8-f549a1bbb1c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b98ef1-1721-4e2a-aa58-c08a8865bc40",
        "cursor": {
          "ref": "56bc3523-5ce6-49cf-b32b-c1b93577e7a8",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "fa4cfca5-37d2-452d-bc0e-7af3bc581325"
        },
        "item": {
          "id": "a8b98ef1-1721-4e2a-aa58-c08a8865bc40",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "faa11f1b-2406-4012-8ba7-3cc9234f1928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7469996e-81c7-4e83-a276-d50b55d9d070",
        "cursor": {
          "ref": "b34bae84-1370-4025-90e6-a9ac751ae48d",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "531d5098-f443-4a2a-9d3a-2d0c8f2a216b"
        },
        "item": {
          "id": "7469996e-81c7-4e83-a276-d50b55d9d070",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6b94352d-3eee-4b65-bc87-ce904ff84166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6206bdd-82fe-46b3-8322-edcc47357413",
        "cursor": {
          "ref": "0c71acd4-3548-4f6a-8c40-21eb324480ff",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "4c4f55be-99f6-4377-8bc7-5f9f0493ac54"
        },
        "item": {
          "id": "d6206bdd-82fe-46b3-8322-edcc47357413",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "97861b8b-869c-4ecb-9820-4f0af0d42cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a016d3-86d8-404a-a217-d476bfb2f12b",
        "cursor": {
          "ref": "9148a867-c07b-4d71-ba65-335cbcf292a9",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "9b7a40dc-a4b3-4fe4-aa34-dbddefd8ec46"
        },
        "item": {
          "id": "87a016d3-86d8-404a-a217-d476bfb2f12b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0e48bbb3-09c8-4d47-960a-c444400b81d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967da566-e1ce-4dc5-90bc-c376691d34e0",
        "cursor": {
          "ref": "cd4e1650-68f2-4948-b3e4-a7a323a510fe",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3ea82b28-e371-4107-bdb6-6a50ef8df783"
        },
        "item": {
          "id": "967da566-e1ce-4dc5-90bc-c376691d34e0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "75ee41ed-8514-4b04-95cf-410b12f7eecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d36b7ca-dfb6-4a0b-85f7-97d36f51bc73",
        "cursor": {
          "ref": "49f9d41b-4a80-4495-b932-9cdf598c497a",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "accc6323-eae0-4435-8829-60a1751e63db"
        },
        "item": {
          "id": "0d36b7ca-dfb6-4a0b-85f7-97d36f51bc73",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9e7bb262-1aa7-4c37-9c22-733e0adb35b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13bc8b1-b889-4242-920d-34ce7e79846d",
        "cursor": {
          "ref": "772e366e-5f99-452f-ace8-b83a9dbc83f9",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c6cb4b0e-a641-4fc2-ae37-494b1cab3d31"
        },
        "item": {
          "id": "a13bc8b1-b889-4242-920d-34ce7e79846d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f9355a53-2a4b-4474-afec-6b44a501fcf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b25471a-349d-4ba1-ad26-faa5baa815db",
        "cursor": {
          "ref": "6830e5c6-881d-45eb-8cf1-5884c1993e89",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "888cc39c-5376-4911-8930-bd4c11806130"
        },
        "item": {
          "id": "9b25471a-349d-4ba1-ad26-faa5baa815db",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ed74efd8-d335-4142-915c-d8c72df0934b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6adb60cb-1234-428e-adab-d24dddade21b",
        "cursor": {
          "ref": "c1e8ba02-7b42-41c5-a7cf-96738022eb8d",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "4736c20b-2519-4b02-b816-999ae9136b71"
        },
        "item": {
          "id": "6adb60cb-1234-428e-adab-d24dddade21b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a21d03f9-abb4-4b4c-9b13-42a6afdc8204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83097e91-aad3-4c95-aecc-e5104714b610",
        "cursor": {
          "ref": "93641c9c-fecc-4e0a-b371-e030c0857642",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d0cd458b-4286-41f0-9835-4043f5a5c9d2"
        },
        "item": {
          "id": "83097e91-aad3-4c95-aecc-e5104714b610",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c995de52-1854-4268-9836-99a81c79b863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5410a467-ca82-43a7-a8fa-d080e538d688",
        "cursor": {
          "ref": "cd1d6741-c766-4a76-9a59-a6cf135f0cb9",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "7994e8f0-0a7f-46db-b27b-f59c00ffd58b"
        },
        "item": {
          "id": "5410a467-ca82-43a7-a8fa-d080e538d688",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1e3a0511-7531-46eb-9c09-da108ac1d858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e6e55b-71e4-4b75-8250-1ce2cc1eee29",
        "cursor": {
          "ref": "fd42f6d6-a446-4bba-abb3-c97e21eb280e",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "cf11a974-fa1f-481d-8a95-342cead4336c"
        },
        "item": {
          "id": "98e6e55b-71e4-4b75-8250-1ce2cc1eee29",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "96b3dc5e-c77d-4a27-9f6c-719ca368ade5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3692b4f5-5a5b-42ad-b7a9-d943a656a40e",
        "cursor": {
          "ref": "021bf572-8f4d-415d-8827-ebc9405d0852",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "44e9c8a1-a715-4f40-ae53-6b7f2691542c"
        },
        "item": {
          "id": "3692b4f5-5a5b-42ad-b7a9-d943a656a40e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8ccfc4cc-0a19-430c-90bc-db3ddb56a056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b2c065d-c466-4e1a-8ccd-6c20c274ecce",
        "cursor": {
          "ref": "df2de311-42c0-44e5-9dbe-210421501845",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9e163bd7-01b5-4cb6-8597-e1856f1636c0"
        },
        "item": {
          "id": "1b2c065d-c466-4e1a-8ccd-6c20c274ecce",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "40143f6b-64b0-4991-9e2c-d302d05c78b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe859f02-0693-45d3-8d66-e5cdf7c00232",
        "cursor": {
          "ref": "1240ea2c-ab8f-4ede-807d-7501bb55e29b",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6af263ad-4553-4851-9d63-6b5e875737ae"
        },
        "item": {
          "id": "fe859f02-0693-45d3-8d66-e5cdf7c00232",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2e3cf2c1-a04e-436a-89e3-67d1efef3af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b326b121-9abf-41b4-ae4d-cff414251c20",
        "cursor": {
          "ref": "cc79539f-7d37-47c0-8f25-786ab6f7fd3d",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5285d269-eed3-431f-b644-cb9e90cb2afe"
        },
        "item": {
          "id": "b326b121-9abf-41b4-ae4d-cff414251c20",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "058758ff-bcd1-41f2-9c30-8ea133c10360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf01d12-2a60-4972-ae59-3a8f72e9116e",
        "cursor": {
          "ref": "5fa72bc0-adfe-47c2-ad53-1fa0499910ee",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3228b56e-1f55-4cf2-a369-48448120ac1c"
        },
        "item": {
          "id": "4cf01d12-2a60-4972-ae59-3a8f72e9116e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "66bd1d8e-1137-4d56-be7a-c3c8cbf9c3ee",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5873bc65-e747-4f9c-85e7-989d2db4b654",
        "cursor": {
          "ref": "e96433a7-c593-4d18-80aa-1befe763976f",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "74bec765-4e45-413d-8742-d6830bc771f9"
        },
        "item": {
          "id": "5873bc65-e747-4f9c-85e7-989d2db4b654",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "af0fd77f-9660-4fb7-adaf-2b4a9dbc6a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8745700-cd63-4e21-bb6f-5b69476b46af",
        "cursor": {
          "ref": "d6938253-7101-4b2b-bc48-7528ab9c3597",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "95efc0a5-8232-462e-8921-3c662c21b498"
        },
        "item": {
          "id": "a8745700-cd63-4e21-bb6f-5b69476b46af",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8c758c28-16cd-4f66-9b07-c12351d64b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87cbc034-8705-459c-8737-ab1cedcbb12a",
        "cursor": {
          "ref": "27bd27ba-51ec-4781-b1d1-063502359d48",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7ac50c4f-721c-4e1b-9bbc-e67c13ed6edf"
        },
        "item": {
          "id": "87cbc034-8705-459c-8737-ab1cedcbb12a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f476c67f-c5d0-43c0-929f-3220940721c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22977793-7a2b-4212-be19-77e75d8737ce",
        "cursor": {
          "ref": "fa71dc3a-bcef-4c9f-a80f-2f9273ce62a2",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "025a9e39-093b-4005-b956-3152d2c748a7"
        },
        "item": {
          "id": "22977793-7a2b-4212-be19-77e75d8737ce",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4fea7f41-37b5-4331-89c5-153843ff394d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533e3def-7c2e-4665-9493-103d44e75a50",
        "cursor": {
          "ref": "b6a0bcf0-2ff2-4a81-a942-fdc636418515",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "67ab548e-740a-487c-85fb-6cbdcc8c9446"
        },
        "item": {
          "id": "533e3def-7c2e-4665-9493-103d44e75a50",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fdc9268f-9410-4206-aee9-de9d2036aeab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b543e75-5349-455d-995e-37ab89738fe4",
        "cursor": {
          "ref": "db4f6207-dd5b-4e90-b679-0e6e96735976",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "1b7e6b5e-d8da-4ba2-9bf9-10110ac802fe"
        },
        "item": {
          "id": "2b543e75-5349-455d-995e-37ab89738fe4",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d9e383be-6d01-46ab-83d7-90b9ccacaed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d2cdc5-0169-4cd4-9fd6-40efcbe249a5",
        "cursor": {
          "ref": "f77fef55-d71b-4b7d-9ebe-32c24e9c4c26",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7a616107-8c58-4afe-9276-43df09c7a897"
        },
        "item": {
          "id": "16d2cdc5-0169-4cd4-9fd6-40efcbe249a5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8a2e2ecc-b9dc-47ee-aa38-cdb68e45d096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e29aa3-f15e-45b8-9504-8f71cedd6afc",
        "cursor": {
          "ref": "cba3711b-37be-4456-a191-65040b92cfae",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f3cac95d-dec4-4281-ad85-96049b88b433"
        },
        "item": {
          "id": "c6e29aa3-f15e-45b8-9504-8f71cedd6afc",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6e515140-a150-46e7-a970-a748ef230a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bfb7c27-76f7-4835-829b-5d4b6f083500",
        "cursor": {
          "ref": "fa0ce9fc-b432-41a2-b990-6a9e9bbd6e1f",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ae5532e5-06b7-49a3-882c-6fb81b43b56b"
        },
        "item": {
          "id": "6bfb7c27-76f7-4835-829b-5d4b6f083500",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ba82c824-49f0-476a-a983-cf1fa4f9b2b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83adb49b-610f-4122-9a57-e02b8c60f6bf",
        "cursor": {
          "ref": "896b4a0d-6d03-4d70-8fa7-3c82f06ef725",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "702f9e0b-6400-4792-9f49-4405b3081e48"
        },
        "item": {
          "id": "83adb49b-610f-4122-9a57-e02b8c60f6bf",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "57ca4b5b-acfb-49f7-ae7b-937d1c555bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4045a03-b050-4ab1-a3d4-64ba73ca1661",
        "cursor": {
          "ref": "03f2d440-d14e-4f9c-8948-15ede4635876",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "47f66c7c-43c5-4253-b9e9-2bb82a59b6de"
        },
        "item": {
          "id": "e4045a03-b050-4ab1-a3d4-64ba73ca1661",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5e0fea21-5eab-4ef6-a2eb-e22afe9c51a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748f2be9-d87c-4cf6-9b2a-87039348beca",
        "cursor": {
          "ref": "2a0f3ebe-b862-4b12-a84c-8823182ae577",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "bb7af83b-129f-428c-a875-31c98cd3928d"
        },
        "item": {
          "id": "748f2be9-d87c-4cf6-9b2a-87039348beca",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "10125e95-3073-44ac-90c6-ad66b0c49317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "790f92c1-1fad-4ebb-9cef-bebd318be1c4",
        "cursor": {
          "ref": "35c62838-2c9a-4837-8dfa-6839f80d7d92",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "cf57459c-46a3-4e8c-98b9-c4c5bb83e3f5"
        },
        "item": {
          "id": "790f92c1-1fad-4ebb-9cef-bebd318be1c4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "27b35f9b-70a7-4e80-88f9-d9dd8b657777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55aaef1d-51d7-4077-a3dd-4f64c01c710f",
        "cursor": {
          "ref": "e046cb9a-84b8-4012-adac-55234c5c2d71",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d57c6fb9-7fed-4556-8291-20fd4806633f"
        },
        "item": {
          "id": "55aaef1d-51d7-4077-a3dd-4f64c01c710f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6a850fc4-fa8a-405f-aa87-860b063abccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "704316ad-877d-434e-a133-1288746a6d71",
        "cursor": {
          "ref": "9fc9b828-4b5d-4486-9a04-7efbc95d43a3",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4c4f8d35-b32f-4a60-a6c8-353a8611ca1d"
        },
        "item": {
          "id": "704316ad-877d-434e-a133-1288746a6d71",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c51e39ef-97eb-44e3-b82e-7daa51f8669f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e063ef4-febf-4f0d-800b-c32ab0e2686a",
        "cursor": {
          "ref": "dda8921c-8bdc-475a-8914-9fc636b6252f",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "74778764-6cd8-4efc-af4b-dcd1c5feb683"
        },
        "item": {
          "id": "5e063ef4-febf-4f0d-800b-c32ab0e2686a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "efcf0275-a2fd-4284-8249-92f9dac9d426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e224212-b612-43a7-82aa-d0785599447f",
        "cursor": {
          "ref": "17830607-58c5-4afa-80e0-56d7b36a4656",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3b5e9331-7c2b-407d-bbbd-567cb19d7388"
        },
        "item": {
          "id": "5e224212-b612-43a7-82aa-d0785599447f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0a41155b-f973-4826-b2bd-0deb47792d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e8e869-cd2f-484d-bc0e-bcb01f0df313",
        "cursor": {
          "ref": "9a65aee2-31b1-4262-a3ff-9db5855f6200",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "43ff623d-47b6-49fa-b051-6d3b703adff4"
        },
        "item": {
          "id": "75e8e869-cd2f-484d-bc0e-bcb01f0df313",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "187a8d7c-c82e-4724-ad27-791e5414c75a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432a5e13-16a6-49d7-b992-9cfbb8d5dc0b",
        "cursor": {
          "ref": "8148cb30-c43d-442c-bb71-abbc9947ca35",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "97e2e2fd-d877-424b-9036-a1f8f98bba51"
        },
        "item": {
          "id": "432a5e13-16a6-49d7-b992-9cfbb8d5dc0b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "cab057c4-d14f-457a-8cce-3e6575f08bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b2c2d3-7a3a-4717-bdb3-00159ec99ad6",
        "cursor": {
          "ref": "8324a029-54bf-43c2-bc48-1595d75a6793",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7bb520cf-b1e8-4b62-83f2-890e524d9bd4"
        },
        "item": {
          "id": "d5b2c2d3-7a3a-4717-bdb3-00159ec99ad6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d84e9003-5f80-4a18-85f4-f3239984ea35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475fbfd4-feab-4f9b-94e9-96502770350f",
        "cursor": {
          "ref": "cd2af8e4-57d8-4634-b0b4-ffba46e7398f",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1b32b7ac-0755-4103-9cd0-9848692ab065"
        },
        "item": {
          "id": "475fbfd4-feab-4f9b-94e9-96502770350f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f052c77b-5318-4e59-9573-9c438581b2b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62589e9b-31bc-4b34-9aa3-aef46130661a",
        "cursor": {
          "ref": "675304ea-6820-4f7c-ac9e-54b8aa36266e",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7f1d8c20-6908-488a-a4be-7634ebf12aab"
        },
        "item": {
          "id": "62589e9b-31bc-4b34-9aa3-aef46130661a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "cd3e6be4-5d6e-445e-ace5-d4c3b059d2d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e0798f-bdb4-4808-bf0a-078da5506e98",
        "cursor": {
          "ref": "24d1e611-49c9-48b2-be4a-864ed1025df4",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6ab7a3f3-efa7-4206-92c9-d946c3157ef8"
        },
        "item": {
          "id": "94e0798f-bdb4-4808-bf0a-078da5506e98",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6d178b67-f2f1-4d32-ad60-c75064002fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c1488c-db8f-40f9-aeaf-263d0e34ad5f",
        "cursor": {
          "ref": "96ed620e-17c6-4f79-9d56-b2099f8b79a5",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "afc3b7a2-2b96-4549-9bde-5781dc72dbcf"
        },
        "item": {
          "id": "88c1488c-db8f-40f9-aeaf-263d0e34ad5f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "03938fe1-e568-4498-9176-9463efeb4c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bed976f-9f16-4ed3-93bc-aa14ba965ccd",
        "cursor": {
          "ref": "a1e9740c-362c-4461-b842-2137ee4b5509",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3e31f1c3-82ab-4a25-9d22-b5df66ff48c9"
        },
        "item": {
          "id": "7bed976f-9f16-4ed3-93bc-aa14ba965ccd",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e71cf6fd-11bd-42aa-b67e-7b8b4c94018c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab9fea05-f52f-455e-a78e-a7fee7d74ddd",
        "cursor": {
          "ref": "ed3998d9-0e90-4640-a7dc-e66d3c83b99a",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d3b5c246-c692-48a6-9637-6637ddda1da0"
        },
        "item": {
          "id": "ab9fea05-f52f-455e-a78e-a7fee7d74ddd",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4112853c-14b0-4acb-ad57-d69de56a40eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c73ff8-8e36-4f26-83ea-0b5d5e3ca3cf",
        "cursor": {
          "ref": "187b12a4-eba8-4ad1-b8e3-b0ea5992224a",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ff5da6df-fac8-4b85-baa0-373f453bb678"
        },
        "item": {
          "id": "58c73ff8-8e36-4f26-83ea-0b5d5e3ca3cf",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7e6631ab-ca85-49ce-8423-47d02995b551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae015360-c6d1-4bac-ae9e-6e305a01a2dc",
        "cursor": {
          "ref": "98ab1779-e821-4fef-8332-ddc5c4bc8b2c",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a8b9c63c-2356-425c-b811-92a580ff9648"
        },
        "item": {
          "id": "ae015360-c6d1-4bac-ae9e-6e305a01a2dc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "dd8777f2-9f4e-432a-bae0-8a8ca4a31fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7582cb69-b908-4f83-b817-65926841f153",
        "cursor": {
          "ref": "cb5350bc-40fc-43dc-8c4c-262ffa0c7e70",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "cb3beb44-8220-4d07-843e-d73163a6d631"
        },
        "item": {
          "id": "7582cb69-b908-4f83-b817-65926841f153",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "983b02d7-63a9-4079-bd2f-7836b6eb68f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4635036f-57c7-4cd5-8d38-49353a5b666f",
        "cursor": {
          "ref": "a2eb57d5-5764-483b-af78-e231dba589a3",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e9286cdb-0d53-481e-8cea-4e9b50c79dc6"
        },
        "item": {
          "id": "4635036f-57c7-4cd5-8d38-49353a5b666f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5bd3862a-3bc5-49ef-b7eb-1d82637f0eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998f27d9-3f72-451b-b814-35d983172c4e",
        "cursor": {
          "ref": "9cdb4516-fb44-411d-a845-4ff5a0da9672",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "80155d42-939d-4cb3-9817-1125e27b4a68"
        },
        "item": {
          "id": "998f27d9-3f72-451b-b814-35d983172c4e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "baa03f81-86c8-401f-a4c0-3c6f83b4b754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43a12a4-ba3a-44a1-91ea-a4710208840d",
        "cursor": {
          "ref": "c00bd593-b650-4ca9-b216-4706c945e714",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d8d65575-eb74-43ee-ad10-817ef1f35de3"
        },
        "item": {
          "id": "c43a12a4-ba3a-44a1-91ea-a4710208840d",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "dd3efc55-ea94-4998-a863-f34ca068faf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802ae8c0-f5b3-405c-b362-ad19fcc3ee58",
        "cursor": {
          "ref": "ba3f96ed-6613-4efb-8105-f215d681ef4c",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "1f43f03e-e513-4971-b96a-1a91986ba585"
        },
        "item": {
          "id": "802ae8c0-f5b3-405c-b362-ad19fcc3ee58",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "0fde43c7-3904-43fb-ac65-8d193af14177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ae6eb5-16f8-4045-84f4-202f0991b94f",
        "cursor": {
          "ref": "3c97b504-2168-4cc1-b92d-277cae449992",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "13c9438c-eb67-4e44-bbb6-2c31c43ca59f"
        },
        "item": {
          "id": "b1ae6eb5-16f8-4045-84f4-202f0991b94f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "b6e73feb-1bb3-4043-814a-89864c3972fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe07ef2-aff8-42e6-9ca5-bb1bac5e834c",
        "cursor": {
          "ref": "fc3e5a3e-b0c8-4b62-b259-cec48b293703",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "63e8758c-9fc8-490e-b073-8a217dd57b70"
        },
        "item": {
          "id": "abe07ef2-aff8-42e6-9ca5-bb1bac5e834c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "6151ea83-844f-4a60-95ab-084ca7414788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267868f3-c0be-44fb-b6c7-5ecf4888a973",
        "cursor": {
          "ref": "2957768a-a11c-489f-9e09-feb4936f804f",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "8fe773a5-d7bc-4df5-9b6b-d4bfeb598e4b"
        },
        "item": {
          "id": "267868f3-c0be-44fb-b6c7-5ecf4888a973",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e0812fb5-55c3-443f-bde9-b23415b9e7c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8592c753-af04-4243-87ba-81d6bb8e1b1f",
        "cursor": {
          "ref": "85e1ddcd-fa25-4068-9300-1c6244bc6155",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "05dd06ad-9e68-4109-9199-7ba9f32c8954"
        },
        "item": {
          "id": "8592c753-af04-4243-87ba-81d6bb8e1b1f",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "75a81ade-5975-4133-b251-b68facb80cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b301477f-db49-4905-9188-78f4b77c3379",
        "cursor": {
          "ref": "968a0173-1e69-4ca7-9dd4-93b99e659b5a",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8f0a2b90-c329-4cf2-bdba-b19d488f031e"
        },
        "item": {
          "id": "b301477f-db49-4905-9188-78f4b77c3379",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "52c592b2-50d5-4840-8162-671f4865754f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c2b56f-6dd9-4d76-a5bd-d466838d68b7",
        "cursor": {
          "ref": "d63221eb-dd87-48e2-821b-cf2c1e69828a",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "688122db-e8d9-4e1e-bcf3-67626ad4ed1c"
        },
        "item": {
          "id": "c4c2b56f-6dd9-4d76-a5bd-d466838d68b7",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "603420d3-154c-4a74-ad87-5d319363b998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff314ab-c953-4ed8-885b-6b8e78572da5",
        "cursor": {
          "ref": "1fd41687-ba44-4b9a-af75-68dcfc48c018",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "fb7bbd80-cf2d-4605-ab02-a95fc9d845bc"
        },
        "item": {
          "id": "eff314ab-c953-4ed8-885b-6b8e78572da5",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f9ccdfd8-6854-4086-a932-fed2d621c044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9aec990-0126-409b-b72b-2359194378cc",
        "cursor": {
          "ref": "8d49c983-251f-4d61-8c70-041a0d09dc42",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "4e1b6aa3-c6e0-44fd-8948-a21d3f131b68"
        },
        "item": {
          "id": "c9aec990-0126-409b-b72b-2359194378cc",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c287d4f1-be50-4c01-8bd5-196afd3103f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da0534a-46ff-4289-a3c5-205111aaca9d",
        "cursor": {
          "ref": "3f3c4827-4e13-4f55-9664-25c1f823314b",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "0c53c557-9ffe-4513-9513-a42af000d617"
        },
        "item": {
          "id": "3da0534a-46ff-4289-a3c5-205111aaca9d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2f7ba3e1-11ba-4752-9048-54419dbc2bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be7668f-cb28-40bd-961d-bb770008f34a",
        "cursor": {
          "ref": "f869d365-d42c-4643-a3ff-06598d8f06fc",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d4f00139-d996-49ae-a1c1-571da3a7be2b"
        },
        "item": {
          "id": "4be7668f-cb28-40bd-961d-bb770008f34a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "513020d9-2b6a-4b48-9f5e-8652e04b97d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dfb931e-f507-4a61-9260-4921c14ba47a",
        "cursor": {
          "ref": "9b4d989d-02b9-4b20-a65b-ef27c4d2978d",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f4f93038-413c-49ec-a0a4-6b364786c9b6"
        },
        "item": {
          "id": "7dfb931e-f507-4a61-9260-4921c14ba47a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "0bdf76f5-d972-4060-bd70-ae6fb19e4533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa2389dc-e144-45f3-ac5c-df223253a67f",
        "cursor": {
          "ref": "2b59e6c4-2953-4b64-97ea-8b4741fb19ec",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0a1cc993-a9aa-4614-8ac3-03013264d07d"
        },
        "item": {
          "id": "fa2389dc-e144-45f3-ac5c-df223253a67f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "73cadcbf-49c1-4141-ab5a-536638974fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01dc5150-18b6-4c0d-a05d-a2be285a07a3",
        "cursor": {
          "ref": "ce2d7f69-19ed-4286-8d1d-f8db9fdac393",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "64acf461-b86d-49ec-a043-9d17de7217ab"
        },
        "item": {
          "id": "01dc5150-18b6-4c0d-a05d-a2be285a07a3",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ceff165f-d976-4537-9bdf-466a4ee40cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f439dc63-2ae2-494e-963e-c15661fcb0a2",
        "cursor": {
          "ref": "b07037db-282e-4439-af29-23c7d28adcef",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0e411eab-6965-4581-acf1-3bdf2a0237c2"
        },
        "item": {
          "id": "f439dc63-2ae2-494e-963e-c15661fcb0a2",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "2bbeed69-b646-45c8-8a00-747872783cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5300a87f-b7e9-490a-9f49-0b4157c9bc81",
        "cursor": {
          "ref": "01aa2375-ded1-4795-9071-5aba8a95faf4",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "949d1096-757d-47cd-8ad2-8171866f077f"
        },
        "item": {
          "id": "5300a87f-b7e9-490a-9f49-0b4157c9bc81",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d44e5583-050d-4b0b-922d-a8bd95cd229f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e8f1f9a-9de8-4384-b4d3-b180dea63c41",
        "cursor": {
          "ref": "91ddca40-7236-426c-9151-b045731998d8",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "fcb46534-6726-4386-8d82-161c7f023e07"
        },
        "item": {
          "id": "4e8f1f9a-9de8-4384-b4d3-b180dea63c41",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "42d5f194-7ec2-4735-973b-8fe1215b5b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46a3faf-bb59-4497-a953-07327e5f8c1f",
        "cursor": {
          "ref": "e855455f-0f58-4942-864e-49d277797a90",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "5c2e5383-1073-4156-adda-eed6807663ef"
        },
        "item": {
          "id": "d46a3faf-bb59-4497-a953-07327e5f8c1f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b125d5ff-0405-4045-9867-18ed45266438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f195b5ef-6166-45d8-9558-f610414978c9",
        "cursor": {
          "ref": "d06e4e86-cca5-40ec-838b-0c10bcc0f27c",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "bb2d60c1-31f7-4099-a42c-1123da187107"
        },
        "item": {
          "id": "f195b5ef-6166-45d8-9558-f610414978c9",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "af740a78-e8ba-45fb-93a9-4f90aaa46e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4edc0929-6bf3-44d8-a24b-6b3b5380ff18",
        "cursor": {
          "ref": "129431b7-2d8e-4908-ad1b-7818a77a0438",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f51ead4d-08dd-40ee-9e3b-4cf61c5352d6"
        },
        "item": {
          "id": "4edc0929-6bf3-44d8-a24b-6b3b5380ff18",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "25a3b3f2-b485-4102-b332-c3bf44c2da39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65faee7-4087-4c5c-80d3-b4896e575368",
        "cursor": {
          "ref": "a7668ba4-ddbe-4419-8cc8-bbe1ffe35530",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "07e161f2-cbe7-4090-8ec9-721dd92ae353"
        },
        "item": {
          "id": "f65faee7-4087-4c5c-80d3-b4896e575368",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ed18fcb4-2b4d-4f27-ad27-dc182872f700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0cbea06-10de-4526-8974-1b99bbec6246",
        "cursor": {
          "ref": "25a1be99-67c5-4ec5-8e07-ce2c537f9330",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e30203e1-3cfe-44bf-ba3f-f976f7ccd7b7"
        },
        "item": {
          "id": "c0cbea06-10de-4526-8974-1b99bbec6246",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e15518bd-4a20-4fe6-8f46-43b200c399f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb7e630-161d-491f-86e6-8073f419bf2d",
        "cursor": {
          "ref": "f7640884-fec2-46f7-befa-f0fddb878e07",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "46d0a3b1-a281-46af-808d-f7f6922c4ac4"
        },
        "item": {
          "id": "9fb7e630-161d-491f-86e6-8073f419bf2d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "778fb45f-f21c-425b-8adc-a84befebece6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a68475-b42f-4cbc-a486-1d55b7b41847",
        "cursor": {
          "ref": "92d018c8-9582-495b-b30d-adb842189106",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "31f51e35-c2a6-438f-aa4d-6713d90bf79f"
        },
        "item": {
          "id": "04a68475-b42f-4cbc-a486-1d55b7b41847",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "1b462361-d9f4-447b-9d14-fd11f64daea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b62c9e-da00-429f-98f2-49d83d31691f",
        "cursor": {
          "ref": "873a1f64-c67a-41d9-9362-e7983fdc558d",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "da3e65af-0770-4e10-bdde-bb45295b3af3"
        },
        "item": {
          "id": "99b62c9e-da00-429f-98f2-49d83d31691f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "8c8ce475-cb2d-4019-80bb-40ad3beb181d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a6f3c0-c5f0-44c9-bd8f-d6dcf2e2cca5",
        "cursor": {
          "ref": "1feb288b-495f-4f98-9812-5aa998a3b9a9",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "45d8aa02-067d-4e7e-a0bf-0048a1e0002d"
        },
        "item": {
          "id": "d5a6f3c0-c5f0-44c9-bd8f-d6dcf2e2cca5",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "04b8926e-9b67-49a3-9eb5-ed64464bcc50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cef4844-677e-43da-a638-b86e3e58a27c",
        "cursor": {
          "ref": "6cdfe92c-ad7f-45aa-9b58-073a91f82585",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c6eeffa8-0ce5-45c2-88c9-e16f1ef89e7f"
        },
        "item": {
          "id": "6cef4844-677e-43da-a638-b86e3e58a27c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ce96f091-8825-41ef-beea-42488b880f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2881a365-a1a2-4813-b578-75c74941cca8",
        "cursor": {
          "ref": "831ad8f8-cb8d-4d4f-9aed-7bd62b891444",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "116bf0cf-f4a6-45f3-b5a6-ef710da6cd99"
        },
        "item": {
          "id": "2881a365-a1a2-4813-b578-75c74941cca8",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a2ec5a9f-681c-43dc-9031-d5101a867282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b945532e-f837-4f66-89aa-3d04aae18f31",
        "cursor": {
          "ref": "7b5f5791-6020-4164-a83f-7621a2c75e09",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9cfe155a-2460-4d97-9759-447d85902c75"
        },
        "item": {
          "id": "b945532e-f837-4f66-89aa-3d04aae18f31",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1bd70953-f745-41e2-aea8-f8d051dc0e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae42acaa-602d-4529-86c0-b4560962912a",
        "cursor": {
          "ref": "b9568246-aa2f-4573-a066-ef4c910c6898",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "be491768-af5b-4991-9a9f-4abfecb9f147"
        },
        "item": {
          "id": "ae42acaa-602d-4529-86c0-b4560962912a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d8cb316f-a4c8-4886-8396-b1aed35eff62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 210,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "284dd873-3ca9-400c-b58c-6ad8bb386854",
        "cursor": {
          "ref": "0aad595b-42ad-4691-b56c-2cff30821ce1",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7f812c0c-24a4-4b80-8176-de6e2df37735"
        },
        "item": {
          "id": "284dd873-3ca9-400c-b58c-6ad8bb386854",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "05a33d13-0417-470b-9a95-ae1c57efa8b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2357ca-ac60-44bb-8de2-ae52893a3e0c",
        "cursor": {
          "ref": "0607bbc2-177a-4ab2-b1e7-998577a1a430",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "2ee6bdbc-79b2-4009-ab4d-dec17c6d0557"
        },
        "item": {
          "id": "aa2357ca-ac60-44bb-8de2-ae52893a3e0c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "fe4a35ca-29c3-49ee-afbe-95b78e13b608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "392f4e70-cd05-4fa6-910f-bcd1f551b29b",
        "cursor": {
          "ref": "58496bfe-551b-4fe0-b503-8fef97e447b2",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ce0d02e1-ede3-4d2c-bcb0-1e4f26684698"
        },
        "item": {
          "id": "392f4e70-cd05-4fa6-910f-bcd1f551b29b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "7110d93c-f638-47bd-9b8d-c0f2ac2eea80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e89cd09-34c9-43ad-84b0-085797e38daa",
        "cursor": {
          "ref": "c49fbc8b-b822-44eb-894e-a51eae0979c0",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4f540ac9-9a4b-4fc9-8b8e-5064d7c0b82e"
        },
        "item": {
          "id": "1e89cd09-34c9-43ad-84b0-085797e38daa",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "21889357-e31d-4ba5-aac9-7921d5ee97e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31339b29-3158-4d36-9ad6-77e46c99401f",
        "cursor": {
          "ref": "f3feb23b-0da6-4ca0-9e5b-12aa6a13b74a",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "13785b0d-c79d-4531-9533-01e7705cd1be"
        },
        "item": {
          "id": "31339b29-3158-4d36-9ad6-77e46c99401f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "03f3fbdf-0fb6-4158-a312-6a33f636f7fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350315ef-4ecc-4923-bd2f-435f7f35d48c",
        "cursor": {
          "ref": "3f27d1e9-4eb8-4967-8c4d-e5d00c6d1b63",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d410e792-51a4-442e-ad3c-7045885bf390"
        },
        "item": {
          "id": "350315ef-4ecc-4923-bd2f-435f7f35d48c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1a53fff8-e487-4442-b990-5a947484fc69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc209da-2712-4dc0-bc5b-af1a9ef38df4",
        "cursor": {
          "ref": "c94cf42d-ebfd-42a8-9f8c-b9db6e6c93e3",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "5410a63a-6bf8-4f49-89b6-dfb812ca7207"
        },
        "item": {
          "id": "bfc209da-2712-4dc0-bc5b-af1a9ef38df4",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "0609d6f4-5ef9-4d61-85c1-7f4bafba27a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3069233d-9357-423b-9227-5e44ed53bf86",
        "cursor": {
          "ref": "43da0d27-8607-4c73-972f-c40f08c6fb87",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d937f8a1-82ae-4d55-af75-8cba1f85f5eb"
        },
        "item": {
          "id": "3069233d-9357-423b-9227-5e44ed53bf86",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d0cc459d-e069-490f-b094-d9acbf5c2f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ffac170-259e-4b57-bac8-c6c6e2a1b42d",
        "cursor": {
          "ref": "cfece232-3c6d-451a-a574-c2ebd7091ccf",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ffaed4c7-903b-427d-a96a-1fd6178e114c"
        },
        "item": {
          "id": "3ffac170-259e-4b57-bac8-c6c6e2a1b42d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "194ca482-f015-4463-abfa-8206143d548f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba3c8a1-5bf9-447f-ad21-36f543d1cf4f",
        "cursor": {
          "ref": "940b67b1-0a0e-487f-8912-4b725b1efd11",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f3a6580c-e1ea-464f-9917-f288efef951e"
        },
        "item": {
          "id": "aba3c8a1-5bf9-447f-ad21-36f543d1cf4f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b2dfea0e-7a22-487e-b702-7be37da13023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1073f2f6-ed0f-41c9-b258-42ee04c73791",
        "cursor": {
          "ref": "40e073ca-dced-4714-876f-6f27f93e169f",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "41bc018d-873a-4f6c-8341-b016f1a8055a"
        },
        "item": {
          "id": "1073f2f6-ed0f-41c9-b258-42ee04c73791",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3dcb43ca-a72d-49fd-af8f-534284f909c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5935ba6d-d0d1-4276-9ac4-ee5b3e849f8d",
        "cursor": {
          "ref": "7fd44d7b-49ce-4f77-839a-e0a8bafea1ec",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a5b2d90a-da50-4e14-8988-b237375f4f27"
        },
        "item": {
          "id": "5935ba6d-d0d1-4276-9ac4-ee5b3e849f8d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4f667d73-f5de-4950-bdf4-a6281acd820a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc2f5dd-ccb4-4470-8287-f4947e40b411",
        "cursor": {
          "ref": "3ef98924-683b-47b2-8c03-2e586d753a8f",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3ca85ef1-f0fe-4152-b9d7-8563b7dd46de"
        },
        "item": {
          "id": "7dc2f5dd-ccb4-4470-8287-f4947e40b411",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "68836020-89d2-4c00-88b0-920b76e7e3b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec9b055-8099-429d-a73e-e858061c65ef",
        "cursor": {
          "ref": "54678cfa-12d5-48cc-a135-caef2bc29a3a",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "57fa3604-b01d-429a-ad95-39a14c2f6f0b"
        },
        "item": {
          "id": "aec9b055-8099-429d-a73e-e858061c65ef",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6554a9a9-409e-47bb-be3e-8dfa84ad41c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a8f25d-c214-4788-be35-e28114642b02",
        "cursor": {
          "ref": "01f6fb83-1323-4d81-8108-1a69c485fbde",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "cdd3593d-3613-4250-820a-3b22fff334a0"
        },
        "item": {
          "id": "d5a8f25d-c214-4788-be35-e28114642b02",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "acea9e5a-05f7-4e29-9720-50acf8651297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e6a4fb-d05b-47cd-a832-ef1e307589ae",
        "cursor": {
          "ref": "dcb8847b-bf3f-46c0-b84a-dedcbb352579",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "b0824cef-b335-494b-ae2a-259a873cdfce"
        },
        "item": {
          "id": "e4e6a4fb-d05b-47cd-a832-ef1e307589ae",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ea0d760f-1e3e-45b3-b3c5-4947caa4b82e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60a2f15-d54b-4504-90ef-2778fa12d2b6",
        "cursor": {
          "ref": "123cc9cf-57d8-41c6-9e68-111719aab8a4",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "cf53a516-6ebf-46ca-b39c-6a720ad8c275"
        },
        "item": {
          "id": "d60a2f15-d54b-4504-90ef-2778fa12d2b6",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "60c6ee46-0beb-400b-b080-f10f560af27a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67fc5ef5-c61c-4fa1-aedd-6094cf3ca024",
        "cursor": {
          "ref": "b6ade98c-70c5-40fc-b5d2-d701bf084c27",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "50a5511d-f436-472c-8ad1-862bf3b070e4"
        },
        "item": {
          "id": "67fc5ef5-c61c-4fa1-aedd-6094cf3ca024",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "36bcce98-624c-4d2d-a137-e8574a4e118e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af0ec398-24c4-4625-ba58-6abc1bf56c2a",
        "cursor": {
          "ref": "66d487db-7ea2-4ab5-b7c7-4bce0cdcb4f2",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "85720db4-4f41-4bec-ab3c-5254fe6726b7"
        },
        "item": {
          "id": "af0ec398-24c4-4625-ba58-6abc1bf56c2a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4236e236-8b12-478a-86f1-6a20c3707064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d123d91b-1cee-495d-a766-a9daadf8c5a5",
        "cursor": {
          "ref": "d93c2384-696d-4dbd-b81a-d718e9566386",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d64ebf33-0dd6-4e4a-b090-c83961b2c58a"
        },
        "item": {
          "id": "d123d91b-1cee-495d-a766-a9daadf8c5a5",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c774fe23-cb32-4b63-b557-c01efdab0d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df87456c-36cc-4a45-b193-b92629034b8a",
        "cursor": {
          "ref": "4a8cdb38-2a3b-4f4b-b3c4-235bea1601cd",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f3212273-f789-4115-af5b-ddbecebf46ec"
        },
        "item": {
          "id": "df87456c-36cc-4a45-b193-b92629034b8a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d8311dc7-7efa-477d-81f4-39d1729e2d2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49dcea05-e9f6-4faa-938c-e4c195ad8b94",
        "cursor": {
          "ref": "fbc4c815-3167-49c6-8aea-c161a8a3b32d",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "22432b97-0a41-40dd-8385-adaa1247cf11"
        },
        "item": {
          "id": "49dcea05-e9f6-4faa-938c-e4c195ad8b94",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "179712f6-1877-4877-aa30-f65909665a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4488892-344f-482f-9b28-dbce7677c64a",
        "cursor": {
          "ref": "c8a6d702-8870-4809-9e2e-1434a227a7ce",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f215413a-9e9d-4ff6-9985-3521b7989ae3"
        },
        "item": {
          "id": "b4488892-344f-482f-9b28-dbce7677c64a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "09f98835-62ca-4afd-b96e-e2f6124d7a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d6da07-ae03-4775-845a-6bcce2bb92df",
        "cursor": {
          "ref": "a446dbdf-a0c2-454a-8973-e6fefd8a0507",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "be2c7644-bc83-4dd8-8744-8feac28c246f"
        },
        "item": {
          "id": "c0d6da07-ae03-4775-845a-6bcce2bb92df",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "62433c76-3a6e-4900-b125-6dba72ebc584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38fcac92-d0dc-4d77-93e3-6c3477cabbec",
        "cursor": {
          "ref": "cdbbcc18-e068-4e97-aa85-14ec2a56f35d",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b54cdd5e-1d4c-45fb-bb3d-485e726da91e"
        },
        "item": {
          "id": "38fcac92-d0dc-4d77-93e3-6c3477cabbec",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "5a0c8c96-7670-47d7-8ae3-416d9504831d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ffec78-fc73-4248-8bb0-3af0bc2de92d",
        "cursor": {
          "ref": "7b0d3f2b-79fe-47a4-a4d9-8b3af92ad22b",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6be5a516-15a3-46d4-9dae-bc166a3a7a8e"
        },
        "item": {
          "id": "35ffec78-fc73-4248-8bb0-3af0bc2de92d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f84d7fc0-eb4b-432f-94a6-4a1fbf131c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9cd7dec-c5aa-4466-9829-e3d0dfa34d97",
        "cursor": {
          "ref": "35b93776-26b5-43d0-ad1e-0646017802a3",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "fe512181-9870-4753-97c7-6b45d68bdebf"
        },
        "item": {
          "id": "d9cd7dec-c5aa-4466-9829-e3d0dfa34d97",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "292adb98-9292-469b-8174-0230b6f20f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b4cf678-f192-40bc-895f-efb1372dad0e",
        "cursor": {
          "ref": "096f42b1-e040-4772-916b-c92fa604d12f",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "eb927052-c3c8-48ae-8ba7-0f2e7421ef89"
        },
        "item": {
          "id": "9b4cf678-f192-40bc-895f-efb1372dad0e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e3eca39c-92f4-4a37-9fc7-438678ca66ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "496a22fa-168c-4c2f-b788-4d29c259b2a7",
        "cursor": {
          "ref": "0cbfa66d-cac0-4f4b-8125-39575e62877d",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "eb7ac1e6-3eb1-41c0-9d59-5e4d76f76993"
        },
        "item": {
          "id": "496a22fa-168c-4c2f-b788-4d29c259b2a7",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1d00ec72-1354-4003-84bd-b83d5c2108c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48edd67a-e21f-4ec8-a4d6-56c275a6f709",
        "cursor": {
          "ref": "adca33e7-831e-49b1-acdb-8dfbd996564f",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f9c2aa8a-d9aa-4ed1-a0c5-a371363e8c30"
        },
        "item": {
          "id": "48edd67a-e21f-4ec8-a4d6-56c275a6f709",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a7b65134-2f14-49c1-bce9-9b74f4df0598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b6132d-d3fa-41d6-bf4f-631449f8944e",
        "cursor": {
          "ref": "bf5eba6f-9fcb-4c4a-ba4a-831a458d8cc9",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "4ea8a562-7cb3-4030-b5ce-2112af8bfaf5"
        },
        "item": {
          "id": "98b6132d-d3fa-41d6-bf4f-631449f8944e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6f092794-9e12-4b19-ad81-a35efaa33f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e11a75-c168-48bc-a943-d0d4de95a7c0",
        "cursor": {
          "ref": "32934e34-6405-4f1a-acea-850597a355c2",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "2d2188ae-9895-472a-8d46-ad975b8428cb"
        },
        "item": {
          "id": "b6e11a75-c168-48bc-a943-d0d4de95a7c0",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "33c0c795-5d42-4df7-99ed-44608e0053dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1992b5db-82d4-4b16-b99e-068d344645cd",
        "cursor": {
          "ref": "51313eb1-16df-45dc-b758-131c9616ecc0",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c976ed0e-40b5-4a62-84c5-807e15a24a54"
        },
        "item": {
          "id": "1992b5db-82d4-4b16-b99e-068d344645cd",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "50093be5-68b4-48eb-9dce-88d65650fd27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "496caec4-20ae-44d9-b547-00688e161744",
        "cursor": {
          "ref": "c8de6697-f2b9-4ef8-9a0c-282d1d334494",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "164ff499-5992-4f95-93a7-d36f02d0085b"
        },
        "item": {
          "id": "496caec4-20ae-44d9-b547-00688e161744",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "1a1e90e9-cb25-4929-bab1-7870485a815e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b887a28-8cf5-4376-af45-137f48c9c4ea",
        "cursor": {
          "ref": "639c1ab9-d7c1-4b63-9631-ecb37a5f75a6",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "44161254-954b-495b-a70d-93d839c45b54"
        },
        "item": {
          "id": "8b887a28-8cf5-4376-af45-137f48c9c4ea",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6857e18c-b065-41f9-8ba7-2916ba083b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db97559-a058-4173-8210-4a6d1a4f7043",
        "cursor": {
          "ref": "336b4bd4-4b9b-43ae-9990-c2b036875f87",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "4e5b7270-c137-46c8-b6ff-a6c5aaaf58b8"
        },
        "item": {
          "id": "3db97559-a058-4173-8210-4a6d1a4f7043",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b1964a2b-5fac-4fc4-89ce-a855fecbc1b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf00c93b-a15f-4e7b-9517-f1d506fde9f7",
        "cursor": {
          "ref": "fa2ff3d6-d3a3-4fff-a62c-cfc648336dc8",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "0888a44f-6634-4e27-b47b-7c69c7a1de6c"
        },
        "item": {
          "id": "bf00c93b-a15f-4e7b-9517-f1d506fde9f7",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ef364e7b-6a86-4cfb-bad1-7c3369cab37f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5b2f0d-22b5-47f0-8391-99b2e5bbb654",
        "cursor": {
          "ref": "585ebed4-1fda-4573-87af-5fec640f4cdc",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "64e9d71d-84a5-4a52-861d-babaaaf6c85f"
        },
        "item": {
          "id": "1b5b2f0d-22b5-47f0-8391-99b2e5bbb654",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "1ff06c40-bbd0-42fb-a0af-b71e75657187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dbd2cdd-1029-4c4c-bfe7-789e8f0b1501",
        "cursor": {
          "ref": "f026d600-ae45-4f71-8b61-b91543d683bd",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "4faf3399-a44c-4d48-a632-f916d60077bb"
        },
        "item": {
          "id": "8dbd2cdd-1029-4c4c-bfe7-789e8f0b1501",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "41586b90-929f-4717-bfbe-2ba7fd4c42d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd28746-3172-4238-a29e-69587b43b4ef",
        "cursor": {
          "ref": "bb13d350-d6a0-4585-b111-d105cd39e557",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "8852058c-286a-4d40-ac56-be244952b3d7"
        },
        "item": {
          "id": "1dd28746-3172-4238-a29e-69587b43b4ef",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "30112d38-e52e-41c2-aecf-d7fc177df4ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d46aa2e-85d1-4e5f-81b6-e8c2d05f8718",
        "cursor": {
          "ref": "47a28c2f-e69f-4289-8825-d1467a03ff3d",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "962088d5-1f5e-414b-ba5e-a037dabd0725"
        },
        "item": {
          "id": "6d46aa2e-85d1-4e5f-81b6-e8c2d05f8718",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "aa91d235-e480-452f-a878-ae6314c74b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e6a85a-e553-42b3-aba5-9250930af0e5",
        "cursor": {
          "ref": "af3ada46-0cdd-4a18-8c4d-01f8b5336ff9",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "be1b82f0-bfdb-4842-9d1b-52e65078992a"
        },
        "item": {
          "id": "05e6a85a-e553-42b3-aba5-9250930af0e5",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8e1e7a16-f4e7-4f7c-ae0e-ea1c6115a726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "820741bd-48a4-4158-afbc-9f4f661bfb05",
        "cursor": {
          "ref": "87f21f35-6512-4dff-896d-9e64c8268352",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "83f01761-fb33-4f8d-8d66-2c8c6dd4461f"
        },
        "item": {
          "id": "820741bd-48a4-4158-afbc-9f4f661bfb05",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "276e4da5-e6b6-43ea-8919-57dc4d24c7a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6368df78-b063-4ff5-a0fb-e5c16e26600a",
        "cursor": {
          "ref": "1eb345b7-bfc1-4de0-9112-54bcdfd135b9",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d0f3b23c-5e9f-4f0f-a7a0-147daf7910d7"
        },
        "item": {
          "id": "6368df78-b063-4ff5-a0fb-e5c16e26600a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b983e861-2396-4a3b-aa74-ffebbd3ad6a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e9f5501-9e28-4aa5-8c83-e4dde710a55f",
        "cursor": {
          "ref": "b4c9c070-bdab-4418-8819-16125508dd9c",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f7986c8b-46cf-457e-84ad-1d49ff33b94d"
        },
        "item": {
          "id": "1e9f5501-9e28-4aa5-8c83-e4dde710a55f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "05bc72b8-1de9-4e01-9fe6-3ce91180771d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2301c979-3621-4195-832f-efd1c034877b",
        "cursor": {
          "ref": "add41c5a-d072-48e3-a2fa-e657f8a149f7",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7f370f0f-c4ab-4af9-ab30-ad751190409b"
        },
        "item": {
          "id": "2301c979-3621-4195-832f-efd1c034877b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "28080666-ae22-4a04-b0de-84913d6752e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513689aa-c0a7-4192-ae5c-af037cf5b637",
        "cursor": {
          "ref": "a819c95c-b4bc-443d-9e8a-7c8b3904ef1c",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "890f91ab-24db-4c5d-ad09-b793855b94b4"
        },
        "item": {
          "id": "513689aa-c0a7-4192-ae5c-af037cf5b637",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "255d16eb-96bd-4791-bbb3-52cffa6559c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb9b37df-9745-42ef-a156-4eaf04ce85de",
        "cursor": {
          "ref": "2576dd40-a0d3-45a0-a33f-a5d8d3af9848",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "de2a0dce-8b8b-4750-9564-23f8d44bc1c6"
        },
        "item": {
          "id": "fb9b37df-9745-42ef-a156-4eaf04ce85de",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e3edc06f-6cf5-4372-9f8c-7dad1d18e4aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8c46fb-1c49-4ca2-8af6-da10b7c04363",
        "cursor": {
          "ref": "dbc4e608-d0f2-498c-b0e8-c05aaeac9738",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "c8481884-a77a-4c3d-8773-dd6733b0779a"
        },
        "item": {
          "id": "8f8c46fb-1c49-4ca2-8af6-da10b7c04363",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "66cf7a59-4932-424b-b6c1-bd4f227bd6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "928cb884-05bf-4c97-84d3-3941ebace4c2",
        "cursor": {
          "ref": "0e31fd31-45c9-49fd-9b05-9c576d768b41",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "628789b5-b805-4aed-897b-95d88a287b64"
        },
        "item": {
          "id": "928cb884-05bf-4c97-84d3-3941ebace4c2",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "53fd1546-a8f9-4873-b426-25a0d3216aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611b89f1-b1a1-4e7b-8374-b5da7938c3da",
        "cursor": {
          "ref": "7720176b-99e1-447d-b4f2-620a216b4315",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "aeda7a43-e3a6-41e5-aa75-5b7d77482d3c"
        },
        "item": {
          "id": "611b89f1-b1a1-4e7b-8374-b5da7938c3da",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9c982cfb-f83d-42c4-bd26-2bedecad8ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8820da4-f178-453b-8e05-830739b0c97e",
        "cursor": {
          "ref": "7632152c-4a8c-4d73-855e-d848a6497aa1",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "52bab63f-88bb-42bc-81f0-47461f5f98d8"
        },
        "item": {
          "id": "a8820da4-f178-453b-8e05-830739b0c97e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b202c25e-9449-499f-b91e-2614822afce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c50cf95-66fb-43fc-9e1a-bea297e254f1",
        "cursor": {
          "ref": "9aa96985-d9ef-4b01-883d-1daba7f02e81",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "7e5dc21b-2582-4185-a5b4-895b4f2cdf41"
        },
        "item": {
          "id": "5c50cf95-66fb-43fc-9e1a-bea297e254f1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2b28c46c-5fca-43a1-97b4-2d54fbdbf04f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "349e1441-c7f6-4314-821c-fae8ef77f83d",
        "cursor": {
          "ref": "255ee082-7949-40fd-a285-cab42c36dedf",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "9513f4e4-5817-43c4-b248-de214fe71cc1"
        },
        "item": {
          "id": "349e1441-c7f6-4314-821c-fae8ef77f83d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b691b7c7-3c4b-4302-8757-1dc5507fa465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2277c298-ecf4-4797-9433-488df8478c0e",
        "cursor": {
          "ref": "e8e0bcd8-01c2-4cf2-9aaa-3a4e658aafaf",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "f07a6865-6d55-4218-bea8-f3d3965f7df5"
        },
        "item": {
          "id": "2277c298-ecf4-4797-9433-488df8478c0e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "16a288de-5021-4d46-8385-a2a1b770b6cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd16bc5-1c1c-4e4e-a07f-69eeda226dc9",
        "cursor": {
          "ref": "670f3ccb-4f19-468d-b7c0-2d1ce995ab3d",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "d3c593a9-7979-461b-8256-fda8126a0433"
        },
        "item": {
          "id": "bfd16bc5-1c1c-4e4e-a07f-69eeda226dc9",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8cf6a202-e308-4f92-95fa-ccacbf53d7a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4839d3e3-84bc-4892-ba04-18428d55e14a",
        "cursor": {
          "ref": "9151ba14-d635-4f57-99a5-c138851b606f",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "4ed24b6c-f604-4e94-a4f6-9a5d351687f0"
        },
        "item": {
          "id": "4839d3e3-84bc-4892-ba04-18428d55e14a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "aff50df9-f564-4d52-beea-929a7d47acbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad341c44-85ab-4bec-859e-7f2e526e565f",
        "cursor": {
          "ref": "54c669fd-1c17-44ef-bfbd-dfee9f5aa1c1",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "74bebc44-de32-45ab-b741-f780970c231d"
        },
        "item": {
          "id": "ad341c44-85ab-4bec-859e-7f2e526e565f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "bd2f4b13-2ef4-46a5-851f-6f4b0547c8db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4adcddd-fc34-40f5-b930-981cb7152de2",
        "cursor": {
          "ref": "afe262c7-d272-4da7-9107-a0c084038433",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "86f52ce2-72e0-4fb5-8a33-88c8b28f965c"
        },
        "item": {
          "id": "e4adcddd-fc34-40f5-b930-981cb7152de2",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d27f2fe7-ccf0-4ff3-bddc-63f4ddd5217c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "384e35d9-b99f-4381-8d7a-4af905c592d1",
        "cursor": {
          "ref": "fc2f100b-c292-43e3-bbb8-8213398ad6e6",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "80355e6f-4d3b-4329-ac02-86cf0bcf8091"
        },
        "item": {
          "id": "384e35d9-b99f-4381-8d7a-4af905c592d1",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e1450fde-1db5-4583-a34e-eba517fb273d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac49f962-e60d-4951-bc98-c6d4c9d8b538",
        "cursor": {
          "ref": "85bdfab5-2eb8-4816-8df6-6d95ed21dff4",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "8d07b012-eff2-4af1-adeb-5dc687963565"
        },
        "item": {
          "id": "ac49f962-e60d-4951-bc98-c6d4c9d8b538",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "13e351e5-449e-43d8-82fd-cc25174917b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbac1167-766f-4417-9108-2584897b6fcf",
        "cursor": {
          "ref": "7f521488-4e1e-4d6e-b58b-a55e59b8fa55",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "2981937d-812e-4e5a-ba76-cf4d538c01ae"
        },
        "item": {
          "id": "cbac1167-766f-4417-9108-2584897b6fcf",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "9f6e7ff3-6b7c-4b1c-bb84-0412e903934a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909f3075-a7da-4109-83c1-73dffd125d68",
        "cursor": {
          "ref": "d8c91356-b8ac-489d-9083-d46a69057c29",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "360b34f7-3f6e-4ee4-8e96-ff53388d0a00"
        },
        "item": {
          "id": "909f3075-a7da-4109-83c1-73dffd125d68",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a647ff9c-9571-438e-9d93-58d87a62700a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb35c6a2-02a2-472d-8261-ef20d1afd5ac",
        "cursor": {
          "ref": "0704aa8a-479e-4095-9641-9c0a3c35a096",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "05a4d0a7-5bbb-4841-8a4c-4deaf9c288db"
        },
        "item": {
          "id": "eb35c6a2-02a2-472d-8261-ef20d1afd5ac",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "2ada408d-26b6-4bb2-9af8-1beda9899861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c062443-577c-4ca6-8efe-23fec6015a5a",
        "cursor": {
          "ref": "54031c9c-171b-4adc-b117-884d9f1591e8",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "b6cd6c52-9710-4065-8b36-fd27f165abf1"
        },
        "item": {
          "id": "1c062443-577c-4ca6-8efe-23fec6015a5a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "13a45a7e-ed39-4a34-8349-f3c30e1e9ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c08490-2c47-4021-b681-1d8a2d3d82a6",
        "cursor": {
          "ref": "dfb0604c-0d17-4f0b-bee9-d9dad8b2d8ce",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "533b9ed0-792f-4f5f-876d-d1d5d9fb0318"
        },
        "item": {
          "id": "13c08490-2c47-4021-b681-1d8a2d3d82a6",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "19f603e5-462b-46df-9db3-a9a914bfba1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d64275-fadb-4db4-ab52-4b2448b02c8e",
        "cursor": {
          "ref": "b9d9668a-b3c7-4bcf-a0fa-bcd8a47f7800",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "a5f1aee7-1ede-468a-90ff-c0d6f8bdeca7"
        },
        "item": {
          "id": "20d64275-fadb-4db4-ab52-4b2448b02c8e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "37412e89-2e21-46d5-b52a-bd805d5a33fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee3bd25-adca-4539-a13f-face53112c80",
        "cursor": {
          "ref": "9177a58b-ac78-41d8-b515-ed08c682185f",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "8a45d105-183c-40cb-a862-57072161295c"
        },
        "item": {
          "id": "0ee3bd25-adca-4539-a13f-face53112c80",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "797227a7-4d4f-42df-84d8-ed8b6a32655c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d99fd56a-e039-4f7c-bc92-675e3f41b11a",
        "cursor": {
          "ref": "aead36bb-dac8-424c-9201-523ba9598d26",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "781f0562-d6bf-42f6-a213-8c0cc0d943be"
        },
        "item": {
          "id": "d99fd56a-e039-4f7c-bc92-675e3f41b11a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "30ed4d00-c4e4-43b6-aada-83e3d5c7f745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d254a1f8-dc67-4cad-843b-569deef5de18",
        "cursor": {
          "ref": "991abaf8-9a44-4e6a-8e9d-545ae2eb6d9e",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "e46a2843-d066-49f7-8130-0b58edf89b9b"
        },
        "item": {
          "id": "d254a1f8-dc67-4cad-843b-569deef5de18",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f6d069dd-0736-493b-b3bc-04ffadc2a9e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a99cb6-012e-4cf2-8909-6e6f6830ea20",
        "cursor": {
          "ref": "e4a20b96-d03e-4492-8ae3-1492324bc91f",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "df35bdbb-5126-4d89-9050-2c62dc08a90d"
        },
        "item": {
          "id": "99a99cb6-012e-4cf2-8909-6e6f6830ea20",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "83ae6fa4-a780-4f76-8d49-40f987d615b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b4a303-9c5b-45ce-9f11-60aabe9fe67d",
        "cursor": {
          "ref": "df37c324-1968-4271-9864-d5c6b1c6e9a6",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "d5ded628-bc79-495a-9693-f6e65872343f"
        },
        "item": {
          "id": "d8b4a303-9c5b-45ce-9f11-60aabe9fe67d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d6ab36c9-b966-4c64-9066-b849c5f35a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc0341f-3700-4e72-8b81-3ca910bdc509",
        "cursor": {
          "ref": "3fdb8038-51e3-4a99-9ce9-ba9507533501",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "d112429e-a3b3-4ab6-b1c0-d0606572cb60"
        },
        "item": {
          "id": "1dc0341f-3700-4e72-8b81-3ca910bdc509",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "525aac33-2b1e-4bb5-84bd-46be7b7b405f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76cce772-d00c-4e5d-b908-75d57eb68848",
        "cursor": {
          "ref": "556847b7-c835-432a-b3bc-6a7696ca38d7",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "6056bb06-2f4e-4717-910c-9a901e296b3e"
        },
        "item": {
          "id": "76cce772-d00c-4e5d-b908-75d57eb68848",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "99764385-7e7e-4259-99b9-45655e94dd31",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4afc86-25db-4e3a-a5f0-3557e8cc2a7b",
        "cursor": {
          "ref": "8650797e-eeb1-4c74-8aff-20aec8bf34cf",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "e2094d31-7bfe-4ea7-a3ce-9984955e7102"
        },
        "item": {
          "id": "da4afc86-25db-4e3a-a5f0-3557e8cc2a7b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d30103b7-590c-49cc-a8da-ead44e4154be",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b94744-1a86-4e16-a4da-089a360ff9dc",
        "cursor": {
          "ref": "813f7d4d-b601-437a-a114-44e7bb5cfd50",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "e01941ed-d75d-45d6-a2ca-caadc280a86d"
        },
        "item": {
          "id": "33b94744-1a86-4e16-a4da-089a360ff9dc",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2c9f14b9-e024-4e81-bd60-e8f3f1969a37",
          "status": "OK",
          "code": 200,
          "responseTime": 81,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ed7006-ee4c-4194-935e-663ec9e8cada",
        "cursor": {
          "ref": "13c28942-3b61-4479-b196-ebc41961fd44",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "bcac9def-f4fd-471c-ac6f-b353972dae86"
        },
        "item": {
          "id": "43ed7006-ee4c-4194-935e-663ec9e8cada",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c1ff2a65-9e6c-49b2-a1a6-1558167d9a65",
          "status": "OK",
          "code": 200,
          "responseTime": 109,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c90a8498-38ac-413e-8f7d-905f2524de23",
        "cursor": {
          "ref": "a92f835f-5153-4a49-82a3-e0469e050d15",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "d5b03c4b-3a3e-4202-96e5-98bf4be4d895"
        },
        "item": {
          "id": "c90a8498-38ac-413e-8f7d-905f2524de23",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1e16aa1d-8a71-4751-8bda-90d2b1273e34",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c90a8498-38ac-413e-8f7d-905f2524de23",
        "cursor": {
          "ref": "a92f835f-5153-4a49-82a3-e0469e050d15",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "d5b03c4b-3a3e-4202-96e5-98bf4be4d895"
        },
        "item": {
          "id": "c90a8498-38ac-413e-8f7d-905f2524de23",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1e16aa1d-8a71-4751-8bda-90d2b1273e34",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf7528f3-1ce6-4543-9fa8-4594332eb7d8",
        "cursor": {
          "ref": "852f7133-1418-497e-8efa-ad9a76e04e17",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "ad57bb95-e3b4-4b1b-9ebc-8489d4de7297"
        },
        "item": {
          "id": "bf7528f3-1ce6-4543-9fa8-4594332eb7d8",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d0bc5f1c-243a-478a-8cfc-c682a992a9a9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "836da113-1bf5-4098-9090-72da57bf81f7",
        "cursor": {
          "ref": "1e359d4e-4653-4919-a73b-b30fad678b6a",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "6247c237-8ed6-42eb-b292-445a25466374"
        },
        "item": {
          "id": "836da113-1bf5-4098-9090-72da57bf81f7",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b012cd69-4179-442f-931e-421bfe40b2b3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}