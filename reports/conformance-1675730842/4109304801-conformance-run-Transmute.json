{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "cfb49ef0-096f-4253-b5f3-c6e9a6fd334a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c71a9ab5-b9b1-42c9-ac86-bd28756f7b5f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "99f05576-d5ff-4035-aa36-2ebe577c9d58",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ddd52adb-a96c-45e1-b0b5-1f1036f116b6"
                }
              }
            ]
          },
          {
            "id": "7b7d305f-9b42-4577-97eb-c1b5919a798b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4b3cc461-e9c7-4388-80c4-fac7426ce49e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e34a773a-e588-4f59-a685-6fc6be528058"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7648c4a3-0497-4a68-877c-30548d22470b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e007154e-ef0b-46f6-8344-2b5cde8cdc8a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6b8758ae-55b7-40b1-bd7d-c5e5674dc6d5",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "595972e8-6dbf-47d8-96e6-677000f88a47",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e8409c30-be5f-4fb3-84b1-7b7b25a236b2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5f1db876-de4f-4107-9c38-78b49b19a557",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c2b2e363-b4ab-4653-a656-ce52bbebf1ba"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a90e88de-9ba7-4ff0-a734-8187c865f8c6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5256dd1b-16a6-4f22-b5ce-479aa7d7e624"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fb268dde-1f4c-4543-b432-2edfbc4cfc09",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2e67cba0-0123-47e5-a533-9bfa8b0166d4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3304e58a-a8cf-4865-98a8-8639fdfd5123",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f371d2ce-f058-4ed2-8876-8e7993c270be"
            }
          }
        ]
      },
      {
        "id": "bf4142db-077e-4c0f-a694-31405712aa01",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e44263e2-9efd-4a47-966f-e008f386ccef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6ecf94d0-e077-4f9f-929f-3a5ed47cab61",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "195a5bc6-a306-457a-997e-5673b025034e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c53bd1e-4587-4690-8a95-4a1cdeb4e5ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f67d5ae8-20a0-40de-85c7-461cb66d86f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ddc8f87-4068-4da9-afbb-cd0e11ead7f9",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d47933-65ee-4e69-9b03-aa4a39ac0dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "61b54aeb-cb24-4625-a7f6-49ed751b64c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52220559-7edf-4cbc-8a0d-d49bd6d4688f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a1cc3f-be6a-4e84-a709-38b6f270c7fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1e2a16d8-f840-4944-a422-77df244a2ed1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ed1ae99f-833d-4f21-8291-11057f953471",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6e41b624-154f-468c-9bbc-e9338abe6b1b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "490f58e9-a22d-4a86-aacc-f6896d737cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d4ee3a0-6884-4319-9596-16ede52f710e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b62c7d-e3f2-42a6-a70a-6c5dbe33642f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "390672a9-23ab-48d2-86d2-7d2a5e655c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82955462-4802-49f6-b2ad-493822c679d4",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea0fbb71-2df9-415c-8877-9e30118ebf51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1dc95f51-3e52-4548-8751-29c60777297d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "730e461c-a09c-43d8-9d33-9be1b162e75e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "581212d4-46a1-498e-a3ef-6a5191965898"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "156c7be8-fa1a-48a7-987e-9cdc882e1552",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1fb36b1c-107f-4171-a970-5569154478c9",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f62c74d-5fcb-4728-8d17-e1b685ddbf86",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "bc0ef65c-3d47-45e4-8b0c-af0ac2da2fe2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3b3f85c7-8c58-4708-b344-49eedeaa5f3e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "296581b0-55b2-40d7-ab92-2521a0f8de7b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "41af2a53-47ab-483f-afe1-f67571988c56",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0bb90726-26d9-4046-88df-b9a7ee732015"
            }
          }
        ]
      },
      {
        "id": "354011ef-bf79-4914-b857-ae317f9a1f96",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e0901874-fc89-47ee-b071-9f8c15f853f6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3f8237b2-44db-42fe-9030-b6dea4538a55",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c7f75901-e7c7-4011-ae0a-c0c14f7e4329",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9265e621-bdfb-49df-9174-0c5814664e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00c74a95-35d9-40cf-8cfb-6e029980b674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3166634d-2f91-4354-b995-7a6147494345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42056bea-8f3f-4b63-b286-9024db1f2188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84eb44c0-e240-48f9-b2ab-1722c91f86ac",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c43293-dd8b-4fa8-960b-8938f0ec6144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f889372a-79c9-4b3a-8d32-bd133abfca78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "113e5698-bfb9-48d8-b070-7333fb9c2e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ebd1058-2f68-4717-92f1-b8767a8eb4ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c326ae-dafa-4a98-ae14-82d98777ac32",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c0372b-1fa5-4b39-afe0-29c8260144aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67cbc7a3-1fcb-49da-8337-18953fcf34a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f695b1-e8d4-4a36-998d-b7574145ca9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e2fd570-2e23-442f-9414-d6ecc5f72252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9705cb3d-b3c8-4e7d-882f-6c6abd1d671e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f1138e-da4e-4068-bb39-50588ec963f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd3048c8-f85a-4bb5-8e31-b13da7183104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2beb1081-753e-4054-af96-ec49453afa02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03614f7a-b51b-4039-b3e6-579ddcf88ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec0a03bd-95a4-4f26-ad67-fca7f85790d5",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f841850f-1635-40e9-8cc0-3691583753ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef06221b-f16f-4ba8-af71-30c7b302fa69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc47d9c4-630e-45f1-ba14-5fc2b225955a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c2595bf-9a6c-4b13-b9cf-812800d8dd54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa48271e-5306-4a27-a6c2-3a76db9a6fed",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca613587-373d-4396-af71-78650f313764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b35a776c-49ee-40f3-863d-e8ba19bcff33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5171252b-5567-4925-a595-ce19d50848f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78bf73e9-ca69-48fa-bf67-76cd2b2e7642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0216830-81ab-46c4-8bb0-a3e82ec830e7",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05b0cca-c37e-4308-a569-5f9e932e3cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09433337-dcab-432b-8dec-c710bff7c190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa688340-478f-47f4-abaa-66b265e83cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3c3ca48-7649-43ff-9b0f-3ab48c499969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886359d3-ff66-4698-ae94-6b46ef77faa7",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35307543-13be-4e1d-b559-729256c61b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afcf3e88-11db-4f20-8901-cb1f2b9310c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f1503a-1261-4e1c-bcbc-b750698b92e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6b8d87c-621a-4ff7-90c7-2555d2cea83d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c257cc-3cbb-43d0-8e78-6fb3c8ae9e3e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "654cf7d8-b8b2-431a-9734-0b3bc70a260c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e14e978f-d9c3-420d-9c3f-d149a9240314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f77430e-1777-464b-95ea-0ac1c38e3cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30e8ef61-a541-4b5f-9920-c0734241ee11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f751872-784d-4dd8-a0bd-c2f4e0b343bc",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c777f862-1983-40a7-a457-65101fdf6919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5fa8f2b-47f0-4387-bad7-4c659ff123c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d37fdd8e-47c7-4ede-ba44-2d2e04870642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f7a5a23-428c-4fd5-8c7e-38902b28257a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a6d4d28-8d79-4c22-97e2-dde4f1e646cb",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0942500-824d-44fe-9213-2cee31c10ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8f7e394-23b2-43a9-95aa-a94e6cc60025"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d533a06a-3722-42d5-83d6-ff178b877150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d89cf3a-6f2a-41a5-88a3-6aa5b37f2e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d890484-7030-4008-b2be-77efdca4ea58",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d88b49b-8bdc-46c6-8dfb-14e2587f3639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "951f220c-73d1-44ee-8b45-a7e1680d222b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "171eecd4-c690-4ec3-b241-bfc7597e01ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6bf2b2a-e9fc-4d1d-a9a4-dccd3ab2d5c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534a7be3-1525-4828-a88e-710002949e95",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd84309-5595-4ace-801a-18ad3892b919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46b385b0-f2cd-4c9a-8fdb-a7a30e4c48a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ff11c1-ceaa-4185-b363-cfac78d83a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e690c1cb-d434-4993-a263-6b9c8cc51712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63dd7534-3cf1-41ac-ac7c-8af45c5ddcbd",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "262d86ed-18f0-4a22-9736-dfd6d67d485d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1794a50-85a6-41e3-ad34-f64cf855e81b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5dda29-9d4a-48a5-8c8b-31e10d5333c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "e19cfe73-9d20-47f8-867f-eaf16e3d77e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59933a93-e517-46bf-9e71-cf63ddc84c43",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "119a3104-40f9-40c0-ad0d-100f180f6f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d97b961c-2503-4dba-9ecd-3b50fe529011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76379eb2-0d12-4401-8e8f-ba020dabac60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "23a405b0-3225-43c1-ae4e-38831e28d738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d3d91cc-dd6b-4cdf-a526-1433bd6e97da",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8611b323-78dc-4cb9-bf9e-3a11c0856721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "798447df-3f7d-4d4b-a03f-a625471e9a05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4bbc1e0-817d-4fc8-8ce5-fd44b6d65047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc3728b1-e2e7-4405-acce-49ee8627baf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf5174c-b04a-43f7-9656-a25caa6c119e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd1d838-acad-4bf9-812e-5daeaf54a116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6696145-45f0-4d9b-8eca-6afcd51539a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "612c314a-ea83-42da-8b78-35155d18c5a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c54b6c9d-b4d9-47db-a226-de6954fef0c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7426ae-ef51-45f8-8b81-8eed59898646",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f77c44-ac8f-4de8-8850-232436cc3fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32a1cdf7-f4a9-4283-8107-e211f1baaa08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c7d1acb-2d42-4935-89df-ffca1a9e67fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2ff7e9f-0e18-4507-baab-fc84a6bfed3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d4f50d6-bad5-4519-9b98-ae8070a74cf9",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b895a2eb-b3fe-4274-a8e8-848291efa936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "297c5b15-4d91-4259-9820-35842208c328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e137e5c6-071b-4bbf-b78f-2a61e6710994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b9c1f56-7eec-4f1a-88e3-e1e8cd3dbf38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2126f3c4-783c-43df-88f6-e36d988b72fb",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dabd4ca-3cce-4bbf-95b4-a9c0666a6d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4d8d474-2d51-41ae-b0c6-0d0aa5f631cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78672380-062d-4196-98e2-d2f025752a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbcc3c03-1821-45ab-9053-30dab27a62ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba4275c-4746-4570-bc46-8ef25d11fa6f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "302e694c-de58-4187-8eaf-eb5eed66e6c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d16345a-bc06-4a8f-a54e-fc37cf2a477a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f18db8c-4aab-438d-84b8-93cf84e64522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "abe69813-863a-4fce-9ad9-8960f57b66ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd75ff5a-79e9-4d38-a7fc-749bbe2b6ea1",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14bd59c1-a66e-4846-8480-faf8c10d4a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "592f07a2-e799-477a-aeba-68b5c34fd7e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4d0972-1233-4220-9c66-29fb7c55915a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a36640fe-2918-4e30-a10c-204c1d748957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91304940-fbd6-4570-a6d6-f8fda88ec8e7",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "637f9084-5ab3-4eaa-afe1-6a6297c59df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7b9ee3c-5123-4bc1-a84b-0f0076f0ea07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2775bb8d-e719-450d-b283-53a7179856aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a8012d0-08e6-4cd6-9c53-984712f89ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d7ac64-22fa-4f3c-89e9-3a251a030c28",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddad5dce-d922-4f9c-8ea1-72c845d2025b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96fe7ab6-d220-4f5c-9ba5-454f66ee8ac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d54e39-6d68-4c24-a5f9-da95338a9a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "feeb19d0-1635-41cb-9fbe-4223ef4e26a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa704234-bcc2-4a07-8567-fa0b7b985b65",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cffef3aa-53ac-4cbf-a213-f6246015ad34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2e62f47-0c83-4c01-afd5-bc43dc7b393b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b611a0-27ac-470b-8f00-496f1c998db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b3d79538-7607-45fd-8347-7baa31afa180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f57fdb-8fba-48c9-8c72-f0b3db421137",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fee6642-87c9-426b-b163-d76595f7ade1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f9b360e-1fdd-4485-adee-fa35e3902872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0617609-082c-454b-b465-3eb76d5ee36e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe72f4fc-5d38-4ac2-aeb1-57c7c2b7dc3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd5f71f-66b7-4928-ba13-261fe0fd5e9d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22193ba5-2299-45f4-a6ef-8bed0013d01e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98f444cb-4d7b-4313-bc26-3f08c62359bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d71f69-4790-450a-8b9b-7f900bb20bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c308aa7a-109d-407a-8ec3-e9790baaeb54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3727b6d1-dbf1-4460-808e-bfc25034e7ff",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a674de64-bfa9-4a66-bea4-e772f48e9d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88564e1e-5376-428e-bf79-5197d8e783c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fab6bb6-054e-4ddf-968e-43f09b7706e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d23e4b7-a702-4bf7-be01-1a7b560e6a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598fd8c0-2e4d-468c-86f6-8894cea826b2",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cdc4681-ac5d-4405-a28b-10e48673b757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d811f87-07f7-4b32-89c6-0c1fb6f7e254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39f6e91-518c-44d7-8b15-7b29f7cbe9e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b295bdf-d561-4f37-a7a5-e0a91575cc9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8580c2-8388-4e39-9f0e-183dd3b843ae",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75e0c53-1467-4df6-8711-c17c3c99384b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4a0958c-67a8-4035-b10e-4587fd30b7fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75166200-1ae4-4c77-82ad-dc5e593172c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9548dc3d-2d36-4db0-b3b5-11347884d860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc09fdae-a246-4ddd-aa66-051c57be83e2",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff8cb23-1fe7-4751-8ee9-501483ab3361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "864ab1f2-2a74-4715-9f8e-490855b8e695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91069566-46eb-4f11-ae1d-302f9fc76120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa9fae25-11d5-4093-9002-3919cc7f2577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec6087c-b74f-43a6-9bd0-53db1e149009",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc838b8d-5675-41fa-ba9a-4776c581e34b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9744ea67-63ea-43da-be53-3a99d6b666a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44db0875-3918-4fa5-adeb-47bb9499b8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6d9c970-fca5-4843-a816-ad89479e1864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8acac63e-5557-4703-b330-739a494d002d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7fdb542-6a4c-4dda-b972-df1b3b2243ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24ac4590-7874-4fdc-8199-79b963b0356a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7857f5-d5c1-43f5-927b-a134f12e9510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "10e050b6-66c9-4e53-adca-b07e9891428a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b65f16-b346-46b3-b80c-f36c3726e859",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2e8f4d-697f-4b5f-a37f-7a82f7a15f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31e89a31-ea03-4360-bcce-02329e12e791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20bbf1a-18f0-4f79-9169-1cf82243d0fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c205fa0-924f-4fb0-b067-e3875ccca1ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1274b3-a387-474f-98d6-cb2e3df96e15",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "539e5906-16e8-46e8-a111-a9e2d5ef361f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37d118dc-b306-4cb8-8078-490441ec1c18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf490d4d-4332-4a49-a307-7e373b3c8012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "73163bed-dafe-4a19-bbb6-51d85acdb339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1389d3bc-b837-4cb1-803f-decd81363eaf",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "670313fc-f867-4aa8-b144-2fc97f69f9ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53ff05c0-5390-4371-9671-55ba4e314b9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fecb634-f3bd-4423-8cb8-89360af007a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "beb68c56-9c79-4c92-ae5a-6303dbc97b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd916f1f-f632-4756-9062-301dfefde645",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff9ec6a8-5fcf-4ec2-a951-e86df0fbec56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be525258-da8a-4215-8da9-4c0382e5f3f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "835ad4f4-f1aa-4afd-9994-35ebddf0c2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "caa9f865-2a65-42ea-83fc-adfebe35f38c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acaf5c4a-145e-4986-a288-b54f96928207",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e9da68-181b-4fc0-9698-63ac3eda344c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a81b377-6f15-4f2a-829f-196a3c9cda97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf69453-f709-42a6-9079-66be28c23f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3a8fa4e8-899c-4925-8247-ac7b77195fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe9f7de-16b4-4f72-8df5-5ecb977fa468",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a54a37b-9e30-4260-8da6-b5a2686b16b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35049368-aa60-4927-9637-9c495d5cc192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1e124b-c32a-4eb9-811f-e100d4521141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ea9d1af-742a-4667-8317-8fecdc4c64d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae0618c-b8aa-44a0-b93e-a421df628755",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dcda2df-c7be-48c5-9eaf-3407420dee51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aba2b77f-6a00-4b37-a256-ceda5c858b0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f467421c-a949-4ac9-98e5-aabf81cc6b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "167945e5-6781-428a-b9a8-a7a659a4bd10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39eeeb07-9391-471e-9a35-311e291b97f3",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4c9999-66a6-41a9-8c9e-a552378cb5fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69783cfa-9325-4c6e-bb8b-d351d1e98cfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f13a2ad-a737-4798-aad9-fc40f420c8b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f3bf19e-17f0-4758-afed-e7ab966f5b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f437a06-3b3f-425b-9e02-0e36e4f690a7",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5493ce-c573-4e0a-b7fc-bc24b6e40e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8359bd3b-7980-4f74-b9a7-77c1fc6ff7a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94cc1a3f-e160-44e9-ab30-e745d406c5a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c65e0106-ad69-46e6-a96d-217bc9390c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "173d9c22-c281-4b95-be9c-18bfbf0fc510",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "477c8b7f-fdab-4ebe-83e6-a57b198e97ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f820a304-28be-4faf-a7c1-f91991dbcabe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c22ee46c-fd5f-42f4-b79a-0d498c7dd87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b456f20-36c9-4e17-a795-c8395b7ad663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2faa021d-96a8-4e88-9756-3fc67fa2a67f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c84d0759-7d8b-4fbc-97b7-05749fa63354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea1e63c7-03cd-4c58-98df-f73e932c98dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c82e0e-0465-42cb-bce2-746e00acafae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "11f21b6b-8697-4a9f-a09f-9a16a9b0b960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aba1cde-6f5e-46d1-9cb1-8e7f6b5f22c1",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab48800-ea40-468f-a083-844ab169ca88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c62075b-9f0b-49ce-8bf7-0f1626af1fc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07643e74-249a-4891-a8af-9490a93d96df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6553be9b-ef88-4bcd-a7df-476bd24dea37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ec4971-7980-4ec6-9540-1e88a17f2a95",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1304929c-54cf-46cc-a53d-bb10b30c8ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d219e0f-35d2-4f4a-94ae-f35e18685ce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e0d5e8-c487-4c7b-9bf5-f61ed5d85c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "88f4e9f5-f97f-4666-8d1f-3aa22b694adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c70ce46-c86e-41a9-bb1a-75fae22ca215",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67aaf4f9-2d6f-4f1a-bc34-e4eef2e7373a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12c12c1a-4dab-4cd6-a04f-877dc220ba6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa99f3d-bc2c-4c89-92fe-51fea3e6bbf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f551fd13-f213-4571-bbd3-05f24db3bbd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c6b6f1-e671-495f-8cd4-e277ed130df9",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98755218-328d-46c6-bcb7-834d4f291c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58316d90-af8c-46b9-a615-1ca4dc28dc40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9cc7e4-cb7a-47fb-8b82-b50c972726b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "666e77c8-8373-46ca-8078-c52987f3acc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad873ad-cdea-4e64-8e78-31d8b8e05a7b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c59337c3-442a-4f4a-b0aa-5f1e0dbc3d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7110138d-6dde-47b6-820b-b62ee96ab22a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9910825-af98-4f6c-ad3b-b7d9d031b2ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0b50771-05c4-4fc8-8303-185639b20cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac59adab-9f26-430e-872b-60cd95add61f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "803cbdf7-cbf1-4a1c-a23f-5cf10602f78b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "888a48aa-9c74-4f8b-9559-7f4e2b0a84c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d0cc5ae-b078-48b1-b53d-017523c81f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "47b3dd7c-eed9-47c4-ab1d-fde6e06a88f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8cc2d85-8f8d-4867-8bf4-f1b08402526f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "587e89c0-a256-44c1-a517-aafbd5b7f36e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94044e17-4542-420d-bd1c-7b98a00fc811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5973ff0-5321-4c87-84a2-78f6da43c1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5354daf-c1a0-45e1-b25c-236f0f89ceeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9762c58d-a9e5-4ad9-a585-4202220e936e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e5a47f-7c34-4bef-9789-02addd493503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "921fe862-f356-41e8-9591-9a6fccd22a74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7eb5e0a-aa76-4b5d-9149-73ce34a25fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "79eabf18-4b4a-4d9f-afdb-dc9ef5e6a928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2616dead-32cf-4be1-8cc4-756b7570c2be",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f7b62a-8e0c-4fe1-8f3f-3bb4ac954cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c115eed-6ede-48a7-8929-49cdde3c7586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18aeb0ea-0514-4fa3-a6f4-d17e10c7b901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1a98a68-cee7-43c6-8cd9-67e6ede6e0f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a576552f-2c04-4bd9-80df-7581feb6de3a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36db40d8-e353-45e9-bf94-1e58f8ad9000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bfc13a6-3fa2-4078-a695-b2a26fb3176e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cee5c5e-21a4-49e0-aec2-e3547772d0b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "49ac4b1c-3bb3-4fe2-b734-8ebe363ee988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d54635-41d4-470f-b7c0-b91faaf1dfe0",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d0738dc-556b-446b-a6b7-619f44e6fef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcd3f0d9-6a58-4a2a-822b-bb524500fb60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe15efe8-5f5b-4ec2-8841-751f7bbdefa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c43b49c-4977-4c44-8a0c-9c4c5ab95d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a11632e1-bc84-441e-89c0-b734500b5f1f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae28759-5f7b-42fc-afa1-393de11a5a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65f1c9ef-e10e-4df0-942e-5ebf880d010f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f540614-038a-4dcb-a9a9-1baec2952bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "72a9cbb2-cb52-4c91-8602-e5a4127d6ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c9800f0-a2e1-44eb-a2d4-0a9decd50585",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e704c3b-36ed-4931-908e-3d937cff7ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1377c9cc-4b18-4ab6-94c2-9bc032c9f5db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d46c7d6-30ff-41ae-aed6-0c36a7d8ccd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c7969f3-2dad-4ba2-9770-c8467400af89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "295be785-3edf-4ba4-b2a9-dc40b3c3c11c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f019fb4-d2d1-4876-8260-49f48947b450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c723ec0-58ba-4631-b4b8-fd1ce32a68e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dada4d06-2984-4f20-9581-724040f4c39c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "22d419d2-9009-43c6-8f2d-ee3108c8174f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c45e506f-3918-48a0-a9e6-d46300e9c38f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c1ce54c-521f-49b0-aeac-5227b68bc9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "453c48ce-7171-4d79-974f-f35f18f5dce7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e56a13-6ac1-4c1e-b7c1-a81b33718df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1681cf06-d656-495d-a598-a65f82d5f1b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec0876d3-112c-42f8-a84a-199ec24304fe",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbb65dd1-da0e-472b-9484-7526e936b90c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cd1d9da-37b3-4637-9d01-22133983d455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a922e0a4-a509-4c02-9b5e-bdac70553007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "688288d7-c879-4a8f-a91e-d481f2d3c34c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61686234-d33d-4591-8337-93e0aab47330",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee98cfa-d787-41fa-ac11-0d45655b0758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a82ba576-092f-43fa-87a0-999be74b6ccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c5568da-83ad-4b1f-bc6e-f9be38018367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1fac113f-0ed3-4661-aae2-d0582f183684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce33eb61-ecd8-45be-9f0a-87161bc54101",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2086bcb3-87bb-4339-9f75-d3c97e43a4c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fc60841-0da4-4693-ab28-16f2944848f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af9dfc9a-83ef-48ba-a6c3-2046c5bc3168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9bb8ac2-56f2-43e9-a335-66cad1659c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c001519d-f7ff-404e-90f0-356e6ba1edeb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e41f3f-cc90-4793-b24d-a47dc02c3ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a6f74b9-46bd-41f8-a672-0d35bc74bfc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad2e880d-b6f1-4cbb-965f-8f1262797f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "070346d5-acd5-4c28-b0ac-e19c1f37354e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f685fb-acc5-4d56-a0ca-4fc63d1658d2",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9a9fa0-5701-45d5-ba01-8dcf36e784e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0cba450-bb4e-436a-8b5b-7875a904d3db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac6b9267-e1cc-4274-a7f4-dcea3b8827cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba81ce2b-1692-4a85-a899-6ca1242c4ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22277f90-913f-4027-bb97-6101a1885a7d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad8b6ad1-ee58-4a65-b0f1-688f142e515d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "799dbe1e-81a9-43a1-815c-fced3d6c2620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16de9fd9-212b-48cd-b263-403fa9dc6faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6e354a2-96b2-4f77-b5c9-f5aa1c8fa07e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da7ae59-380c-43bf-9261-85bee3a0d4ce",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e3bf0a-f877-460e-9305-4449010cade9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e21219c-a58e-4f08-b53d-dfbd6b88302e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74050a3a-5886-4c9a-b11b-e37ae877a69b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "81522925-511e-4d22-889c-92e9ea81edc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a12047a3-c4b0-48d8-b9a8-2b8857b5ecc3",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d71ca5a-c2a4-42d3-b681-06f8d6a59672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c27c97cc-71a0-4015-b972-763e8893d561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c7ca927-f1c8-4367-b0d8-320152cd34d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "09dd84d3-e59b-49f2-ac92-8dee14ac2928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9042c71d-3469-4cfa-9250-4a08ff3c3e06",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e34908be-c1ed-4ea4-9948-a6a472f1e575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f366a9fa-c78b-4001-a3a6-2c3c03b60484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a3584f-6cc2-410d-85b0-03a4cbf23926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "74ff86ec-a88f-4934-886e-551c2803ec5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e749fef-6312-4967-ae2d-047c47f10efc",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dba7621-c876-438d-9285-01cefc5cc02c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a7945f2-b32a-45f1-bafc-ea93081f1331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01a8acd0-abfb-45a7-94ae-f7949293aae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8ec00ce4-0450-42bd-b2b4-5200884905bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "586cd8bc-4409-4fdc-b7b6-21547ddfafce",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68cba626-6fbd-42b8-bb70-ebbeaa8001c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36188e63-6030-424b-9624-dba420f4a6ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8bb8ac6-5eb0-43bd-bcea-f25996ec169d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "98884437-19c0-4111-8136-a590f97bf09d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73272505-4cac-4347-bf1d-bbc758733df6",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "862e9da1-133d-4d77-b6ae-8604821eecae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f73bd299-315c-4973-991c-975cb499934c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e03d52ef-5900-446d-8e4d-e56d209fcd0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a17a49c8-a67b-41c0-8674-76841bcd3b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89459ec8-ed89-4996-a176-f726d7f92222",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "473ed23d-d0cc-4584-b8ee-3bcaf4e10914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2b5d3db-6a09-464a-87a3-6f6964dd0cdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799366c9-5cfe-453a-88bb-de4439d2b1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b65a8f4c-8012-4f60-820e-7b6b05988ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806348c9-2c33-4804-bbda-d6448416ad4d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d013ed02-3a55-4fa0-942c-0718d0f02341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9403d179-45bb-4672-8476-926f101fe391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b5e7c7a-aa77-4193-89ab-02410ac316a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5705de7a-54c5-47c7-be59-f8a94893da5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7768fb68-0adb-443d-bee7-69c1865486c4",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e838ce9-1c79-4f8b-b143-7cbb4a3ec850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64d49512-ce5e-47f0-bd2a-1d3e30da1acb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b815d1d-2dbd-419c-b10a-a13630f75758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "31f9f0c9-ca65-4b21-a32f-d5186128e8d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f8a4f4-33a6-417e-a9ba-3c053a6be06e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "569cc848-1572-421d-ada4-beb363dae187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5506e6c1-67fc-4d8d-831f-d82e28bca06a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a33cc15-d48d-4c33-b727-c939ba7be514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f5f6e28-3ea7-4be5-8a15-fcbaf58a2cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f20b83-7cc8-4c2e-9191-daa058c4463d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb32ff75-85fb-4ef7-8a8c-7d499512fc23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff655da8-78d8-476e-b3a2-9d38a62e1cff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5abe34ab-9e12-4069-8345-3dd0a482527a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a80e0a68-9698-47f0-8c4f-ddf1d91c750b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7267460f-f0ef-4e94-9462-8a58cb5737ca",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38422440-28e2-40b2-a37b-92185d4ae936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "769eec07-958c-4f3b-bd67-8aee8801ee28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f57310f-e154-4c3d-8dbc-5a39aee46a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "18240585-cb20-4300-b314-6f1d136bbf54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b7cbd5-0b9b-4b78-9ce4-cea9c9a6a6d5",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db9c70ed-7847-4d99-8189-b971868ca159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9a1e9f2-f34e-45e3-8309-f4248fd77186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929f10f6-5287-48a1-9b86-7229198b2134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9cc3122-e134-49b5-bf74-d58e25d10f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2236741-098b-44f2-a4e8-6d4cb72427e3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa15909-0397-456a-acca-04274a289392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a26f64d-ab2c-4564-ad00-c77b6d5abccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66579251-bb49-4e73-b73e-441b51f934ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dca44423-2d0b-4750-886e-7f15d06382f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad0e309-11c8-4538-9b32-c5e84adbbfbc",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e922247-f4e5-426c-a89f-39c6e1af07b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9d4cc52-8fc9-46af-8df8-4442f29d10e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d26c02ba-e54c-4220-bb5f-8add0a6bd70f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e9179bc-ea5b-4add-9658-6303670e8d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e03a8e0-0039-47d7-892e-ab5f2a4195ce",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c81e40f-e78e-47b8-99f8-abd07c9c7cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b74eef18-cde3-4096-b80b-1ce2396be02f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b40b19f-a32d-44c8-956d-98655785183c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "66221164-6bae-40b8-91c3-c1f229126bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a445e467-fa05-48b6-bfc2-1da310fc683b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f163db-3e9e-4af6-9d54-811e835a0aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0afb75c5-27db-478e-9118-d6fbcba0e355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b8b9613-7146-4f63-a698-d30d828237e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ee8762cc-4dc7-45e8-9be3-fe28d2b42d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c82cd63-d82d-40fb-92c1-2fa053900ac5",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "813db9ac-dbb1-4a66-816b-4c66b431ffac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a731a7f8-98cc-429c-a99f-7265a03c0c85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba70b6d8-1ce2-49be-b9ea-adc83678a6f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea9f9087-ed0a-49c4-a947-fe206935112d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fdfd8c3-b20c-46d1-a31b-fb064b152408",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59382117-0693-41fe-b2d1-24713f6aa45b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e79f7e2-df52-4979-b929-9e67d2d92467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8446532c-9912-442f-a582-a7e2778f7188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c51a837-d693-445a-974b-7a141f2e009f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca1cc043-f3e9-4bb7-be0c-c7c45f9354d2",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0652c527-efd0-4874-a4ad-8e20e70dd4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd544344-1edb-4edb-894f-cac1cc87f190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d897abd-946d-4f15-9e1d-e9673ac687a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "47647d17-b43a-4738-9633-5161f7685d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e75b47-b294-48c7-a4b9-6961de0328f1",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29170f3e-4255-4e0f-89bc-677daa07fb64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff9b35e1-09df-479f-ae53-9f80e89cd188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e6cc9d-8c3c-4eb0-bf1d-561275993eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9abb2c25-0efa-4673-a51a-73c8de97cf26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "588dbb72-7387-4e19-a763-407a4634c1cc",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94024b35-121e-4fa3-be29-e9eb97fb13f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dd3efd2-853d-4e31-b032-14e1b0a64a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b406d0cd-09e0-4e74-ba39-bb19a8db473d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "39be5425-efb6-432c-98d7-5a2dba5a5217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b228b2-0def-43b2-b6a5-6bd299f633e2",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe1b39a3-2661-4a7f-8e4b-e253266ba744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18169507-1f44-4e34-83a2-fab158d64c00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fced1a43-adac-49e6-a327-2df10934345c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb864093-519c-4c62-9aba-ab19a53cb218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f2ddc8-abb1-4991-894d-5834ef5971c8",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f45aeb10-67e7-4d86-8230-beb83979961b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddba8618-3e79-40ba-9ccd-df429503a284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26e9d890-5331-4c10-b652-40d09a9baa9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d759b8b-47c5-424e-8a0b-d542a0394d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13da36b-c87c-475f-a7fe-35bb548c4d79",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "745c5ab9-7ea5-4b49-9129-c92922efec0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1e35dfd-563e-4188-9756-95da598005fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1179ef6f-43af-477b-86d3-cb1ca86642bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7aa55787-094d-44dd-96d4-1a988efe9930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a75ef66d-3836-442e-9fd5-32ea03ec688c",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23bd6f6b-514e-4c13-b2c5-7826d5700d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "177ae754-1df7-413c-aeb5-389d940e9b27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acacf9a8-7643-41c5-8988-258163ba13df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "38c3757a-45ab-4a6c-abcb-3d64791e47df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeacac94-1e02-4bda-a68b-1fce752f26f6",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a30fb10-b739-483c-9432-75b4add1954d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f64336d6-d648-41e9-bf92-464547e35586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02592f2-9b25-40e8-a799-f70344e0005e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4124d885-9057-4b6d-99f0-39dd36d8f6f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb1edf8-9975-4e41-9030-3a2beea7fc96",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71509c97-a2fd-4061-87bb-3e695a6ab936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68c4ffee-0e65-41aa-b629-26d2c8b29963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca2b88b-c51f-4d10-9311-4fd7f32b1fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebda04d4-750a-4cf2-abe9-957de65929a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e877d1-3d69-4902-b226-482ce924c843",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "953011d7-ae76-4bdc-b4ad-35bf2419066e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "003cd351-e5fe-4e42-83f1-85cffa906f95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5039c9a-9dc1-48fa-a632-82512db800d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "24d45680-f3e3-4e0d-971e-fd4eb2bb7ece"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d2bbc184-ccde-4f7e-9f68-87dd2cb75ab0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "372bf3dd-356c-4637-8be7-e3bd7022c016",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5370657-d132-40f6-8aad-d5a048660afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d9039a9d-862f-423e-ac8d-e2aea28f7804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2a72d97-1654-4451-ad1c-695bcb094b2e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "43cf2d10-a05a-4f34-876f-f83522c2002e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94eddc9f-8e76-44c2-8d18-ec7c6ef33270",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb70c08c-d64e-4359-9b29-2f77461dacce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32586628-c7bb-464f-9429-92ad6c96c207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799a4a9e-cd57-4b7c-98cf-9f44f6eae9a2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "acf07b9f-d341-40e4-b7a1-cf623cbbf29e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2d9c30d-4416-4c9d-8095-1e6502ff8160",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f72681c-1998-4490-a39e-9a30a09f40c9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "be4f3fbd-0ae4-426d-a7ca-48a1a5438016",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "590efa32-3d6b-492a-8093-d167fba00a08"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0a19c017-1464-45d0-9c7a-4a611509bd30",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f925e909-9ad8-4823-860a-49f82aabe159"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "48247402-78f7-4237-be3e-c167e8c79ca2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f22f5fca-b727-489d-8476-83a229e4ce8b"
                }
              }
            ]
          },
          {
            "id": "f5bcdc30-2f99-4a36-895b-ec7675f476f3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c5052f66-e4e0-4129-a0fc-d3cb7fd0837e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "991ccaa4-e4fe-4ed5-b3de-d49b579e36a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1a7ac79c-f634-4efd-a618-f67910af4aa1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e708d0a3-a28e-4e26-a9fa-6bb3cf67cc75",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "09c92f61-760e-4c5f-9c7e-509b96cbb1da"
                    }
                  }
                ]
              },
              {
                "id": "e8e7f397-68b6-494d-aa0c-696f0aa99bc1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c43520c-f5ec-420a-80a4-1186415f7fcc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "884582e6-06ec-403c-baf7-f29a85720e80"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2452b9c6-d1ab-46f1-ab63-c49a0756b2b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "80b82b6b-c1da-460e-b447-a65bfb69db37"
                    }
                  }
                ]
              },
              {
                "id": "743fd1a5-2f4a-4c1e-8b1b-c75d3675b051",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a02c2391-ccb5-4540-bd3e-35da15dbe318",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dbbf86d8-ee76-46d0-a4e3-daa2180cd7d6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2792b28-7534-4d1b-a623-9d416911b49f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0082d4d2-2977-4368-92a6-55c336120886"
                    }
                  }
                ]
              },
              {
                "id": "6a145eb5-059e-410b-9970-f3c515906f3c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c574901f-b343-4564-8d17-110379649af8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1914100b-6ccc-4061-a834-6d3c2f3e89dc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d76f4f5-7374-47b5-98e2-5ed17834d305",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "02bb171d-bb02-4b57-9e8f-4a89ff43bf05"
                    }
                  }
                ]
              },
              {
                "id": "3c00d7b5-0c9e-4b94-8fa4-361a2caa27ed",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe963ae7-d920-40f0-8df9-5d981773a403",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8ebf922f-0158-475f-8d7d-0208dc97e3c1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "90e9e9d1-796e-443b-acba-b462013c9cc7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "23490dff-02b3-48c8-bff2-25c73695ec83"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "140fb1a9-65c9-49b0-9d12-926bf680710c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e533cfba-a5ff-4493-b9a3-1fe03ea28e9f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "68524eaa-859e-42ca-b1b5-297f8b5d882b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "809b896b-65ad-4196-b2f2-2e7caef7a9a3"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6e036ea6-d118-4f08-b7d9-fce85e8a6871",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "0747dec3-fae9-49aa-9d09-eace2b9c7953"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "90fb2c5f-c526-4bc2-a3de-0a5071b0a80b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d9fac1d3-ca3e-42a9-ab88-4e6247a08cdc"
            }
          }
        ]
      },
      {
        "id": "034bbdd8-84ee-4a1f-907d-01ef5740311a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c0404300-8156-4e72-84c7-47956c2502be",
            "name": "Negative Testing",
            "item": [
              {
                "id": "318de860-b926-4d99-86ef-de30259889a9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ada544f7-ea6e-4f71-bbd0-e61e2930824f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "898ef80e-dc0b-43d2-bbfc-3736d6648403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68fb744e-c469-4e4e-bd59-504cac468b65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8dab13c-649c-4792-b734-3f6e32d67a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4bb8c1b-a166-4c91-b9ed-81c4dfe1c3bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e3eb2c2-9195-470f-aa7b-3041510c5956",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb1420c-924e-4992-a1f9-15a878c778c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bb80d6c-f64a-4885-a12a-46de4351b261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf47322-2c6a-42c1-b78a-bd0b03cb54c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3ec9e86-fa33-4731-aea8-5ce6a2992e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3be8417-63d2-4b2b-b5ff-3e854d20eb44",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "118f75ad-3a62-41ae-86d5-801121e0562e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e7e4988-73e1-4c02-9fa8-06575de01a08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482f5529-1ad2-4832-b65c-84779a0a2f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8db98076-42a7-4994-889a-aaab21a64b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60015d1b-50a5-4074-b472-a51b2f6c3901",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b3bce2-1fc5-4347-8286-9f33d347a864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9959649-f01a-4f43-94b5-217d99cbd28f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "895c9e13-4b7d-4370-b280-597849a8d403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a46d248-d41b-43a6-a654-5342400de5bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc861d28-69b4-494f-a1d3-551a746c86f0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58cd2155-9314-416b-9c4e-b0633d099070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1b0d39f-6427-43cb-9b52-ffdcca1d3f6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a299b78f-1786-4d4f-9286-2f8b11738331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "38466988-b155-475b-a7fd-3562d438928f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab9506c4-b922-4742-88b2-84195a564dc8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40722b83-ffbe-4e40-8306-f33affc51c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0071fe5a-0305-4325-8f8c-7ee6ecf6ff6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd10e9d-aa98-4a0d-b9ce-0470b072eea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "abe7d0a5-7dc6-4b76-92f1-e0f3c4bbe389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4fd2f7-fe89-4049-a919-aefeb8589fed",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f5a8dc-3ba9-4557-830f-3c63ca9426fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b834841-bf40-42e8-b525-2fdf9d153f79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38d7aa8-845a-4188-80f0-2d4b4bfe50ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "df733f26-0596-4767-961f-97272f34f25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc3f71b-a921-4ed6-a80a-ce57d7aa8c92",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64417e7-6a79-4be8-8596-ad9fed6c2eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34e8e217-73df-45a6-96ea-add7b7c08fb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "035fe0fb-465f-45bb-8e04-fcae97bb4160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "503240a0-4297-4498-8898-d959d463810a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31c51e25-735a-437d-b7de-950b53d948e4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd36a200-54b4-4cf0-86d6-f56622e2b0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88c7b5d1-7f38-4c8e-a8ec-86dc9771a15a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f093e8c0-3d4b-4f78-9903-042d47cea7a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "151f5cfb-7a48-4db0-84d5-a280346a4bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "078716b0-8463-4bc4-bba9-67f85cce45bb",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad9caa4d-69d2-4d93-9549-b8622625bd26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a022323c-0a97-42f5-a98c-032dd3360d10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea9f4fb-4bfb-4352-9d4e-32e9b49bae91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "634d2b8d-1e55-454b-845c-5a2fb2936e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f085832f-6c94-4825-92ea-c74451f82f7e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70308c8c-5311-4c9d-a29a-40a742af5047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a4cafb6-317a-48ba-a78e-e6ab9c96cbe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957c9a26-5988-414c-b760-d202cab8f7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "002a4523-46f0-4923-9372-59011bcd3c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26aa9933-902c-4b9d-84cd-7d9b16bdd915",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d543eb-c47a-4c03-b5d5-70087d40ab42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a82ee27-dc54-4880-a691-0518cf22a616"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "989db885-33f1-45bd-b0f6-5b4678f59a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "166b12c8-239f-4f04-a89a-79be03b075db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0cf0083-c0d0-4304-bc89-afded7e28ad8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b95e7e-0454-4ac2-908d-03522df1a6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9abfbeae-ad75-4306-831c-324fcbd4aca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76c897c-99b8-489d-996c-c52f129a00ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "785c3e6d-849f-45fd-bceb-43d742a56948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5dd9333-ed7a-4985-8953-1ddac82fe9fd",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c846b9a-1ab6-4e13-8526-4a7de1387f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea03aa1-1086-4808-b2a9-a36c762ac2b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74546632-5c7a-4122-9ba8-02fba732cc8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c30a6c39-0520-49d0-b9b3-9cff354e4fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da59029f-9adf-442c-90d5-5a25179868b1",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4da408-51cb-422b-b079-0f6a8161d66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbcfb835-e637-456b-b0e4-61cea21a3fdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c041566-6859-425e-bbfe-e38aa1e3d81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "58e0fd1b-bfa0-47a2-bd1d-0dae0df491d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d03cc21-d5e2-4c57-8bd8-e42296ea66a7",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa62476b-9a43-4520-94f7-5ebf4c02d595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbfbdb5f-6f20-4042-8e7e-f753d8e2068d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d997e8d2-cd91-4e54-8438-382ba056ae8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "33a1c7f7-05b0-4390-9bf1-3bdc40351318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44bc050b-6bb5-4d66-a55c-ab53aab41853",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2babcc9c-4924-4f8c-85d1-91371ebc058a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dbfccdd-8c10-4e23-a955-c514807aac64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf45c98-825e-4af1-9c33-5b349c7ca0d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "76eba1ab-492e-44c5-b903-95a565844c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "055d6ec8-be03-4b4a-903d-1db332f06655",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea9a16b-a2b1-4e06-b5fa-b402eb655bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "367473a0-6570-414d-8e05-911e73a3e292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4e02f2-a6f8-4e6d-b717-71d39d9580ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7f3b388-3dd5-43b2-acd9-1f2ff512a42c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d22f580-edbf-43d6-8937-ce75819b9e7b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "649a4356-b2ea-486e-a95d-1cb6cbf5c976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ed030dc-7206-4974-885b-7581f03364e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ecd3593-65b0-47f2-9e6c-adc77667064c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40240a67-d1fb-4929-bd99-ff73499b74c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c204def8-da1c-488e-a5db-065f5cdbe7af",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ed7267-c95c-4aee-818f-511db541a98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6674760a-209d-4af3-82bb-7af58f8ae72a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c32f87-f451-4b2a-bb21-6d154b89e1f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcde1e17-b3ef-4c33-9601-507eceb29162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df1d338-9107-4d16-a951-730e1f981b1d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a61a7dae-3b45-4cbd-be06-560097712fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8631390-5bfa-44e0-ab02-41b414ffe840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d8bf2a-7aba-4ce1-8f38-4df242263649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6cfbe92-5600-462d-b4d7-75cd1461426b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7a508f-8468-424a-a5f2-0de61d17c465",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79eb267-c0ab-4136-806f-ec13c16ad85c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36896b49-2642-4482-90de-040f25010c15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c6cbb53-b500-4439-9045-21b29d1626fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5edf8ecd-5ae4-4eab-8e46-3feb095fb71a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a6d7c90-fded-4eea-a0ec-134560446823",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "754f3866-87da-45cb-9abb-912d759783b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cf27f80-379a-41b9-a788-8b880fb5c22f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49193258-7853-4e36-86bb-08c8608f65d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a78c7a2-34c1-4b87-b993-bcd4bdc4e21d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b6ec3cf-5015-409f-b8ea-e9ca45cd4d10",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53fa82e0-8695-4229-86cf-8303197604f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a990e666-146d-4b6c-a74f-68e1286df10d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca194219-e55b-4693-9587-fae3a55e40b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5ac32d0-4aaa-4170-92a1-216bd45cf4f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa4eb013-6823-4f87-830c-c7e8aa02eff1",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f6091b2-3bab-48bb-97de-29cdedebb58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "891208c3-246b-4ffb-9917-c217aa688b04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df9f339-7656-473c-979d-c8fe098253a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d970e9f-fbb8-4a5b-aafa-ad6009ed4b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d570b5f-6339-448f-a526-93704cd4be92",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeadacef-734f-4f9b-b84c-41f9c439b947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "971d83f0-686f-42d4-b267-cf3e81c86a82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e5b94f-d600-4726-aadb-3b3a271d586a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cf574bb-f5d8-422c-8e5a-b7ee1d257356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fcf8839-ffbb-4ee7-944e-afa34a8f1883",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f03a3d-f8bf-4891-a877-352698786a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa282b26-d0ad-42fd-95b2-eeeec8e66fe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe4c4de-188c-4626-81e4-44b5efaefe68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11ca2bd9-0a4c-47a4-9310-a4e9abd094fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "124948ea-5d2b-4cb3-a7e4-f92a0f6462d8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79f76a7-cc1b-4831-ab2c-60c99ec4b856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9b072f9-91cf-4efe-b2d5-cc02fbe0fb99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "244288c2-8a0b-435b-bbdf-198b7b6c9f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92d082ef-c3ca-4733-8437-982de5bea609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff43bd96-169c-4af7-ae3e-b407062f8f3f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e629f4c6-25a1-4612-a3ad-87441f7c4256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efdf756b-9697-4628-b413-fed7b8c3a30c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec7d7d2-1be8-4b17-b36c-db622b2ee660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f76506d-fb40-4b04-8170-ff793daa5613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b304264-15bf-494b-b05d-fc99c0bebd01",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "285eb4f1-8cb3-4d26-8539-3a6a6bd8d27b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aadd49ad-926b-4de2-92bc-ecfea03b23e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd79b72-b8a9-4652-935a-d84869e5c5f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b58fe5ce-63ee-4032-8078-cec65027ada9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f50a36-ce1e-4769-8711-e318f0bb841e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1042674-0193-4b88-a823-afb061afc81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d83fae78-576f-4018-906c-d3b517e83bab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81fb757-72f9-4e73-8253-7c0d1c9f570a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e72e378-be5d-4997-9bdb-74549c138778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31723456-dfb4-40f3-8fc2-26977afbd35d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "116f51be-02b3-4e3a-94d6-da8afb4cfcd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d29494b-6949-45e6-8420-9477ca5325a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff497b7-d0e5-48ed-a4ff-e280a9d64cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a0eb1c4-c794-4c87-913c-de0d25b03fa9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f1c8c706-cdab-4748-94a4-d4a1b27f361a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ae6e3463-b3f9-48d6-a4ae-93ef1d1d2358",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a89364e2-26f3-4404-9310-e8fe1891aded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3f9686d-3b95-45b5-8b23-d9e04045dce3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae61f278-70a3-4ef6-a063-6c4645c74ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "edce2633-82c6-41a7-9b83-7adf3c834e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d890f50-3cc5-4b2b-8ee7-1a5b1aa87216",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a701120-cecf-49dc-9c05-1ec9933b7fdd",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "e35e6f7c-93ca-456a-a073-d0000136c231"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb3072b-d127-43f1-abde-8754920c6070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1e84bcfd-c0c0-4892-a9d8-7a623b1d0a6a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c76f13ca-d903-46af-a8b0-199a337bcf39",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a59f561-2df3-4af0-a2ff-1f9da3d87430"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ffbf1d1b-0e2b-4727-9cd2-b151bbb7f623",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6bd0478e-f08b-45b3-8fb8-2b0c610444e6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4f863ade-4d9b-4187-9451-dd5d1a8fe168",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6df65420-fb8b-4216-a7f0-16b03f40d445"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4f6bfb8f-bd0d-4700-860d-5860c6653310",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cf35434b-88d7-4af5-b024-0433d09a3fea"
            }
          }
        ]
      },
      {
        "id": "b9c0515f-913c-4399-a2f4-b9ab44838f77",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "9a77940a-149e-48b7-9afa-1d9891acbb8d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aa0de2b2-8afb-4f47-b63d-00f21c297f09",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5e5a77ba-b22a-4a92-8b60-b9673c591b4b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb064e6-0f1d-482d-906a-71365ae2f7c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21e3937b-b217-4996-9564-85d9a71c1d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0067428-0822-4d4c-9822-d4bde67c12d6",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43878afc-b085-4c60-964a-e640a89ea4a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeed1554-5d7a-4b05-b4bf-5b56de5c9123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cfc4a10-40a6-47e4-86bf-b5dab108769f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "659d50e8-97ec-454a-b6bd-3aa5666b175b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8b22963-81f3-4b4e-b0d6-0cb4cdb5b6d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f4ede2-6c94-4c48-a04e-a5bc3e67493f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47de685-fdce-4d9a-8dc4-ec3935b03322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a59e3319-c25f-4d90-a191-0c29c9e248c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317a08bb-7b74-4c0b-a993-2133a2b4ed21",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3875be84-634e-4230-887e-bee9a6c2efd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6a506d5-e9bc-4ccd-a7c6-5891c9e6271f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886ff296-1a17-4421-98cc-e42e3699dfe6",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57bf125d-bf63-4d07-9cc3-4875fb743a8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56c95a23-a096-4104-a7ca-5e44182d4b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba18c202-9f21-4a02-9227-78d4328de7b8",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33389390-68a5-40a2-b008-9d097549587c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f944a0d2-9f74-4122-8013-10f364deb73c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e38b441f-fb91-4966-a3c0-1ad8b1089fa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32fbbb36-8a6f-4d77-ab6a-7847a21b30bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af617f6c-939c-48dc-bdb4-a2aa526f1d7b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a77cb921-5ec4-4b3c-a0b1-8073e6c0c713",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74d7ea23-bc50-4086-a618-9e21c34b3888"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c844817-c457-47bb-b262-2b1c6f7a77d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba1b430b-ae62-439c-9005-40869fc7e5c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e510574f-aadb-45f4-8a13-83bd1369d666",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a218847-f21c-4c30-85ac-b6418de5c5d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c33a3e6-ab37-4761-bfdc-faddb41b6be4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1afcd5d1-1760-4eba-9cc7-5ba19551e2ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37dfac91-bb08-43a3-b46b-ca876ce2026c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4141425a-cdb7-469a-8f69-5b179d5174ab",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f60c38-89d1-484c-96ad-bbc8e7d70764",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1ea602b-71ae-45e4-860e-6e53f1ea05a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0277b8be-2022-4512-a6f3-033b18eb1b05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "415a1a4b-18d6-42cc-8ae0-6b298a74da0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0841893d-94db-4dd6-bd97-9b969377c570",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de472f0-fcaa-4ce1-b8b2-9889dcf7a588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0e84f0b-a68c-43e7-8d6c-75279201f8e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4126994e-0933-457b-8926-557dd87866a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e692cb3-59b1-4e62-aa8c-9cee2465b122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c32776-10ad-49f7-b7f7-5eae798b8036",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "690fcdc6-d60d-44b3-8539-640608f94bc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd82afd4-c286-4184-9212-b7b046d2d897"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38420d86-cf1a-435f-930b-50735e8c8b1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "462ac4fd-c8d4-4066-85c6-b3dae187fa80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33639e1d-a0fe-4c8f-a622-3123f1a8ce4a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a821234d-1502-4807-a761-0bcdc8433175",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be924622-bc27-473d-a609-161775195d8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60652e22-5991-4f39-ad0a-34f3353cb8f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec57ba3c-ca04-4b37-a845-f070d6a6a462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26855021-0194-479b-bac7-c7f118815fda",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c3edf7f-eca5-401f-b857-d077a54dcda3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e60d9c08-aeee-4eb1-a70f-3b226f670f2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "386a8720-0d16-4115-a456-a342ce0dcc2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb28e5ac-d9a3-4737-9723-d555f7e2bedd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd65b64d-2dc5-4cb0-a255-d90f627b4af6",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a71b96e-4bb9-4897-90d8-c6a9cab9b19b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3026d888-814e-4a8a-823a-90d9b01b0061"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beec47ed-4fea-4e58-a566-d809a5a3b95b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2760e63-f2f7-4147-a42d-a43cf9c79a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68112b8c-6cbc-48c0-b134-491c5aff39ce",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805409eb-91f0-4961-a8d7-b84ad91b8faa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88833720-ea59-4ba8-b18e-8bf885be7377"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adbee2ea-1505-4884-a739-7683abd536b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16d3f78b-f9a9-461c-9c91-9194adf5a184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631aae35-bb22-40ec-80aa-cf2410b041d2",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74553da7-31df-452d-9aee-2a84e46e9414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62a92665-9962-496b-a7d6-c771431b0cea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "296bdf86-a640-4e32-a938-7db6aad343db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b170267e-5e55-432e-9cfd-799351d9f8ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d8244e1-d2e0-478f-b6ad-0b2a5d47dd57",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a6c16f-e7c4-4933-8627-ad6844a32d8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c9161b9-d0a5-43d5-bb1b-846f6ade7fda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6522ae6-f7c1-42c3-b104-5282e389dba8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75ca2912-120b-4f2c-9f9d-9d7e38ac6fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c0a65c-8165-48c0-b5b5-e84e072e7d3c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e53b9954-a9bb-4fb9-8ca4-1ace90f05892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae523bc6-ecac-48d4-b9f0-ce2e7aa30e16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0261836f-4a33-4ac7-b659-99aa44e36274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beee2201-f43e-45d4-952f-84f7b40f241c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "047ddb8a-629d-41b7-b801-5fd976946955",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22baea0b-3e10-4f5d-926e-8bfb1a06d82e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "743835e2-af02-4953-b551-cf0530a4abd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9271bb86-507a-4ab8-9c21-d959cfb84a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afe56e02-a847-4b08-a5ca-eb9eef90c5a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ea7ad7-b68c-4ca3-9588-5564a2150a73",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a004106c-eaf3-4d4a-9e59-455975920e78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e3dcded-aff2-4091-8492-df95c9cd6df8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5838ce83-69d7-4a25-93c5-de6909677428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72577e13-ed58-4c50-bc7f-9330e5de47e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2fbb427-3118-4e48-9b5b-ffdcb044c7a0",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85f9eab-ffa7-4dfb-b7b8-a61c23763055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14e1a04c-e4e4-4989-9e6a-033fdf6af691"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5f98d5-3b03-4468-a151-9437150e54a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b42ffdf3-2ac7-479d-8274-7e2ca5fec2b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8dde7c1-949d-4638-996a-4ed54b01b9bc",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed70d088-ce07-43f8-828e-8bcd32906b6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8772bcd-87d7-4951-8269-91e0db3d6fea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "829f1de3-59b7-4a29-b188-983a6b11ee5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e4e8f25-93ca-4a0a-ad7a-782728453b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7892970e-6345-4863-bf6e-9b10924ea116",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6758b6d0-9a9b-4bc9-8213-1417c3a23542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef50a602-f78b-49c3-9cae-36ba196b2ebd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c88fe2d-8422-408f-8a29-43ca67ec4f1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3eef102-b045-459f-94cd-edfd8972bff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e1fd3d3-6472-432f-a945-b84ba7eb46df",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24db31f8-103a-4e19-a4c8-5d446ce9208d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8abe9058-cd66-4356-9412-25ed06d86305"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfbe7f57-a4ef-4cd8-a1d9-3e1dec5b7f50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89f4a5d2-340d-4fe1-972b-02f5a1ad7792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "770a7282-39e8-4176-8335-d3169ad76cf2",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a58e7d-f1a6-4692-ac5c-139ddc991de7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79eb1f4a-81a3-498d-a38e-4272948e475a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf7ecfc-f260-4aec-ac10-feeeffe4fa26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46ebd217-2a20-4ce9-b3f0-e3dda5b0505e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b12946-5ede-4b2b-bdde-8f4788263ebd",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e75a16e-7208-4189-a435-cf2328467cc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b646928-f676-4166-ac3d-f37efd671aee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdda9ed2-b533-43c0-8b1c-e7d9452aec4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51e320db-65c1-4a0e-9eb4-c11f70b28527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83fde0ed-ee9b-47ca-86c8-a2400102440d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e6d81f-4772-408f-9c27-89a4b97f7be5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c14e35d1-1cc5-4172-9771-fe055387ee40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e02e749-531f-493e-9d88-a717bdbdeb81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce84c473-2e81-48ad-bb96-e9ee666b5e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fef5ccb-b7e3-4080-9299-9e61ef60d470",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee13699-8bd5-4ac0-a413-97ad036da32d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b3d4364-363b-4755-b9a0-06af2adf6be4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df2cd08-4d5e-4697-afba-b6e68f340257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "892d40d3-07b5-420c-8adf-9953c9adf395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f70562-5c2f-4275-b562-9dc6c96e2201",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83d1620-26ae-4205-8ec7-85c88d3a04ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1950828-9426-4b4e-a8b9-67f2d1fa8da0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c12e71a-46fc-498b-afaa-11d0bb92a530",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f617905a-3262-4864-8470-261f9da6427d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed84f35-ef92-46f4-a13a-64b29077f2a7",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "316d276c-a2ea-4115-9458-745e22919111",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "124333b4-64f2-4f6e-ad9a-fa9cacf516bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5af1d1e-a36e-4387-85f6-c94c3e3533ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f65c685-f309-4545-ba84-bebf8f00dbcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad8c7cd-5c0b-46a9-9668-30fbdef94ee8",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d8a994-9566-40a6-ab16-429ff085dd8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2132af78-91de-4298-b835-c98006e3edf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad45be9a-09c0-4278-884c-ba2122a6e552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a326c9e1-9dec-4a0c-8349-15558e3337b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53cc78fd-df0c-4b7d-be29-92ede82bc4e2",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f13d5b-402d-427e-89be-9c0541b29ee5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d934a473-0281-4f37-872b-1004ee850da4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c847366f-00a3-427a-8846-da6b5d3c2d8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ccdc600-7fae-4dc8-a97c-4d921731c527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8276161e-e35c-4567-a288-0bfe61a2a8ca",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a40bca16-c58c-439c-a67b-153546372ece",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13ea70f9-98c3-4bac-a0e9-d5e30956df7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e50ad3-d41c-4ce6-bf7d-1101634bb563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "698ecdcf-6c5f-469d-bb59-9b2e14c9508a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "effcef5b-1b6f-49b0-b4ea-496fa84a0b8d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc6f584-1add-4daa-a344-caea892afc0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d48e250a-240c-4418-be68-9d6ea50abe97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d1de080-07f5-411d-8027-4f04486cf78f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f838dace-1803-432a-b8a3-40de75e71bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ddc902-40e0-46d5-a8a2-a8ffe1546b67",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9ae48c-f672-451c-9bb5-2634a6f1bdf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a2b5dad-7780-4020-b3be-5a82200cab23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b846c20-41ed-4a6f-99d1-5ac0601fed18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d932eaab-5961-482d-95d2-810fd47beefc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f1dc803-1526-4534-b013-f8dcfb394de9",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c1562d5-a4b3-4b66-b3f1-dbde36102825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbc70464-2ba9-4e81-99b5-e11a8bb17e72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd0e8dfd-82e4-45b4-9ae3-d184da6f428c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d074bb2d-c4a6-421f-9d5b-d0682bb7a18e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c14b6421-8c6f-47cc-a223-d6b1b8f56744",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b474e33d-ddc2-43e5-bed7-bf71e8d9f564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9996eba-f3c4-4a91-84ca-7cc9cb88f014"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65feabd-aee1-4dc9-895e-90841d67ea73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b90bedcb-c5ab-4e33-856b-50ec5168fc98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d4c214e-01b2-45f6-829b-ef68208fcf42",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfdb8aa8-cd0f-4b09-a789-5cd0cc1c9b07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af298abb-fc20-40dc-85bc-91fe3944cf6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "732a0cf8-4060-4129-b631-f8b0305417d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67aa81ea-5444-4424-ab4a-9aeb1a966f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f215ae-74f5-472c-b31a-3dda24e0d4c6",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e433c11-5e28-432c-a858-a3de3ddc6cef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "270dfc28-d6cf-4859-ad4a-77ccb568c967"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ea53d2-09ac-4681-bb81-316ff39a883c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef83ed1a-3796-4d75-a177-0177f847b731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d9ec47-83c4-4508-bc96-df18ffaa898f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af875f1c-e511-4a90-bd40-279aa6b651cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30985270-b126-4642-821e-c6e97dfcb579"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c19e790-2162-406c-bc5c-62617c8bca9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b5876f0-60d2-433c-9374-5c8aa74503f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5922d358-63c5-4bea-ab4a-31c690166619",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b35652f7-f777-4b08-85ef-e38106d1d0f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d1372b6-019f-4ff9-81f5-12edbee3585b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c3f861-0811-436e-8625-98191a301e1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0571f17b-0443-4fdb-898b-a8e39fec5636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d45400-addc-4182-8288-d6cc89f0478c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acfbd454-92ce-4740-95e7-529aa581432c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e96efea3-6926-4ebd-ad50-9a2deb9dfffa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae30eb7a-f4ed-435b-8ca5-52ac1921494c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e48a87c8-190f-4c32-a4ba-62fa4eab5c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9be6900-74a7-42c5-8f5e-5c154a4dafd5",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d01beac-45f0-4ec2-81da-638a61fb15c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1bab2a9-76f4-4814-b7dd-8a349d798db2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a577fff9-927a-4971-b2de-1b8694f15de9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baa097f2-8322-4a88-9c9e-f18d3c4dc9af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cddf62ff-2800-42d9-8f98-2174170de46f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45566672-95b4-4a05-b241-b605cfba0005",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "450190ce-3031-4edf-ae42-2ec8dab03d9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "118e0ab1-805d-4bfa-9a83-1d678b6f89be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce0c2834-35c5-442c-b435-ef6b8e5b9b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b3cba8a-844f-4c63-81cd-4392a458071a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6160991-8f19-4d24-9525-10ad60f9bc10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c422a89-a2ca-4dfe-9d64-1d5cad64ac09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "248bb494-065c-4c18-9103-7a33e25bfabd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9529fdf0-7482-4c11-81e3-b5c60ba6abca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31a8ad9-0610-4be5-8a87-57787bb66117",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c392ba73-b81a-4b7f-bfeb-0686615495ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "934304e1-37f7-4fc0-ac2e-2414da089b3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2dafbf-cb24-4d9e-bd94-b45c320e1730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff16e661-5593-4fbd-8f10-5bf902d999a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3790b5-bef4-4d72-8441-b06bde74e3bc",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3321c29c-c7c7-4727-a8b3-825128238e80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c03e8556-d9fc-49ee-a3a3-c4e4f3592081"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58afca30-57ea-41aa-ac68-18a0f89ab0dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12b05489-1dd8-4b15-a11d-d24a29d9138c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "746390df-c44d-4565-8e6c-10ef3fabf05c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048ecbe8-2d7a-4523-b7da-6cd0686b60de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1838c997-4781-4d8e-a8b3-72afad0e4fdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b3762e6-c078-4235-ac78-509850f2b5fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5571a97c-e4f5-49b0-b881-bc47899ca5ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e362ad9-0013-4161-8f62-c099c407a67e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce287ff8-1686-4e46-8e71-473c9cd86f8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "159a7be7-6358-4569-b882-455bf81bfaa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d4ab09-e2af-4367-a928-cb0223d506ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a17ce44-cf3e-4b36-8ed6-173165d7ad2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "851965d7-ab8f-4f76-a3d7-c656e974050f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3fef02f-c254-4999-9883-9af66166d1d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e44ee1d5-6b31-4226-b664-47fdfd25ad90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d5abba-d046-45f8-b7f9-62e767fb3e69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2c81423-3af2-4944-a9fa-9638f890c56a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c9f83a-2f36-4af0-b006-eefe2ba25f60",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d5015cc-d384-45a2-bfb6-e2022090baa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94908b6d-0e22-4c38-96fb-19b6fd44e5cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d559e8e9-cb7c-4732-bd0a-576da201834c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "039be41c-f940-4ace-90b6-92935605975c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c640ac-1bc0-44a0-bb65-ff88cce930a9",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162f8153-b1d8-4795-822a-71b4526f3354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c239f304-5fc5-45fe-ad1b-3464f3206690"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f999770d-bd5b-44d3-8c74-326252004179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "955cc468-bfe9-40c4-aaf5-50161a62e67a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d40972-d04b-4224-b5d6-f0983e8f95b6",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50342ced-f911-466a-9c6f-c29875b29461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88eba4a5-57da-4271-aa88-5242c1fe6d29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7abf707-ccc7-4952-989f-c27cef49125a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2805a553-ec73-429b-a93d-d4855fb1c25b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6bfb5e8-de53-4d26-8f75-ee6d1b086bc0",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1a2a0f-3ba3-4651-82a6-754d0b7250ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba2e930-1496-4ed4-9303-3a127ad3e99f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10e7ee3-7075-4e32-8fe6-5e59e75c1d51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f0f5f87-bf9c-4d7e-aa88-77ae22216ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f5c56f-20f6-42a4-9bbb-678866d07899",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62a9ea1-b1e8-486f-8f64-d1c4c3a84ef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b882738-f210-4a5f-a987-2cc40159e32b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "031c7308-b999-4da8-94f7-6b386c73ad29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3396923-bc0b-43df-bb9c-4c2801f33010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f69f994-a73f-47af-9ba2-b538610cf918",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe0895c-6d43-4051-a4e4-c099d381df44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "859183f7-a23f-45ed-92c4-2e1a4d1e32ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d8160a-db33-4373-9914-5eb50ec30f4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c95a4551-e873-45d8-9cbd-88dd5a37da38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c68b11-168d-491f-ae94-3dca64efe017",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b098377-9165-41f4-8f4a-4c7f7097271c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50369b74-c480-4e49-ba9d-e17dcf2f6384"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1481c498-5f9b-49bf-b2f5-570b9ed64e59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67df119b-f036-43f7-9c92-3bdc5257a13b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f0aef7-90f7-4ee6-a66c-ac61372aa9b5",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e86a97f-89eb-4174-a03c-f9520c555cde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b43d8380-f540-455b-aad9-37f6039074ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd09c259-cdda-439c-a884-755782f44e4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2600c361-da27-4ecf-9ed1-e79837aaf6d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49af3f52-7df9-4bdd-84e8-413b8081ce27",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9525057b-9114-4e80-b285-85b4c0bb51d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9911f02-fef8-4d51-91bb-8c15b8334485"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f2b48b-eadb-45ca-8f78-0d4c2054ec98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39d3cbeb-13de-4f44-87fe-d2f20682f29a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f7c5ac-3e33-4522-b2dd-5cdd7dc2fb8b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f5513c8-6870-4cca-aae7-fd1a8d3c6583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a461aea-b56e-4bdf-90af-4525050297ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86fe1b8a-9771-46d8-80b9-556f539f080c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fb4294f-a007-4ade-b871-2e21e3518164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4823a5-1001-48e7-98eb-62f153724533",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb68601-4172-426a-8f9e-ce653ee0ec3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cc5d4a3-1dab-4435-8f1b-594fd25cf42f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a48f66be-3177-408a-9f36-acad66f7423f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5df43358-c015-49a7-9120-3443b0acfaaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d5eddd7-5aff-414e-a7b5-1079e6ef5ce2",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2055fbf9-b1d5-4f3d-8b9d-cac74dd1d21b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce40b523-253a-4b23-9025-68ee6bcacae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a5009e-7a4c-4394-b7ae-048ccd6d90b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a87864e0-463b-47e6-a229-9a7d53ad7d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de7d30e3-5c54-4a81-86b9-36fc8b75be96",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483827f5-c2c6-44d8-8431-d5f773558ffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfd03344-07e8-41f2-8f97-c5700b59a0f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d7e1fd-a22a-467c-94cc-b5cad022bcee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81ed816d-7cb8-4ae5-a3c3-ed06be91bc22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce99b35e-519e-4f55-a3ad-72f22ad4c051",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ccfabb-0d4a-42e4-8b05-b9320c0038bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5ba6442-8b13-4172-b27e-aa1e98d93341"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed66d09-1ae9-4ff3-95db-b4a187ba48fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da92a30b-a447-4587-bff8-4df39779da08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46129e16-684b-4670-83b7-ca9a423014df",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d623e24c-b152-4fc6-bf92-4c187cd66009",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56474a78-81e0-442f-8121-38bb256a754b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2feb1c-3ffb-467e-8280-362d8415200f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "023d437e-b561-4354-8c6c-72f9403ee473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd24205a-a7e0-46b6-9241-31e98f7e959e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c49821f2-cb72-49c7-aca9-8efb17c47abd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "767d1177-0f82-4a3d-98ce-9e6a5b6c1893"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a1a1635-c52e-43d0-9b73-0a22cd5f746c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc9a71d7-634a-4fca-95b4-0443bf0ea0b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de324951-dceb-43c2-8f2a-934289caba5d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c169d4dc-b2d1-4705-9d50-6083e39f71bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fbb5201-52dd-49a8-bba4-c9a0783c6e8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20206b9-35c3-426c-bfac-df027582978a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f58602db-38ae-4a69-9d73-23384fb00933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d8aa825-676d-4873-af01-0a9f060dc9a2",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9897cba-28bf-4bb0-b786-60f0a9703adf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c67c1d2-32aa-4954-9ca0-4a0b3631d3b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d1d6f2-57a2-4be0-bdd1-cdf9193b4efd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "420776e8-e4d7-46e8-96c7-8756c4f8388f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0f6642-bf5f-40a0-9865-f275276e0354",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f928ad-62ff-430a-ad31-c5dcb2bed59b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d238f83a-66a2-4fe8-9ba3-8ab7664bf243"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "383df0f6-034a-4634-b784-bedc18ae38f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9b9be3b-df11-40a6-86e1-79f6399c0408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b7979b-8c8a-4511-8bf2-db226a25f2ef",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497d7f8c-6c1f-44ed-97b6-e6b1231c049d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3b2be34-e295-46af-8345-2cf23f0dab39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95bb7c84-5c69-41c9-a2a9-e415834fb5d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45d166ed-d3be-408f-9c13-08cbc331c2d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11db699b-de8f-4ecd-bef7-92a45cedf7ac",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae5c5a85-7710-4dca-87ab-486c638c9962",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f4bd458-b939-4b90-97e7-38c48bc63a94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbbcb1ab-4465-4d6c-855c-2ee890142664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d490e7e-c498-4d3b-9033-de80b2d67f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "210c1f1a-878d-4506-a236-a5a90c48f5ec",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94404715-84e0-4f82-8131-0199d37fe96f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b689831-3904-4390-8b9d-bcb8a77c1b70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30724058-3cc8-4317-8f8a-6ddcf713505a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6db60d67-731f-456d-84ce-00a386cb51ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cfbdf2e-8085-4510-b926-9dc4e7862872",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef849152-f360-40f9-acd0-e1fb4e95004f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd2f8e31-a192-4167-9169-f1cee0bc4b4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67093ac6-3440-4efa-9efe-a85eb4a0bc19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "433bc037-e9b6-42e7-898d-fffb1dccb80f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb874c52-d88e-440f-9674-96e73a966b70",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b05df8-904f-4c61-b050-9716ca7bbed5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cb81226-b7bf-48f5-93aa-c035c7b0a4d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da607a3a-b5bc-4809-b79c-d7a2f30337f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d65c206f-6cd4-497d-8fa4-c69a8ab65569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bade3300-c65e-4dd8-a036-8777cde15d0b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd96abe6-bbba-49d1-b654-bcfc151c2580",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77cb1c6b-431f-4932-8489-0b956e6905c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3899a990-aa1f-440a-99ce-8f6534f812d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e189e04-b58e-4da5-ad37-22b6bd6a30f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e620c9-a7eb-4d31-a3d5-5cc980b79589",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93712037-0d59-4422-8e7e-781bdeabda19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8a58418-93ab-4487-b114-bc484135d2e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "944e1649-5c41-4065-97cf-e7b87d70f78b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bf4a846-18ae-4550-8ade-7df842d58f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50eb8616-5acb-43f7-a14a-e8b06047586e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ad6e97-8d40-454f-91b6-a79dc1d86b7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6040a6fa-91e2-404b-96a4-ba6aa97990ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a2f9332-1c0c-4049-a4d7-03951519a7ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aba9874b-2cf0-4163-90a2-1ecff1b474ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77b2e33-c138-4f59-8558-bdb5e5d6da1a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2f6528-be3a-4438-9ea9-fb931f87d58e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b87a1543-da31-4620-b143-ecbb1db072c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d436bfc-df27-400a-bf71-aeec9a478455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9710c55e-532f-474d-b1ac-ef95315a5ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f4cad0-c457-4e0c-bd2a-5941db60d8c8",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0673c1-c55d-4a7b-b8bc-573fab80dd50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0e1417e-e736-4a86-bda2-c5a082bf6b19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1240b807-6c62-435d-8e44-faa6c0cdc634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa2e9d3e-db50-43fe-866b-26ce1058422a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3297f4c8-5b14-4668-a3e1-3c7fef352525",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97480b5d-c611-423e-b669-a45a3bcfea5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "787ca3a7-7660-4baf-bb1a-6bd000afd910"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b50dd8b0-135b-4ce1-9231-0b0b073125e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b05eacef-b65f-4729-b14a-d72797c54ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f774eda-1db3-405d-893c-9d7140a8b07e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f799c13-e7ca-4a39-b4fe-cce500eb9a28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bafaadc-b1b4-47ee-b46e-c519eee79a6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "164f4ce6-6895-4b90-b1c3-5839fc63dc03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faa8ab1d-c670-4b73-89e6-8e6e788318a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f88e9e9-79af-4ae3-aa6d-b69f84de447a",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ac5f9e-4e0a-4400-ba5f-24046c60c5e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b56220a9-a671-4624-85fb-4e144a3dfc72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ff4398-97bc-4ea5-8cf5-a0593a366861",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92bea77a-7089-49ac-8418-74af11c1af70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb02736-424b-412d-aa41-a5a847a71bb5",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ecac195-b4b0-42b0-8b5c-fc625f6eed52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdc18c4d-43db-4f47-b6f1-2ce8ad6474c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "917c0498-6e74-4527-8b6d-b95d546bb8ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f4e2760-5d16-477a-b34f-f8793bcda18b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd4aa35-c622-4174-9b5c-d34fcfd303cf",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f1480f-abb8-4dd8-9917-4259080737fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8650f421-59aa-42af-a3c3-e34f07f4cdb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3415e304-7cca-47c0-8134-528ea544840b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57c886a7-d0fe-4cfb-b10c-08b184efda06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b65cedf9-88fe-4e19-ae13-937348d60f62",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa543fed-c4f1-49fd-9966-24f6fb9e4a6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b437a71b-9059-4463-b852-21e39b35f85d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13370279-b7bb-4f65-a767-65bac022b5ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eb9538d-69d3-40b7-a8f4-22d2a2e45f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e4f988-f299-47fb-8505-4ea415649266",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c85478-80cb-4aef-894c-efa615eee93a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba75ab97-154d-4409-812b-ce90df27a025"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ac735e-2459-4061-b9cd-1e8bdeb4aa00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e30948e2-1a26-4e04-af2f-7693b5429352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "535088c0-084d-4030-a70a-7ed931293018",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d726a44-a7a4-4cf5-863d-190e8e20348e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a62b8d77-472c-4ee1-b549-07ddb4066240"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa21011-7bfc-4cf0-bf5d-4ee0e6dfdcdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "664780fa-095a-42b7-8dd3-8e48e878055c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b33d4c3-d44e-41d5-b597-b0f823e78bd6",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2239b3bd-9ada-456c-b664-f68a9d7ef3ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3db9349-7639-4b11-afd6-f28b07fa20da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2a70ad-9742-4675-b8ce-1991f657305e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "042bf2fa-efce-439e-bac8-80a9cfcd3e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "577c0668-758c-4853-bf8d-06b654c038ff",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455de6af-3522-4d68-bb9e-97b4a499ba5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "014e4a02-e3cf-4644-bf43-53bd7eddd526"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f95af6-5e66-4001-ac77-a057b0183f70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b55d419-d8e9-466a-b5e6-76a79f7cb25d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1925970b-e505-45f5-aba8-3a446c7be70f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a616b1a4-d588-424c-ae5a-8619b5938bed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60a3b58a-e73b-4523-9fb1-60e5b541ed5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c0b1162-f56a-4c99-b987-423f04d2240d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d568225-1ada-4528-b84b-686491de9338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09618b1-28f2-48e2-8d5f-0605646dc615",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc412853-f5d6-492d-8e2c-67785d00f73d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13abe3f6-5ce5-4cca-b1be-e6a93705cff6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d36b833-a5c7-41d9-b349-671089d9d7a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44829bbb-a455-4470-b7b7-d8acbc425a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f70bd2-f76d-4add-99df-c601147bcaf3",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef78c671-472c-48a6-8c59-f50bd7d4df1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a835ca0-ba77-48f2-ac5c-e2cf453fa3de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18af36f8-346c-47e8-81e5-f3cb8edec10e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e24d4eac-1d68-47b7-a969-2898999cd031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c82b30-18a7-43c5-95c3-94df6d9e7a74",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f44d13-acac-4432-85d7-80e8648740ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "985aaa46-86e1-48af-a588-dc32ac399916"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee2599c-7002-4858-8312-284d2cdcc3dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a01dd3c3-95d4-4c92-b045-7ef90a85b118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ad1ff1-56e1-477c-95bf-04efe24bdd55",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c32fbc9-c5b8-490f-8bf8-d60865c535a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a90fc46-1dd3-49dd-8dc0-6bc1f0db9a20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ef9e1a-a714-4901-a6df-856038633bb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a455b8f-281e-437d-8717-339b66d1458c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d10a060-10c2-40e3-ad37-e3afb282b6d2",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4349fdb4-5274-4ba3-9c36-8d75d3c5a097",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc7a5edb-5be2-4c36-87cd-275c4aff6c77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc7fa57-86f9-40ff-90f0-42a593baf995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07964d10-d940-4139-89e9-9d328c19217c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9de0127-3a79-412a-9ea5-c860891597b4",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f38ba694-a063-4759-8ecd-fd51ee1b79d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd29f0ae-1492-46e3-aa94-5e6f34806e09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71542b9f-2d8e-47d5-a7d5-f384aa8a2e9e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f78af0e-ca69-42d8-8c4a-dea6c66274c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e8a986-781f-4a96-9a08-906b3f5bdf2a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "441e9f65-5beb-4e0b-9761-f2a4f1693ba1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcadb679-e346-42a1-93fb-539d2be67ecc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87cb5408-8d9f-48ae-98c8-dadb7dd1c1d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74969794-7e97-4dda-a49e-5ae4382d5a65"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7078bed-7c0a-4656-b8a7-f1e9ad1d1048",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "99457b82-5032-4aee-b08a-99ddcb0b6d68"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0251342-55a1-4089-9c23-ff041a11a732",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3407c494-d7bf-401a-8828-e4bb9b947caa"
                    }
                  }
                ]
              },
              {
                "id": "d55f2315-3231-434a-8e80-ca6a118dd303",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d3280b4d-8fc2-4cce-abad-11b64f3b9699",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d51a567-f87a-4410-b231-5bf2d0714b31",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "341d2b70-8e06-46d8-af3d-067505d7d615"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a7d964-1ad8-4ce5-a100-a57d6191b53f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ea4d0ec-a0d9-4a42-8001-9b05241826b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76833593-f438-4807-a262-bcdc33183da8",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7cdd2a8-2042-4581-939e-1abae35f66a8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0bb65402-0789-4393-80c1-2704517ac6d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7e2f4d-01c8-4a6d-bd4b-ab046e03f7d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "67448458-9c3b-4054-b817-064d97a92666"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0eb3aca3-7e8e-4691-9ad3-962f0f9c0a76",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a1d8f422-b021-4123-b246-852070ceb858"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2322dd0-6829-47ae-8458-eb83b5c1e875",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c94a1f81-5488-45cf-a0be-aec2e9168f73"
                    }
                  }
                ]
              },
              {
                "id": "da68b42d-60bf-4363-8738-6911b0a31a03",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "97d1721a-f0ac-4ecf-94e1-c63265924d8e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d890b4-131f-42ec-be07-0edc8c8d6401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a21184a5-7764-4a3c-b123-75f1f9653f01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8235ca1e-b986-4b0b-a2f0-8d61236f9035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cb154c8-e38a-4d82-9a29-f3e9e740df40"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d9c5f3c5-c1da-4ad2-b531-95a98c637342",
            "name": "Positive Testing",
            "item": [
              {
                "id": "19c30e62-f17f-4ea6-bc4b-f174889ca897",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5977beac-182d-4299-a99a-6072497c7b87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a4f0b346-85b3-492d-9684-c1ffc4579a99"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "584d3126-95e0-4402-9c6d-23cde37799b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d16a0f0-c7be-46f6-80a4-6d00239b594a"
                    }
                  }
                ]
              },
              {
                "id": "424d40af-3266-472f-af20-4f1aa608e5ef",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6913d6ba-04af-483a-92fa-3131715c6d47",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "36ca7771-07e1-40a6-b2a0-9593172822e6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19544b1d-89a2-407c-927d-965a7301c5ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0faae01d-db7b-4891-862f-dc1bde777d74"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b0dcd9cc-6d7a-4f0b-96b4-363959b5131d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "8d717c19-cd33-4b9e-91ce-e9c5f1dd78be"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1211b9f3-d8d1-4988-9e7b-a3853798f8bd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2885c801-3b38-4cb7-8398-84c2a43ec477"
            }
          }
        ]
      },
      {
        "id": "95b1f2dc-0caa-488c-8618-657055c133c8",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "00cc22e0-07a1-43d8-bb7c-28de2e73422c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ab7f2035-8c8a-400b-bacb-6c3c04289257",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7cad4079-42b1-48fb-a5eb-686744558078",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa671908-1afd-45e9-ab45-de682dd4d70d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7533cc44-052d-48d6-85c2-ebb5b36128ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b574a4f7-716f-4395-a286-c936cd298b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b19f08c0-bd4d-47ce-b28b-6b21293d755b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a352568-eb9a-434b-a7e2-1bc282680d82",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27703ac-b78b-4544-8897-5be00a11c48e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2a0cb648-f469-4d06-8f86-7fb98d348130"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1824d759-7666-4269-b94e-e8838d9a8bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2859e488-da95-473a-9b8a-6589d10a97f5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ce2792f-c2cc-4cba-a6c6-90ade119547c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df10195a-971f-489c-b0ff-cac2f6a388f2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e4cddfc-af52-4f58-a20d-c6c09ab27c2a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c36caecd-450c-4091-8955-2a9e364bfec0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a30e28ef-818e-4e94-be2f-d6863b48ffb4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8676f398-f372-4e46-bdf0-7f244d3e50a9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cddfee5d-57c8-4a2a-820e-2452dc497a2d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4586d6cd-c5de-4370-9107-b3e11dcca83f"
            }
          }
        ]
      },
      {
        "id": "178d3372-aeef-47cf-9717-20bec5334b3b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e3e28cad-3c62-4432-ba82-80d333ab70df",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a75682ac-1e54-495d-8b5c-8f284edc5c8c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "56b1f675-560d-47be-af36-4d70b561daa1",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87dec3ba-ea8b-4cf3-902b-0523edbc42f2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "58937d44-6655-406e-b00a-992d3704cc72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "361437a4-7338-410c-b955-61e17633cbe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01feadbb-3d25-47d9-92e2-cb23be1cd466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a8a4386-adf7-4371-88ea-957a6e004657",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acbb6acc-95e8-47a4-aad3-f57e7bf4f7be",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b35a791d-17f2-491e-af94-bdda8598e95b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a607f37-56cc-4c5c-a768-a77cda003a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "75e6feac-be0b-4efe-8abb-07b5cef2f4be"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "12500319-3273-409d-9794-13a28d9c4512",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf732610-5727-4772-baa5-69f25fc42bdf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e861214-e742-4481-8c34-6b3acf91058f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f94998d-7c52-42b1-9325-4d9c566af082"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c490302b-2799-45f7-bf4b-179bcc1b2e96",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2de540c3-0e4a-4d56-a9ab-733320e2c0c0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "892531d7-d483-4c59-b777-99e29e0af273",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4a207608-cc05-4f4c-bb1d-ee9f0e0351f0"
            }
          }
        ]
      },
      {
        "id": "81ae762b-ac78-4e6a-85c9-94ae17368887",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "6e35114b-ca82-4509-b966-3a324cec39f2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8c32406e-2f78-4bdb-b462-64e0f84161c4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "160f05b4-3270-464e-bcef-28003b25c877",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "394d5d4b-2d63-42fb-934b-b57b73eaa3c6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f7fa12c4-5fed-4d39-99b3-368079a56110"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "975c3a1b-b8c8-4e8e-891b-1437d038e18c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa94422a-66ba-4aca-aae3-4448d567f263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ccb2e3e-c5bf-47b0-b931-fcebc6c293d2",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "324efd74-edbe-4069-8b7d-9d70ea156c58",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "37f87e64-5cc1-4385-863c-75564de8e8ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b5c1f77-86a1-48a4-91f0-8ba081aafb71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd1e5221-9b9a-46ac-a034-4b8ac5e8b943"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "004046cb-1c20-43f8-9325-e61b77d120c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6bc4b51a-7b5a-43a0-b9d9-46345c775c2c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "21ad6fb9-8219-4f29-a108-ced87cc73c54",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da2d3dd2-f063-4b88-8106-92c14e178711"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0932ad67-5a66-4c45-8e06-928466447b5d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d4ceb980-296e-4fac-acd1-274ee58c8ea8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fe2775a6-5efe-468a-ba49-3149d867b6fa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ed2fcb90-2156-48fa-a8b5-24cbf0024849"
            }
          }
        ]
      },
      {
        "id": "21bea562-e3a1-44ed-b333-1b1ca6543db6",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fb6a3bdd-e744-4d5f-b215-f8d1080e711c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2b9f1609-b368-42b0-be3b-48b990e29a0e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "76b84299-b554-40f3-bc99-a0c39aa4e61c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "24c272f7-3709-4e25-a3ab-8a3c8a324067",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "95f978d9-83a6-4881-82cb-ad988bcb02b2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 28
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 633.8549618320612,
      "responseMin": 8,
      "responseMax": 5067,
      "responseSd": 683.1721265804459,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1675730419877,
      "completed": 1675730599996
    },
    "executions": [
      {
        "id": "c71a9ab5-b9b1-42c9-ac86-bd28756f7b5f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "733a5caf-52cf-4abe-a5fc-bc6a35c4cde2",
          "httpRequestId": "09e0e3e0-536d-4b6a-bc4a-54fd58558888"
        },
        "item": {
          "id": "c71a9ab5-b9b1-42c9-ac86-bd28756f7b5f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "1eaca477-f7bc-45b7-8088-4896847106ad",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 0
        }
      },
      {
        "id": "7b7d305f-9b42-4577-97eb-c1b5919a798b",
        "cursor": {
          "ref": "d5f3fde4-283d-4c3f-b64e-d2254213fcb3",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8b82277f-f9b1-445d-b0f2-bcd895d092cf"
        },
        "item": {
          "id": "7b7d305f-9b42-4577-97eb-c1b5919a798b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "85d40e50-4111-4067-ae43-80e78aa63c67",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "6b8758ae-55b7-40b1-bd7d-c5e5674dc6d5",
        "cursor": {
          "ref": "ad8c8824-a550-4a7e-af7b-80c592fa39f5",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "535fd272-4205-4bc6-898c-41c679d9d62c"
        },
        "item": {
          "id": "6b8758ae-55b7-40b1-bd7d-c5e5674dc6d5",
          "name": "did_json"
        },
        "response": {
          "id": "623dfc8e-e005-4c15-a2e9-7651b071acfd",
          "status": "OK",
          "code": 200,
          "responseTime": 772,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195a5bc6-a306-457a-997e-5673b025034e",
        "cursor": {
          "ref": "61736e44-0850-4d88-8ab8-20f0e26868c3",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "10860b8e-e10a-4de1-bdae-d05f54b40eff"
        },
        "item": {
          "id": "195a5bc6-a306-457a-997e-5673b025034e",
          "name": "did:invalid"
        },
        "response": {
          "id": "bb3c42ab-7a99-43b0-9f70-25375c1d2974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1234,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195a5bc6-a306-457a-997e-5673b025034e",
        "cursor": {
          "ref": "61736e44-0850-4d88-8ab8-20f0e26868c3",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "10860b8e-e10a-4de1-bdae-d05f54b40eff"
        },
        "item": {
          "id": "195a5bc6-a306-457a-997e-5673b025034e",
          "name": "did:invalid"
        },
        "response": {
          "id": "bb3c42ab-7a99-43b0-9f70-25375c1d2974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1234,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ddc8f87-4068-4da9-afbb-cd0e11ead7f9",
        "cursor": {
          "ref": "90d346a7-a349-4cb9-83a9-75da83a992a3",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6be30eab-d5c7-415f-aa5d-a9011f2af662"
        },
        "item": {
          "id": "3ddc8f87-4068-4da9-afbb-cd0e11ead7f9",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a15ad048-a396-402a-b4dc-516bf098be9e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 704,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52220559-7edf-4cbc-8a0d-d49bd6d4688f",
        "cursor": {
          "ref": "ceee9fca-94a3-411d-a98f-3159bac14a14",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3ac175fe-bb0e-4e25-9e29-9b515cb31c1a"
        },
        "item": {
          "id": "52220559-7edf-4cbc-8a0d-d49bd6d4688f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "370fdcc6-8116-453c-9c85-966777e0858c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 658,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e41b624-154f-468c-9bbc-e9338abe6b1b",
        "cursor": {
          "ref": "7cfd5f6b-a3e0-4c6f-879e-58753feaa3b6",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6c556fbf-2a17-47c4-8ea1-568f816f57fa"
        },
        "item": {
          "id": "6e41b624-154f-468c-9bbc-e9338abe6b1b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "39bf1539-d988-49ca-8bf9-8d3362e3298c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82955462-4802-49f6-b2ad-493822c679d4",
        "cursor": {
          "ref": "c3e55781-0ba3-4f69-a1eb-0a4feb6604e5",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b16ed785-317a-4654-a5a9-1904e1302463"
        },
        "item": {
          "id": "82955462-4802-49f6-b2ad-493822c679d4",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "70250047-10dc-4520-aa6f-c10e7b36a4dc",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 524,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82955462-4802-49f6-b2ad-493822c679d4",
        "cursor": {
          "ref": "c3e55781-0ba3-4f69-a1eb-0a4feb6604e5",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b16ed785-317a-4654-a5a9-1904e1302463"
        },
        "item": {
          "id": "82955462-4802-49f6-b2ad-493822c679d4",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "70250047-10dc-4520-aa6f-c10e7b36a4dc",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 524,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb36b1c-107f-4171-a970-5569154478c9",
        "cursor": {
          "ref": "2877d161-3e0f-451c-ba2b-d1d905271498",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4a7bf9a9-dd7e-4198-b375-7c1976e44090"
        },
        "item": {
          "id": "1fb36b1c-107f-4171-a970-5569154478c9",
          "name": "identifiers"
        },
        "response": {
          "id": "5fe32b0d-41e6-4fe2-a2ca-7d00efff1b40",
          "status": "OK",
          "code": 200,
          "responseTime": 856,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f75901-e7c7-4011-ae0a-c0c14f7e4329",
        "cursor": {
          "ref": "0f6382e3-24b3-4430-9daa-5dc89e2ae2ce",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "91be5092-7f2c-4319-9206-580e9bd64d7d"
        },
        "item": {
          "id": "c7f75901-e7c7-4011-ae0a-c0c14f7e4329",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "df5c51ff-b23a-41f3-a1e3-1fecf55a7964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f75901-e7c7-4011-ae0a-c0c14f7e4329",
        "cursor": {
          "ref": "0f6382e3-24b3-4430-9daa-5dc89e2ae2ce",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "91be5092-7f2c-4319-9206-580e9bd64d7d"
        },
        "item": {
          "id": "c7f75901-e7c7-4011-ae0a-c0c14f7e4329",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "df5c51ff-b23a-41f3-a1e3-1fecf55a7964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84eb44c0-e240-48f9-b2ab-1722c91f86ac",
        "cursor": {
          "ref": "aeb55b70-1445-447a-a98f-220200f37a64",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a77dedbf-6891-4d32-8062-e022d434bcb3"
        },
        "item": {
          "id": "84eb44c0-e240-48f9-b2ab-1722c91f86ac",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "4b1518bc-d2f5-4ace-8251-658856663665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c326ae-dafa-4a98-ae14-82d98777ac32",
        "cursor": {
          "ref": "0e837b6f-1934-4bba-aa38-ed266b580fa8",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c8ba8138-7c21-44f1-b1b7-6409a404f17c"
        },
        "item": {
          "id": "77c326ae-dafa-4a98-ae14-82d98777ac32",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "83fe0f24-b8ef-485e-95d2-57741e281ce3",
          "status": "Created",
          "code": 201,
          "responseTime": 2547,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "9705cb3d-b3c8-4e7d-882f-6c6abd1d671e",
        "cursor": {
          "ref": "324d5740-48a0-4fc8-991c-4d68f77ac513",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "18829ba5-fafa-4668-96b7-ff7425ba29e0"
        },
        "item": {
          "id": "9705cb3d-b3c8-4e7d-882f-6c6abd1d671e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a1fc3fc0-0aca-4625-94ac-fbbf03c15674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0a03bd-95a4-4f26-ad67-fca7f85790d5",
        "cursor": {
          "ref": "a6c34cd0-ba5e-4a32-b8dc-50ffc3136998",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "910d504a-768a-4667-8cd5-b8b5f98989fc"
        },
        "item": {
          "id": "ec0a03bd-95a4-4f26-ad67-fca7f85790d5",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d4e8d04c-a510-424b-8a4c-577bb97f0318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1114
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa48271e-5306-4a27-a6c2-3a76db9a6fed",
        "cursor": {
          "ref": "51d2ebc0-9018-4fc3-a9fc-e2ea9c66f251",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "4d7b2a88-b015-4bc1-ba85-78f33068a4b3"
        },
        "item": {
          "id": "aa48271e-5306-4a27-a6c2-3a76db9a6fed",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "19176a01-6380-4bcb-bf1b-4a6de2be6d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0216830-81ab-46c4-8bb0-a3e82ec830e7",
        "cursor": {
          "ref": "b4b7bd0a-0474-48ee-9f84-26f704dc2e73",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "3e4e34fe-155e-4103-ab7f-f37b2db528fd"
        },
        "item": {
          "id": "f0216830-81ab-46c4-8bb0-a3e82ec830e7",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "65e6be98-c20f-41a3-9bb0-1e183daae243",
          "status": "Created",
          "code": 201,
          "responseTime": 2289,
          "responseSize": 723
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:16)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:16)"
            }
          }
        ]
      },
      {
        "id": "886359d3-ff66-4698-ae94-6b46ef77faa7",
        "cursor": {
          "ref": "7212d6c4-0d47-49e9-b06b-543783ec5dc5",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "47773ab2-760d-4794-af4d-b0eac999dbda"
        },
        "item": {
          "id": "886359d3-ff66-4698-ae94-6b46ef77faa7",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d071c4e2-9a89-4541-8013-af648cb5a7a0",
          "status": "Created",
          "code": 201,
          "responseTime": 2545,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:17)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:17)"
            }
          }
        ]
      },
      {
        "id": "24c257cc-3cbb-43d0-8e78-6fb3c8ae9e3e",
        "cursor": {
          "ref": "b9399f9d-5370-46d5-ac5e-362848691e40",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c709f175-4337-4067-8737-cf5b066ebc11"
        },
        "item": {
          "id": "24c257cc-3cbb-43d0-8e78-6fb3c8ae9e3e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "93613989-015f-456c-9aea-10813d39c473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f751872-784d-4dd8-a0bd-c2f4e0b343bc",
        "cursor": {
          "ref": "bcc480e2-bef2-4e9b-9bfa-2d6312b528aa",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "dca1f9cb-04c1-48dd-884d-42e2800fd450"
        },
        "item": {
          "id": "0f751872-784d-4dd8-a0bd-c2f4e0b343bc",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a919b1b5-a99d-4c25-b1cc-b162d1031650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 1543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a6d4d28-8d79-4c22-97e2-dde4f1e646cb",
        "cursor": {
          "ref": "58ba159c-33e5-47d6-9a96-a5285e41b946",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "685e501b-ecdf-4951-9758-10e22d041489"
        },
        "item": {
          "id": "7a6d4d28-8d79-4c22-97e2-dde4f1e646cb",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "98372faf-54b9-4fa3-a3f3-7b8b34d13c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d890484-7030-4008-b2be-77efdca4ea58",
        "cursor": {
          "ref": "c4d52ab5-1c06-4ca9-94df-4684310e01f3",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7e2a6095-af6d-4cfc-8409-828b313e5fcf"
        },
        "item": {
          "id": "2d890484-7030-4008-b2be-77efdca4ea58",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d9e2916e-7713-439c-968e-f3a9c898fe3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 1542
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534a7be3-1525-4828-a88e-710002949e95",
        "cursor": {
          "ref": "d772bc68-595c-448b-a3bc-3f59b6bb4721",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "8f1d459c-4bb4-4ee2-bdf2-7f5ec85fc7d1"
        },
        "item": {
          "id": "534a7be3-1525-4828-a88e-710002949e95",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "945803f7-25a1-4b34-82a7-99950482dc52",
          "status": "Created",
          "code": 201,
          "responseTime": 2548,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "63dd7534-3cf1-41ac-ac7c-8af45c5ddcbd",
        "cursor": {
          "ref": "68520145-f813-4ae4-a02e-0223c8a91b1d",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "41bba965-8983-48ad-a553-7599abf7b41d"
        },
        "item": {
          "id": "63dd7534-3cf1-41ac-ac7c-8af45c5ddcbd",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "fe0138c8-844d-4fe3-8fc3-742f61e4426a",
          "status": "Created",
          "code": 201,
          "responseTime": 4123,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "59933a93-e517-46bf-9e71-cf63ddc84c43",
        "cursor": {
          "ref": "d708f5d6-b2af-4b14-8a4f-86e94e99cc8e",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "beec40a5-1e9b-484c-8e61-61f1592a33bd"
        },
        "item": {
          "id": "59933a93-e517-46bf-9e71-cf63ddc84c43",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "52f11fb8-5fb2-4e3e-b155-9d7c30416ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d3d91cc-dd6b-4cdf-a526-1433bd6e97da",
        "cursor": {
          "ref": "4280c6a7-28c3-4cb7-a3e7-10dd669cb287",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "666951da-a8d1-4291-9973-dd890d94a0ab"
        },
        "item": {
          "id": "8d3d91cc-dd6b-4cdf-a526-1433bd6e97da",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "fd088359-2fb3-4c62-915f-9ca20c3a051f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf5174c-b04a-43f7-9656-a25caa6c119e",
        "cursor": {
          "ref": "5ee45a7f-eba3-4242-b586-e25fcd6fceb8",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3e1d2c98-12fb-4adf-bf12-48cece055f8b"
        },
        "item": {
          "id": "baf5174c-b04a-43f7-9656-a25caa6c119e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d2e2d95b-1399-4df6-9e48-80df56a01480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7426ae-ef51-45f8-8b81-8eed59898646",
        "cursor": {
          "ref": "31d8b49b-69ae-4b65-aae5-f6da535d762f",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3eef5921-3277-40c2-8650-0cdb84c44a57"
        },
        "item": {
          "id": "5c7426ae-ef51-45f8-8b81-8eed59898646",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "4be43538-8298-43e4-a84e-8e7395e36f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d4f50d6-bad5-4519-9b98-ae8070a74cf9",
        "cursor": {
          "ref": "ea27cb6f-d0d6-4a00-84ae-848ca113b793",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2275b6e7-a19a-4ebb-84e1-ec599d7d2cb4"
        },
        "item": {
          "id": "9d4f50d6-bad5-4519-9b98-ae8070a74cf9",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "df977207-fa79-4c5c-b1ce-6327189613cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2126f3c4-783c-43df-88f6-e36d988b72fb",
        "cursor": {
          "ref": "6d5dc671-1b8a-4f6e-915c-e7b659d6441d",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ad9333a6-84b3-436a-89c0-8413631a7482"
        },
        "item": {
          "id": "2126f3c4-783c-43df-88f6-e36d988b72fb",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "330f926c-d8cc-4383-80ad-9910be095d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba4275c-4746-4570-bc46-8ef25d11fa6f",
        "cursor": {
          "ref": "e647995f-50f7-436f-af1a-f1a96ad3ef14",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a9667ebc-feab-472d-a394-16ba937fc318"
        },
        "item": {
          "id": "2ba4275c-4746-4570-bc46-8ef25d11fa6f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "bcb4fa28-06e1-49c1-93f6-f11d0cf49db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd75ff5a-79e9-4d38-a7fc-749bbe2b6ea1",
        "cursor": {
          "ref": "94519e62-c9cb-409a-b2d3-cfbe48a837cf",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d6b5719f-0014-4a67-acc0-664fe60cc066"
        },
        "item": {
          "id": "bd75ff5a-79e9-4d38-a7fc-749bbe2b6ea1",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "1114d5d5-ce9c-412a-939b-6c40695a3f19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91304940-fbd6-4570-a6d6-f8fda88ec8e7",
        "cursor": {
          "ref": "1504282f-5a5e-4a51-ad41-84fa47ea72ca",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5ba435a3-11d8-453f-93c7-fb4ab02553e0"
        },
        "item": {
          "id": "91304940-fbd6-4570-a6d6-f8fda88ec8e7",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "9e6692db-f527-4f26-bbfa-568fc431e93b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d7ac64-22fa-4f3c-89e9-3a251a030c28",
        "cursor": {
          "ref": "93017c7d-1ffb-4ff1-9fee-93cdde567223",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "85dad730-7b29-4fc5-a2e7-9dc565ea7125"
        },
        "item": {
          "id": "77d7ac64-22fa-4f3c-89e9-3a251a030c28",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "cbef31ba-b14c-44d4-8fad-c084a6ccd178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa704234-bcc2-4a07-8567-fa0b7b985b65",
        "cursor": {
          "ref": "4acd0f18-be5d-4c24-8434-d54561fe85e1",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "627452d5-04b6-43aa-9bb9-3d7bc00da5c5"
        },
        "item": {
          "id": "fa704234-bcc2-4a07-8567-fa0b7b985b65",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9a8c5de5-03ca-4ad6-bddc-5bc8b4d9508e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f57fdb-8fba-48c9-8c72-f0b3db421137",
        "cursor": {
          "ref": "6fe8a7ef-2715-4c60-ac73-aa7e2a9ceb46",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "540713b8-ee58-4620-aa69-bca896f0b114"
        },
        "item": {
          "id": "62f57fdb-8fba-48c9-8c72-f0b3db421137",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "981007cc-fc9e-41d5-b776-3c1e04d5bd97",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 1781,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:35)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:35)"
            }
          }
        ]
      },
      {
        "id": "7fd5f71f-66b7-4928-ba13-261fe0fd5e9d",
        "cursor": {
          "ref": "ddb2f605-7902-4550-afe2-41bd07bfd716",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c2777b42-9e4e-403e-8e7c-690467edc72e"
        },
        "item": {
          "id": "7fd5f71f-66b7-4928-ba13-261fe0fd5e9d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "cd6c0541-d9a2-43ae-a9db-932551460e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3727b6d1-dbf1-4460-808e-bfc25034e7ff",
        "cursor": {
          "ref": "69c18e51-aae6-4f38-82f3-15f27359ca4e",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a5236e0b-d95e-428e-89a1-6d5ac96a7df1"
        },
        "item": {
          "id": "3727b6d1-dbf1-4460-808e-bfc25034e7ff",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "abf9ac0b-5a3d-4ef9-a8e9-9974c4a17742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598fd8c0-2e4d-468c-86f6-8894cea826b2",
        "cursor": {
          "ref": "8d380402-559c-4b57-a8eb-ee62166bb640",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c75a5fc8-92ce-4236-a535-1cf82bf88e59"
        },
        "item": {
          "id": "598fd8c0-2e4d-468c-86f6-8894cea826b2",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "67d478c6-87d9-4442-92b7-6e78b2ae5108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8580c2-8388-4e39-9f0e-183dd3b843ae",
        "cursor": {
          "ref": "3dca9c84-9aa5-4123-8abb-084dd69815b8",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "00f989db-cc09-4d38-8056-6a5ce56757f9"
        },
        "item": {
          "id": "8c8580c2-8388-4e39-9f0e-183dd3b843ae",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "0330f185-b0ed-46cb-909f-0b44eea7733c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc09fdae-a246-4ddd-aa66-051c57be83e2",
        "cursor": {
          "ref": "a404c1e5-e5d3-4458-ae7e-8548bb3a3060",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "67d682cf-8032-48db-9220-4cd1bb2605b4"
        },
        "item": {
          "id": "fc09fdae-a246-4ddd-aa66-051c57be83e2",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d558731c-fec1-40d4-bc9d-045c6703eddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec6087c-b74f-43a6-9bd0-53db1e149009",
        "cursor": {
          "ref": "a9a9fdf5-1e12-496b-bd8c-efd18900e325",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9a38a94a-fbce-4913-9ec9-20a712acc67d"
        },
        "item": {
          "id": "5ec6087c-b74f-43a6-9bd0-53db1e149009",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8f2661bc-2eac-4ef1-990b-3e1b205ff8ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8acac63e-5557-4703-b330-739a494d002d",
        "cursor": {
          "ref": "4fa7dd4c-0f70-44f5-8fab-bbf555845630",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e8e8b868-548f-4eab-bbcf-d2ed2c359c01"
        },
        "item": {
          "id": "8acac63e-5557-4703-b330-739a494d002d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "085df0eb-0630-41b2-89bd-b3b33c7242d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 1099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b65f16-b346-46b3-b80c-f36c3726e859",
        "cursor": {
          "ref": "d4f0acf5-910d-487a-8279-64a828f81ea6",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "925bec0f-1273-424a-8ecd-4e0a5352e52a"
        },
        "item": {
          "id": "b3b65f16-b346-46b3-b80c-f36c3726e859",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "0e36ecc8-0f4a-40fe-a966-b74ee1d53949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1028
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1274b3-a387-474f-98d6-cb2e3df96e15",
        "cursor": {
          "ref": "0873fdfd-e287-44a7-96a0-44030cfa95ca",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f1c04a17-d019-4a3d-a7d1-d00204b9e56e"
        },
        "item": {
          "id": "db1274b3-a387-474f-98d6-cb2e3df96e15",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4532428d-83f1-4969-949b-0f0a8e1c89b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1389d3bc-b837-4cb1-803f-decd81363eaf",
        "cursor": {
          "ref": "2b637d71-1ae6-4fd6-8081-733fe543910f",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "4be4b44c-b710-4591-a9b5-edc362598b00"
        },
        "item": {
          "id": "1389d3bc-b837-4cb1-803f-decd81363eaf",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "559bd8dd-48ed-42af-b926-8918045c8b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd916f1f-f632-4756-9062-301dfefde645",
        "cursor": {
          "ref": "6f388267-77d5-493d-93ef-6e30121e39a0",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ee15a7cb-64ba-428c-8959-8f43cb9ee75c"
        },
        "item": {
          "id": "fd916f1f-f632-4756-9062-301dfefde645",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "98026558-1667-4e1f-9226-c8457bdf60ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acaf5c4a-145e-4986-a288-b54f96928207",
        "cursor": {
          "ref": "2d5e4313-c6f1-44dd-8a67-4903130986f4",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7e86ea3e-a9e5-417a-a7d9-1eb000e0cb8a"
        },
        "item": {
          "id": "acaf5c4a-145e-4986-a288-b54f96928207",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "da8ba45d-9fbf-4166-9839-c0d1f890aa51",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 603,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe9f7de-16b4-4f72-8df5-5ecb977fa468",
        "cursor": {
          "ref": "7753affc-e99d-408f-9c4f-c41db0362a36",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a2d68a64-e373-4b15-960f-a1665a1beb65"
        },
        "item": {
          "id": "cbe9f7de-16b4-4f72-8df5-5ecb977fa468",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a826df15-d567-4246-92f7-65b97ca20999",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 561,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:48)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:48)"
            }
          }
        ]
      },
      {
        "id": "bae0618c-b8aa-44a0-b93e-a421df628755",
        "cursor": {
          "ref": "2b820a7f-476b-42ca-b58c-0cd19a9ff425",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5aabc84e-d71d-4b7c-802b-d17df6c141cb"
        },
        "item": {
          "id": "bae0618c-b8aa-44a0-b93e-a421df628755",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3d35ce8a-faf4-4955-8515-336ec28aadde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39eeeb07-9391-471e-9a35-311e291b97f3",
        "cursor": {
          "ref": "13dcdcfe-d869-4de4-a910-b7377e165a7a",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "33bd3355-1fce-4f13-b7da-471b4d69df37"
        },
        "item": {
          "id": "39eeeb07-9391-471e-9a35-311e291b97f3",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "47dedfd4-50a3-4456-8242-044ce36dc649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f437a06-3b3f-425b-9e02-0e36e4f690a7",
        "cursor": {
          "ref": "e7d2523c-a97c-493f-9476-b6857e9d97c2",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "63f56bc0-bb38-4383-8b99-4a176a3cd368"
        },
        "item": {
          "id": "0f437a06-3b3f-425b-9e02-0e36e4f690a7",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "6f6e6802-410b-45fa-8f2f-cda81f008532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "173d9c22-c281-4b95-be9c-18bfbf0fc510",
        "cursor": {
          "ref": "5509c19e-85aa-4ef8-ae81-954c57e1eff3",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0352daee-1b00-48e8-9cf4-4fc54854fedc"
        },
        "item": {
          "id": "173d9c22-c281-4b95-be9c-18bfbf0fc510",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "40bd719b-d53e-445a-bdf8-ab264e5cfba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1366
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2faa021d-96a8-4e88-9756-3fc67fa2a67f",
        "cursor": {
          "ref": "4bf5ba94-4ef6-4dc4-9818-20a8ecc31b3a",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a2c8b7a3-280e-4351-98ab-9091099a0b58"
        },
        "item": {
          "id": "2faa021d-96a8-4e88-9756-3fc67fa2a67f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "6fe17363-3c57-4580-a3ff-353e58bec3f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 1769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aba1cde-6f5e-46d1-9cb1-8e7f6b5f22c1",
        "cursor": {
          "ref": "cb6d32e8-40c7-4a5a-8e11-0aea1c5cf68f",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "1c66c0ce-600b-4e6f-8e91-343267b37522"
        },
        "item": {
          "id": "7aba1cde-6f5e-46d1-9cb1-8e7f6b5f22c1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f150fb0d-54d9-425b-a0b2-44b3013d0507",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 727,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ec4971-7980-4ec6-9540-1e88a17f2a95",
        "cursor": {
          "ref": "03548332-75be-4495-9787-510bb74f21e7",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "bb2ceae4-915e-49b1-bbf1-14d66d9f85b9"
        },
        "item": {
          "id": "d5ec4971-7980-4ec6-9540-1e88a17f2a95",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "fdb11c64-8cb8-4fe4-9510-ad16fda89667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 657
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c70ce46-c86e-41a9-bb1a-75fae22ca215",
        "cursor": {
          "ref": "42b8ad3e-54aa-436b-8f10-c3a025c575d4",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b867d117-1218-46bf-97ae-e34649205464"
        },
        "item": {
          "id": "9c70ce46-c86e-41a9-bb1a-75fae22ca215",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0685f74c-01d1-408e-af59-8a17e93975c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 924,
          "responseSize": 681
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c6b6f1-e671-495f-8cd4-e277ed130df9",
        "cursor": {
          "ref": "a1f6a988-bf2d-4456-932d-3a9008aa3e50",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "dcc96927-6263-4ba7-b622-cfb404fe88ab"
        },
        "item": {
          "id": "67c6b6f1-e671-495f-8cd4-e277ed130df9",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c03e0074-67c3-43b8-9114-9dfa6d0df2d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 662
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad873ad-cdea-4e64-8e78-31d8b8e05a7b",
        "cursor": {
          "ref": "dbff3fee-3aec-4923-bf03-8c23d28240cd",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "01bba13a-1bcc-4546-9191-868897a08603"
        },
        "item": {
          "id": "cad873ad-cdea-4e64-8e78-31d8b8e05a7b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "828296fa-4b44-4405-94f5-04ce14988412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac59adab-9f26-430e-872b-60cd95add61f",
        "cursor": {
          "ref": "129d159c-dd79-40a8-a15c-923ef30a94ee",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "055072a4-9b93-45e1-a419-135cc325a473"
        },
        "item": {
          "id": "ac59adab-9f26-430e-872b-60cd95add61f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7557a2c4-1f84-4b33-ac86-f9ce2a8e3b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8cc2d85-8f8d-4867-8bf4-f1b08402526f",
        "cursor": {
          "ref": "7d3af7dd-aaf6-45f0-9a2e-0423314c2e2b",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d157d410-e727-433c-ba77-bcddeda89070"
        },
        "item": {
          "id": "f8cc2d85-8f8d-4867-8bf4-f1b08402526f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d275b5fe-1dd8-461d-8a15-345b609a5aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9762c58d-a9e5-4ad9-a585-4202220e936e",
        "cursor": {
          "ref": "5bfb80ae-0ccd-437d-9e3c-77c1f3843bf3",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "74bf689a-3017-4370-8834-7717876e4554"
        },
        "item": {
          "id": "9762c58d-a9e5-4ad9-a585-4202220e936e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a52ae451-79e1-403e-924a-ad5456dd152c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2616dead-32cf-4be1-8cc4-756b7570c2be",
        "cursor": {
          "ref": "1ed47e26-232c-4046-9209-bfcdc70e9c5c",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "2ca40070-19cf-4762-98c8-541d1d55f2b0"
        },
        "item": {
          "id": "2616dead-32cf-4be1-8cc4-756b7570c2be",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "00873457-d22a-4486-a67e-edad2e3ddba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a576552f-2c04-4bd9-80df-7581feb6de3a",
        "cursor": {
          "ref": "bc77a3cc-a4a8-48d4-955e-a581c2254449",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "85536efd-f341-4a1d-a8cb-dc7c11fecbb7"
        },
        "item": {
          "id": "a576552f-2c04-4bd9-80df-7581feb6de3a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9fefeb16-c55b-4e31-a3a6-d145038239b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d54635-41d4-470f-b7c0-b91faaf1dfe0",
        "cursor": {
          "ref": "cd816cad-ba74-49d2-8586-3ee449eeb01c",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9a8d5e11-5457-4ab0-9209-d8141fffb41d"
        },
        "item": {
          "id": "f5d54635-41d4-470f-b7c0-b91faaf1dfe0",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6c16a4bb-0253-478f-9cb9-6595da41dedc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11632e1-bc84-441e-89c0-b734500b5f1f",
        "cursor": {
          "ref": "7b3ca7af-d2fa-4798-9717-79cf628bd7c0",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d61d8dc1-f927-472f-8a83-4d64db8b4300"
        },
        "item": {
          "id": "a11632e1-bc84-441e-89c0-b734500b5f1f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b850bca6-38eb-4d7a-8b90-4d607e5d2eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 959
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c9800f0-a2e1-44eb-a2d4-0a9decd50585",
        "cursor": {
          "ref": "ef589b82-c1ec-4dae-8e8f-9179763c65cd",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "aecf4ff3-5dc6-458e-8652-48e5aab025f0"
        },
        "item": {
          "id": "8c9800f0-a2e1-44eb-a2d4-0a9decd50585",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "bf528034-c76d-4532-b8c4-8e28ded7eb86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "295be785-3edf-4ba4-b2a9-dc40b3c3c11c",
        "cursor": {
          "ref": "683a7854-e409-49a9-b93e-7146ab719954",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9c0d2192-b3cf-48fd-90f1-0c1b141d6d13"
        },
        "item": {
          "id": "295be785-3edf-4ba4-b2a9-dc40b3c3c11c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8b1b5081-ea14-4d82-84f3-19c274c71094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c45e506f-3918-48a0-a9e6-d46300e9c38f",
        "cursor": {
          "ref": "d4ff94a9-e575-451e-94b8-8d7ad4d47fe1",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b345a293-3fb3-4fa1-bce6-06ba6cee6db6"
        },
        "item": {
          "id": "c45e506f-3918-48a0-a9e6-d46300e9c38f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c481ad93-3735-4a29-b0bc-198a3ea4528a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0876d3-112c-42f8-a84a-199ec24304fe",
        "cursor": {
          "ref": "7c8d2466-c998-4ad4-9c3e-49ce22f74ba2",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "1c9e761b-f82e-42c3-aed5-e49ca75aeac2"
        },
        "item": {
          "id": "ec0876d3-112c-42f8-a84a-199ec24304fe",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6e93d790-183c-4ee6-ad0b-f1b2718578ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 1454
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61686234-d33d-4591-8337-93e0aab47330",
        "cursor": {
          "ref": "daa8ddd6-7493-4d5d-8a3f-5ed37fe76936",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "da08a954-8924-40f9-a3ff-75acb86e841c"
        },
        "item": {
          "id": "61686234-d33d-4591-8337-93e0aab47330",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "909ce7c6-3a16-4d09-aaee-05620eb784b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce33eb61-ecd8-45be-9f0a-87161bc54101",
        "cursor": {
          "ref": "90c1cb0e-3f9d-4938-8951-7f5e0f111b1b",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a172e877-aead-4275-ab1a-c56052946cdb"
        },
        "item": {
          "id": "ce33eb61-ecd8-45be-9f0a-87161bc54101",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "52af361c-9dd7-4911-ae7f-27ed3a1063d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 1453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c001519d-f7ff-404e-90f0-356e6ba1edeb",
        "cursor": {
          "ref": "c2f73f4d-39de-44fb-b145-803c346ebf02",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "cbf6d949-3de2-461f-ab19-52640ea13798"
        },
        "item": {
          "id": "c001519d-f7ff-404e-90f0-356e6ba1edeb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f9897387-9bf9-4f99-b77c-b79f802602ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f685fb-acc5-4d56-a0ca-4fc63d1658d2",
        "cursor": {
          "ref": "71854ed3-2792-4919-936f-5fb061acf12e",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "793540ef-3102-4f68-a7f9-18f48ca813ec"
        },
        "item": {
          "id": "99f685fb-acc5-4d56-a0ca-4fc63d1658d2",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b4ffbfc1-76f7-4924-9e4e-a91e4baf7250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22277f90-913f-4027-bb97-6101a1885a7d",
        "cursor": {
          "ref": "f565f553-4fe2-49a7-b8f7-8198bcdfc553",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8e6e2b0b-66b9-4f0c-b734-b0ddd1244082"
        },
        "item": {
          "id": "22277f90-913f-4027-bb97-6101a1885a7d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "1084215f-19df-41d5-aee4-b5ed5b06805a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 731,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da7ae59-380c-43bf-9261-85bee3a0d4ce",
        "cursor": {
          "ref": "ac7c5fc6-2f97-4acb-9db2-5450618e452c",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ecf50e72-b5cf-4324-9c86-cba95209ee20"
        },
        "item": {
          "id": "3da7ae59-380c-43bf-9261-85bee3a0d4ce",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c69b861a-4b5a-49f2-808b-8204a84823c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 842,
          "responseSize": 613
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a12047a3-c4b0-48d8-b9a8-2b8857b5ecc3",
        "cursor": {
          "ref": "9c7ede1e-0b77-4bb7-ab8f-5b8ea69eab32",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0324f818-44ae-497c-93c4-08e48a28e591"
        },
        "item": {
          "id": "a12047a3-c4b0-48d8-b9a8-2b8857b5ecc3",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3b427e21-f1e7-4048-b56a-f1a718ab29de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 914,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9042c71d-3469-4cfa-9250-4a08ff3c3e06",
        "cursor": {
          "ref": "2d3a5416-335b-43b8-bdf0-66afd53f1112",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "5e36fffc-b603-4859-bda1-4831a151d9dd"
        },
        "item": {
          "id": "9042c71d-3469-4cfa-9250-4a08ff3c3e06",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "16c78928-0f0b-41ac-846e-7eb21c2e684c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 848,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e749fef-6312-4967-ae2d-047c47f10efc",
        "cursor": {
          "ref": "22326218-9c14-48b1-ac8c-eb63a1fa8431",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "55257af8-8f42-4a45-b038-3e2653cb2ce2"
        },
        "item": {
          "id": "8e749fef-6312-4967-ae2d-047c47f10efc",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ead60f52-9c47-47d0-a3fe-9fd4f554d2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586cd8bc-4409-4fdc-b7b6-21547ddfafce",
        "cursor": {
          "ref": "c9edf4e1-ea46-43ed-9fc4-f6d0ab2f41b3",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "82e9a9c9-2140-4272-ab0c-30422bc2ae05"
        },
        "item": {
          "id": "586cd8bc-4409-4fdc-b7b6-21547ddfafce",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d567d468-5db7-445e-825e-5a97388e971f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73272505-4cac-4347-bf1d-bbc758733df6",
        "cursor": {
          "ref": "ad478a6c-eacb-472b-90b7-c7aa3a9686c1",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b40b8690-9579-4b5d-b744-c5e712c700f0"
        },
        "item": {
          "id": "73272505-4cac-4347-bf1d-bbc758733df6",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d644e4ea-0e17-4a7d-9c4b-e608241b12dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 889
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89459ec8-ed89-4996-a176-f726d7f92222",
        "cursor": {
          "ref": "a0952f98-a392-46f0-8c8b-ef62c6910f11",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "2a90f948-e6a7-4cca-ab62-ca35f41f3c48"
        },
        "item": {
          "id": "89459ec8-ed89-4996-a176-f726d7f92222",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "04960717-0e1e-4465-9d89-8a6c0d3724b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 870
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806348c9-2c33-4804-bbda-d6448416ad4d",
        "cursor": {
          "ref": "6fca5c23-56a1-45ce-9499-d9d8141e92a9",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3500ee13-ca9c-4b73-a65f-af5590027138"
        },
        "item": {
          "id": "806348c9-2c33-4804-bbda-d6448416ad4d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "130d6478-7d6a-4046-9835-0600acb22e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7768fb68-0adb-443d-bee7-69c1865486c4",
        "cursor": {
          "ref": "867fcec9-1a1a-4e71-bdb2-c5f613551b97",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b4a6bccc-543c-40bb-8403-85052af74bbc"
        },
        "item": {
          "id": "7768fb68-0adb-443d-bee7-69c1865486c4",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c311ec3c-b4b4-4761-9d61-6d30a921c757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f8a4f4-33a6-417e-a9ba-3c053a6be06e",
        "cursor": {
          "ref": "3fbed736-d437-47d7-8b0b-2e2c966c933d",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "760053d6-a79e-406d-8a92-3987aeb9d6fd"
        },
        "item": {
          "id": "d6f8a4f4-33a6-417e-a9ba-3c053a6be06e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3fca8960-f833-45a1-a6df-2313b094d95a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f20b83-7cc8-4c2e-9191-daa058c4463d",
        "cursor": {
          "ref": "7d3cc1e6-fb30-4cab-8576-d60cb359d94a",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5522ce6c-047a-4273-bbad-bb415da74296"
        },
        "item": {
          "id": "a6f20b83-7cc8-4c2e-9191-daa058c4463d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "7825fd5f-2a7e-418f-9a5a-932b4da0fe45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 844,
          "responseSize": 738
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7267460f-f0ef-4e94-9462-8a58cb5737ca",
        "cursor": {
          "ref": "6cbec672-758b-49d2-8ce5-8e07a493507e",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e8b67462-a610-49a9-805c-dfd6549155ae"
        },
        "item": {
          "id": "7267460f-f0ef-4e94-9462-8a58cb5737ca",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ebcd90d9-d015-472a-b5fa-8d1dd2c42d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b7cbd5-0b9b-4b78-9ce4-cea9c9a6a6d5",
        "cursor": {
          "ref": "d6711909-ad4a-4802-96a5-415445ef33d8",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "aaa08581-150b-440d-8fa9-257acbe6ca35"
        },
        "item": {
          "id": "c2b7cbd5-0b9b-4b78-9ce4-cea9c9a6a6d5",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "806eff2b-7c38-4929-a9e8-acf75399960b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2236741-098b-44f2-a4e8-6d4cb72427e3",
        "cursor": {
          "ref": "9d916563-82e8-4634-ab82-9f574eccce14",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e5fff1ae-c171-494c-9c98-0d5b26aa311d"
        },
        "item": {
          "id": "f2236741-098b-44f2-a4e8-6d4cb72427e3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a525f665-1927-462d-b1f9-e9246cf5aa3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 852,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad0e309-11c8-4538-9b32-c5e84adbbfbc",
        "cursor": {
          "ref": "84e59bf2-125a-4ba0-a299-772ab6b1209d",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "86f42930-adec-44f0-96b5-0d417e20d907"
        },
        "item": {
          "id": "bad0e309-11c8-4538-9b32-c5e84adbbfbc",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b8e129e4-dd35-4428-9f36-1e27fe0c1163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 686
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e03a8e0-0039-47d7-892e-ab5f2a4195ce",
        "cursor": {
          "ref": "1d3879b2-7a98-4186-817e-65da428a15fe",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "be0edfe9-599d-4033-92be-b6e6d63f8c3f"
        },
        "item": {
          "id": "3e03a8e0-0039-47d7-892e-ab5f2a4195ce",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "34055014-40d1-497a-9b1f-6de5733e68f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a445e467-fa05-48b6-bfc2-1da310fc683b",
        "cursor": {
          "ref": "ce8fe5b6-b9ad-4bcd-a109-090f258289d6",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "4fab0b46-c60d-4534-a85b-164b38e75c3e"
        },
        "item": {
          "id": "a445e467-fa05-48b6-bfc2-1da310fc683b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "95e1ecbb-251e-48de-9ed1-5b742c6cda8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c82cd63-d82d-40fb-92c1-2fa053900ac5",
        "cursor": {
          "ref": "df15ce98-5dcb-4ccf-95bf-7d0e2cc10c2f",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "578ba103-3efd-46c1-947e-ffc25a4aaf3b"
        },
        "item": {
          "id": "0c82cd63-d82d-40fb-92c1-2fa053900ac5",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "09fd00bc-7003-4d5f-8941-77a79acd20b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fdfd8c3-b20c-46d1-a31b-fb064b152408",
        "cursor": {
          "ref": "2ccf7873-4fd1-4f23-8fce-84966501d9f0",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6f840f49-0e1f-409f-802c-4af8c78cdc5a"
        },
        "item": {
          "id": "9fdfd8c3-b20c-46d1-a31b-fb064b152408",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3e62c60a-1738-4323-bd16-1811c4ee8896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 709
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca1cc043-f3e9-4bb7-be0c-c7c45f9354d2",
        "cursor": {
          "ref": "334d0212-f3ba-4bbf-8afb-29beb3ac0a76",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "16830723-fef4-40fa-af3b-8ded9c34d3c7"
        },
        "item": {
          "id": "ca1cc043-f3e9-4bb7-be0c-c7c45f9354d2",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9435f00c-c67e-46b6-9fe9-ed8f0444f58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e75b47-b294-48c7-a4b9-6961de0328f1",
        "cursor": {
          "ref": "835c23fa-ab46-4c97-8b24-f91339e0bbab",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "02029e1c-1d47-4501-b4d7-6bec196910a2"
        },
        "item": {
          "id": "a1e75b47-b294-48c7-a4b9-6961de0328f1",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1e6fdb30-cd78-49d2-9c0f-8cc0298ff8b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588dbb72-7387-4e19-a763-407a4634c1cc",
        "cursor": {
          "ref": "ed3f810f-0559-4786-90e7-722fad1131f8",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "9f685e14-23d0-462c-a8fd-009656f7d363"
        },
        "item": {
          "id": "588dbb72-7387-4e19-a763-407a4634c1cc",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "5a4822ac-3843-4e20-8a72-d4dca1d42869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 730
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b228b2-0def-43b2-b6a5-6bd299f633e2",
        "cursor": {
          "ref": "9e114981-1639-47c6-a400-5169aaf73f16",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e388b673-417d-40c7-b83f-5738520ed74c"
        },
        "item": {
          "id": "d6b228b2-0def-43b2-b6a5-6bd299f633e2",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c9532061-89bc-47a6-926a-ded35a0a1212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f2ddc8-abb1-4991-894d-5834ef5971c8",
        "cursor": {
          "ref": "9d7d8eaa-b759-4eb4-9e18-6be62151f55d",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8c784d72-1c1b-4c7f-a8f8-149547a5caab"
        },
        "item": {
          "id": "f2f2ddc8-abb1-4991-894d-5834ef5971c8",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "bd20cb40-79d0-44cd-a6c8-46be1e065d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 1006
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13da36b-c87c-475f-a7fe-35bb548c4d79",
        "cursor": {
          "ref": "c73c23f8-29bc-485f-bb08-b35653649929",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6ec49bd9-eed3-4ac1-bcbc-fadeeed271be"
        },
        "item": {
          "id": "a13da36b-c87c-475f-a7fe-35bb548c4d79",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6c232e11-3372-4894-91c8-0d77bc4b185b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a75ef66d-3836-442e-9fd5-32ea03ec688c",
        "cursor": {
          "ref": "904a3fc8-a471-4019-8587-7e4b2d7c4ef2",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "3896f8ec-781c-478e-9375-d6e4285528c4"
        },
        "item": {
          "id": "a75ef66d-3836-442e-9fd5-32ea03ec688c",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e6c2a048-0778-4771-8a62-aeedfbd324f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeacac94-1e02-4bda-a68b-1fce752f26f6",
        "cursor": {
          "ref": "2f2a1396-41eb-47aa-bd4b-09a47e2f1b9c",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f71503df-9f27-4bbc-a996-44dd4dc6338a"
        },
        "item": {
          "id": "aeacac94-1e02-4bda-a68b-1fce752f26f6",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5b97e97d-652b-4962-9243-76dc25a1ac05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb1edf8-9975-4e41-9030-3a2beea7fc96",
        "cursor": {
          "ref": "b54b4eb0-88f6-47e2-8f31-03e70a682bb0",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "afe41e33-4140-4f6c-868e-e1e1c78b6243"
        },
        "item": {
          "id": "ceb1edf8-9975-4e41-9030-3a2beea7fc96",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9fb5c98b-5c90-4775-89db-2e1e5bb4cb54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e877d1-3d69-4902-b226-482ce924c843",
        "cursor": {
          "ref": "397c9751-5329-459d-9966-3f8e277f604c",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "7f5cefeb-ab63-4f3f-bd60-4e6137c69bde"
        },
        "item": {
          "id": "b9e877d1-3d69-4902-b226-482ce924c843",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "cb4edea3-5903-45f3-8202-161dd4449d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 806
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372bf3dd-356c-4637-8be7-e3bd7022c016",
        "cursor": {
          "ref": "3c35a08b-abc9-490c-bfdd-818dcc76cc39",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4c12a990-e94f-49db-acbf-dbb925d13959"
        },
        "item": {
          "id": "372bf3dd-356c-4637-8be7-e3bd7022c016",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "cf9f1ead-1be5-4b1e-aa6a-382c5a2ab348",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94eddc9f-8e76-44c2-8d18-ec7c6ef33270",
        "cursor": {
          "ref": "d30982a5-0882-4046-bef9-d7d9900ab1b3",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "2c667347-9464-45d2-9a78-f3886bf85ed1"
        },
        "item": {
          "id": "94eddc9f-8e76-44c2-8d18-ec7c6ef33270",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "3d062a46-6056-4a0f-ae82-8f20e3874645",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 530,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5052f66-e4e0-4129-a0fc-d3cb7fd0837e",
        "cursor": {
          "ref": "7dd72585-4209-4397-ba8e-2c2e9391bdb7",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b55ad4d0-f6ab-486f-81a5-2ba0589b0e19"
        },
        "item": {
          "id": "c5052f66-e4e0-4129-a0fc-d3cb7fd0837e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "0475d3a6-da3a-49aa-8ed2-15bff87499c9",
          "status": "Created",
          "code": 201,
          "responseTime": 4316,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e7f397-68b6-494d-aa0c-696f0aa99bc1",
        "cursor": {
          "ref": "887cbfd3-a2da-4939-a32c-f117960d3626",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "4dea0194-b26f-43b9-acc0-adc68fcc3f0e"
        },
        "item": {
          "id": "e8e7f397-68b6-494d-aa0c-696f0aa99bc1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c30e113c-aead-4ef3-a7de-f6b5cb3f8135",
          "status": "Created",
          "code": 201,
          "responseTime": 3640,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "743fd1a5-2f4a-4c1e-8b1b-c75d3675b051",
        "cursor": {
          "ref": "ad83ce6a-7c15-4d79-9e64-f98edd78a549",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "dac57d69-8633-486f-9cf3-c75d3aeed83d"
        },
        "item": {
          "id": "743fd1a5-2f4a-4c1e-8b1b-c75d3675b051",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8baaa5ba-c2da-4b37-88c4-00d494b4f86e",
          "status": "Created",
          "code": 201,
          "responseTime": 4825,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a145eb5-059e-410b-9970-f3c515906f3c",
        "cursor": {
          "ref": "f3d86dc6-e760-4073-a7fc-9b128dd6b231",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "5c3dd6a7-e69b-47d9-bf29-16582beeaced"
        },
        "item": {
          "id": "6a145eb5-059e-410b-9970-f3c515906f3c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ead15caa-fd21-4c9c-9a94-764a9873ac8b",
          "status": "Created",
          "code": 201,
          "responseTime": 4624,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c00d7b5-0c9e-4b94-8fa4-361a2caa27ed",
        "cursor": {
          "ref": "82f2ea10-41f6-4b76-bf8e-278f01a139b8",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "835ed266-114e-4775-af47-0093d9ecc3c8"
        },
        "item": {
          "id": "3c00d7b5-0c9e-4b94-8fa4-361a2caa27ed",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c300eeb2-b873-41ba-a1db-472631450be7",
          "status": "Created",
          "code": 201,
          "responseTime": 5067,
          "responseSize": 1088
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada544f7-ea6e-4f71-bbd0-e61e2930824f",
        "cursor": {
          "ref": "43578bb1-38cc-4fd1-bf5e-837726e36d65",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "22ae6e73-e950-43f2-8d0f-8f1785e719e1"
        },
        "item": {
          "id": "ada544f7-ea6e-4f71-bbd0-e61e2930824f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b0c19072-30bf-434d-ad9f-711f9c186106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada544f7-ea6e-4f71-bbd0-e61e2930824f",
        "cursor": {
          "ref": "43578bb1-38cc-4fd1-bf5e-837726e36d65",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "22ae6e73-e950-43f2-8d0f-8f1785e719e1"
        },
        "item": {
          "id": "ada544f7-ea6e-4f71-bbd0-e61e2930824f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b0c19072-30bf-434d-ad9f-711f9c186106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e3eb2c2-9195-470f-aa7b-3041510c5956",
        "cursor": {
          "ref": "fbd7b72f-cf3a-41b3-b809-6de8c954efe3",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "bd5547be-609f-4ad7-bc2a-cc4fbf6a74b8"
        },
        "item": {
          "id": "7e3eb2c2-9195-470f-aa7b-3041510c5956",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1a3f3a84-6e70-4a23-b95e-69ffabf539d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3be8417-63d2-4b2b-b5ff-3e854d20eb44",
        "cursor": {
          "ref": "093f4544-5663-463b-9603-1595e3b5b4cc",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c61b1029-7c28-4f6e-a012-17fbb61988a2"
        },
        "item": {
          "id": "c3be8417-63d2-4b2b-b5ff-3e854d20eb44",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0605d44d-60dd-40aa-b967-a59388cd28bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60015d1b-50a5-4074-b472-a51b2f6c3901",
        "cursor": {
          "ref": "fe451ed8-0206-4250-a1b9-804e2e41f650",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "29cd7a49-dd0d-4793-a8da-d8d022358627"
        },
        "item": {
          "id": "60015d1b-50a5-4074-b472-a51b2f6c3901",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e317a84b-77ce-4e2d-9e3b-43221e258946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc861d28-69b4-494f-a1d3-551a746c86f0",
        "cursor": {
          "ref": "b5e0f5de-6a5d-4b7d-a3e8-c4b04f11026b",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "457c350a-f110-4926-970f-ffcc30e591db"
        },
        "item": {
          "id": "bc861d28-69b4-494f-a1d3-551a746c86f0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "357183f3-cad4-4624-aa3c-835b4f13e675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab9506c4-b922-4742-88b2-84195a564dc8",
        "cursor": {
          "ref": "a2313d7c-30b8-4c91-b5d1-e282d4d07fb3",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7ae686cc-b93f-4bbc-9cae-e31b6777ef64"
        },
        "item": {
          "id": "ab9506c4-b922-4742-88b2-84195a564dc8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "71e059c6-8094-47b3-9ec0-4c2e3e2630e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 829,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4fd2f7-fe89-4049-a919-aefeb8589fed",
        "cursor": {
          "ref": "2b73bda2-ccdd-4378-8cce-dbabc9878ba1",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "81e61ad2-2100-40da-9bbc-ddde82a9c19c"
        },
        "item": {
          "id": "ec4fd2f7-fe89-4049-a919-aefeb8589fed",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9108fc2b-f31f-4f8a-8d65-b066868cdcc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 983,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc3f71b-a921-4ed6-a80a-ce57d7aa8c92",
        "cursor": {
          "ref": "32e4e37e-9cb7-495a-8d81-980cfc494c09",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6b08fcb5-1783-4bfa-8cbf-a3aa4409ad7c"
        },
        "item": {
          "id": "1dc3f71b-a921-4ed6-a80a-ce57d7aa8c92",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7be412a8-288e-424f-b9ac-5252bdb7a4d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 894,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c51e25-735a-437d-b7de-950b53d948e4",
        "cursor": {
          "ref": "fa34df6b-7e56-45f5-9ccb-42095953a060",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8b2b7a46-2e83-480d-91a3-20e959474311"
        },
        "item": {
          "id": "31c51e25-735a-437d-b7de-950b53d948e4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "078d8749-a7cd-4275-8cf2-744518ff5bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "078716b0-8463-4bc4-bba9-67f85cce45bb",
        "cursor": {
          "ref": "822400c6-07e6-45e2-81ad-926519c3aadd",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a0cac35c-1acf-46f6-99bc-f463c9f9f031"
        },
        "item": {
          "id": "078716b0-8463-4bc4-bba9-67f85cce45bb",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ddaf1f74-5a65-464c-bfe3-0c4ae158b41c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f085832f-6c94-4825-92ea-c74451f82f7e",
        "cursor": {
          "ref": "fb14ac21-a8d8-41dc-8739-87861cfb19e9",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "84e3ff71-4f55-4558-9e06-aba65e33e7e9"
        },
        "item": {
          "id": "f085832f-6c94-4825-92ea-c74451f82f7e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3672782c-7d00-49c0-968c-c4b8ef152841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26aa9933-902c-4b9d-84cd-7d9b16bdd915",
        "cursor": {
          "ref": "50078606-ccfa-4bc7-aee1-9faf6e2de4bf",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "2e04e398-8e08-4618-ad70-c3c82ff245bf"
        },
        "item": {
          "id": "26aa9933-902c-4b9d-84cd-7d9b16bdd915",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e96949ed-3850-4551-b39d-68126a8e1581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0cf0083-c0d0-4304-bc89-afded7e28ad8",
        "cursor": {
          "ref": "03ccdb57-6941-42a3-a769-6827baa83628",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d2b91ce5-f4c7-4d55-8c52-f5749ce09fd4"
        },
        "item": {
          "id": "b0cf0083-c0d0-4304-bc89-afded7e28ad8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7f9fc47f-93d8-4a99-8c5d-d64ebcf937ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5dd9333-ed7a-4985-8953-1ddac82fe9fd",
        "cursor": {
          "ref": "43180a3a-dad3-496f-8cc1-1d422facd06c",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "9ac7c18b-ebdf-477a-87bc-72f0d7a38f40"
        },
        "item": {
          "id": "e5dd9333-ed7a-4985-8953-1ddac82fe9fd",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "52eeb800-cf7b-4726-b389-89509a9a6913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da59029f-9adf-442c-90d5-5a25179868b1",
        "cursor": {
          "ref": "2594f8a9-6c4c-4eea-8a14-aa3091bb7077",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d7625cef-d3db-4d32-b51a-b8182a099f7f"
        },
        "item": {
          "id": "da59029f-9adf-442c-90d5-5a25179868b1",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "464692f3-ccb3-403d-8b80-7f0bdb991035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d03cc21-d5e2-4c57-8bd8-e42296ea66a7",
        "cursor": {
          "ref": "9cf15489-7dcf-4e2c-b76a-70fdfdc93997",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "afac3f86-7a7b-4bb1-b04c-37f4aab5ed29"
        },
        "item": {
          "id": "3d03cc21-d5e2-4c57-8bd8-e42296ea66a7",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6338b830-5da0-4dde-ad2b-93dce804f670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44bc050b-6bb5-4d66-a55c-ab53aab41853",
        "cursor": {
          "ref": "e775145a-1547-4307-852a-61d9752db144",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "bce18014-46ff-4624-8318-b89124cb6aef"
        },
        "item": {
          "id": "44bc050b-6bb5-4d66-a55c-ab53aab41853",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "cd0431c1-1bea-4c1c-9abf-b431f289c76d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "055d6ec8-be03-4b4a-903d-1db332f06655",
        "cursor": {
          "ref": "6f5f4d73-ac10-4f24-9f0e-72ba31a30fdf",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "4024e359-49c3-4d74-a693-7e3e4ecb1ff1"
        },
        "item": {
          "id": "055d6ec8-be03-4b4a-903d-1db332f06655",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9cfd4fc2-0f0e-4822-bf0d-13d771a80cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d22f580-edbf-43d6-8937-ce75819b9e7b",
        "cursor": {
          "ref": "1a6ac6a1-633d-4144-ac0c-15011a4edf4b",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "84c8ceb6-4fb9-4ab4-8862-a8b3d7938ebc"
        },
        "item": {
          "id": "2d22f580-edbf-43d6-8937-ce75819b9e7b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "15002e20-dd38-4f62-8859-4270a0baeca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c204def8-da1c-488e-a5db-065f5cdbe7af",
        "cursor": {
          "ref": "1da24dc0-4444-4ed6-a747-263dfb54da82",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "064290cd-cc33-4aa2-93dd-05d7f42f8ab2"
        },
        "item": {
          "id": "c204def8-da1c-488e-a5db-065f5cdbe7af",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f7fa9da0-f54c-4994-aa33-393a08c9bb21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df1d338-9107-4d16-a951-730e1f981b1d",
        "cursor": {
          "ref": "31e3540c-280d-41ee-821c-6a400d0f8aab",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "89af8d8a-9d16-4240-9e45-2f1a066f033a"
        },
        "item": {
          "id": "0df1d338-9107-4d16-a951-730e1f981b1d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c443077c-d28f-490a-80c5-73d197eb0fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7a508f-8468-424a-a5f2-0de61d17c465",
        "cursor": {
          "ref": "bceec0cc-093f-4bc9-8aed-83b4b2c0eda7",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "51c12ca5-e0b0-4111-9bd9-fa48a91d5989"
        },
        "item": {
          "id": "6b7a508f-8468-424a-a5f2-0de61d17c465",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "cad794a8-7e9b-45ca-9e9b-75008a4728c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6d7c90-fded-4eea-a0ec-134560446823",
        "cursor": {
          "ref": "a301ce3e-9943-4ea6-8bb9-140886fb3da3",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "bcfaad6d-fdf0-48a4-8934-d891d4df4e0a"
        },
        "item": {
          "id": "0a6d7c90-fded-4eea-a0ec-134560446823",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1e199e7f-3d96-414c-b0e1-f5e4eac51f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b6ec3cf-5015-409f-b8ea-e9ca45cd4d10",
        "cursor": {
          "ref": "619838bd-2b22-43d8-88a3-927029530634",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b714dd6e-d05d-4415-8b60-78e49a6b4fd6"
        },
        "item": {
          "id": "7b6ec3cf-5015-409f-b8ea-e9ca45cd4d10",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ea97e4c3-1c5e-42df-9c44-d943c7f8320b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa4eb013-6823-4f87-830c-c7e8aa02eff1",
        "cursor": {
          "ref": "dfb41af6-5ee3-484e-8635-9adc925271cd",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "9817b544-217a-426d-be6f-d04438da849a"
        },
        "item": {
          "id": "fa4eb013-6823-4f87-830c-c7e8aa02eff1",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "415c6e89-37ba-4fad-b258-41cf529eb65f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d570b5f-6339-448f-a526-93704cd4be92",
        "cursor": {
          "ref": "57e20847-e6c1-4cb2-b915-e49288003c2f",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "dfc2fe66-375d-4317-bca2-6119f1eeafab"
        },
        "item": {
          "id": "4d570b5f-6339-448f-a526-93704cd4be92",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "cefe46aa-edc2-4076-aa7f-db276830af32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fcf8839-ffbb-4ee7-944e-afa34a8f1883",
        "cursor": {
          "ref": "99a2f51b-6f54-487b-a61b-d38d2183670b",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1de793da-154a-4422-b97c-600a201bdf8a"
        },
        "item": {
          "id": "8fcf8839-ffbb-4ee7-944e-afa34a8f1883",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "038913a6-00aa-49c7-b646-d80e11f12abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "124948ea-5d2b-4cb3-a7e4-f92a0f6462d8",
        "cursor": {
          "ref": "3648b66e-94b1-4e59-97b3-ba604002576e",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "69a29459-9d82-4aae-b5b4-01aeb252f4a9"
        },
        "item": {
          "id": "124948ea-5d2b-4cb3-a7e4-f92a0f6462d8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "dce7857a-f0b0-4b21-8d2c-1b844026e55e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff43bd96-169c-4af7-ae3e-b407062f8f3f",
        "cursor": {
          "ref": "3d1cfae9-eeb0-4792-a1ca-0d2c21a42e72",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "964cf8f7-1018-4811-b4ce-2e2a317e0595"
        },
        "item": {
          "id": "ff43bd96-169c-4af7-ae3e-b407062f8f3f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e51ae194-919c-4a9a-9ed2-a753504c23de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b304264-15bf-494b-b05d-fc99c0bebd01",
        "cursor": {
          "ref": "848031c0-d69f-4821-a2fe-4e37d0138b3e",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5f12f2e7-7b24-4496-8b1d-7081701c2967"
        },
        "item": {
          "id": "8b304264-15bf-494b-b05d-fc99c0bebd01",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e1c0f9ea-4503-4fb3-bb19-620d6d0a97a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f50a36-ce1e-4769-8711-e318f0bb841e",
        "cursor": {
          "ref": "85523b6e-46b3-4ad0-96ca-bb2f3a97ad4b",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "23e317df-3960-466f-9408-ab5c83d78031"
        },
        "item": {
          "id": "84f50a36-ce1e-4769-8711-e318f0bb841e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c15d1670-82d2-40db-ad62-1629233f3b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31723456-dfb4-40f3-8fc2-26977afbd35d",
        "cursor": {
          "ref": "4c829411-caa1-431a-9357-80bb95bbd80c",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5cf3ce36-6805-48e6-93a9-c1667bc7ee02"
        },
        "item": {
          "id": "31723456-dfb4-40f3-8fc2-26977afbd35d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "8baba7e2-44a1-496f-b695-146df822d403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae6e3463-b3f9-48d6-a4ae-93ef1d1d2358",
        "cursor": {
          "ref": "e55ff822-de84-40bc-9cc7-3c1efcb29c29",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f8d443b8-603e-4270-ba21-eb7d652a5094"
        },
        "item": {
          "id": "ae6e3463-b3f9-48d6-a4ae-93ef1d1d2358",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "053bc87f-dc3f-4b13-8770-ba0f0af2789c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d890f50-3cc5-4b2b-8ee7-1a5b1aa87216",
        "cursor": {
          "ref": "afc4f7a2-36e9-4ba7-beb8-d15e7ac02774",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8919c950-b247-402a-bfbb-26a2feff5549"
        },
        "item": {
          "id": "5d890f50-3cc5-4b2b-8ee7-1a5b1aa87216",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "f4219c1d-f88a-4566-9474-62ce05fdf512",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 527,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5a77ba-b22a-4a92-8b60-b9673c591b4b",
        "cursor": {
          "ref": "af5afdb6-68c1-4473-b43e-4d7387a402f8",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "44d8c582-e3d3-4aaf-b48d-4c0c57059fdd"
        },
        "item": {
          "id": "5e5a77ba-b22a-4a92-8b60-b9673c591b4b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0690eee8-8df5-4491-bb8f-a1fa4490358c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5a77ba-b22a-4a92-8b60-b9673c591b4b",
        "cursor": {
          "ref": "af5afdb6-68c1-4473-b43e-4d7387a402f8",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "44d8c582-e3d3-4aaf-b48d-4c0c57059fdd"
        },
        "item": {
          "id": "5e5a77ba-b22a-4a92-8b60-b9673c591b4b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0690eee8-8df5-4491-bb8f-a1fa4490358c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0067428-0822-4d4c-9822-d4bde67c12d6",
        "cursor": {
          "ref": "420e68fa-a74d-41ba-8b13-000555a4458b",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "371d854c-49c4-48f1-ba04-e335d96aebd0"
        },
        "item": {
          "id": "e0067428-0822-4d4c-9822-d4bde67c12d6",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e00c7d78-70ab-43ed-a84b-609b001bc7cd",
          "status": "OK",
          "code": 200,
          "responseTime": 323,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:146)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:146)"
            }
          }
        ]
      },
      {
        "id": "8cfc4a10-40a6-47e4-86bf-b5dab108769f",
        "cursor": {
          "ref": "de970f15-930b-4bc9-8971-b0be9c5492fb",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ea0ed72d-77ba-4ec2-a33b-02b9d629f88f"
        },
        "item": {
          "id": "8cfc4a10-40a6-47e4-86bf-b5dab108769f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "790ae633-8094-4de6-8b66-92de5a756e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f4ede2-6c94-4c48-a04e-a5bc3e67493f",
        "cursor": {
          "ref": "23c41361-b155-4488-affd-6f9c69e25021",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2776b62b-5905-40b2-aed9-c6c78a6c8ca0"
        },
        "item": {
          "id": "f6f4ede2-6c94-4c48-a04e-a5bc3e67493f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9e5b6cad-e12b-4c64-90da-9fb1281cd427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317a08bb-7b74-4c0b-a993-2133a2b4ed21",
        "cursor": {
          "ref": "c2ad07d2-5484-4635-aaad-0a748defe811",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1a3a6fc0-c434-4fb5-9431-87b6a2415317"
        },
        "item": {
          "id": "317a08bb-7b74-4c0b-a993-2133a2b4ed21",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c70411e2-5220-446e-a21d-86b541d54a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886ff296-1a17-4421-98cc-e42e3699dfe6",
        "cursor": {
          "ref": "ce474079-f5d8-4ec1-9b86-86623a5c2661",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8b572fb0-1d47-4f4f-9426-2aefa4f27d1c"
        },
        "item": {
          "id": "886ff296-1a17-4421-98cc-e42e3699dfe6",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c6489921-47f5-40a9-a39b-3803ad65e00f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba18c202-9f21-4a02-9227-78d4328de7b8",
        "cursor": {
          "ref": "a9cab217-52ab-409e-ae11-313bffc014ee",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1f105e27-198f-4c16-af63-e283e53394ad"
        },
        "item": {
          "id": "ba18c202-9f21-4a02-9227-78d4328de7b8",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "83b7210f-4d70-41f1-8b47-088d91c213dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af617f6c-939c-48dc-bdb4-a2aa526f1d7b",
        "cursor": {
          "ref": "0fc16fba-9857-451f-baac-121e649d9a2e",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9c893856-cefa-43d9-ac31-047a97324fae"
        },
        "item": {
          "id": "af617f6c-939c-48dc-bdb4-a2aa526f1d7b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d60bf078-092d-4847-964d-b592b0a2377f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e510574f-aadb-45f4-8a13-83bd1369d666",
        "cursor": {
          "ref": "0fbd1fcd-4c46-4734-84a1-235c091d3bdb",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "2079c048-e15f-4f4e-85c8-dd2132c3e23e"
        },
        "item": {
          "id": "e510574f-aadb-45f4-8a13-83bd1369d666",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "cef5db9c-a556-47d8-ab04-b30640c620a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 2009
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4141425a-cdb7-469a-8f69-5b179d5174ab",
        "cursor": {
          "ref": "6a88c5da-9168-46fe-bd06-1d9741d9d87e",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "30ccbe73-1eb7-44e2-884b-a66dd61f771f"
        },
        "item": {
          "id": "4141425a-cdb7-469a-8f69-5b179d5174ab",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "debdf5b1-067d-401c-937c-a32903e64066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0841893d-94db-4dd6-bd97-9b969377c570",
        "cursor": {
          "ref": "69636fb6-37d7-4b1c-8c7d-341864f161ee",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "ef18ff03-2b5c-4f88-b9fb-6bf1ba919a56"
        },
        "item": {
          "id": "0841893d-94db-4dd6-bd97-9b969377c570",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "09338929-45fd-40ec-a3a9-1966379b10d3",
          "status": "OK",
          "code": 200,
          "responseTime": 342,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:155)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:155)"
            }
          }
        ]
      },
      {
        "id": "c6c32776-10ad-49f7-b7f7-5eae798b8036",
        "cursor": {
          "ref": "4d3a767e-d418-4c24-85b0-b893d2ba6f76",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "60cc8281-98e0-471d-b727-6aa211fc5e29"
        },
        "item": {
          "id": "c6c32776-10ad-49f7-b7f7-5eae798b8036",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3a5ce119-b819-4ba1-9c50-f5c6b2164fe3",
          "status": "OK",
          "code": 200,
          "responseTime": 582,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:156)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:156)"
            }
          }
        ]
      },
      {
        "id": "33639e1d-a0fe-4c8f-a622-3123f1a8ce4a",
        "cursor": {
          "ref": "a60726bc-4672-4b78-a36d-77f3a3ed055e",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "76f6e4ec-56f5-44c3-a5f9-6da362c96b50"
        },
        "item": {
          "id": "33639e1d-a0fe-4c8f-a622-3123f1a8ce4a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "cdf1f9a8-3747-487e-b56d-0774b155acd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 2466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26855021-0194-479b-bac7-c7f118815fda",
        "cursor": {
          "ref": "ba8e66b6-5502-497a-bbf5-d29112653132",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "593abf89-e053-4b7f-8fe4-0ada153d5f04"
        },
        "item": {
          "id": "26855021-0194-479b-bac7-c7f118815fda",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d5cb5794-33d7-47f3-a19a-9420dcadd0ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd65b64d-2dc5-4cb0-a255-d90f627b4af6",
        "cursor": {
          "ref": "9c423edf-664b-468e-b5b7-1475bf719377",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "de9f1d61-7800-4ac6-823a-8c4d02338b0a"
        },
        "item": {
          "id": "cd65b64d-2dc5-4cb0-a255-d90f627b4af6",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b71e3fdf-ec21-487a-96e4-da34fa442599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 2455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68112b8c-6cbc-48c0-b134-491c5aff39ce",
        "cursor": {
          "ref": "c6d1f3d3-6419-4909-baf4-a6a470a27ac2",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5a14601f-d52f-4925-af02-3beb1aee70f9"
        },
        "item": {
          "id": "68112b8c-6cbc-48c0-b134-491c5aff39ce",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "56f9a2a4-64f0-41a4-a7ee-0b35494fd919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631aae35-bb22-40ec-80aa-cf2410b041d2",
        "cursor": {
          "ref": "e7e6b5a9-e812-42fb-b88b-27691e02fc72",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "26e1cfa9-4c26-4836-879a-15a06b9046d8"
        },
        "item": {
          "id": "631aae35-bb22-40ec-80aa-cf2410b041d2",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d621ec9d-e47d-4da8-b8e6-b88dd659ef90",
          "status": "OK",
          "code": 200,
          "responseTime": 639,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:161)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:161)"
            }
          }
        ]
      },
      {
        "id": "4d8244e1-d2e0-478f-b6ad-0b2a5d47dd57",
        "cursor": {
          "ref": "d96776e1-7312-452e-bc07-a5bcf9f20ed1",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9c07864d-da1f-46a0-8a45-067dd5fabacc"
        },
        "item": {
          "id": "4d8244e1-d2e0-478f-b6ad-0b2a5d47dd57",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "931bd5bd-7fc6-4f78-9ab8-c8c3a35b22dc",
          "status": "OK",
          "code": 200,
          "responseTime": 2023,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "a9c0a65c-8165-48c0-b5b5-e84e072e7d3c",
        "cursor": {
          "ref": "dae57522-7dd3-4a2f-bf74-efd4ae40ffc7",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e7f30671-1aa4-48d7-a5c5-b771c5eb11ef"
        },
        "item": {
          "id": "a9c0a65c-8165-48c0-b5b5-e84e072e7d3c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "83d2bcab-e0f2-46e5-8377-ae110d185a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "047ddb8a-629d-41b7-b801-5fd976946955",
        "cursor": {
          "ref": "82302040-78d5-4d3a-85d4-9a686dd8471e",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6ce9c001-9c52-442b-b629-b604e3dfb5bc"
        },
        "item": {
          "id": "047ddb8a-629d-41b7-b801-5fd976946955",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c0793b82-c3fb-41bd-9cbd-0d184d1b3d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ea7ad7-b68c-4ca3-9588-5564a2150a73",
        "cursor": {
          "ref": "d3006b0e-a0b1-460a-817d-738cdd9708c6",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c3565095-e4b1-4a30-b0dc-52b892e71a1b"
        },
        "item": {
          "id": "e3ea7ad7-b68c-4ca3-9588-5564a2150a73",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "5283d7d3-9811-4a48-a16a-0fc8fc0f8fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2fbb427-3118-4e48-9b5b-ffdcb044c7a0",
        "cursor": {
          "ref": "9ddd777b-8add-426e-9c22-f318ba9a949f",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b4929617-0e39-442b-99fb-be45e0b00398"
        },
        "item": {
          "id": "b2fbb427-3118-4e48-9b5b-ffdcb044c7a0",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "396c5db9-f2d0-49d3-800e-a5273129f9fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8dde7c1-949d-4638-996a-4ed54b01b9bc",
        "cursor": {
          "ref": "5ad3ac8b-97cb-4161-b735-cbb123585dd1",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "75870c12-450f-4c27-9c21-63244ffaaf66"
        },
        "item": {
          "id": "e8dde7c1-949d-4638-996a-4ed54b01b9bc",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e8b64d85-1246-4f43-acea-19e3fffda0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7892970e-6345-4863-bf6e-9b10924ea116",
        "cursor": {
          "ref": "fb3d5ffb-65b4-4678-84a6-8c2ef33dfcca",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a665fb67-4b47-4aa9-87c0-d86cb01457cb"
        },
        "item": {
          "id": "7892970e-6345-4863-bf6e-9b10924ea116",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ce6a5bb3-e93e-418a-876d-cff636336dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e1fd3d3-6472-432f-a945-b84ba7eb46df",
        "cursor": {
          "ref": "6a19bda2-985e-4816-814e-76b39736d784",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "bfc63260-5bcc-4b78-94fb-741231203d86"
        },
        "item": {
          "id": "4e1fd3d3-6472-432f-a945-b84ba7eb46df",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "deeafa68-017c-4dc3-a3af-4dd8e2fb9324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "770a7282-39e8-4176-8335-d3169ad76cf2",
        "cursor": {
          "ref": "7d18fc8f-7977-4c05-885a-f0eda3fea6b9",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "5f0da0e7-608a-497b-a9dd-e2e7a3e8d381"
        },
        "item": {
          "id": "770a7282-39e8-4176-8335-d3169ad76cf2",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "f9879e7c-5d0e-4c41-ad4f-968cc1147fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b12946-5ede-4b2b-bdde-8f4788263ebd",
        "cursor": {
          "ref": "9edc8c5a-dfd5-43e1-b31f-9382bb839c04",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ec1248c2-9ddf-43d8-89a7-9611e8a6049f"
        },
        "item": {
          "id": "43b12946-5ede-4b2b-bdde-8f4788263ebd",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "92eab9b0-0419-4a0d-bf4f-71a784f6b61d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83fde0ed-ee9b-47ca-86c8-a2400102440d",
        "cursor": {
          "ref": "5013ffe7-4fb8-4d05-8192-65177b0418c9",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9d49ee60-897f-4209-88ca-f2ce9e6f90a4"
        },
        "item": {
          "id": "83fde0ed-ee9b-47ca-86c8-a2400102440d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1cad14ca-983f-4033-8ceb-538ab214a056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fef5ccb-b7e3-4080-9299-9e61ef60d470",
        "cursor": {
          "ref": "d8cc2ab4-5c6d-4407-9bf8-94a85f5c76d4",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2a48183d-848f-4c32-8588-ea48d7fea981"
        },
        "item": {
          "id": "4fef5ccb-b7e3-4080-9299-9e61ef60d470",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "da36381c-cf3f-4d69-9a27-6bbacdd04166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f70562-5c2f-4275-b562-9dc6c96e2201",
        "cursor": {
          "ref": "30bf10e5-8878-4c62-bcef-6ff43b3c7fa0",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6136ba88-d472-4742-8dcd-31bd21f217e3"
        },
        "item": {
          "id": "16f70562-5c2f-4275-b562-9dc6c96e2201",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "163d3c19-f1b6-4de5-8e9b-be6019c2984c",
          "status": "OK",
          "code": 200,
          "responseTime": 371,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "aed84f35-ef92-46f4-a13a-64b29077f2a7",
        "cursor": {
          "ref": "8e5486e5-633e-4768-ae52-8f7f32c11226",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "218641be-6942-481c-85dd-1f3c31f2f5fa"
        },
        "item": {
          "id": "aed84f35-ef92-46f4-a13a-64b29077f2a7",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b79382a8-4f48-4003-8cdf-32b0b783ff42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad8c7cd-5c0b-46a9-9668-30fbdef94ee8",
        "cursor": {
          "ref": "91c143cc-cc93-4080-a971-9403c76db1a4",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "41937a0b-e548-4228-8717-509f3a860ac2"
        },
        "item": {
          "id": "3ad8c7cd-5c0b-46a9-9668-30fbdef94ee8",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "236cb309-1b8b-4980-bc9d-3efd6298e074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53cc78fd-df0c-4b7d-be29-92ede82bc4e2",
        "cursor": {
          "ref": "e023003d-afca-4f32-a72c-e21b04dbfbc7",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ef9d0f08-7b21-4e33-b768-3ba5d9318838"
        },
        "item": {
          "id": "53cc78fd-df0c-4b7d-be29-92ede82bc4e2",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e705e060-624e-48bb-a4bc-cfe9195ee5a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8276161e-e35c-4567-a288-0bfe61a2a8ca",
        "cursor": {
          "ref": "3d0e9f59-36ff-4ec8-abad-b972071cc523",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ddda059d-0a52-47ec-abed-ec5ae3843a07"
        },
        "item": {
          "id": "8276161e-e35c-4567-a288-0bfe61a2a8ca",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "53f1e320-0f2d-4f51-b1b4-09c76644d0f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "effcef5b-1b6f-49b0-b4ea-496fa84a0b8d",
        "cursor": {
          "ref": "4b1ef788-be3c-4ddc-bbb7-b82b22859257",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "76a0f5cc-655d-4abe-8b4c-d3235c86fc5c"
        },
        "item": {
          "id": "effcef5b-1b6f-49b0-b4ea-496fa84a0b8d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3c650450-c14a-45d2-8634-9ab096810f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ddc902-40e0-46d5-a8a2-a8ffe1546b67",
        "cursor": {
          "ref": "6fcd55c6-4940-4147-86c5-bd0e7a6b85b3",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "30c02a08-26bc-4066-a552-2966351fd54b"
        },
        "item": {
          "id": "f9ddc902-40e0-46d5-a8a2-a8ffe1546b67",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3e63f77e-35ba-4a01-9348-303d0b7b197f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1dc803-1526-4534-b013-f8dcfb394de9",
        "cursor": {
          "ref": "6ffb6a28-5d13-4de3-b473-51a2c554da00",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "92e34ef9-d942-4064-b595-1f02b6b3ca9d"
        },
        "item": {
          "id": "7f1dc803-1526-4534-b013-f8dcfb394de9",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "afd5fb7b-1683-41ec-bc00-382deae0a077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c14b6421-8c6f-47cc-a223-d6b1b8f56744",
        "cursor": {
          "ref": "e9e17cdd-55be-4f54-a1f6-ffcb39b7bff5",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "6ed7dc95-9592-40cc-8025-d2ba85593707"
        },
        "item": {
          "id": "c14b6421-8c6f-47cc-a223-d6b1b8f56744",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "fb2cbf37-3b3c-4f88-822a-58a77f4aa98d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d4c214e-01b2-45f6-829b-ef68208fcf42",
        "cursor": {
          "ref": "d28b96ba-512a-4385-a270-93fc9665b464",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "0b480497-9c5b-4b8e-ba53-450726c37fe3"
        },
        "item": {
          "id": "5d4c214e-01b2-45f6-829b-ef68208fcf42",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "df84b4da-c8c1-4a32-971b-04e9bf01701f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f215ae-74f5-472c-b31a-3dda24e0d4c6",
        "cursor": {
          "ref": "2cfd3293-2100-4c7b-bc84-966ebafd4cf7",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "42a5f3d1-23a5-4e4d-94dd-5ed0d01200e1"
        },
        "item": {
          "id": "53f215ae-74f5-472c-b31a-3dda24e0d4c6",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "67671149-7b8d-42d5-b15d-ed3842ad9508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d9ec47-83c4-4508-bc96-df18ffaa898f",
        "cursor": {
          "ref": "401a8517-0dbb-47c4-bf07-59a3a630b02d",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "bdcb9289-8577-471e-934a-3afec0c70d77"
        },
        "item": {
          "id": "a4d9ec47-83c4-4508-bc96-df18ffaa898f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "64db3116-a2d5-41fd-bade-99dac4a1a84e",
          "status": "OK",
          "code": 200,
          "responseTime": 342,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:185)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:185)"
            }
          }
        ]
      },
      {
        "id": "5922d358-63c5-4bea-ab4a-31c690166619",
        "cursor": {
          "ref": "3adee158-4032-4cdd-a981-67326a66dd3f",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2eef69a7-3d17-4973-9fb8-907761fc16ad"
        },
        "item": {
          "id": "5922d358-63c5-4bea-ab4a-31c690166619",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "8e823f5a-0b25-4b7e-8725-ca482360fdc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d45400-addc-4182-8288-d6cc89f0478c",
        "cursor": {
          "ref": "d84311db-cc46-457f-98a1-d9272d77f125",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a697905d-a0c7-4b3b-a8d7-16203dbe8b20"
        },
        "item": {
          "id": "f0d45400-addc-4182-8288-d6cc89f0478c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ac00055d-c583-4402-8dcc-af15f6b9edf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9be6900-74a7-42c5-8f5e-5c154a4dafd5",
        "cursor": {
          "ref": "d7fb96a8-021e-456a-8e7f-bad540bec6f1",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "329e0849-6f39-46d5-99ee-c4fd5e7f6d97"
        },
        "item": {
          "id": "d9be6900-74a7-42c5-8f5e-5c154a4dafd5",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e8a7d74d-9ca7-4d85-8756-28e3c4868b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cddf62ff-2800-42d9-8f98-2174170de46f",
        "cursor": {
          "ref": "54852d78-c218-40bb-a27d-15dec14a9dbe",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "fdac30db-ea2b-4f9b-a8e1-c4e93660af41"
        },
        "item": {
          "id": "cddf62ff-2800-42d9-8f98-2174170de46f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "cfb3e41b-95f9-4720-b509-baf588d943cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b3cba8a-844f-4c63-81cd-4392a458071a",
        "cursor": {
          "ref": "3f2081bd-141a-413e-8e51-fe7b86627c6a",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "63e19e2a-b080-4c4e-84a8-1699c13b6d72"
        },
        "item": {
          "id": "3b3cba8a-844f-4c63-81cd-4392a458071a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "db258f68-b435-4a7e-97fa-dd02bd42d903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31a8ad9-0610-4be5-8a87-57787bb66117",
        "cursor": {
          "ref": "ca2e8b42-f177-4968-9b71-fbf1195affb7",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "66be9c41-b44a-48b7-a836-a10c9af4c2b1"
        },
        "item": {
          "id": "e31a8ad9-0610-4be5-8a87-57787bb66117",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "1715243f-103a-4bb2-a045-78923a000553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3790b5-bef4-4d72-8441-b06bde74e3bc",
        "cursor": {
          "ref": "b099964f-8991-424a-9352-c0c889cfe37b",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "42aef0fd-bf86-4a8b-a0bd-4cddf239fb4e"
        },
        "item": {
          "id": "af3790b5-bef4-4d72-8441-b06bde74e3bc",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6e01b67d-6c98-4096-b0e9-c737f91a1cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "746390df-c44d-4565-8e6c-10ef3fabf05c",
        "cursor": {
          "ref": "9f0d1e1d-35f2-474b-a617-2968d7c9ac08",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "8123bd40-492d-4e6b-b646-dcac029f53c7"
        },
        "item": {
          "id": "746390df-c44d-4565-8e6c-10ef3fabf05c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "3e4b0156-6e8e-48c2-8e60-8c5d6113b934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e362ad9-0013-4161-8f62-c099c407a67e",
        "cursor": {
          "ref": "26f03cef-1522-4ecc-ad61-819bb362696c",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "bf047b81-b81b-4a77-9e97-86fbfc8ed1fb"
        },
        "item": {
          "id": "6e362ad9-0013-4161-8f62-c099c407a67e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2aff0696-d16c-480d-bd4b-ca41109eae25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "851965d7-ab8f-4f76-a3d7-c656e974050f",
        "cursor": {
          "ref": "033f5c3c-501b-4477-a18a-20d9b0dc4e29",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b866b9e9-6b0b-45dd-a406-ab756e61cbe6"
        },
        "item": {
          "id": "851965d7-ab8f-4f76-a3d7-c656e974050f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "1c95d985-7c65-494f-b614-15803e149913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c9f83a-2f36-4af0-b006-eefe2ba25f60",
        "cursor": {
          "ref": "87992e8a-6155-4ab4-b428-f1532559c86c",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "89add7f8-907b-4401-a8fa-18e2bf169e15"
        },
        "item": {
          "id": "54c9f83a-2f36-4af0-b006-eefe2ba25f60",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9188000b-b200-4d02-8bcc-accc0cafd1a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c640ac-1bc0-44a0-bb65-ff88cce930a9",
        "cursor": {
          "ref": "b63454f9-dc1a-4214-9437-e2b5f2f6d4c9",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "0841ad06-3988-4e4a-a600-2d8cea8f6e15"
        },
        "item": {
          "id": "60c640ac-1bc0-44a0-bb65-ff88cce930a9",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2b5efe68-5899-4a2c-916f-17be53fb56fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d40972-d04b-4224-b5d6-f0983e8f95b6",
        "cursor": {
          "ref": "a7adddfd-59ed-4f8e-bfe9-72e0901a06e7",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "02f54880-3a4e-41ea-9219-e1b210968389"
        },
        "item": {
          "id": "23d40972-d04b-4224-b5d6-f0983e8f95b6",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "53f01523-6db9-48af-84d4-a4c00fa44935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6bfb5e8-de53-4d26-8f75-ee6d1b086bc0",
        "cursor": {
          "ref": "83c077b0-731c-48bd-88f7-2ae4d6ef447a",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "5d8a191a-6b8b-471f-b9f7-f8dffdbeedec"
        },
        "item": {
          "id": "b6bfb5e8-de53-4d26-8f75-ee6d1b086bc0",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c5a62da2-0aac-41e2-9f5a-072dde9e623a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f5c56f-20f6-42a4-9bbb-678866d07899",
        "cursor": {
          "ref": "58f8e5a1-aeb5-4f7b-b683-a4f68ca3b542",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d93d661e-3297-45f0-9e71-77ceb7eed32c"
        },
        "item": {
          "id": "f0f5c56f-20f6-42a4-9bbb-678866d07899",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4a6c1234-0fb4-4ae5-9813-940a80364474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f69f994-a73f-47af-9ba2-b538610cf918",
        "cursor": {
          "ref": "0e6bad9e-f350-440e-95fe-6ca5759626ad",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "62359db2-6752-4ea3-85a7-2b1a248063d2"
        },
        "item": {
          "id": "9f69f994-a73f-47af-9ba2-b538610cf918",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "042b8707-3e96-47ac-badb-e46869c99787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c68b11-168d-491f-ae94-3dca64efe017",
        "cursor": {
          "ref": "5e7260d7-492a-47d0-b2cc-874760b09fbf",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ebe47549-de20-4507-a760-08a4aa446f4a"
        },
        "item": {
          "id": "87c68b11-168d-491f-ae94-3dca64efe017",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0386a157-3670-4871-8637-cfcefb658435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f0aef7-90f7-4ee6-a66c-ac61372aa9b5",
        "cursor": {
          "ref": "7b6f5add-5434-46cf-ab29-84de69fe5f7d",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "6babf588-7d22-4179-8a77-85902c231409"
        },
        "item": {
          "id": "75f0aef7-90f7-4ee6-a66c-ac61372aa9b5",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9a752c4c-20d7-4c60-ba96-6ae1ca0c7f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49af3f52-7df9-4bdd-84e8-413b8081ce27",
        "cursor": {
          "ref": "35a9e312-4813-42d4-b20d-b377c2ef92f8",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5e429fcd-a89d-4004-aed4-05aed5949208"
        },
        "item": {
          "id": "49af3f52-7df9-4bdd-84e8-413b8081ce27",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "795ace0a-9c8b-48ab-9378-1d1e047c1cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f7c5ac-3e33-4522-b2dd-5cdd7dc2fb8b",
        "cursor": {
          "ref": "90a53f73-88c7-46d1-aa02-9b7002cca308",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8217c719-3f1c-495a-9446-80bf81d35965"
        },
        "item": {
          "id": "a4f7c5ac-3e33-4522-b2dd-5cdd7dc2fb8b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a730934a-611f-4f65-ba15-4cfdeb2b7d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4823a5-1001-48e7-98eb-62f153724533",
        "cursor": {
          "ref": "828f362f-f0a3-4b72-bc56-e30745346cb2",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "88ab6476-c25b-4b83-8c9c-19b37c34eaaf"
        },
        "item": {
          "id": "2d4823a5-1001-48e7-98eb-62f153724533",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3be4e995-8ae0-42b4-b628-15fce09b3b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5eddd7-5aff-414e-a7b5-1079e6ef5ce2",
        "cursor": {
          "ref": "77cd913c-f7a8-48e6-986b-a4bbfc83520d",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ae06146c-5398-4149-9635-302f1239ff84"
        },
        "item": {
          "id": "8d5eddd7-5aff-414e-a7b5-1079e6ef5ce2",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f196d6f7-8f7c-425b-b25c-38a42514bd14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7d30e3-5c54-4a81-86b9-36fc8b75be96",
        "cursor": {
          "ref": "f97f53fc-6124-4c62-8e39-3bd0f506fbc3",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "74eaf27a-8b1c-4c65-8c0a-29a5d9fa1236"
        },
        "item": {
          "id": "de7d30e3-5c54-4a81-86b9-36fc8b75be96",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9880699c-280c-4818-bdad-4406bd09f17d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce99b35e-519e-4f55-a3ad-72f22ad4c051",
        "cursor": {
          "ref": "10998698-65bb-41b4-8fd3-bd28c2ff1435",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c9454f3f-886d-46dc-9eb9-fbb6bd365ed4"
        },
        "item": {
          "id": "ce99b35e-519e-4f55-a3ad-72f22ad4c051",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c96d3fb6-7f32-4d6c-a6ac-80d888f85cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46129e16-684b-4670-83b7-ca9a423014df",
        "cursor": {
          "ref": "6042000e-99bf-4c63-a92f-3e138374fb42",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "5eadbe3f-7886-451b-b094-287a34cab476"
        },
        "item": {
          "id": "46129e16-684b-4670-83b7-ca9a423014df",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8a631e22-b1db-4dfb-a654-923a6f660cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd24205a-a7e0-46b6-9241-31e98f7e959e",
        "cursor": {
          "ref": "6c9b425e-4b92-4e53-8c50-5be9aff8aed5",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d1ecd4c4-5eff-4d41-8412-4d6a95dceed4"
        },
        "item": {
          "id": "bd24205a-a7e0-46b6-9241-31e98f7e959e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "fbce7688-dfe8-4e67-bf69-1fb1fdbf7120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de324951-dceb-43c2-8f2a-934289caba5d",
        "cursor": {
          "ref": "890ca7a5-8c81-4927-8ac2-3955a55814c6",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "96e17eb4-2892-49f9-ab92-0c6011d49697"
        },
        "item": {
          "id": "de324951-dceb-43c2-8f2a-934289caba5d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e09034ea-5014-43c3-85e7-f3587853ba38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d8aa825-676d-4873-af01-0a9f060dc9a2",
        "cursor": {
          "ref": "9b914cb4-4007-431e-9a3f-cc90cacf92e3",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "9da6890a-9b04-4186-a446-2eae1cd0eed7"
        },
        "item": {
          "id": "6d8aa825-676d-4873-af01-0a9f060dc9a2",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "75201fe9-06bc-402d-b276-28fb841831bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0f6642-bf5f-40a0-9865-f275276e0354",
        "cursor": {
          "ref": "d58924b9-6b94-47e2-b789-2b286f26dc04",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3c05406f-e8db-4d52-8a03-706aacbc7d74"
        },
        "item": {
          "id": "8c0f6642-bf5f-40a0-9865-f275276e0354",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b035fba0-b059-4ec0-ba3c-57209de10ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b7979b-8c8a-4511-8bf2-db226a25f2ef",
        "cursor": {
          "ref": "3d508f64-e076-41ab-b1c7-495bc4e82746",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3f71bbe5-c8df-4fb1-868e-2b88faa228d0"
        },
        "item": {
          "id": "25b7979b-8c8a-4511-8bf2-db226a25f2ef",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5bf9c08d-a859-4784-99d3-b1613f7b43a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11db699b-de8f-4ecd-bef7-92a45cedf7ac",
        "cursor": {
          "ref": "e2235038-e883-4af4-9792-94edabfbbdf6",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ac53b396-a38a-4288-9d95-f92f5f2af9c6"
        },
        "item": {
          "id": "11db699b-de8f-4ecd-bef7-92a45cedf7ac",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b0fe9d74-9d2f-4455-8ade-6f205701d3d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "210c1f1a-878d-4506-a236-a5a90c48f5ec",
        "cursor": {
          "ref": "f3d85931-37b4-4086-90f0-e8414f485e0c",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0be71334-5001-452a-8d05-20e1d2e45dd4"
        },
        "item": {
          "id": "210c1f1a-878d-4506-a236-a5a90c48f5ec",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "811183ba-c0ad-4e81-b24f-9c6516971c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cfbdf2e-8085-4510-b926-9dc4e7862872",
        "cursor": {
          "ref": "8312c0f7-04dd-4271-a7cd-c4cf73514362",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e731d511-517e-4ef3-91b8-18c0f0f4db10"
        },
        "item": {
          "id": "5cfbdf2e-8085-4510-b926-9dc4e7862872",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "64eee88d-8f95-459d-aa5c-eca18ab87ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb874c52-d88e-440f-9674-96e73a966b70",
        "cursor": {
          "ref": "98861040-b5eb-483c-ae81-aa9a1d4991aa",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "0e6dcb44-2cda-4e91-8d35-689923c9ed4d"
        },
        "item": {
          "id": "cb874c52-d88e-440f-9674-96e73a966b70",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ae11eb40-9987-445a-a452-798f35a1c43c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bade3300-c65e-4dd8-a036-8777cde15d0b",
        "cursor": {
          "ref": "f09baa24-f013-4730-a9a7-9a77f96d3144",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d1b85dd6-f4c1-4922-b63a-a8996c05341e"
        },
        "item": {
          "id": "bade3300-c65e-4dd8-a036-8777cde15d0b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ba50ca7d-c7f1-49f9-bd03-da6813ea968b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e620c9-a7eb-4d31-a3d5-5cc980b79589",
        "cursor": {
          "ref": "f3d253ee-c5cd-4ea6-b7be-63565d3da8da",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3f4740b1-864c-4bc7-8434-267dd0cc0449"
        },
        "item": {
          "id": "b0e620c9-a7eb-4d31-a3d5-5cc980b79589",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ab4b047e-611f-437f-aa14-1d5170a7f739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50eb8616-5acb-43f7-a14a-e8b06047586e",
        "cursor": {
          "ref": "c014f596-0c9a-497b-a9ce-628afa89e6e0",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c2409f00-750d-45ab-a015-448886181b24"
        },
        "item": {
          "id": "50eb8616-5acb-43f7-a14a-e8b06047586e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "62811ac0-dee5-4296-9383-6f15d2e9b8e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77b2e33-c138-4f59-8558-bdb5e5d6da1a",
        "cursor": {
          "ref": "6f358fa3-f007-4c30-882e-30e2103f2f1f",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "f2617003-e3fc-4c33-8b5c-034b0b6198eb"
        },
        "item": {
          "id": "f77b2e33-c138-4f59-8558-bdb5e5d6da1a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "13e60d9a-6fcd-4646-a750-0ce455af2009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f4cad0-c457-4e0c-bd2a-5941db60d8c8",
        "cursor": {
          "ref": "d8854a74-65ec-41d3-9fee-a522d1955edd",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "409ddabe-0d47-4b32-9850-f8e6ad63c980"
        },
        "item": {
          "id": "97f4cad0-c457-4e0c-bd2a-5941db60d8c8",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "76ea181f-a437-424d-9531-aed6e3baccd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3297f4c8-5b14-4668-a3e1-3c7fef352525",
        "cursor": {
          "ref": "5eb05464-698d-4f18-84f0-ef85e728f565",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "10fb430b-1161-493b-a781-4ad93a66362a"
        },
        "item": {
          "id": "3297f4c8-5b14-4668-a3e1-3c7fef352525",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c8b20958-d96c-4f5f-b2e4-737e8c8fc1d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f774eda-1db3-405d-893c-9d7140a8b07e",
        "cursor": {
          "ref": "1908587d-9e45-4dfa-bb15-74200728a536",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a1404927-899a-402f-9ce5-fe138a827170"
        },
        "item": {
          "id": "9f774eda-1db3-405d-893c-9d7140a8b07e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5b98fe42-e8a0-4578-a9d8-80e6a0058787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f88e9e9-79af-4ae3-aa6d-b69f84de447a",
        "cursor": {
          "ref": "ebaeb49f-2a17-46e7-84c4-181fa2446835",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "d0f2fd65-85ed-401e-a8a3-c9c5a44cb296"
        },
        "item": {
          "id": "9f88e9e9-79af-4ae3-aa6d-b69f84de447a",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "be43909d-ae95-47db-915c-f4cdfae7257b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb02736-424b-412d-aa41-a5a847a71bb5",
        "cursor": {
          "ref": "bb311d5c-0f09-4f16-9273-2c2e0161d6ac",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2bae326f-9ba6-476a-a52e-fa2f8d5bf06c"
        },
        "item": {
          "id": "ecb02736-424b-412d-aa41-a5a847a71bb5",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e58cf3b8-a762-497c-9d6c-43ae0b66e8d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 761,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd4aa35-c622-4174-9b5c-d34fcfd303cf",
        "cursor": {
          "ref": "0c68d0fc-fb88-4047-b6a0-5866c1d3d4d8",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ae90087c-75ea-4d04-b120-f5361e10366f"
        },
        "item": {
          "id": "7cd4aa35-c622-4174-9b5c-d34fcfd303cf",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8ba741eb-574e-4c53-a93f-f47c273d95cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65cedf9-88fe-4e19-ae13-937348d60f62",
        "cursor": {
          "ref": "2361724b-de91-42a2-b113-e075ac435e41",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "11e1dba5-7075-49e4-9876-5de5b93ac969"
        },
        "item": {
          "id": "b65cedf9-88fe-4e19-ae13-937348d60f62",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "2e0b269e-adbc-4fe0-ad30-a195ffa4b4eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e4f988-f299-47fb-8505-4ea415649266",
        "cursor": {
          "ref": "d269ec5f-a54d-44c4-86c7-80fd512b069b",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2bc6f2e3-cb03-40d1-871b-e80224ff0efa"
        },
        "item": {
          "id": "87e4f988-f299-47fb-8505-4ea415649266",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "cf601812-e36c-48ee-b1e8-9b7449820377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "535088c0-084d-4030-a70a-7ed931293018",
        "cursor": {
          "ref": "4734e15a-683f-4a2c-8cf0-05fddb9e224c",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a777d7ae-da5b-4d49-af06-33a3dbc7dc11"
        },
        "item": {
          "id": "535088c0-084d-4030-a70a-7ed931293018",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b53f505f-f431-4bb8-ab9d-5980c4af3487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b33d4c3-d44e-41d5-b597-b0f823e78bd6",
        "cursor": {
          "ref": "9a093cd8-dc58-490d-952a-af66f77d2b90",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "cc56b29e-0e63-430f-b1ed-48d98a151424"
        },
        "item": {
          "id": "4b33d4c3-d44e-41d5-b597-b0f823e78bd6",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4bd9cffe-329a-46f0-89d9-52006821d468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "577c0668-758c-4853-bf8d-06b654c038ff",
        "cursor": {
          "ref": "99f0939b-86db-4362-b0e5-957d1a53f805",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "759b1da8-7877-4992-a2d3-da15264ead95"
        },
        "item": {
          "id": "577c0668-758c-4853-bf8d-06b654c038ff",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "91b7ce98-c5f1-4fd5-b9b0-fe14e454b4c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1925970b-e505-45f5-aba8-3a446c7be70f",
        "cursor": {
          "ref": "822576ed-ed5f-471a-b227-194c92ef6def",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8c8cb6ba-d714-4651-a132-af2a8527e559"
        },
        "item": {
          "id": "1925970b-e505-45f5-aba8-3a446c7be70f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "3c851cf1-cced-40de-8555-ae3b24b79847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09618b1-28f2-48e2-8d5f-0605646dc615",
        "cursor": {
          "ref": "b3b212f3-be9d-4bbc-b46b-71b173f1be91",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "8a5906dc-6d0d-4d2d-b4a7-211df7564521"
        },
        "item": {
          "id": "e09618b1-28f2-48e2-8d5f-0605646dc615",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b8fc6af0-f83e-41f8-95b3-673f2bbce52b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 725,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f70bd2-f76d-4add-99df-c601147bcaf3",
        "cursor": {
          "ref": "897980c4-3bfd-4e07-8f5e-79c98d3151cc",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "6d38bf4a-7550-4569-9250-c78de8901ed0"
        },
        "item": {
          "id": "a2f70bd2-f76d-4add-99df-c601147bcaf3",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ba18e376-ca2b-434a-9c4b-ff9fc1e26906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c82b30-18a7-43c5-95c3-94df6d9e7a74",
        "cursor": {
          "ref": "e156ec88-9071-402b-b5e5-652d90f3ad92",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f30ea648-f08a-406d-857a-bed22a56dce9"
        },
        "item": {
          "id": "10c82b30-18a7-43c5-95c3-94df6d9e7a74",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "439560c9-2373-49e2-8b23-04b5463fbe78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ad1ff1-56e1-477c-95bf-04efe24bdd55",
        "cursor": {
          "ref": "dcc751c1-e341-449a-bf5b-33888fb7288d",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0652f506-7ebc-4109-9d11-1a41bd26dd95"
        },
        "item": {
          "id": "17ad1ff1-56e1-477c-95bf-04efe24bdd55",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c8a9aa4a-dd4c-46d0-b8d8-f721537c9877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d10a060-10c2-40e3-ad37-e3afb282b6d2",
        "cursor": {
          "ref": "dda0eff1-00d9-4219-81d3-f75971b98a76",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "82d8f42a-8cc0-410e-9b50-6328b0d1899f"
        },
        "item": {
          "id": "7d10a060-10c2-40e3-ad37-e3afb282b6d2",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7bae302f-13dd-45e5-b1ea-d93ded781d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9de0127-3a79-412a-9ea5-c860891597b4",
        "cursor": {
          "ref": "a2554829-3843-448a-9547-c1bc594e1553",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "611372c2-8aa0-4e26-8afd-4c00315343e8"
        },
        "item": {
          "id": "f9de0127-3a79-412a-9ea5-c860891597b4",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "315b5bb3-381b-4ab5-aa00-0cec24e4e6e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e8a986-781f-4a96-9a08-906b3f5bdf2a",
        "cursor": {
          "ref": "a324f8c1-6b1b-4425-afee-5551e228af1d",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "9c00841e-ba0d-4424-b150-4b9556189830"
        },
        "item": {
          "id": "70e8a986-781f-4a96-9a08-906b3f5bdf2a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "fa08f7ba-43ee-4e00-a55e-895e7ca2f437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3280b4d-8fc2-4cce-abad-11b64f3b9699",
        "cursor": {
          "ref": "5e8c30c3-abab-4f53-ba9a-e4b9a198f2aa",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "bdc4d79a-89ef-4e06-be8d-27fe28d093e0"
        },
        "item": {
          "id": "d3280b4d-8fc2-4cce-abad-11b64f3b9699",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "69644711-14d8-4857-88fe-55f6609afa41",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76833593-f438-4807-a262-bcdc33183da8",
        "cursor": {
          "ref": "b13b50db-bb59-48d2-9d95-324a4386eed3",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "fb779432-b9f3-44f2-a603-923329f5486f"
        },
        "item": {
          "id": "76833593-f438-4807-a262-bcdc33183da8",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "25f7b5dc-8c65-4794-96b6-baec33b84dda",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 327,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d1721a-f0ac-4ecf-94e1-c63265924d8e",
        "cursor": {
          "ref": "be6b3544-a318-4fd5-a970-2ec714c79650",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "39d37d2f-8bc5-427f-8d46-67bc750ef506"
        },
        "item": {
          "id": "97d1721a-f0ac-4ecf-94e1-c63265924d8e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "0fd1d82d-88bb-4bb3-b5bd-380caf482f8d",
          "status": "OK",
          "code": 200,
          "responseTime": 619,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c30e62-f17f-4ea6-bc4b-f174889ca897",
        "cursor": {
          "ref": "49f75285-af4b-4624-8f4a-695a6786b108",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "fa5cbf2e-bff9-4668-88c7-106a93ec6603"
        },
        "item": {
          "id": "19c30e62-f17f-4ea6-bc4b-f174889ca897",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3d5ec750-391f-473d-bb14-9c022de6846f",
          "status": "OK",
          "code": 200,
          "responseTime": 2491,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "424d40af-3266-472f-af20-4f1aa608e5ef",
        "cursor": {
          "ref": "443cfce0-a1dd-4793-b4a5-d138195b137e",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "da4b1d3e-c1c3-4c71-8f3f-82c2e48aa838"
        },
        "item": {
          "id": "424d40af-3266-472f-af20-4f1aa608e5ef",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "2c8937ed-cc8f-4b7e-9f9d-17b56810f6f8",
          "status": "OK",
          "code": 200,
          "responseTime": 1867,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cad4079-42b1-48fb-a5eb-686744558078",
        "cursor": {
          "ref": "3c4cf8f1-f54c-4a11-a640-e44a3cd536b0",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "aa1b1fca-d697-49a5-931f-6942723ff97c"
        },
        "item": {
          "id": "7cad4079-42b1-48fb-a5eb-686744558078",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f032ae86-b774-43fd-ba76-26958b35cb82",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cad4079-42b1-48fb-a5eb-686744558078",
        "cursor": {
          "ref": "3c4cf8f1-f54c-4a11-a640-e44a3cd536b0",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "aa1b1fca-d697-49a5-931f-6942723ff97c"
        },
        "item": {
          "id": "7cad4079-42b1-48fb-a5eb-686744558078",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f032ae86-b774-43fd-ba76-26958b35cb82",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cad4079-42b1-48fb-a5eb-686744558078",
        "cursor": {
          "ref": "3c4cf8f1-f54c-4a11-a640-e44a3cd536b0",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "aa1b1fca-d697-49a5-931f-6942723ff97c"
        },
        "item": {
          "id": "7cad4079-42b1-48fb-a5eb-686744558078",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f032ae86-b774-43fd-ba76-26958b35cb82",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a352568-eb9a-434b-a7e2-1bc282680d82",
        "cursor": {
          "ref": "2234784c-8d87-4781-befd-bf76eb606c8b",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3a3ecb45-041f-41a7-9622-8b06f1ece15b"
        },
        "item": {
          "id": "8a352568-eb9a-434b-a7e2-1bc282680d82",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "b9d61424-f309-41bc-8127-78bda7fd4158",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 319,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b1f675-560d-47be-af36-4d70b561daa1",
        "cursor": {
          "ref": "17a91ae6-b8b7-468f-bec5-e3ffa743fa39",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "90da5544-c5b7-4214-b446-19af705520a3"
        },
        "item": {
          "id": "56b1f675-560d-47be-af36-4d70b561daa1",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "78da7f06-f9e8-4d42-9389-5fd2e83730ba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b1f675-560d-47be-af36-4d70b561daa1",
        "cursor": {
          "ref": "17a91ae6-b8b7-468f-bec5-e3ffa743fa39",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "90da5544-c5b7-4214-b446-19af705520a3"
        },
        "item": {
          "id": "56b1f675-560d-47be-af36-4d70b561daa1",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "78da7f06-f9e8-4d42-9389-5fd2e83730ba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8a4386-adf7-4371-88ea-957a6e004657",
        "cursor": {
          "ref": "4c43d96e-0b0a-4848-8100-cd7b4ed407d2",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "4a774f37-9247-40d7-8e67-fba0e781bba7"
        },
        "item": {
          "id": "7a8a4386-adf7-4371-88ea-957a6e004657",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "72b958ff-b65f-4cb0-b1a8-0fd0c9c9d6a2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 529,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "160f05b4-3270-464e-bcef-28003b25c877",
        "cursor": {
          "ref": "59aa854e-ff38-46f8-84bd-e8674fd81bc8",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "62f6dbdf-5e42-47b4-ac12-2aca8bdbe18d"
        },
        "item": {
          "id": "160f05b4-3270-464e-bcef-28003b25c877",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "eb4e5f37-8be6-4c03-9e7b-0c61edda84be",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "160f05b4-3270-464e-bcef-28003b25c877",
        "cursor": {
          "ref": "59aa854e-ff38-46f8-84bd-e8674fd81bc8",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "62f6dbdf-5e42-47b4-ac12-2aca8bdbe18d"
        },
        "item": {
          "id": "160f05b4-3270-464e-bcef-28003b25c877",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "eb4e5f37-8be6-4c03-9e7b-0c61edda84be",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ccb2e3e-c5bf-47b0-b931-fcebc6c293d2",
        "cursor": {
          "ref": "3b94ea26-2ac4-4853-98bc-f3594e62a6cc",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "4ed16dd3-f438-4a8a-a98a-4f01942d8721"
        },
        "item": {
          "id": "8ccb2e3e-c5bf-47b0-b931-fcebc6c293d2",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "921e9271-aac9-4740-bd60-042c66d8eed9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 519,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}