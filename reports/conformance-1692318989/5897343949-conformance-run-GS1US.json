{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1e4ac4d0-1150-45ff-9f45-93b43cda43c8",
        "name": "Clear Cache",
        "item": [
          {
            "id": "94d37da8-a4c0-45a0-9649-a2557e620ad8",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "defb2900-e9a6-421f-b82d-e6d3477f0311",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e3536a80-3a4f-4b24-802f-600452f0354b"
                }
              }
            ]
          },
          {
            "id": "d1464ea3-dffa-41f5-ab5e-e7e014846ba9",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8497cb9f-3531-41af-b698-b8e0f84ae3bd",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "dbec86c3-34d5-4afe-a5b2-daaa36b60419"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "871746cd-7dec-4e8f-8618-800b7d55c7cd",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "fea24706-0c68-4d1e-81de-1d74f57c197f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5452eb23-6fc0-4bcb-b2aa-97d1b7c25c2e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "14f1170a-d9cd-4b79-878d-a8d74e2fcb7e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "87d688e2-c23d-4388-9da5-d9ade1520e00"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f308e5a9-3557-4d4c-93bd-ce846a118f33",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0598f9e7-37f8-41ad-a854-2a0d40b7fe11"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1069fc8c-2b85-41f6-8847-217e028308e0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3cbe663d-aeef-4187-a75f-a0b636017bce"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e3b64719-1270-4b39-8db6-fb1249d80950",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "da8ed766-bd24-4e7c-94c6-e1c546b81987"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f9d37a23-9314-40ec-95e4-9cb78a83fa03",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9987cec5-23e3-4ebf-b65c-13565da57af3"
            }
          }
        ]
      },
      {
        "id": "5584cd0a-13ed-4edd-aea8-1fecc7e2a1fd",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "10fc1295-d217-4dcb-9483-71ccb0f8fae0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "327d96b8-7fca-4bbd-8da3-46f69abe2da2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f78d47f1-0c91-42ed-bf23-35ad9e176f46",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ea418e-aa35-4734-97d0-ca0fca457dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f7b139bd-249d-4796-b6b6-42c42048bc7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f7ee13-ed31-493f-a5dc-1f42a0b8871e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e55e50-d213-4c41-9d4e-7fe0f37836a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c754cb95-1ddd-4427-a9a6-b085b3e0f563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a47db2d8-cae8-4ca2-9ea0-3782935d1914",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35cf9f20-fb2c-41cf-8721-c384c6e2818f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ffdbde2-a8b0-450d-817e-9f0c81f4fd2e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9353d0e2-6379-4500-94f4-61470787e072",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0b5a58cb-65bb-432e-a662-009a513edd9f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9dc2180-5ba7-476d-9a1d-4feb141ba4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ccc0998-7be4-4353-9569-376bb4e58c7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f97220-3e3b-4813-99bf-1c336b2c7bd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d76e5eae-ebe1-45d2-8403-279847f2fd23"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "25d6b916-dd0f-4f9b-b0f9-33b81c326194",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bfa0a170-c3f3-4c2c-be1b-c3ff167a84fb",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c701c0e2-5ed0-4b1d-8ec3-e497e7b38dda",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1816f3d9-c6c7-4f85-a733-fe0c28642692"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f1816934-a3b8-4b1a-8226-18b4834f0371",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "7cea4d80-95cf-428a-af8b-b8d85df3b69f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "20bb6876-0c65-4f74-8c54-c453fa873606",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ae1f585a-2220-40da-b5f0-581d4ca43af8"
            }
          }
        ]
      },
      {
        "id": "29c84a01-278e-4302-84ee-67c05e41adbc",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f7e2cfe1-72fe-411f-9c7e-113f88f922da",
            "name": "Negative Testing",
            "item": [
              {
                "id": "62e95760-8f8e-427b-b642-4a9cc0de43f7",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "3749d809-187e-45cd-9284-d763d67b8f80",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb5cf542-d13d-4a81-973d-5f7fb04730d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5159d38-0de5-4a27-8ba5-de6e149de143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de5237df-08ff-4bd1-8bf2-96886b38efdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4402891f-08f8-4639-ba04-c99d8128b002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f7a6201-b692-4437-b119-ae3177352d98",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ff43f4-43a8-42e9-a3ab-42c186b116f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2fb570b-6803-47c1-869a-787e4e398271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100af746-ed6b-4835-b368-fffa1e83d508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf999df9-750f-49b8-a16c-1b95fc5f49ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fbdb46d-42ed-4f02-8a5c-3c1d69ce97d8",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a1c053-f4e9-48e6-8627-2890bfa1ce41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e1477f6-c2d8-426d-a919-282b91adb23f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bbe7196-60a8-4458-95e0-7629f6f054a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38fb4e25-2b04-4629-b32d-f15985f9f20e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c57d7f4-f155-4dfb-a7c2-83e7d8a31b71",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "123372dc-b94c-47cd-b5a3-49b5239789e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3ec602d-388f-4235-a2f6-1b70952408f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e649881-d457-4ba5-b107-81e53e6c45ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc2c4e30-8da2-4e2d-997c-5f3bb70fee75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d94a0ec7-1606-4113-9f96-8302b8dac86a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb4cf3f-f0d8-4ec1-a899-7b9cf3c718cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3d20371-f062-4706-9530-b3b14ae19685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aaacb7b-783f-4506-8b52-7fbb019186da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f8d5de1-44cb-4739-95ab-6b4dd342389b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c28d8345-e4e4-476c-87cc-88192e3e6551",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4baab30c-292e-4775-9202-5f90eaefa102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0e71584-674d-4256-af56-40666baea087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1125f42e-129b-46ab-9824-9155e1d17fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc6bf8e6-8c9a-4be5-91c0-45b63cd275c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e416484-ffb7-40ac-ba12-1f77e00733cf",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9b13bb-0319-4800-be74-d8424fc7ea0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d6398fa-39c1-4e70-ad73-e0af2e03d3bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0980de99-3c66-4711-9702-333545f36efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f1fe2d5-6ba3-4bf4-a5b8-47f8500212b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd0d3d2-91ef-4d39-902c-94af8c619b89",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb87cafd-d307-46c1-96de-f549b4144b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "395ed1a0-a596-4146-b4fc-866060ebe21e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54168e93-26a8-4ff5-86c5-8e321a0d8b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a411821-7600-4b24-8c80-79107cd14b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50b41a8-9a9d-421d-8017-6cbfc0f55ad3",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7463603-0c2b-4815-bf70-afa1bf45321f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ab0e9fb-fe67-4f33-b616-81275831f662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482844fe-5537-4dd7-967f-ccd9e38f6d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31c3159f-173a-4c17-90a0-0f3c5635572b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c43a267d-b782-4539-b857-1a5fe45334a6",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "049ceb43-33b9-44f6-aa4d-3e290a5c1c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9647add-0dbe-4160-b961-cc8b67f88266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6064deb1-02dc-410d-8234-162822a767c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8d6d479-e2ee-4323-be5b-8bf57e3168ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772b9b4a-c045-44a2-ad04-ac000b5307a1",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf70b78-2475-4826-b918-b9da94b523cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8400ac2-0178-4b7f-a83b-9c0c268ede1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a42ce48e-804b-431b-a2cc-dd922486e024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d817e8d-ccb6-4c8f-8f03-6996f73e1212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31312b5a-014b-4692-82a9-b19aa42ce2d8",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56553ea4-4e27-440b-af64-d09a0329fa20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ae32262-75b4-428e-a262-9189ee19b172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5158ca-5a19-4933-aa6c-630f93a7a185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96963c24-8f6e-4e6d-9e1f-bfe0cfa0e7a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f27ac2b4-fa34-41bf-aba2-c93268c01528",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc30f7f-b278-4386-a1e3-b1ab28f44795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "debda3aa-aef8-4773-8f2d-c61363a136a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20eea32f-70b6-43c0-81f2-96f935068504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f77aafd3-e411-4285-b125-3831ab78e12a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0f5883-df69-4092-ab78-1df88b59424a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c52585-e62d-4c76-b60c-f95a28d027a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fae9e04-2506-46a5-83da-c1c688409c67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83834d5f-34ca-4c2b-86f2-4d143a6e20cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99d05e21-34b9-4538-9a1b-812d8accd299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "715723e5-2c43-44e2-af49-73f40abb44a6",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ff024a-b635-4a57-b5fe-27efdb7b0bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "719a8837-b804-4627-b165-8591504243fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c56dd2a-2951-429d-903c-c1dd1872e4e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c549b816-3f77-4b40-b26f-dc19a3da88c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6723d4b4-077d-4f58-bc87-544bbb406702",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c6b69b8-c9e8-4c3b-8a29-5376d4c72557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48e3fdb6-c625-4b44-b092-3037362ad92f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69380a5a-97bd-4918-b559-654b17fae025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e161af5-2a39-48a0-bf1b-df5ebc4a25ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8fc96c4-13a4-45bb-9688-336217571f20",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b76f57-cc66-4229-b0e8-d756bccae746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "301e397a-f6a0-48c1-be6b-2e4bd29005e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67296637-4883-40d8-b512-9e031362de12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01377d00-5b00-48f4-8b06-7d17f89b137b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cbc4c1b-97e2-4609-b5ec-d2cce439a330",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd23ef9b-7774-4c59-be87-ea13b63f9b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1b19708-2098-4ffd-9b39-54381d939a2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f124e9f6-761c-4d8a-b32e-c577e4b4c0da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cff58660-8472-4033-bc3f-bfd49b5ab7da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f95fe77-62c6-4650-a397-ab2acb71db8c",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43ecd64-7250-43d4-949c-e4a7019dba19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69a7c78b-df9a-4f59-a479-ca06debd7b1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1195666-a03e-4b88-bc39-dbe0f42384d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9b79476-e839-4f08-b92f-1d3a45d736db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f214452f-d559-451c-a985-c4c092e0b361",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "732d9f1e-fcdf-4a67-9c40-558ab03f0c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62b8be2b-85e8-4ee9-8654-078801be1e0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaf8630a-6408-4e1b-ae16-bd708c0d64dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "70b4642f-97fe-45b9-a94c-d4a140078270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab855192-a66d-4031-9f82-5b9b7e3fc717",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f72e68-8ece-40be-9485-fdc60846831e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0dd9b4d-441b-4a3c-a910-e730b338d9f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce15c344-0148-4830-a5e7-be9054a1c68b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c038f022-c3a0-48c5-ba93-5a127b16786d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc73711-1ad0-4659-9f8d-3158cee08be3",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57fd6030-2f57-4252-9924-030da1d771a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddd6544d-14e0-4260-824a-bd447f4e14f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c052f0bc-cc2b-4288-aaf9-1259458ed08a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e33ca043-feef-46c6-b70d-dd41c2120c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350f8ff1-fcec-40ca-8888-cad0fb7148f5",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a98efb4-0b9d-4d27-8823-b0ef545fae7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5718995-8055-4767-bdbd-e1517d25db91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed004850-3100-455e-b3e8-8227a9142a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7f791941-df9f-4807-a476-5502281cd5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6acfc2c8-893c-40bf-9a6b-d8b3eb5f66da",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad37de54-de6f-40ea-b314-95d5917b0249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93c06d03-ee80-4d5e-9f39-c33541291d11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "165d2564-c72c-4e61-9483-19d902a1aaf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b282194-50f3-4784-8a2a-3663bdb05f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8c4697-f9c9-4608-800c-8ded18fa3819",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "437272b4-0c76-4ac7-8bd7-b74189449cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59f7e5c4-af33-4d68-87e0-89767ab08b18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f1a59c3-0e82-448b-ac23-862b5066440f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "18a4b42a-c439-4ab6-8dda-31f01d168741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc06ebb-130d-4c60-b54d-0f38c320d3e8",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f6ff59f-71f3-413c-bacf-1d2c1f1a2bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d394492b-e67d-44dd-889c-cc0fcb2122f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae0345c-64b1-47b9-bebd-7f4240933400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "99454a25-4685-4674-8a73-788feb13797c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce32c850-7a1d-466b-9336-d88a4da328d1",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04bdba4-71f5-4418-8acd-3821052cd5fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c74616a7-a660-4b0b-8aa6-58fa7740e7ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95241097-f822-4034-b0c6-c599992d2570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef3eaadc-47c1-4973-bff8-afe2141368a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a875854-2f10-4c77-86d6-c176fafe0644",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd558617-5481-4e67-afd8-01a9f6691189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8630fb15-4432-45c9-b5da-69f302859fc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "951dc71d-c165-4005-ba0e-2c462d1ba42c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc000b8b-cf08-4aab-80ee-2079ae7230fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef421f63-b6b2-46c8-9a46-68107c44adc7",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "018b27c8-1288-4fac-8058-092948cb08c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "265d3d1a-26ff-4bb6-bd8c-ba3460bee1bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e619eff-9158-4636-b821-f0c9df566963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c4fc91e-62a3-4746-8b06-229aff1dd519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d05b60-c600-4a0d-a78b-f6f3d1d69522",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac2604d-5eb7-4873-9eef-504f2c0f6092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1da1285-a2b6-4ea7-befa-df4b04d594dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f956548a-6322-4e04-a7b6-b1f8faaf873b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "43dd60c7-4fb8-4f95-8d23-e248038ed4ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b13e8b1-ab96-41e3-8cd6-b592e2121b6c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efdaaa0c-40f9-4e6d-b155-ccb38c953d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a14a1aff-852e-483c-bdb4-500e1e84fa7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca56470-43a1-4d9f-8dfc-500767455804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "71c594ca-5e67-40ff-8d3f-69cd7234db95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4232cbf5-088c-4f96-9cff-11cd2beb8cab",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0131fbb-f525-4519-a649-6d98fc9ed528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb9f14e0-8c4d-4e04-a9e8-e4018c6fa318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fca19a3-1ee8-4dda-b5df-6e83831e9f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbd95209-770b-46aa-949d-c49c048ca170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b58fa08b-7023-4a0f-aa19-5dc7c9638309",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "305295a0-808c-410b-ad16-3bd14ad0053e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fa43a39-ab90-461a-bc39-fc883c1a4624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a41fd63-fb5b-47c6-ae6c-876c4e41095c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7dda55e-c252-45a6-b4b9-0bfee0a2dbda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc422e5-3a42-46c9-8009-11af22240b63",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e68574-eec1-4271-8a2d-29a4293310e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccec2cba-1c40-42aa-8b30-f4cc879eb544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97060590-e494-4df8-8844-81524556203c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8d914f9-0847-4b90-a710-b4121c87ad67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a24e0f2-e58e-4552-8f9d-464eba2cb8ee",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "081a0456-93a7-420b-ba7c-2b524cf00252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a7ab13b-7089-49e8-bf6d-108b7abd7d44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c69359-6ce4-48db-b0bf-1e2fd0cc4fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "1d7908a3-88a2-426e-9c94-b4d1bb80cf34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44564d42-e0c0-41e1-a0ca-5918e5e3a8d7",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab211644-3f6c-4913-80d5-2ef33f672e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4c181f88-8e1f-4381-8432-29d8e0b08ccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991fa158-8179-42e7-bf77-9986a8e2fd22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4b6176e6-24e9-4c49-ad10-1d6228e7f835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6024f42-f019-42df-a821-047192beb643",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd2a521-6b18-45ad-bd58-45cc4665d4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b13afc5-5057-4dc9-b525-0dceb32cd551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc0db4a-b998-4b83-b636-1c9a2a25874b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5895c7b-29d9-4e00-ac19-aa7625cd0423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ba4bf3-98dd-436a-a099-12e63ce3041c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec0e9e6d-0501-4f6d-a9ab-c1046752cef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6078f640-50b2-44ac-a28f-d3c11669fb1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f6ecd1d-9cbc-4da5-ba87-9c1b7446a902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b484b6b-1024-4366-a9f2-7145865cc4c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765ebc5a-b09c-44d2-9c6f-a7afe09c2051",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2968f06-e2c3-4bcf-82ae-1f6b45be52a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a81609c-4187-4435-92ee-ecb63f2bb4e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca3c9f2-8fc7-4215-aadb-c943eed3c196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "be24f188-1f31-495f-a831-1d074b9c5c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c02b1f-09ce-476d-bb4b-ab10989b9f4f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03222187-df79-42b1-a2bf-b668d259c9a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b4cbe48-4f1a-4ed1-b0bd-f6a0592f73d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466fbaa2-7d1a-4567-8a14-f883a1e4f89d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8802fbf-2375-4cb6-95cb-2c9a15253238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ecf710-7049-472c-aa6e-fc13d095c678",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22a6e9cd-5054-4a30-b175-b54e13e45d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "532820b1-97a4-4223-9aee-c127968d5850"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f19b336-686e-4a25-8839-f3e3dd6b94a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "dcb64eac-a813-4055-ba43-fe92bbb5df4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2166030-9bc4-47ea-a354-e8a0dcfc7d91",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdfa098f-308d-4c0c-ad0b-3fb5b3e88ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d0669b7-f39f-4e1f-b9e3-5c6080f62a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8488c1bc-b4cf-4005-b114-3cf9b6b4ca68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "00d43403-ae2a-44fc-83ca-d31b17c3d0cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8914dd92-0cdd-4f8c-9825-e5572a925676",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a170b1-4be0-4928-bdf5-e4e63f379835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99777392-d4fd-40d2-bad0-7ebab9bd1ed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c569e802-aeca-4d14-8388-77b2710f7942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ac3c88e-9baf-4e22-9334-a920215892e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96798ec5-6f25-4e96-9832-7422d67fee91",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d0e35ca-ab28-43e4-94e2-93687cde0ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf127945-129c-4442-ba27-3c7ba46c6942"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c624cb26-c276-4807-a377-7d3d3eca0021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c89e7056-9e8f-43e0-a81b-081eaafb7418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501c8b92-e8b6-4fb8-8a0b-335f49296c6d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7fb864b-448e-4708-bdf3-1264d93b81e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "655dd6e1-ec60-4ce0-88f0-e2c2da96856d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c233c1-13d8-4d6c-85db-f607fef6cecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "354a47c0-8ab8-44ab-ab8e-c555737bbacb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "621e3477-8884-40a4-a0c0-d8a718a65566",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2ca46b-cc97-456e-b0a2-500013f866df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64efb74d-faa2-4f0b-91b8-fe56ba1d7763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7ee258-d279-4a69-9d1e-21732c4eff05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ebb8a0b-1b89-4787-ae2e-427ca57205a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b61aab-a159-4667-be8e-a01a3eb546c0",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0cbaa06-dc30-45c9-a7b8-c4c80ae8df17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5cd5028-400d-47ff-acff-5ee4d0f6500b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c679a8e2-b316-4e62-a821-e8a799fdc394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb4aed08-a110-4a92-a3c9-13efa24d469e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26177d02-15e9-4e8a-9f41-e0c6636f23d8",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35946c6c-a8ea-4595-b460-1ad90abfce1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e90f028a-c76e-491d-b916-aa59a6e82daf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da63c610-51e9-4d95-aaca-52d41a6ef161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7a43968-7ef1-44a7-baa4-6d7c1e6052e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f6c910-9fe3-4db8-b610-bbaa9b0788f5",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9686b9be-dcaa-4e54-8615-6a0cd399deb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "541e2abe-976d-47a8-814f-d3c5c4208b34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a5e706-c9ba-47eb-8873-a6a36fc10ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "46622a14-a4d5-4c63-a330-7f806f7145f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "495a016a-5938-4628-8d52-3fdb91ed91fb",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6972a375-01b5-4d17-ad9f-0222c6d8aa69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa73a0a3-2007-4e8e-af3b-3b78465dd5f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc8e5b7-ad02-4604-924a-0a78dc1418fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a1aa1f10-c2b2-4e46-9838-2cd2f1532577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f1372c-8382-42fb-a184-b288b526c481",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0545fc-94bc-4965-ae64-4e2543cf4228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a5db78b-b14b-497f-9b06-949e27f91e83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c562d1c-8879-42dc-98c5-cece20fb89c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fa805d6-fe88-45b4-9ea1-416f104efdb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa80139-6795-4da8-b7b4-73ddbc221180",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44bfffe1-090b-4b3e-bd0c-f4e46e75d170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "380807fb-9274-4cff-8a81-dbd70bb76431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "416053cc-8d98-440a-b6d1-29085b142efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cab042b4-9af4-463f-adec-6166d08d160a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f6cd891-1385-4744-b622-906071998cb7",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af4de9a-946b-4485-95d7-0e4cf5dc4e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b0e33bb-0979-4da9-a089-194495d07cd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3283f898-6ec8-4de6-93c0-6f9d74214fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a383cf2-bd6c-4874-9d68-2048e26ab068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069299fa-ffc7-41e7-a9d1-a13bf3e9bf45",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7d7641-aad7-482d-b091-239774db9eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1af74ea5-da6f-4202-8ffe-9519c661dce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546906bc-3611-4052-bbf3-4ed341772204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa3ca392-968c-47ef-9f7e-8cdda807f8ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5fa9a1-adb3-4f32-bc2d-62df6f5f695f",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df392823-77fb-49b8-92ca-e8fac2286962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8920df8-4415-4548-9572-e910aee69b58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb04221-f507-4f77-b574-1e8843c62b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d52ea7cf-8e7b-44a6-811c-2b469ced4453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a484ff7-d692-45c3-9199-16756ad76545",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c92f659-7e81-4f4f-9c10-9d49a684d6d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91b0520d-b171-41b3-b4cc-6a71784cfabf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d66a686-e54c-435a-b786-ea2f144a4d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "037bd701-9103-491d-ad16-0646992b2831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32c179d1-cac5-475c-b0d1-c95ab90c4b3b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9abbc3a1-aeff-4373-a11b-66cd04b011e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56c52026-da48-45ca-9c09-dc3ba86b40ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e732a3-96fb-463c-9d77-1f78744f6287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "460e5cde-f90f-4715-8786-f45f0d9cb28e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88238de6-be21-42c7-9ced-426c84f99a06",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a29ae5-4dce-4058-a461-bb4653e25b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34df0061-76bf-4a20-be10-978ea668392d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15367263-97ea-4909-80bb-51a707719777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2096e6e-59d2-445f-8b99-c972b55e32d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0df11ea-e430-494a-9fde-c59dc9712460",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b051b4ab-cea6-4d7d-bf7c-adb7f32e04dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e00bb13-0fde-4fb3-9a98-321c11913dca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f26d4a-1437-4ff8-8433-a83091884cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee467002-7cf7-4b5f-a018-5b0605e884c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d3177f8-7b69-425f-8235-fd64767f5dd2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a5ce7dd-07fd-49eb-84e6-eddd1d3d7025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6da8fb89-1b7e-4bd6-b50e-ba3218933613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b76407e-ffda-403b-8c88-c7bb6ddac48d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f47e488-9727-4c80-9969-9c68eb996855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa3e1d8b-4a84-4312-a226-f953fba05fac",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "368af227-2c6e-4bdd-a347-84f6514696b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43645124-1c7c-49b0-a2c4-a4c22a8ac5f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "808d739f-a7a9-4793-b88a-656a8a5f97b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5130e21-c194-4f2f-a9b7-ed0ca9a9a4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9bcc484-0af3-48a1-ade2-602451d56e3d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c55160-3e00-49ed-be1e-6b88afd17b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eead37f5-aa4a-490d-b447-b29805140dc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc08a89-3a89-4a40-b847-3436a8e21779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f43ac14-82fd-4a80-9fe5-9a98814512a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12d06fc-4d56-47a3-a009-df4ed5d06861",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93f146f-cbf2-4d18-8645-74dadae638f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b259b5e-3279-46ac-a44a-d97a6f829529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1645a7b-e60d-4278-87d9-205f64c46f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c3a8d30-b423-480f-9e8e-3aa255ffc779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17421db7-e7a5-4bbe-bc7a-74cb7a0e975d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "362f2f24-af57-49be-a656-7f157af0e10c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9e73996-2cc2-453c-bcac-db28c718405d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659f1da2-6fbf-4f43-942b-48678eff2f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ddfb657-10f8-4c72-9a9d-168571f60808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f593f09-bc65-47a4-87b2-d4ee940d7c4c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c832cf3-2fd8-4af3-b8ac-b39af0e847bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "042316bd-c90f-4673-8ccd-95dcb5ce2320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce794790-10d9-48dc-a57d-ad62cf1de77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b9c460a-3f84-4897-862d-7e91b025d239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99bdcbbc-6fb3-4090-81a7-05030fed38d3",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6fde89e-c12f-43c4-acdd-ba44e386fd7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b103a755-00f6-48fb-8622-672c08381f80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0350e68a-1244-4293-83cf-4633e04b633d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ae92288-3432-4e64-b5fe-938fd8552fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae717a08-f78d-4ff4-8d6a-736c7a8db843",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7339df8b-e9b7-4bb4-8785-557bd4682953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95ce6e45-0eb0-4bcf-a74b-0eb0d041fa48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec79205d-64df-431f-9eee-c556852b7ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3dd8ed9f-dd56-46ae-aac6-52821872916a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab3591c-9118-49c0-91c8-f56c6cf81bc2",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25bea6b-1967-4880-8d34-8a662d3c0767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25908145-357b-464a-9e73-5b4f75213c7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3525cba0-c452-42ba-89c4-0a0d01fd7dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "455db2bd-efb3-4ac0-b124-6ff80f2add83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af4a9d7d-8ac2-4ca5-a2c6-7a82e06b5786",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1979beb7-abbf-4811-8bad-b5e9a07f9a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04d5b3fb-3b98-43db-8628-7c3e3f176fdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fd7c25d-a254-46e0-ace3-463a8f0a8167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d682c0e-b55c-4033-8ad7-cdde27554cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7884973e-893a-45b2-bb62-564c909dbce9",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e0e898-c45a-431f-bb7f-b1ca504bdcc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7085989f-b2f6-45f9-947d-139397c217b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32cc012b-059d-419d-8e6b-3c95b80605be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "626d1469-531f-4564-b967-5a19d9b139d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d4ad82-56bf-42f8-8cfb-d11fbd56a062",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd1abf9-09d2-4e90-9892-2ef42d9ace92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04762859-dafc-4953-ae99-4e5b52a8bf22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4faa3819-103d-4002-bd97-0bf849b5fb3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "61f007fa-4a98-452f-b4ca-b6480daf648a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650e9d99-8010-483e-9f9f-dba012c08f38",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b541cc-aaae-4180-b7c7-9e48dc9f368c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "846b29d8-9c79-4344-b883-22b49de58669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79068423-cc96-4459-b7a3-6e2621969cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d44e6e1-4bf2-4d1a-87bb-85394834956e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "754a451e-b90e-4c87-afef-7f6d063f52eb",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "949441ba-73a0-4a40-bec4-260914f66ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6e86705-84d5-429d-adaa-8a5ee85b313a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b17126-cd41-4968-aac4-4196576b616e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "99df244e-9e3f-4103-996b-90f2ab637e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d18a2e-489d-4ad8-ac15-9e12d1ddfd0d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77833c5a-5b15-4deb-8193-a760f213d0ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82296955-8178-42a1-acd8-6bb50eec02ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc4ac64c-356a-4be2-b8a3-388e16285f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "493d7212-d30f-4bb4-89ee-414c13b6578d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a280fc-410a-44d7-b414-184e3bd131a5",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39490ee0-0e2e-4b42-a3cc-d31262abf61e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c31d6ba1-765d-4e82-89c5-47fbd3a1fb9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482ff47b-ef88-47d0-9c46-6547dd8ec507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "722e492b-b9c2-4c7c-ad1a-55c4198efdb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521f562a-d456-418d-9a7a-1d5feef07483",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8565c5f1-93c9-4ae0-8f9c-8fb930c59196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "350e35c3-2523-4db0-8a1c-9bffa907f86b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8aaaae-ade5-4521-96c6-51362ae198b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5afd50d-717e-4e40-aa49-b9bb8713d941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77296b96-c40f-4dd7-bdae-d90f4fd2deac",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4085185-d83f-483f-853c-3b3eeed1b1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17554340-0707-4ef5-8ade-8f5eb1f8815d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb945f1-b75a-444b-801b-1eb104e2ecf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1ef8fc9-550f-40df-ad6f-d921befd88a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1900b592-2abf-47ff-8798-1c3b5b4f22a9",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26af322-0ee7-4d7a-b3a9-370d848e6d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b565556-fff3-4dfc-9e6a-af431ed46fc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cbf4863-9341-4059-b7cc-2b044979404b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "844b6e5c-e0c8-4cc5-a005-0206ad3440a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b06e10-58fd-4dbc-b4e8-e9360c11b7a1",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d449fb71-cbac-41ad-82ec-5f572c366537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9da50343-7753-4ac9-8647-af388f398f6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f27f1190-81b1-411d-b695-c9339e3af0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "469174c2-a2e7-4cda-836f-394ba8beae43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "022c69d7-65f5-45b7-8c46-d458e25e3a6d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8966cf5b-4405-4cd1-a399-822c6b599a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f099a313-6b81-431f-9b6f-f5112870e773"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca69ea64-227a-4c13-9896-34a6e9d807d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9b3fc8b3-8114-4e8a-881b-7605ce7e96c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04426755-fe67-4e3a-aa13-93555501385d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26ad47a-1b06-4412-ae14-67d09477af76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cccffa5-eae6-45fe-83bf-e291c14de945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4453e529-b822-4825-b670-a27a563fcb34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a760729a-22c7-4e91-b2ce-227f8c61a96b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b01952f-19c6-4163-83fa-61929aad998b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d26302d-ec25-4ee0-a141-7efd2069d800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "033ec691-d465-4b2b-a90b-fd30bd3d5784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ee9833-a205-45c6-a763-bbe39c6609ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "254d5c1d-b2bf-482d-ab73-7c875854511d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c6a495a-bc76-4ebf-b5db-df5b9bf8b819",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7721cfd0-8818-4c7c-842b-26850c8e8a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d30b4120-1863-428e-be13-a791ad7b3d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad7cb8d3-3ed8-4841-8954-b864630f929a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7dda8fc-1803-446f-bbae-e1acca5fe047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4447daf-7047-4871-a4e3-16e1f2b5564b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d90f4e-a164-4403-97ea-465aab75396d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5beb44cf-5744-450d-919c-808e736def2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6138bde-0615-4f14-98a7-aa32cfbcce0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "53c752c0-31b5-48b2-8449-3e2248d9791c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0311bda8-1416-430c-b0dc-72cb0100f60a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95fe9ee4-16ad-4da0-ac2b-10fdf550afde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91cec5c2-3d7b-4038-af67-605afd9ce03e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72593ce2-4a5b-4497-93b8-abb432fd6768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a1bcc025-2c83-4da6-a64f-b6392606044d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "385a7071-f75e-4d5f-ada5-46032d1e9461",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad8aad52-d75a-4652-9360-a8489275237a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69f30819-6550-49fa-baad-55b37d2e28f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a99c4a-fdf4-42a9-bd03-700586f92085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a67867ac-5341-4b66-bf43-eb3b0bc4f9fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b5b9164-b213-4726-96c4-e4a200e23811",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d7c155-0faf-42a1-9da3-e16af64d2bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27e7b1ae-4ddc-4e0d-9793-18db6bdbfce0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d8a77c8-0d0f-4eaa-9187-d9f68a8f1b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "602dab07-6578-47db-9672-7212aa7806d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5801d09c-4396-4f7a-9ba8-b9f1b4e2a9d5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c279c6-59fb-4007-a696-f0b102abf483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45545c49-8356-4563-bd80-372cbd6b9e76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded129f2-1835-4b17-a68c-95968d198b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae3acc05-e987-4e28-90e0-25b8cdf7308e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c72dbd6-5dad-4d98-a090-3a737fad6247",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9032ebb8-39ee-4e05-b3aa-d078a6094df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "477fd616-2b26-4b5b-95d1-7e86e30f01e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f32027e8-9b3f-4acf-b7a2-52e33866f333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "12514b94-5d36-4852-92a7-140f90adb96c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b61bfc-1e01-467f-9534-54034bc55a0a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1164bc7c-1474-4de1-afac-2fc57fbc8908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a4c87f5-dfbd-41f5-aa3e-4d91aee59be4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f06d12c-7bd2-4639-b772-d78007277d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0813dc6-00a5-4a0d-860a-2eab4051850b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed8d8cea-b64f-4904-838e-743b9a82ddd5",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9add00f1-4832-4df1-859b-b2daaddb6fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2642a2a8-e1f5-4b3e-b73f-ce319e81016b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "670a005c-2e13-4199-a56e-5e5c9533e35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1205f657-c189-41e0-b9bb-00158473ee07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8781f9d-09a6-4ca7-90d8-90f021d6943c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff7306a-e01b-4b3d-b0be-1860348476a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4ea3ed1e-6096-45be-8bf9-2163afae0aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d65730c-c14c-42b8-8bab-42dbc2153b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c6a2d4c-86a6-4658-9d39-f735fb07adce"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "90683f99-421d-49f2-93ad-7b8693f1609b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "96871f95-b874-47eb-92b7-3e1de21632f5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2ef99c-3957-49c7-919b-92b075400c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "180bd09a-191a-419b-a75d-9ff6181bffb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "199b3b76-08b9-4c52-b419-ac710cbe6733",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb41b5fd-4061-4497-a58e-89581b47df30"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c41f2aa9-e596-407a-a899-0acfc7d1c81e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a1feef7f-6504-463c-986a-e6bbd3632ace"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a01efd6-298f-4bfd-bb8e-33c2b37a9c9f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a4e986f-49dc-4c8b-85e0-bd87d1d69a4e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "16002bd0-dad5-42b9-8b77-ea9ccbc271a1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8b479f59-5adc-4f1b-85e6-dd36a047cc47"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "163144b6-31f7-49b8-a92b-195892ceef7e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b285de15-d766-4a1d-b11f-2946b9c217bd"
                }
              }
            ]
          },
          {
            "id": "50c5339a-30ea-4015-bff0-c03a1f29e59a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b5c50c02-a8d4-4e38-abcf-ccc1fdde02de",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c337b971-f297-429e-8805-2098764c24f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "72769a9d-13bc-475e-a733-1ad4e218ed69"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4411fcca-b474-4694-a418-a254814dcf75",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "88f6b0bc-6983-43b5-84c8-7e185223504e"
                    }
                  }
                ]
              },
              {
                "id": "0486f6fd-53fd-4f32-b24d-257fbd23c5cf",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a65927e2-4dc0-443d-88c6-5397cc59e93b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f857d251-3868-41b6-8e33-682d61274189"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aba1faa4-4728-4474-8199-e9ad953c5c92",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6f37d90c-c0f0-494f-80ed-eaad5f8a455e"
                    }
                  }
                ]
              },
              {
                "id": "61318b7c-dfc7-48ea-9a63-2d87f26926ae",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6fdff58b-fb66-4054-8004-004269e4afd9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a232a469-fb44-41da-9340-830a08e05c20"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27258214-aa56-43b8-bba0-abc3b8de2bf8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b60b16c6-a4e1-4388-9e90-68f6e14ee95d"
                    }
                  }
                ]
              },
              {
                "id": "2c973ad4-bde3-471a-b549-70a2f76c9c52",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5eed2b7-d69c-418a-9cad-c6047a44f454",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "75a2c6c3-7be1-4dbb-a677-de6e5b833d71"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e0cc4e7-279d-4a0a-abc6-fc1329e2b266",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "cd7135da-8f26-47d6-8248-2324919e32f9"
                    }
                  }
                ]
              },
              {
                "id": "b0fab422-0a4f-4ccf-bda4-c05bda32bbe5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "190242d0-9e64-4051-b021-3ab8a28110ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "16953510-b804-4e9a-9f31-486906bf1475"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c419cdd2-bfba-425a-ae38-4a7af1150b23",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "84b2220b-5ef3-4fdd-99ee-3a9cecf9a943"
                    }
                  }
                ]
              },
              {
                "id": "147f5328-4998-4dcf-8780-1237fd92f369",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb1dbfb6-15f2-48a9-81fc-7f01b10c3851",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8648ea58-99e4-41a8-a8d7-b7dbf1f5bf56"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d14cd90-725e-43e0-a1cd-2bac1680fb54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6fe06ee9-4b3c-4baa-853e-b6d031d774e9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "da95b1c3-bc4b-455f-ac94-99dde8c370c1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4ce8b927-1570-4bc3-ab7f-f8070c8d30dc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7b32733f-1bfe-4e91-85da-cf9e1c5f21b8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0f76efb6-c876-42d1-bc39-a814704e07f8"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "98eb8ffb-b89b-443b-b740-4c27a47813ff",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d9156f31-3e4d-40da-953e-40cb3adc5d60"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ab9fc848-c271-43cd-853f-b5ed054e2e3c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8d1a7cf7-c85a-43f2-9bde-04c0a55c3c42"
            }
          }
        ]
      },
      {
        "id": "7c0366f2-573b-4ab4-b8ef-28c56189d149",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5c7c7c43-6bc2-4e12-afb0-f2fd420b950d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f988186d-6be2-40bc-b6fd-2a6824d867c8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3b79ca6f-b2cc-477b-9016-e763cf3fe703",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f18779-28bb-4496-9118-47b8ab2e035f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53ff80a6-a8cd-4c68-b3bf-71a78548ff54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7accd0ca-8162-4ad0-9cae-4f1ae5781b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "be0e683d-7b9c-4d27-8063-0351c90d5c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6b55b8-70a0-4a9a-9b00-765fa3dc844c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9febcc2e-0d15-470c-a478-707b449faedd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aa04a7a-eb57-46c7-9f34-aff567548808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "836e53db-7df9-4926-a976-46402e79bd9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "79d8f63a-c04d-4b6d-8aa2-0230f7e02396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d29b1afb-fd11-4f6f-aa2f-66d6a64f3418",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c2f71f0-9734-4665-a4be-fae93e1703b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e45bfbf-65ba-4658-9f0e-b32b64dc5d86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad9a6e9-c676-4fc7-b752-4630454c1181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "40d2ab10-fd66-4d67-9376-e8c14c98d295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebcc6aed-fd9b-4047-bd8f-57fc05f27037",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f4e821-85be-4494-becb-1c0ad3698427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4976a9b8-e658-4916-a358-93aa03119766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c92bf0-9794-48ef-9994-af65b753b477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bf03df3-c235-4d6a-9fae-51b83a49b608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a1c6fd-7494-40cb-bc79-1a7b4d6a3e87",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e91bbc3-636f-4813-a4cc-5aa3121e6aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8552d1eb-86ff-4b8b-baaf-504fed8fad1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e580ddf6-ee32-4f0c-8c4d-0bdf1d782066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3c8792d-f949-45e5-8aa9-9f1ac2ca669f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6daa527-e3b0-45ab-8648-d6506b0f3728",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca30400-43da-48e2-84c2-19ac5524da36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56529115-0427-441d-ab7c-bc0e48835595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e51256e-b736-4ef4-af7d-c530759e96a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5257ea9-ee4f-48b4-be3b-5d42345532ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a237056e-5d96-47ba-bd1a-e59e84a250e1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f952b12-6004-450a-82be-7f4fece2ed95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2212d70a-10aa-4353-962f-022e8e4ffc2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "056e54aa-94aa-4e43-9963-6058aaca9ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "eccdb4cd-d4d8-42eb-b399-54bef75bb03c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e35a71-13d7-47a3-86f7-5125628995aa",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cceb45f8-588a-424a-99ac-d209825ae72c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "388e00bd-afe0-4ff5-aa30-4253b751035c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d69d4f-a44a-40d8-ad84-03d9b8b3b4f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "07f95076-b94b-46a8-8854-01dfbe4f0af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f03814-d3da-428e-a023-04049d0b3118",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc19c27-e039-48ce-bc96-6b869cd56356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2795a7f2-fceb-4b9d-9b98-2a333ffe44a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4b4af3-4743-4cb1-aeb5-6d6bf99ac4ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a9507a7-afa3-47e0-be3f-e5a1eddff1ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb96d2e-8ada-4efe-9a46-16313ccb6d50",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "febbb430-9590-4cc3-93a1-27b5dd9d3c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2171bf7a-6d66-46cd-9be0-eba7a13838d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4cc8f9f-6632-4f2a-8f7f-ad9dd950d47c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f724e6df-8757-4135-8232-f2d18dd9c91e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88cac9ee-17ef-440b-acdf-32c728d8c63d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea6335c4-b62e-4e7d-811d-fa1e95be4c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba4c1b42-ee10-43eb-b50e-b79ffde20a01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66bed968-7e93-45f3-8a34-45a5203c3ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a16413ee-66f8-4f87-839e-27bc2ede67de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0111f132-2336-4bf7-9f82-06aaffa00e59",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f20038a1-9497-45fb-818b-f72df984fcff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42e34069-08e3-4942-ba89-d8db79b1935f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bfefa95-c828-41f1-9c9b-2d6424e91e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7ad4aff8-7003-45ae-ae8f-e9d9d86c671b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0849e16f-ea61-470a-be5c-53a35253fcca",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f1b8dd0-4d37-45d2-8c90-9227858af2f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d328e54-89a2-4820-acb4-f68204cd87e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b9737e6-c4b2-4c70-b40a-656578064f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5fa53e8-ff0c-46ad-8c0e-f948dd659b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dacd292-718e-44e5-97f7-b95ce05c464e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f93dc18-3207-4238-b023-86114ec0e88f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "375bd607-5644-45af-958f-79c45cbf9e43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92726221-b867-4240-b0c4-2c3468b32447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f013f1db-fc91-47f7-8fae-59f00849087b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff8d9bca-ffaf-42ec-b9ec-b647d83fc850",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71dfc98-771a-4d22-b73b-848bb6d9b4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "974bfc45-506b-49ec-beee-70962a6b79e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639db3d1-921d-4a05-9c0f-03dd3dc4ae02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f33fd11b-e682-4121-a4c7-51aaae1cbbab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a11251d-0c2f-44ee-b695-ad1bd720f79e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf07a6e-3afb-4d08-9795-24ee74b3ca42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3d56716-9517-4f0d-8e5b-943849e6789d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa3ed85-fb5a-42f0-ab59-aa31a5bdcc7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3c65e81-3799-421c-a872-254d6958e261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4976a4a3-3ab2-45bb-a096-d9cc61b7a04a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fec04a6-46a7-4bf9-b37d-06ca476df020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "812b4e8f-c7b6-4565-bae7-391838d13cc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf83b2e3-b366-44e6-b8d7-ffa42bf6bb38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9448e866-6f22-4827-a133-caea36c759ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "188329a6-82a5-4104-8643-817aa387ee29",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d750cc-9950-4928-b456-f2d0ad8505ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "754c9118-061b-4358-ae82-5baba70473fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7931bce-de7d-49ac-a65a-28db8e390a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b52f9e91-b944-4737-9531-7223a33c0875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1278b48b-64d9-430c-9cba-005cf7da3665",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "581b2d60-d9a1-46d5-9827-4530182527e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f06f4cfd-b99f-486b-9dd2-4dc832db56b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87ea485-acc7-4f50-8e95-ab8c20af088a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cc10d48-2dd1-4de8-aa56-5f8b34793509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622eb87e-b3a9-46d6-862f-698f258d0dae",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "120fa875-81a2-4fd7-b5f1-58033bed3da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "324d3755-8a9c-4679-a527-06ad8ece1653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05eaf8f4-afe2-4c88-996d-0f8b9a7672d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c310c7f-363b-4298-be72-af4d22d26e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5323b73-42b0-462f-8800-551be3d00c54",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae05872-6b40-450f-b9e2-210238eda784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb2d898-453d-4ab3-b1f9-b815d69659ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d7f180-37d5-4ba7-acb3-83d80b31773e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d309e00a-dfd5-4077-ab61-42e4752953d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a37df70d-e63c-4b21-934a-a300c623b8bd",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8bcb8d-87cb-4cc4-b0ae-aef7bf956e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f96f9c0e-75b6-42a8-8962-5ac1b032d4f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe4c9d2-45c7-404f-8dca-f6bc20ec0f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c0077d2-5232-4569-8f2f-bfbe6bb5a5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f018f7-83b0-4c67-a5a4-59f559ab6278",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce1509ae-145d-48a1-b536-6d72932050a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de271ac6-d1c4-4f6e-8545-7bb4885cf43c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f22cb896-d3a3-4372-b85c-10f81c596a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ad4b3a4-37e8-4058-9d7c-401aba3256a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823a00a0-cc27-46c6-a28d-5b1e8736b972",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d31ad30-3767-49ab-a5c1-8d6373bbe9fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66fa5eca-a2c4-41ca-a4a7-e96f8097dba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c3e443-e021-4067-8279-b47fcd091220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cde526b-4111-420e-9778-35f93a5b30ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93bb4042-ffa6-484b-9d0b-94ea3cadf3d3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f33d38-1d82-4a8a-aa7c-d97616d2fe4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df8bebae-3fcf-4a59-a37f-38fbd9cd3567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc3f208b-797f-4e2d-a055-b5fd4f139ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed2f7499-9552-4e69-93ad-9b73cb6e4c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8113d3b0-279e-42f8-bba9-22fd0f7885a6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c15ee4-d929-4c53-8ca1-5ea961af4ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75a044bd-67ff-4f6e-907c-aab7a4ac8c1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4336508-fafc-4432-b725-236825b59c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41d9bd82-57ae-4e80-adea-613ade0ecb70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccad75fa-bd68-422f-94cd-48987604b7fa",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e402c6ce-6ded-4eaa-983b-de07758ae6a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cba8b0b-f98d-408f-8f2b-3b7e896181d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8224fb7-22ea-4a56-9f9d-7da33da36d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7073f5a5-9b63-4d79-b551-59ad73f9e0f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e104806-d7f1-4a84-9e1c-e0c654551603",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7654327f-1e1e-4273-87be-315c12d22dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef2cf57e-3f6a-4e48-a1eb-333b2ff81ffc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73227376-fbe0-4cb3-8c0e-0f30fa5e41e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cad09583-08e7-431d-978f-002a6829b8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c8acd71-a792-4b7a-9c64-26961bdd220e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "000f7451-da68-4fcc-b2c2-1f6e9d3a46e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d399aac-7a06-4c7c-bad6-e969e4e9a7ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b56868-d2ac-4742-b160-422815639409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac240eab-5893-413b-8d12-ee41815d666c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29510886-6146-4ccc-b620-62c364fc9aa1",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63068b67-cd66-4b68-b610-ec2f4b6a1f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10e6d9ba-5c85-446a-a889-2c010ae229f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e665339-c327-4071-a412-56c924ea9897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e650e576-a3e4-4eeb-be44-28587700fa49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7a6def-8d2a-4602-a21f-f096e272a0a6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6347d00-4813-41dd-8415-3b742ce2d78b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee8c3173-523a-4b46-bcb8-3d28e5474712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c2e4ac-6096-41e5-ab8c-176f901e8942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebd87523-5f85-474d-9883-453c809afdf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f3ac77-564a-43f6-b0d6-55a6413f5f48",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9c0c6d-9836-4b13-9fb5-c6762884d9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8320bb1e-060e-4f09-81ca-7e2b9a322ca0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0657689-ba5e-4676-819a-8d3296369594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5b815a4-d438-42fa-ac0f-f6e9f343a3bc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9aac8f73-ff4f-4c70-a641-d3b41d6a6f06",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9397c4b0-3328-4cea-9faa-cb5defc93465",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7681420-d0eb-4164-804f-bd9674504e21",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ff460ad1-8e07-43d5-9633-8f328f38f860"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dbef38e-e804-41fb-8173-02062d86baf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "74f3363d-e5b8-43d0-ae2f-b9759514a4b1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "deb731fa-a036-48d7-a3d8-880acd6f8188",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2605e66e-8d54-4bf4-a376-9de87298d090"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "698902b5-e5b9-4748-a3ac-e2f47f79568c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5c69a0f-aa07-450e-9b93-da4761d5d77a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b7538885-743a-4b35-a2da-f0a805563b68",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0709dbad-8e25-4175-81a8-33cd1f93f25e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e623e1d-1f0e-4473-b895-64efdf2c27c7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4a739e72-2554-49cd-9354-c2b211840553"
            }
          }
        ]
      },
      {
        "id": "16679580-02e9-450c-892c-c2b3ee472515",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "9edf9427-8a81-4547-9e98-1552d60e87df",
            "name": "Negative Testing",
            "item": [
              {
                "id": "87ae6926-7451-48e6-9c87-2363048e8f02",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "288472c4-e2c0-464e-882d-ff74ee4bac7f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d89e30-7cdb-4ebe-83ae-7757bb9959c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d597fdc-1f0f-41e3-9b0b-93efb5626053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f7cc01-e9bd-4428-aaa8-da482d29f8b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "60cb79d4-4b3b-4f4c-8a48-a08d1255ead7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dded7f8-a5f5-4f58-9a44-270a433ad92b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55204745-b6a9-456a-8a1f-407434e24e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87283b91-da67-4005-a958-6bbe0c4fbe8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a6d1e7-a242-4d9a-8507-d4f1e6a5d920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8319ab73-6693-46ac-8ddd-bc1cd1eec719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c71568-2f86-4278-b1ce-1d2af50ebc76",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5c6cea-43c7-4019-b434-f13743a67c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ded0b28-8d6e-452b-9888-b66d86d02fa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "049f31df-6cf1-4027-bd92-4875b82900b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4f68cc0-893d-455e-897d-0b7b702c2706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a795517b-886b-4d2e-b4c8-fcbc69e71afe",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4e3807-3125-4322-a204-f14794b89fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be6a5f92-e36c-40c3-8e75-ffc831ba1132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27432d9d-a066-4105-bccf-1ee6b4b7d696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b571c45d-1631-4178-901c-7304ab02fbf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b158f50-bbcb-4676-993f-5f869d68576d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e980e721-040b-4c61-a5df-61ba8e7a6e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4633fb46-27ce-4c84-a4f7-d7a8bab98946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20ceb33-6b73-44ac-b724-de12cf004cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "30395edf-6667-4993-8569-8569f0fc64f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3de3e89-3fd8-45dc-9a6b-872f4d4281e7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0050f18-e26f-4ec7-a126-c0e157793687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9805b9a6-a86f-4d1d-b2ea-a334365ad13d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fdef454-7272-4bbf-b76f-f142a400bf72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a283ee27-53fd-412a-953f-4609a12b2dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4043b43d-f9b3-4aa0-ad58-6712c049c484",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "208daab0-090b-463a-98be-33b7c72ad288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab59bf9c-2576-42fc-8fad-6e8182843b35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef4c5ffe-939f-474d-b1e0-89f4ef097859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9dbda90-f6a0-4e85-811b-1ad00b9700ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce93673f-2f79-4d72-8e96-d944af3ff969",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "469c9191-5966-42bc-9c4f-e7a39b43fbab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8129c0a-6499-4d8a-a028-715d07e3a56a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d5c89c-80c3-41d0-a7e5-72c9892263e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d61ed8b-1f17-4274-beff-093587d6a503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35712d88-8ab6-40a5-b93d-d1e4a7af79ab",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01585bfc-04ab-4646-95fa-941495cd0629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "245d48a5-dc2f-43f6-9d69-4900cc857522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1bfab58-655f-4bf0-b987-b764357c6370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "528a3ae7-cb4f-49de-adb4-bd834a1b30e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16549937-9682-421e-bd17-cf85f35d0009",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71aa1c49-780f-4504-bec2-ccede333d4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea9ce42b-f9d2-4b65-9b97-effd1f38f983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43996b2a-7bd9-45aa-a52f-5432db4a6446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4db619c-e1e3-495c-934c-eb931f6ebbbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0493614c-51cb-4adb-adf1-c2ac692c2a5c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "377ff6d6-0745-44c0-8555-43cb499abb0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98a5f114-5bb6-4f8f-bfcd-4002d9d4a032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f11dff9-ccdb-44cb-a5bb-bcc37aa6ad8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4cc92b68-aabd-4e86-b21b-8cc8bdf15b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a8d468-66e8-482c-a66c-7a5ce6915edd",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b06484c3-8a6f-49a5-9611-e7f130f41120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eebf032e-082c-4c30-8a4f-f3a144840246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a25750d9-b0c0-4873-8184-a8c32ebe0a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "65058a3b-7de0-476c-8188-d649a924abcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b93de529-fce8-4032-bc7f-3adbbba432b1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e09ca1-87a1-4ce6-9c5d-39a98ce7c37c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff86c056-8528-4eef-96b3-d11dcd21f56f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "678e5cb3-2645-4e1d-941f-edc1d28fcd71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a8b18ac-fbe7-4016-878c-8bfa95f53024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62fd4737-d500-4a3d-b470-76543e70277e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "821f3366-d66a-4cdb-b6dc-bfb13b0bdfd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6896028d-86a9-4c97-b6c4-a5775ccd12a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab38924f-50f8-49e9-944b-72cdd9429a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5a769b8-6b50-4936-a2f7-270526fad8d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed88af7-9b66-475c-b712-f04a6825130b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbcaa7a9-7982-4e95-a652-534edac79799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9bdd930-aa22-4221-a633-fdb0ee25a8f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96be9f01-6256-4238-9109-811d410fe5e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cec2185-032e-44f3-948f-93107eaa7069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3784785-4012-4480-b0ce-404ee3c8e3c5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa45fbf7-2463-43aa-9bc8-f893b4173fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1cc476e-7ced-42a5-9687-1019c75bf160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "179ffa16-a252-477b-8261-d59aeda8e743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bca3e3f-f266-4b77-bb3c-0abcfe772d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e9a643a-12a7-4b87-8764-902bf1f90dee",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ef6758-f88f-4608-b640-942969899944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "499b9c27-4dc4-4da9-9321-ba155f50d1a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b993774a-be90-4ade-b53e-c18c594ad2de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "95bbd2d8-925e-44f1-83c2-8dc864557fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3327f7d1-e679-400b-a3b8-e4ee71fe3c27",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "177d70d5-fb07-4b85-bcb2-4d5e0c3eb0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "583c0f0a-94f1-4dfc-ad73-0e3675225927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cab7c0e-bd7d-4c04-a2e3-bfefa615b758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e607388-e91d-4e87-9ce1-e080a31fcb0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38655d42-deca-44bb-b0b1-2afa65811396",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e996db3-4904-48d0-8ad8-e1a7889dc975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "146019cc-7c90-4311-a420-f48e4005efb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39cb694f-abee-43bd-bdc9-3e373d88e201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1a63237-3781-4dad-b50f-8619fb8f085c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4afd8d7e-181b-426c-b96f-7f86bc1d78b0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a27f09-63dd-4f45-81f1-74f3b36bcb42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c87cc754-54c9-4b2a-9004-c62c19971782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "473a0c2e-fdcb-4bb2-86ed-79e7a34a872b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bed1df8d-1a13-45bc-b107-b1ba39a28e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5148196b-50d4-41ca-9a63-901d988b01c9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d48e438-7a1c-415b-b52c-676691f74046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "337e893e-e881-42d8-a872-d634b54beadc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dfcd25c-7393-4564-b875-52752d953066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bbabec9-54ae-4d29-a069-cbe40136c626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b134d53-42a4-4f6e-804e-59100d4c7f5a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aff74f4-8193-4629-abf1-20bdc62f261f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f979b1c-586e-4c77-9881-4b68ac55a24e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ef4ebf-faa3-4bfd-8fe9-5c9e7ff4f07a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dd6d69f-37d4-4542-a112-47c675844983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f8c42b-5078-4ba8-9794-0ff99c947ebe",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a76abd-2c60-4b95-a486-0102cefe577a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7d4f0df-3439-407c-afee-9acdda8ca7c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2edf33b-95d6-49fe-83c3-0643a14f77d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56200e24-bab0-43b3-9267-544659a67678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c98a0de-5124-4b03-8af1-de1b65740c1d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92a3b08-af1d-4315-8583-71d031ae6fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04ea8068-951e-44cd-8b87-143c7dea2e1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c8c02fc-ab0f-4ffb-bdf8-acf242952d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a019ef3-a398-4a93-97e8-380399ded11f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d8e32ff-6b9b-48c4-b6a6-5df33cc7a83e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb6ea85-9b12-4a94-85d6-5274dfc05ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3645fe69-0e45-4d47-b8d8-a515df2cfc73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8840506c-e5f6-41f9-b93e-58677ad66cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cde5f52-2568-428f-839d-5e81a9eb1d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f50a876-8898-4b28-a934-6411e6197f63",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4580ae4-5938-4cb4-9630-ab7a30850c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e163e4d5-c9d0-4ad8-9a2a-9a678f642abf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e629c878-3b71-44c0-83c9-e807d57459b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05c7158c-144a-4971-bb7b-7ec01a67b073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0820e6d3-4e0c-498b-9c94-c1b456c8a68e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1ad36b-e253-4d43-a8e3-446db98f9cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9696a3b-82af-4e36-b564-a17d02f44eaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5bd336e-bc71-4d26-9374-343931e03ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7227d876-b9d9-4376-b1a0-48cd34e3779d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4931d69a-5490-4b16-882e-35f68d7e966d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a149d668-6214-4e37-bac1-12777175f52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a07456e7-2c07-4642-b5ee-f925a48d3834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59aa3012-f89c-49f2-a675-5ebdcd5940ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "769f19d0-a980-4c0d-ae7f-39f734c66884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b294ebe-beab-4550-acd1-1a0c91e3fd7c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d169ea-f52f-4552-aa68-9fcd78af5930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b61bdb34-b876-41f2-b995-07a5b1807591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d9b661-217d-4362-82e8-1130800fa612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ead7dfe1-8b53-4d75-a26f-004655ceee01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec10ecf-5a99-4949-b6e1-8e5767570cdc",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d3f952-5c7b-4733-9a22-fae561c326cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d93eccff-9098-43f4-8c59-e47625191c24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a54c0a4-a2df-45e2-954f-a8056cafac0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac04675f-22d3-4520-8134-e412e13668ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2de674-e93a-4c5a-bffa-debb2c7ebe99",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1094677-4272-4a2f-8472-8111f5fc1d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75609cca-c64a-4e02-875b-69d3ac388ebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dede0aa-54bf-4be8-af1b-65ba5bfbd43d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e95097ac-a86b-48ed-bbb4-9f9566c3a9d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b673758c-e9ac-4fae-9535-68a663ad0513",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d06d3a64-3b2d-4772-82b1-e0a892346c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1130e187-2947-4af4-ae3b-6bc5fe4eaf0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ba1161-1e43-4dad-a970-34d1eb1fcfc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5beca98d-775a-46cd-933e-42483b1efb10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffbbced1-d6d2-4533-a2f1-fe1d1add8281",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc3dbc7b-c1a4-4c57-bbda-8f0c776cfa6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1f61bf8-c0a5-4439-a661-15edd6ad06f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "513611b5-a0db-4da0-8d37-bca58a4efe3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89b76813-f25e-4f37-8c20-ffeeed9719a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff8fd12-ef8e-4963-8785-591dbb2e586b",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "381ee632-8064-4a71-a90e-403908253a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08e9f7b4-a203-46a4-8d74-8a9034d14182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ca92e7-05bc-4d3a-815a-2d059a22e0ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8723084d-f521-4258-be62-1a0005d4faf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204a28f7-94fa-4fc7-ac3f-6fe00ca2028e",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0619e860-7be6-472b-ba1e-a75e83a5f49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7369542-289e-4825-aa11-89176e73c46b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51148dc3-bc21-4f47-beed-b086ca8530a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b725a2a-00e7-4345-a8af-4a746f76df14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1df5fcc-ab18-47d2-8238-b23f99623b40",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aec8181-4adc-4a38-860c-88528e2beb89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00d9f628-d7ac-4f03-b310-d32230577e50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f022a340-3f02-4446-9213-1c4989dca168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a3a575d-613a-48d3-8d5d-e7d5bf33e61c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d72890b-a00c-4a6f-af59-327e33f9e464",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1600cc0c-dd66-42a2-a9b8-f449a860d0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3e89690-16e8-4a19-a45f-35b158b60a36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f137511-912e-49ac-a934-8881216b4f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40e135cf-fe1a-406b-97e9-17fc2a49d28b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "04fec657-ecb9-4e4f-9edc-8f92e5166848",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5d9fd537-1faf-4f1c-b61c-028cdc399639",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "245713dc-2d5d-49cf-a233-f7edb1635ce7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7e94390a-6f09-49e9-90cb-d71a8bcc9765"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b0e047c-5ef0-43e9-9cd9-dde2d56db7ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fad72b76-9646-4f39-b67a-c1c54103f542"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "77e7fa0e-9491-45a5-bc8a-692f733bbbf5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd9273f5-e538-4e2d-b79b-13a916771011"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "871637a6-919f-480b-8fd2-2d0511252991",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36dd1d65-6e6d-453a-9514-b47d8351027e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c6ac574a-3003-408e-98dd-7c28ef58ff62",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "adaafc78-5e84-48bf-89fc-aaac6af4d727"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "484f9c8c-d3e4-45dc-84e5-18550aec1658",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "31b40d77-86a5-446a-9b49-2d0a8e5dead4"
            }
          }
        ]
      },
      {
        "id": "af2aacdf-22e2-4d36-94c1-b71632e3225a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "61654423-649d-4d87-abd2-bd751201b1f1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dc135690-0c13-483d-8a6e-3af39e1e2c9d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e3579680-ffdd-4317-ab76-a256eaedd03b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd7fc506-f501-4b01-8df7-fc1762b5684a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed27ef3b-2c48-4f65-acdb-ba25793d7f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea77792-8f07-4951-924a-38dfe0dd5ff2",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11966202-b4df-4b63-880f-ebd937014cd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e27021f8-6d5b-4a87-92bb-4217faef7467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "916240bd-077f-4d10-811e-f981655bd85d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d01e126-f5c7-4931-8bf1-5c0ce679c742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aa2eb4a-1b29-40b3-a7db-e56d6482f5a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f19033-2fad-42e3-af23-267b920ea1cf",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee61554-0af6-4457-a04c-006ceb229672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cb17e07-683e-403c-9dc3-9a9b530fc749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0204a18-f551-4654-955b-832139f5d73e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "952535b6-895d-4c22-8860-132ff87f7d0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81bf101f-4494-4a01-bd2e-64f630e455dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa1bdb3-1908-47ef-8744-322ea3bcdc36",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2bf581-ecb2-4877-af42-68fc6d32d320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f68ad5f8-5bc2-430f-8e52-885390526713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae796bf-cf06-4793-8070-e4c10038ff14",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ee16f9-c2f3-4108-8a6b-70c7a9d59600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff75ad2c-f2bf-45e0-94ca-cddad12d31e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c454c4e-addb-40eb-b741-3299d5e191aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8356375a-1b26-48db-89e2-45150f8f50e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc6cab9d-f48b-4743-8ee5-1f6d953f7935",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6cd4c9-de5e-4f89-90d8-efdc47f18f01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98cb120a-f02b-455e-b37f-c83234e6174a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e428c8d6-4db2-4447-8444-d646e100987b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "658f0e99-87dd-4aa2-bc70-3f60649fb4ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7038a7ee-a167-4901-8f59-af2fb6da6ff2",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d9cd29-bb3c-4c67-8374-b9e05cf5bab1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83ae341f-9a63-4ea5-ba52-65396e2d8830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "777305b7-f148-4786-9f40-498fc68d2cbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8729daf4-667d-4bb6-a373-41442735a146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b398d8b-e01d-441b-815b-9bb74f6d6476",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c275356-0de1-4d5e-ad4b-9cf077876041",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcfc0f19-07f4-46a5-b85a-af8f527efff1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ee2f1e-e0bf-4ff0-9cc7-5d352b1003ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "282699e0-7dda-483c-90aa-4948149b6a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea7013e-a75f-4219-a2ce-d9e1f7c77df3",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640b6ad9-238b-4b37-98a6-74d19741902b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "182f9ab5-70c9-42c5-b0ae-6d084432cb5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69caa940-e693-403b-a6f5-90c0d278d1d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2c5beb1-583f-42e6-bb61-87b3ea7805d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc8356c-b8f6-432c-9e04-ee51f7b254cf",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e4ea990-d300-42a8-ad77-2d1dc79180b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b014baf-1710-49fa-981f-c2e7e81b0bbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "195f884c-edee-4eb2-b1de-c09286adbbb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9605c2cd-90c9-47c0-859b-18e975765ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c1706b5-7d4c-4276-87c8-8ce70f209e04",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb717f2-5d97-4ce5-9b49-e130089e2580",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54ac2d8d-d2d2-4bad-86ba-7216dc0a7bd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6058314-ee87-4a8a-b7f5-0ff0940a848a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9858149-a5ba-46ba-b555-4bd03e638cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb8019e-f2d3-4c0b-a0d4-48b23e41d76c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86195153-1321-493c-b38a-ccc518e0e622",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4723db6f-1a0e-4530-8ad9-42de726ed771"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60aba8b0-86bd-459e-af07-ed1c2a84d646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f0f0be1-344f-4602-9e13-57a8d5229447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc54edd8-4ead-4ba3-aa61-257d0f3a65d3",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5656bf5f-b1c0-49c9-9ad5-bc2c81cf1c7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ad0ab77-aaeb-45a1-8f63-5f80b536e6fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8330336c-5f0e-42fb-9eba-fe83f2edcd99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd5dc1d2-08d5-4d5f-b32c-ded32395427a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4013be2-d76a-4a67-949f-7e9099dd235d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6184c09e-1b24-4635-9041-d015512f1653",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ee892d6-e234-47a9-b167-fbb716e2bd30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb27ab57-7a71-4a59-ac21-385fea31c1b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3fe27a5-5750-40c0-9229-7facf2312649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d875b94-01ee-4259-bc22-5c3ddddb88e4",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88401e49-f9ee-4a4f-a89e-0cfd51c17396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb7759e1-6fd9-4189-942f-b4f0d28776a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d4c958-f87e-4bfe-b377-fc5bf1225d9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48acb6ac-e583-4787-b4fe-07c1b0d5b384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d8fffc-ef88-49ce-b26b-aada5f47059a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d866617e-a736-40ca-ae83-418aa97ec29b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73bedd07-1909-48a2-8123-68227cdaf1c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f00711-0dd3-4906-8241-930e3ab3f108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8390590c-f4c6-49bc-86c5-945307a50af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db462773-0aa1-45e4-8c61-b263330d3c1e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15218c24-74ba-42c0-be3b-b375a2221d4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "635ebf7d-8008-43dd-bf74-c4c8832b5dbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc0f509-e5ff-419e-b3e2-6cec0f2d8177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f6d5b89-9418-4865-9548-d10974c118f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1377be8b-1a6b-485e-8c84-962c36f44948",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc5ba13-17a4-4ed6-ae4d-0d0d5a4edd94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16c6a496-3898-4998-9b90-317834bda68e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4245c7d-094f-454d-80f5-0dfb07f72813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "486f6f70-7ec8-43e7-98b8-c46dee1ad9b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f91f484c-8249-4fad-9f48-4b9c128bb329",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c12c28f-b583-47d5-a9fc-7d5f61e1d276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66774c8b-98b2-40a9-96cb-886d0c881906"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb61e3f-1a38-4942-8966-2910ab5407c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4a35e23-e475-407d-aeb5-8d4fbcfa77a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a411d8-5e35-42cc-8635-16ef5e054bb0",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c4c3a2-1738-41df-b599-401ce7595314",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adbd27e7-4972-4101-9aa1-cdd1396c4870"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc8d021-7897-43ea-bc12-5e2714aee2f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "507ccc00-686b-4658-bb25-b00ed95732aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8536928f-b827-4222-a8f4-a3d46d43b3b3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd559b6-d376-4c9f-819f-fc61b480ce57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18d40a7a-7829-4d8a-bd19-3688a90f5523"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c8c1f3-af32-4396-b06d-c4510a0ec482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c7f5951-acda-4af7-871c-ef25663bbb72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb4a144-0da5-4ce8-b1d9-613f858ca76f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd37ac6-ccb4-4aea-bfe6-6e3631e5161c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b8d079c-5f3c-4784-b4cf-ee5e841639d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3df053-1823-4681-9e88-ae3dbe388129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85f60927-4f76-456f-b8d6-56db296abf49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e090b9e7-b9d7-4f28-9e3c-665f5659a510",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56435c61-0ecf-413c-bcce-7df201d45642",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd96a7f4-642d-46bf-acd4-7ba9956ae790"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9666cd0-5e9e-4856-a9b7-b9fc7badd7cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ee0a6da-89b7-4342-9bf4-2306e89dbc18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d9f163b-e8e1-41e4-b930-eb5f89c53f01",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d48bbd88-a67e-406c-84be-7c4cdbe68f4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abc9a0bd-a6aa-45e2-8a45-ef948ba6e5b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51325fd4-4c5e-4dad-9f7e-cb31d6e2d683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94d2311c-6683-439b-b0a7-6e98f06b106b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f292c3a-e3ba-4f3b-91e1-0c3f4c5ca81c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd3c367b-4001-4568-9b32-e68e748c948e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b098935-cc49-460a-8376-f432da6e8703"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d49562d1-19cd-49f8-b18d-472f13f176bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e849525-b6fd-4ae9-aa9b-448c47a100df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0619881b-edc0-42d6-a693-66abd98e7a9d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b188bb07-4bcc-411b-bab3-3e62033c34b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "448b3ee5-d981-404a-b650-ea82caa9210a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bfd686d-0220-499a-9250-4aed69fe085d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5abbe414-6bc2-46f2-8075-f5b6c2a4d35f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cbf10c9-be0f-460d-9d87-35463f711d8d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67538bcd-e6f0-4733-b3ec-8bce634274bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f570727c-e488-45ea-8f8d-b470e39900f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e26f471-cab3-4b39-b1f8-954fc082b92f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da09e845-b0d4-46d6-8ae4-1a428c773e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f45615f-dd45-4fa2-9c9d-44088d0f5ea0",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef28a8c-af10-4afa-941a-84b1bc380bf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5c76be9-3930-47e6-a790-97777345ec0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "befe5504-c68c-4ff5-9e58-aeee1b349289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b598a07-15be-4747-a674-c700ad7fff9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f264bc-4a80-4e6f-aa24-8cb2e3f24632",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b641aabc-ab63-480a-bd20-26af05814912",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcd6ece2-8075-4d16-9e2a-f7b2687e3ad3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b8c413b-f5a8-4b3f-a4e8-f76a96eba88c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2c57db0-7be1-453d-864a-8a05b53ff0c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d55842-9498-485d-8580-0680b717d609",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c35f15a-3220-4bc5-9351-aef4a16835a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3799c1a-fb69-4632-935b-1af1000d1b71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2fed5c3-ddcf-4fc1-93eb-c85912a0e2b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8de56de-6468-43cc-bedb-5b49fb8dd647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e530622-a3af-4594-a284-81cba11ccf44",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92cb3a77-0d8d-44b5-90f2-fe491d5cf914",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a30a274-8da8-4698-a7a5-d1f7e020aff9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ce6d75-e3d4-42bc-af91-3f5fc0fab207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e42b4b9d-52b4-4926-8ffe-f3020a089910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf71dd48-baa0-4198-8a3a-d3494bb509a8",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db3b822f-e743-4558-8dd8-439254ee1945",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae04d42f-0638-471d-8207-1df9daf7dc23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cff056b-fb0d-44f5-9d24-bb54e6f75ff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "760d25f6-e883-4887-a771-ec5e9eca8075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee10d5c-23f5-4d98-b398-6d4767216a03",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "375d0abf-12d1-418e-b1e8-d09be9d75feb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51299e00-f996-44b9-95bd-76c67cc24c37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86508428-f54e-4e9d-91b6-3373ec0a6309",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ace744c2-df9e-4a87-a5e4-857574290238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa56bbe-fef7-4293-8348-0ccab340fdb2",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d52aed-f035-41fa-8c71-73d9bc420b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1a8339a-8077-4d85-bc70-641bf326b862"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24004b54-4af4-48bb-88c0-c005f744a5cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c6b9c8d-a941-46bf-a6ec-c73007877463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b3e3571-e7a5-4df0-9cca-08064506539f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22917122-d586-43e3-beef-56c0c0bf3fb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2843815-8208-4a7e-88e5-f258c2dfa970"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d45013d-a678-427e-93a8-b1520dea6ec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b893267-f194-4931-814f-817b719104e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed658cd-743b-4036-aba7-43ac3c544843",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a48294f-2626-41be-909d-d56b5cc62d6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d165d7ef-69e9-4b30-883e-9a9eec9e4e67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba90815-cca5-4de6-8788-237f6edf73b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b706c17-fb20-4cdf-bd1d-beaf24dedd82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ccfcb0-27ca-4fa7-bc49-903b8c0962ea",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee254db-61b8-46c7-8789-42f4c2d3d97e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e52d623-e6f6-4758-9c04-92167603be56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff4b528-9807-4c15-84ed-3483c1b55d3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acd8bcc9-6e69-4337-9a41-3aff4a4461cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2047cc58-d405-419e-aec3-e518e1cbb352",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24fb97a3-dacf-4997-bd5e-b44ba5c3a568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42a73661-b394-4c6b-88d1-5882d074b832"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "657b7f4c-b020-472b-8f97-5106bf9cf727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7de8c4d1-ae4d-4429-b8a9-d61c4326e575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b73c58eb-b760-4982-8a2b-d5596a22dfae",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aaa4e48-83ec-4dac-8224-40bf0a18770e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcd94776-4ceb-418f-9cc9-61a2a4980fae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8341fce-e4b2-42f7-8728-793facfb05dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aec0e9b2-394c-4319-bd82-b77137824395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "825fa3b5-991f-4d02-8752-7048eee8df78",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf3c1df4-3c5f-4809-b3f4-69165c3153c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee86a43c-5d59-4b3d-84f9-ab50db96a839"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63f2478-3dd9-4d51-851d-e4c234c5e409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96de9b37-344c-43ad-a8f7-e20ea4a20632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bdd9fb6-a2cd-46bd-a4d7-b3f8dd743b83",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ddee586-00ad-4873-936b-e2bf8e9ce204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39166f1b-7974-41e4-8103-f00a1d9cf9e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c86011-3376-44db-b3c8-d07b1624b707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "236ec9ca-59f3-4611-a2bb-d59b8ba6bb3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8517b9af-59c3-4d54-b5f2-2e8566cec004",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661c59f2-ee6b-438b-ab5e-8857b6850ecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4de827c-a2ad-4acc-8b42-cbc0f3ba5778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c1ae159-fd3e-4b24-bab2-46b7c4b3b6bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8811ae7e-c56f-4a2a-be4e-cf8dfc0dd7e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93c48fd-2580-44dc-aaa7-2b3f9d02dbee",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d8a7089-390e-482f-bb22-52c30c797fed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f637bfc9-28c5-4265-a6cd-282961957cec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae1110a4-7e2f-48d9-9d80-bc89d3103d08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8164191-8a95-49c9-8504-5b29d8dd1d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c39a46bf-9b5b-45b5-9a3e-c342eb0ac301",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01866c8e-5cab-42b3-90c9-16d530448401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dac7c157-6394-4ed7-b6e7-b716935f55bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9112a25b-738d-41e6-b1e1-15f19133fa82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea2c3b5a-246f-4871-930d-ec0fdee994bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b43d4ba-ae03-473d-9613-e1213a743f27",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf1a308a-d5bf-429a-8e35-5924b07fc217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da12887a-9857-4000-94ca-04785965fc2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e771e21-04f2-4ad8-bb82-71f9b0a585da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6152ec85-47f1-4240-86f6-672b8ccfa498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d431c18-7498-4288-a43f-b29310756b47",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a43f44-036e-4909-bf45-c22aa786af37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd9ef245-500b-4615-878f-e30b139fa1c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2aeb2d0-4fde-48b2-bd05-fb54d1477a30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5440b27e-4d0e-49d5-8b69-804673e19a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271c4ae3-e6b3-4c24-b8b5-dbcc36708c4f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e342903c-3145-4a5e-b161-74438c010dcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c7cfa90-93d8-4206-b9f0-d39d40c9e132"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ba91e4-1d36-4141-8e0c-2f97a96e22c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68f2d236-1dad-41d1-8dba-61a0c4ea5f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a03dd1a3-068c-4997-8fff-3ea1780ab67b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b3c5582-a6ed-45d6-b1f3-8a4b0f8e4bbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de672aa1-0ef5-4899-8d6d-bb2bb22d6abe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bdfedf4-2368-4c6c-bb12-94eeaed26cf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c3d56eb-7f46-4d37-a2a8-a62f15a42301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d678800-ffba-4ea1-933c-e9b9958b67a4",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf04d99-424d-4e31-a59b-16210b20e84d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38e76edf-254a-4955-a5df-94441e3643fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ca8a8e-63fe-4652-b763-5d6ccd35e85b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81594067-97f8-4126-a6e7-e4c2139c3309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea66583-bf57-486f-ae41-a534ec4618bf",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02da8660-bd1a-4462-aa59-aaf7984e918e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdebda91-6ba8-4d1b-a4c2-9dd5331f4464"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc879020-6b53-4481-a837-6bb5d467c181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4fbabad-0295-46db-a086-dce94c02a296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0bb254-e2af-4eb8-a0e5-c9e558b966cf",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54922055-6074-41b5-a82f-f196df5f2207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "430a0d93-aeba-4344-a2e2-07d177529b75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a3842f-b09f-4c09-bc5d-afeb6a0ac432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ef0f0fb-88cf-4272-97e2-6c1b68c14903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "438eedcd-6572-461d-ab50-866b0fad660b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c432440-21bb-4450-a76c-2a4d3a72a5f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d356313-70a6-46c3-8795-3eeb6519a6b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b320a097-de02-4a30-8a39-235b0d491514",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ebcf451-2020-4c90-976f-f4608f1819e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f527ca-0209-4f0f-a53a-f518b331d425",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6449740-f466-4b50-9d31-ca8365782337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd3ca342-5b84-4418-a400-8272e54f671a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad13a05-98aa-4ec4-8a3a-76e2928d7050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc6405ce-c6d1-452a-9bbd-d52f7b6e3e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50cffc2-fe27-4e78-a210-3ff11cf4e810",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b99f4b7-86e6-4b35-bd16-578aaa4b9af8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c66f7d7-1cd8-4c61-bacf-a91fd43fd185"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d355d9e4-1aa7-499b-95a9-5fdb173a7a88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed5e49d5-9dc3-41c2-9149-b855762f023c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a7ceb4-801f-4a9f-b20b-b206f1cd21ba",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5cf04da-9947-42a7-bbc6-a848170b48ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6399051-64b9-487d-81ec-fcfecae31714"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b805227d-8dc6-403a-ba44-1e5729b1a51c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00f788f0-d0d5-43a3-93db-bc3ceddf291c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66359b91-cf34-447a-bae7-d681b45efd56",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38c0eea-2022-4269-9ceb-e805c5803eef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ad900ed-17bf-4a32-9cd7-e76a8fb50ce2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "defd3a3f-55bc-406f-9c1e-a1d8b27655cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f72437a-c051-40be-8d7f-99bbd3cdc478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b724da-ba11-4efb-9bb0-5952fcbac322",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1168e94-1001-4744-9a9e-21f4c75e5844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4462d5ab-f2bc-4167-97d9-c5188f7ec50f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53abb3bd-b10f-447c-b951-209c8a231400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eebe102-133c-4a5e-9b39-3894137be7d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d463083e-232f-4a66-8262-7a41ee5519ac",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14295493-b286-48d6-9d78-573a9c45e897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8f76a24-ff72-43c3-9d87-c36da52442dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35935e6-9e93-451a-ad37-d8047e1e305f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee5816b4-fa38-4643-acb5-e6ede2f5015e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53fd0aec-54b4-40ad-b791-b7b321177f91",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05496b0-d14c-4fea-8ca3-e177c7ec123d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afbb8067-9fbc-499a-a5de-81951b9a843a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "499ae047-ef8f-4956-b1e4-3b40a1d04155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d25baa3e-527e-4f36-947c-91928debbc85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da1e59b-9f7a-416f-9316-31908391ebd5",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55041d91-4460-4809-90ee-47f35938296a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bedbb1cb-290f-478f-86f0-16e41670930b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3153526-f921-458d-b5cc-fab1872fbe43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e1abc4a-1036-4c00-86e4-50269378988c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2920e189-c3ab-4da3-a3cc-f0cd43b4f610",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f959e5-fa73-4b74-a17d-f29e6dfb896f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e52c576-39ee-410d-bec9-5968d85c066e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b544c45-e166-4c93-9d43-e1d30d8f66e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35d11075-1544-4c4c-8e37-65d0db5d2567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa7d41f6-af90-47d0-8df7-9398b7416b09",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73283056-e43a-4089-ab89-4d256f2f745f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb5afb0e-4ca4-4285-8edc-1d5d21238686"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a5f663-0ab4-4742-a83f-b5b59fa1a7dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9be1bfa3-5f20-4de8-8913-93e68303f383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7703964c-dfb3-4b3a-918c-e2fe051c0f5b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2254fcf-82d4-4a39-be9e-bcb0738b8b87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b82a871f-6bab-4def-90df-51f78ccfd584"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4d59b3-238b-4c93-8410-94387593ca1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c74ec183-2ac0-4844-851f-bf9358861e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0099103-f256-4ab1-a171-84c87a22dcd7",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a60b9cd4-a593-431c-8366-98b26858ebee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "752ef456-b379-45c0-bc4b-11e1115ea3a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2b2bf8-1dd2-44f5-be6c-294c2e6af744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0bda571-0995-4120-a8f1-5eea4cd56641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff5bc31f-d170-4b04-89ce-bddf845d9aa6",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de46b696-6ca8-4390-9bbb-032825a34f67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f08e96e0-c514-4d89-b697-9f99f4bf86e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ecbc064-7854-4079-ab6e-2e062a3e0933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "514091ba-93e5-4d0e-a663-f64eb1222810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0dc6ab5-b4da-4c07-bccc-a690969cbc97",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac5da1e-1e0b-4b31-b70b-44aab1262290",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a4bcedf-7dcf-4830-a069-07f022eaf1d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb4be10a-0df8-4cfe-a8f7-eb248919f916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0daaa702-b5fa-4af7-b194-c24f16992471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "165167fa-cc7f-427c-be9a-05bbc99fc99c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1271d9be-9b8f-4f73-915b-6eb958fbfa91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4543f69d-61b2-417f-b444-655256cee423"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1135f58f-3379-4570-8828-69ca80bb649b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ccf8482-a606-4674-bcdf-9ba4d01d5072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f290e92e-343f-49aa-b4a9-66061ee82fd5",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53321a42-847d-41de-8bd7-b788387fdd26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ffc1f86-7979-4be0-8994-41362e48cfe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1524a765-f55c-4a63-851a-645451fbbe4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fc98557-869a-4a5a-bbb4-f140868c17f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e047ab-9856-45fc-80d0-8a095f025179",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb7da01-b308-47eb-a383-6aa34b89cb25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db0f88e8-5c14-4ea5-912b-55ae576d73dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63fc98cf-e19a-48fb-94fc-9dd22bb86e60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2bd4a7f-ba0d-46c0-8343-43ba1045e1b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d7957ff-a232-4482-a167-64075a252962",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f02d1b29-e51d-45a7-bf6f-598a66411891",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d07c3f31-f01d-4c67-a56e-ef53864c8d58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b739e8ca-590e-46f9-897b-6742219f3822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "335aff4c-c53b-449d-9751-bb84c6b6f2b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "affb63c3-279f-4643-98fa-200caf519184",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d157ba-306e-4fc8-a6be-1498decaff18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e466128-aa64-444b-b9a8-2d3b7ee5ea3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7756ba-5019-40b2-a4d9-a293d3e44d4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad7a6183-3999-4dca-9cc5-d1d979421263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c24a7f-9f2f-44b3-97b7-251de0e3c34a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f1e3aa-74bd-4462-9905-e19accc956df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b35cfd79-10c6-4d37-ad44-0d9cf3481653"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "048b90e0-3c80-48bc-8a3a-fe3ba1411c70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d7bf6e1-4afe-4221-8331-18bf45f77733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ad18bf-8468-47ef-b52f-d3d4627ca9ea",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a7ebde-d3b2-426f-96a7-a8efb24b62b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ff4ebb6-a841-40ef-9456-5ba15a96ac8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0afe8acd-2805-48db-b2a9-67b68405cba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae4cc474-8b22-444e-b28a-c5e8db95b155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dbdcd39-5f34-493c-929a-f860bf090dda",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74743cf1-dd06-4b40-97c7-f61658e0a52a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "699e503b-afa0-4e33-8d12-9b5d0af4832f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e88aa00-ec19-459d-bb4a-0a751fff5526",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1928e3c-97d3-46b5-86ac-58a310a143ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac098a62-665c-425a-a7e5-9228fb4eaa10",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "871ede5e-475e-41d3-8787-ec7e10bb26db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "662f463f-145d-4e02-84c8-305567f7e0a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d398fb-bf59-475f-9e69-045e606846f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0643da5-a1db-4370-931a-1ab3f691adad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230e5ad8-53c3-4499-bbfd-0b11b13c7d6b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca8cbff-c358-4796-a15d-de3404403790",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6918218e-6063-46b3-948f-a70204cb4578"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a42e4c-0b39-456b-a546-44861cdef2ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baca173d-5abd-4fdf-ac72-b11d291d077f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855f5a3c-6f4c-4b3f-a750-518fa963431a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d71b3bb-ee17-489c-9ae4-dbbf2ae9bd17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ded2f44-dfd0-4f05-9175-c95d1dde61ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54da026d-1ba4-4833-9300-f321d7726765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dc5a976-6fb7-4885-89f1-32ac2c66ebd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "623458d4-73cb-4c9e-bbff-4bf6e35aa78b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b27dddb-19d2-4463-aa80-5282c0c4af24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87fe9fe9-5ce9-4ee7-bc69-bec5235b5345"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76fce017-b535-4784-aa05-8f6fe40aca09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5885b41f-783c-4cf3-9509-8070a4b0bc3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e524d154-52ff-47e9-9fb0-5ffcd4958c72",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5b2c61-2c30-41c0-8dad-04ffa5970e65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d61da473-46fd-4f3e-8db4-c7c55aa16d1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "337014e7-d862-48e6-88d0-383b466beaea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7091ece1-e71c-4944-8151-177365799464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e4bff44-5a08-41d3-a426-4f35d7dded33",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "551ea5e8-eca0-4caa-a096-df34a968b4a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a47e1da0-be77-476a-97ae-53a980b25ad2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38af201-4cca-4704-be6b-d6f86ab38e21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b2ed9ac-6066-4535-aa1d-4fd56925a930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91170c57-da61-4f1d-9b3f-82c1f86056b8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa157d90-c665-4d6c-bbd0-1a37c9dc2ba5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82a5af6f-9a46-4eae-a917-fe1a2d277dd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af158ea-ef59-4603-a3ae-6f5e23772c33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1b725d0-a22f-4188-ac3e-a0e5090b9be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebcb2aa3-dd28-48d3-b638-e3bca2b54f4b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f6f5a64-bf75-4d3b-93a1-e88ce644596c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88871af6-ae5b-4fd3-b1d6-d8e62d334da8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6496bc2b-3346-4c57-960c-e4730e04b862",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c78165fa-aeab-4876-9aef-cddca03d7282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf5570cf-6024-4740-98b1-a73eca1cbb9b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6680b4-5155-4098-9e88-6fc952e01c02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f728e065-f822-462c-ab5a-2d4e7742b702"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40dab7fa-59bf-4ab9-a708-59045b726d65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40e7a43f-18c8-483b-964f-138a0220f0c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f9eda1-b517-4be1-ac36-fb5ae5f99b0b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32fdb32a-2fd8-4c3b-9b4b-814b1329a8ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f0dbeab-8afd-4062-b5a9-babe459e56b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2459177-bf9c-427e-b446-e6741d9b1e83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3118cc93-4d91-4632-8a8e-e061eba9078d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b36a47c-8773-4465-b7dd-aad6e312f2c0",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "439ba38a-71a1-4b3a-815f-1e8efcead9ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "405b9eda-d51c-4d41-9af3-a6b608674456"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a8fb72-4e75-451b-a16a-26e35882a2c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c70be395-70c0-478c-8e31-244efed495c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c44fb72-9ef3-447d-a2ab-d743da1dfbed",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d799f0c2-0630-4ea5-a8d9-6bd8d1e2e9bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa343571-256a-42ae-976f-d24ef374a1b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbbe2600-8dec-4558-b71c-f98bc743c4fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b5623de-db2c-45e5-84b3-2da81aeef4d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4369c9f1-dd91-4d48-885c-5bd0aa4debe2",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa1cfa0e-ee2f-4ab3-a6e2-59ccce0fa046",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c47acfd0-0e8c-4947-a2d1-965d6121123f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9abf270c-914e-478b-8894-1746e05f35ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18420a92-8fb2-45ae-9501-d88ef8a009a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "022d5178-287d-4c8e-9a42-e9be682fe935",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b05a414-1835-48ef-acd4-867685a48e8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26dca794-5f7f-4839-842d-f88cdcd7a470"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51a16b7-a016-4f56-a6db-8cf4694f0e3b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24104edb-d26c-4121-a0a3-b723f2828a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc66b9ae-f1ea-46e8-a261-a539f65356e4",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b0bc04-887a-49ad-829f-1aaf913408c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faf87faa-920b-4a0d-bdf7-8905b8a8fbac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d654561-ec71-476d-a962-d9b9051a0ac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e3217db-7101-4efc-b4dd-72150bace111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26594e7b-ffd8-4186-8655-c8978c960fc6",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06260573-e99b-4bb2-8561-8631ac0f9e9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10ce06ca-da74-4d26-8df9-f3cc04345d2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0bf1e8c-34cd-47e8-83c3-c722189afe9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfc5b353-4969-4689-9db6-5e477653b9c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a73ebaee-dbee-4d6b-a4cf-6cc805bd39e7",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53566724-56f0-459c-9fc0-cbc40bda331f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d4758a6-4eda-4f92-b1a9-2ed35e34e599"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb41688-dbd7-4815-9758-877e7d3ef087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0bc92dd-740b-440d-b9ac-f7a5107427ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e74fc109-da5f-4280-a3da-9040e3483f50",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e0f9c3-8b81-4f70-8ceb-df33dd8035cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6a12892-8b3d-48cd-ae51-c0e955c73057"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b905951-2fe4-4d42-b172-18d87221f3ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29df3dab-a56f-4506-8153-9dbf5826f942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ccbbd2-43a1-4a20-b878-679004e5551b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e594790d-372b-406d-8c71-d9fdc27b5b7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b92d843-3782-4038-90cc-6649f7a23343"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "216658af-9d8e-458d-9c40-082ff3d27daf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0b6b579-a16d-4e9b-8d7b-19917422f535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866cafdf-0b04-4428-bf98-5da7923ff005",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e4dd9fc-86fe-43f3-b4cf-b4de3ba4d07e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c715120-f085-4040-ae26-46b05ce563f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65644372-4f19-4838-8dd7-55b8a4c549b7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0766b634-07d6-4b3e-b53f-a8a9a0afc93f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6353f34b-8c02-4eff-a168-099043dff967",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "747157a3-11e7-4f01-b1f6-50b0b74fb642",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f35e86b-c3a3-4ebd-af2e-3de7178fb5e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e2f07c-da83-4bd3-b7a0-d0986c326c62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad7e3033-120b-4225-a4f1-8af30e1c9654"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8872bdb2-feba-4a0a-ae53-1ae471d5bf21",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46abf143-d68d-4a1b-91bc-42dd3ae617e9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4129042a-ad94-4786-a197-8ed8a95ff7b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8c31dd7d-b410-4df4-9327-efb463f6ff15"
                    }
                  }
                ]
              },
              {
                "id": "c6de552f-a566-4a92-9992-4cd5a57d9c4e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "96fae951-abcc-403b-acc7-fe1e3280641f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d1078b0-0869-4796-ae85-fa65961defc6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9f25b215-29fc-4e62-823b-0c72ce25f800"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4515bfc9-5685-4f37-b7f9-fe5e1e4b9fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d844600-5947-475c-9b80-c4d710b980d3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0879c82-5586-4374-aea0-4ea5c2c1b4b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27728edf-8f63-4da1-839d-4e14bb7d01e8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "793038ae-8775-4192-8c9a-35af57c62f0f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7297b8fb-758b-40bd-999f-297f6162275e"
                    }
                  }
                ]
              },
              {
                "id": "863bb795-050d-4658-8a96-5aa741b9c7d5",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "bb3c80d1-9a73-41c1-8965-fa95b634a349",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dbc5963-4a5d-420b-856d-eba62baf1263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c301fbf2-69d8-4ca1-9201-66ddf853f012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06f618c-2d19-47b1-8f0e-9ba363c866bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12007a5d-e25d-40e3-9b31-8c8e0807d774"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "97d18ed4-a08c-448e-9b59-fcd6d52ad110",
            "name": "Positive Testing",
            "item": [
              {
                "id": "22f7e6d4-f9af-4eb6-9c48-a352fb0fe81f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bcaf8977-d782-4d6f-9d97-0a08f326c75a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5b264774-4404-4b8a-af87-da77986c11e8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55c55e00-59ed-4aa8-b5d7-2e11cc539534",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d31fe9d4-4004-439a-97e0-11b1cc1c6381"
                    }
                  }
                ]
              },
              {
                "id": "6da2f384-1bbe-4fdf-84d7-bc05e4149d05",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ae76e9c-f003-4329-b82f-524d37512fec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "aad020d1-27f8-4bbb-aecb-fbb00d58d828"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d3f1f0f-3375-4549-866a-f1d8402a8805",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17dc32d7-ef6b-4a35-bcc5-05eeebb52f3a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "999afc50-2251-4be6-9087-076de98790d8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3be39ebe-6391-4654-a96d-5508863e2cab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f4b7d24d-f760-4ea6-a4cb-72a587319a8a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cfed8586-79f1-4756-8c3b-ca06734a9665"
            }
          }
        ]
      },
      {
        "id": "ccdd240b-9191-4031-8740-ea57ec29106e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "76b494fe-07a8-4ac5-9d1f-bcbb04adfba5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "537d8c63-eb0a-4e13-b740-50585c029f92",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c64ca4b7-2fa7-4902-a7be-7fb3b6b2bbec",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc6756a9-62a5-4cc8-a0d7-0ab8036f4414",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "782db9c7-6998-4261-bd1e-515e7004c9f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8841d94c-9cde-470a-bd61-86d8f10632b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d963f088-57b4-4edb-817f-4d6bc599c3b0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ffeaa2c5-7308-43e9-a37d-df381cbdb3c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "626674ad-f034-4f8c-b429-1e9894ada6fd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e035ce99-62e1-4fbf-b312-8b172cadae9f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "558fb4bb-463c-4675-ac87-599367c6ea79"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "73ad2d63-08e1-4e2d-8f62-29dda8d4ddae",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f7ee1b07-fdb5-4e0e-bcdf-052c11293482"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d7d5eaf-302b-4779-b46f-dea895ae3eb1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e9b57999-d3bf-4202-aa51-d8ca9da3efdc"
            }
          }
        ]
      },
      {
        "id": "8459b954-73d0-4688-a2a5-52e15e5a8e28",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "17d9d97b-97a5-4bf1-9767-71c8352f3e01",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d8761516-a37c-4f58-979d-5912644b5acf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c76a4814-c438-40d0-a20a-7d40a4bddc6c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3359b822-cbc1-4188-87c6-a3d0939f4d8f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "baea8857-e4a1-4684-9d76-58f8cc528826"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ea164d-65f7-40b9-b380-719323614cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de6abcce-ca37-4b2d-8485-e6a9afd0593d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63fa86b8-1b0b-4991-a55e-c1e806637a8e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31f96319-fefd-48bb-99f0-6a5011d80357"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a923ee1-eba0-48a5-abd6-60e4108875ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "22067658-2a10-4d12-89ba-5242df889bb1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c4943a81-fda7-410f-857a-72351852e2f7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b9ca5f3a-aa57-409c-8e73-6be7c503cfda"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b07e8fa-ebaf-49b6-8c84-ee7cac3a9d30",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "70b9e280-d859-46f2-9cb6-083023bbbacf"
            }
          }
        ]
      },
      {
        "id": "7fb3628a-6f52-469e-8a8f-3e4b2eebf327",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8a2b2646-6764-4cae-b076-8eb9ed0419a3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8a574806-4138-42ee-993e-e31f60a9d1d9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "94943236-8a0e-43b0-9285-431d52ff6157",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1463464-7510-464c-bdbb-5b9e3a2404f8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84cefd17-0cbc-4108-b241-cbc855285ba8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "093b0363-05fc-48ce-ba56-bd3d037ed111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8df7e1a6-6e8d-484e-8613-eff8d3642a1d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ea75952-bf3d-46d2-80e3-099e68e5e66e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "488e6b3c-d75d-4d18-90ca-c4931b06ff28"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f8df03a-a8a4-4419-bdfd-922bdbe58d4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aade7dd5-6bbb-4b6d-bfb1-709134fc09fa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8c23d82c-1c6c-496f-8c9b-bbb959a37c6f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4a550273-9c9b-4ae8-b8fb-248a3912355c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "780dbd4c-8fdc-4b1b-852a-b48deb0759ca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e9d4873c-4340-473e-8ba5-df5a2153cdf6"
            }
          }
        ]
      },
      {
        "id": "bf27134a-db8e-4b8b-934a-ff36a2288c88",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "31ee64fe-caf6-4e53-a460-af482cf20029",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "89cbe605-49bf-45f0-a92c-b00a60d40aea",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "bcb632f7-922f-4c72-bbed-fad90dce1d1f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a2dc5806-4b94-4fcf-92a1-2cdc6688acb9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c1fab78-9558-4df0-a9c6-dfd8ffda0b68",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 128.20070422535207,
      "responseMin": 14,
      "responseMax": 10077,
      "responseSd": 689.2520429653425,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1692318695584,
      "completed": 1692318747211
    },
    "executions": [
      {
        "id": "94d37da8-a4c0-45a0-9649-a2557e620ad8",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ff0fad12-13f1-4705-a542-dac516de12ff",
          "httpRequestId": "d87b92fb-27a3-4d57-bcad-d02d32aa77ea"
        },
        "item": {
          "id": "94d37da8-a4c0-45a0-9649-a2557e620ad8",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5e055575-6935-4e1e-816a-4ef0fccd12a8",
          "status": "OK",
          "code": 200,
          "responseTime": 106,
          "responseSize": 0
        }
      },
      {
        "id": "d1464ea3-dffa-41f5-ab5e-e7e014846ba9",
        "cursor": {
          "ref": "ad8f040f-ffe1-4936-b003-df4643e57299",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ea6dfb1e-5960-4a63-93e2-f5e78e66529a"
        },
        "item": {
          "id": "d1464ea3-dffa-41f5-ab5e-e7e014846ba9",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c987828a-ffc1-46ed-8fd1-72851ff69a55",
          "status": "OK",
          "code": 200,
          "responseTime": 14,
          "responseSize": 0
        }
      },
      {
        "id": "5452eb23-6fc0-4bcb-b2aa-97d1b7c25c2e",
        "cursor": {
          "ref": "4dc314c3-c694-4d6e-86d9-89b01abfb11d",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "800db9c5-98fe-4e1c-bab7-788466b0ed0f"
        },
        "item": {
          "id": "5452eb23-6fc0-4bcb-b2aa-97d1b7c25c2e",
          "name": "did_json"
        },
        "response": {
          "id": "717aeaa6-8bfd-4150-8e27-e798a1925a2b",
          "status": "OK",
          "code": 200,
          "responseTime": 419,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f78d47f1-0c91-42ed-bf23-35ad9e176f46",
        "cursor": {
          "ref": "18a78682-325a-438b-83ef-4273dac08b51",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "92d3eb99-75e9-442c-84e7-584e4d9bfb51"
        },
        "item": {
          "id": "f78d47f1-0c91-42ed-bf23-35ad9e176f46",
          "name": "did:invalid"
        },
        "response": {
          "id": "3edd2fb3-f6cb-4be9-8317-a0a34c735818",
          "status": "Not Found",
          "code": 404,
          "responseTime": 882,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f78d47f1-0c91-42ed-bf23-35ad9e176f46",
        "cursor": {
          "ref": "18a78682-325a-438b-83ef-4273dac08b51",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "92d3eb99-75e9-442c-84e7-584e4d9bfb51"
        },
        "item": {
          "id": "f78d47f1-0c91-42ed-bf23-35ad9e176f46",
          "name": "did:invalid"
        },
        "response": {
          "id": "3edd2fb3-f6cb-4be9-8317-a0a34c735818",
          "status": "Not Found",
          "code": 404,
          "responseTime": 882,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f7ee13-ed31-493f-a5dc-1f42a0b8871e",
        "cursor": {
          "ref": "ebef3609-ea58-4f9d-b9c2-bc73093a1a5c",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "703264a1-c80a-4e63-9727-a6ad8304ac4d"
        },
        "item": {
          "id": "74f7ee13-ed31-493f-a5dc-1f42a0b8871e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b4e097fd-8f19-42c5-8f38-b0e167afe8b3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 55,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a47db2d8-cae8-4ca2-9ea0-3782935d1914",
        "cursor": {
          "ref": "4ae6fc7d-1560-4414-acb5-42b05a62edfc",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1bf9b658-b78e-48ee-9f42-02ce4a5386c3"
        },
        "item": {
          "id": "a47db2d8-cae8-4ca2-9ea0-3782935d1914",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5c5d2ca1-c820-49c8-bf77-fe5ce213a80b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 46,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b5a58cb-65bb-432e-a662-009a513edd9f",
        "cursor": {
          "ref": "db6c2506-e0de-4812-a6c8-fe1330b4fe5a",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "79fe03d9-d170-4245-a6ea-8277c70b5c31"
        },
        "item": {
          "id": "0b5a58cb-65bb-432e-a662-009a513edd9f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d1aa18e2-8d63-4a19-a4f2-289f55dd9fc6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa0a170-c3f3-4c2c-be1b-c3ff167a84fb",
        "cursor": {
          "ref": "4d314b44-3a06-4de6-b8d8-6a6d99a7ed81",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5de53627-ba09-4170-80e6-9c5d043a8faf"
        },
        "item": {
          "id": "bfa0a170-c3f3-4c2c-be1b-c3ff167a84fb",
          "name": "identifiers"
        },
        "response": {
          "id": "7c409da5-7599-4be1-b4ad-25ce417553b2",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3749d809-187e-45cd-9284-d763d67b8f80",
        "cursor": {
          "ref": "19f14c81-4e0d-4c84-b2cb-d36404ab8a08",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0104b5e9-9799-4d4d-a182-8fcfab414ecb"
        },
        "item": {
          "id": "3749d809-187e-45cd-9284-d763d67b8f80",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "bc6e4823-8af4-48cf-884d-0194323bc058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f7a6201-b692-4437-b119-ae3177352d98",
        "cursor": {
          "ref": "d78fbaf5-da7a-462f-9158-eae7bf61bd2d",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "fe14be11-51cc-4ef1-a255-83b2288cd117"
        },
        "item": {
          "id": "8f7a6201-b692-4437-b119-ae3177352d98",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e61c9332-bbd5-446b-a0d3-7d5c749967c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fbdb46d-42ed-4f02-8a5c-3c1d69ce97d8",
        "cursor": {
          "ref": "cd40cd06-0339-411b-9e74-60c5374dd2c5",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ce27f48a-49c0-4430-88fa-ffb759a9aa5c"
        },
        "item": {
          "id": "5fbdb46d-42ed-4f02-8a5c-3c1d69ce97d8",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e77ae944-ccdc-4f3d-a4f2-715338bf7690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c57d7f4-f155-4dfb-a7c2-83e7d8a31b71",
        "cursor": {
          "ref": "b2e915ec-5841-406e-8556-330ed99791b4",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "bd132061-d28b-4bc0-b990-75ec2187f406"
        },
        "item": {
          "id": "9c57d7f4-f155-4dfb-a7c2-83e7d8a31b71",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7a57d21d-22d9-4ae1-9212-cb773be950e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d94a0ec7-1606-4113-9f96-8302b8dac86a",
        "cursor": {
          "ref": "6b06d215-cfba-450b-a72a-c65b7e5c015c",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2c9b7582-cd82-4464-8c41-022fca44eb4d"
        },
        "item": {
          "id": "d94a0ec7-1606-4113-9f96-8302b8dac86a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ef5bf550-1a3b-4561-8454-865f44d55d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28d8345-e4e4-476c-87cc-88192e3e6551",
        "cursor": {
          "ref": "c88c53b4-cf82-4952-aafb-a4053bd1902b",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e55e08df-892c-44a2-8e6d-345e4be60909"
        },
        "item": {
          "id": "c28d8345-e4e4-476c-87cc-88192e3e6551",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f228cd59-5f51-4e3a-a29a-66a53a521c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e416484-ffb7-40ac-ba12-1f77e00733cf",
        "cursor": {
          "ref": "2b51e3be-b803-4eb6-9884-61b6b7509581",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "2ee1312c-c653-4bb0-80d1-8cbcb63c634a"
        },
        "item": {
          "id": "7e416484-ffb7-40ac-ba12-1f77e00733cf",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "23302913-4357-47c6-bbc7-14ef6842cf51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd0d3d2-91ef-4d39-902c-94af8c619b89",
        "cursor": {
          "ref": "a3bfe1d1-842a-4fe3-b078-6e4606f67959",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4836ec27-4935-4461-867a-ab55788b808e"
        },
        "item": {
          "id": "cdd0d3d2-91ef-4d39-902c-94af8c619b89",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8b4c06f7-82f1-49c1-b38c-1cf2969908d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50b41a8-9a9d-421d-8017-6cbfc0f55ad3",
        "cursor": {
          "ref": "1a0ed62c-4f4a-482a-a84d-6ac1fd76d852",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "428eb6ec-5556-483e-b02f-25d6fbcab032"
        },
        "item": {
          "id": "f50b41a8-9a9d-421d-8017-6cbfc0f55ad3",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4fb8a332-9aa0-438f-beb6-3ad6745530e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43a267d-b782-4539-b857-1a5fe45334a6",
        "cursor": {
          "ref": "decd5162-e7b8-4fdb-a486-c4a614f5e8a6",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "20301126-9598-46f5-b307-3c1745fe91b1"
        },
        "item": {
          "id": "c43a267d-b782-4539-b857-1a5fe45334a6",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "97c23e2c-0eff-4dce-886d-7028bc4c8a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772b9b4a-c045-44a2-ad04-ac000b5307a1",
        "cursor": {
          "ref": "21580ce9-d630-4eb7-80f7-8c42a5aa8ef6",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "096197cd-4690-42ae-be10-1b138fec5dcf"
        },
        "item": {
          "id": "772b9b4a-c045-44a2-ad04-ac000b5307a1",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "3fe047d9-a5e2-4eba-8c40-cc065b226620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31312b5a-014b-4692-82a9-b19aa42ce2d8",
        "cursor": {
          "ref": "4a8f3934-5108-43e7-96ad-6f57f3db8936",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2a96d684-491d-4591-9211-2f1d4e88ad31"
        },
        "item": {
          "id": "31312b5a-014b-4692-82a9-b19aa42ce2d8",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "903c4c8c-a6e0-4978-973f-cefba1185339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f27ac2b4-fa34-41bf-aba2-c93268c01528",
        "cursor": {
          "ref": "c3c5d997-0bd8-4766-9534-e5925fd791d6",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "29ca62f9-a5c0-4b6f-b417-0f3adee3e88d"
        },
        "item": {
          "id": "f27ac2b4-fa34-41bf-aba2-c93268c01528",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "968e2eca-c93a-4724-a65d-b28c7e817f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0f5883-df69-4092-ab78-1df88b59424a",
        "cursor": {
          "ref": "0a0eb57d-d942-4c7b-a5ad-f7ee645071f2",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "8fc8825f-8070-4360-a069-a36810f96ffa"
        },
        "item": {
          "id": "ad0f5883-df69-4092-ab78-1df88b59424a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "28690dc4-010a-4b37-bed3-0a282d1b3a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "715723e5-2c43-44e2-af49-73f40abb44a6",
        "cursor": {
          "ref": "c9077792-068a-434a-8fb8-3c8a29f4fb17",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "39c3f807-c5dd-4596-bd33-bea24d32ad46"
        },
        "item": {
          "id": "715723e5-2c43-44e2-af49-73f40abb44a6",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "fcf1c044-b6db-41e9-8412-b992111a3461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6723d4b4-077d-4f58-bc87-544bbb406702",
        "cursor": {
          "ref": "7e5f3b70-7e3d-4c72-bbf5-bc6d33fb9c9b",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a8cd34ed-36fb-4346-b45c-f5d9e1e655ca"
        },
        "item": {
          "id": "6723d4b4-077d-4f58-bc87-544bbb406702",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "de515e7b-bada-4277-8c73-3c8be3404914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8fc96c4-13a4-45bb-9688-336217571f20",
        "cursor": {
          "ref": "6879d221-bd8a-4714-b2ce-05bdf878f89a",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "07c2d324-d6f3-4aa9-8e8d-fa60e126f5fd"
        },
        "item": {
          "id": "d8fc96c4-13a4-45bb-9688-336217571f20",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a6917198-2eb5-4b09-b52f-d3433e0e914b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cbc4c1b-97e2-4609-b5ec-d2cce439a330",
        "cursor": {
          "ref": "7e572e27-d6b1-44f9-9f4b-1786c153596a",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "42909182-3277-4ffb-82fc-de545a609786"
        },
        "item": {
          "id": "9cbc4c1b-97e2-4609-b5ec-d2cce439a330",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "915b4e91-447d-4dfd-8c9a-918eeecb718f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f95fe77-62c6-4650-a397-ab2acb71db8c",
        "cursor": {
          "ref": "41beae7f-d255-4963-81e4-f532f7695e3d",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b06ba826-a989-4420-befa-4a09dfa53c0f"
        },
        "item": {
          "id": "1f95fe77-62c6-4650-a397-ab2acb71db8c",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "4119ce1d-6152-4a83-b93e-cf24a2f2c386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f214452f-d559-451c-a985-c4c092e0b361",
        "cursor": {
          "ref": "ed51a368-9880-47be-b4ff-da0d2083fc77",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "af9f681d-56b5-48af-bc8a-fae5f131f1ab"
        },
        "item": {
          "id": "f214452f-d559-451c-a985-c4c092e0b361",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "40db4927-eadd-49c1-8199-de13193ab00b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab855192-a66d-4031-9f82-5b9b7e3fc717",
        "cursor": {
          "ref": "91207549-b4f1-4e69-8abd-4549c68e5ad0",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3f3c5a21-a414-4a7e-b4e2-5716d13662ff"
        },
        "item": {
          "id": "ab855192-a66d-4031-9f82-5b9b7e3fc717",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "5b7556b1-6a20-4f3b-8a88-25198ab755ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc73711-1ad0-4659-9f8d-3158cee08be3",
        "cursor": {
          "ref": "3711d133-3fe8-4a29-936c-cc83f3a5a8e1",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2d9ec2ac-09f4-4abc-afa6-55ffbb972cb0"
        },
        "item": {
          "id": "0bc73711-1ad0-4659-9f8d-3158cee08be3",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "0e67346f-9194-4511-9a9f-65f1a26a7190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350f8ff1-fcec-40ca-8888-cad0fb7148f5",
        "cursor": {
          "ref": "09554335-0679-4291-807f-a1689770ac69",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e5c313de-8ca6-476b-88c9-3cc0593e3257"
        },
        "item": {
          "id": "350f8ff1-fcec-40ca-8888-cad0fb7148f5",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "580ca7e7-fd7d-40a2-9685-a3dfdefd2407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6acfc2c8-893c-40bf-9a6b-d8b3eb5f66da",
        "cursor": {
          "ref": "c29cb0b7-3dd5-464d-974d-e89a11a2e2eb",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "9e977d8d-c878-4388-9940-dbcdb9d58fd9"
        },
        "item": {
          "id": "6acfc2c8-893c-40bf-9a6b-d8b3eb5f66da",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f75b2d9a-6be6-4e4c-b60b-905668e54587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8c4697-f9c9-4608-800c-8ded18fa3819",
        "cursor": {
          "ref": "02b0f704-47e7-4fc2-b8d6-6cc4bcb23c94",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9c5ddc60-36a1-49d7-a331-da159850ab1c"
        },
        "item": {
          "id": "bc8c4697-f9c9-4608-800c-8ded18fa3819",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ce33560c-b6d2-4cb6-ab99-e961c9becbd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc06ebb-130d-4c60-b54d-0f38c320d3e8",
        "cursor": {
          "ref": "bd51f483-3bff-4b43-a92a-b1192ebc86dd",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "09474655-51eb-4eaa-a250-036c8aab4dad"
        },
        "item": {
          "id": "ecc06ebb-130d-4c60-b54d-0f38c320d3e8",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "9ed75f8c-5839-4598-a6d1-5e057ee22881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce32c850-7a1d-466b-9336-d88a4da328d1",
        "cursor": {
          "ref": "0724283b-b13c-4005-ae75-00de139cad4d",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "48a4c3c4-b4af-483d-b9ac-0fec640b501c"
        },
        "item": {
          "id": "ce32c850-7a1d-466b-9336-d88a4da328d1",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "93840010-40d1-4186-9ed6-3298d4ef1e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a875854-2f10-4c77-86d6-c176fafe0644",
        "cursor": {
          "ref": "90e0c107-51dd-4820-a86c-6267eb6c0b50",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c78d1369-3c73-4308-84e6-709f6151620c"
        },
        "item": {
          "id": "3a875854-2f10-4c77-86d6-c176fafe0644",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "4cfd9354-1ae7-4199-bb86-12b52de03476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef421f63-b6b2-46c8-9a46-68107c44adc7",
        "cursor": {
          "ref": "2d55b913-603c-42fa-b466-cc6dfffda69b",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c6e53abc-5d05-458f-89a7-2ea16c8f89c4"
        },
        "item": {
          "id": "ef421f63-b6b2-46c8-9a46-68107c44adc7",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "1da770c7-295c-4427-8f1f-e7161deffb6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d05b60-c600-4a0d-a78b-f6f3d1d69522",
        "cursor": {
          "ref": "7a25bd93-ebfa-47fe-9a6f-18bf2d61185f",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f6d78570-0305-4cb9-b506-53628c271e91"
        },
        "item": {
          "id": "c5d05b60-c600-4a0d-a78b-f6f3d1d69522",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d7f062b7-3f4b-4ea3-8fb8-fc272709aaee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b13e8b1-ab96-41e3-8cd6-b592e2121b6c",
        "cursor": {
          "ref": "c3150b4f-d291-489d-b665-1291ccbd87a3",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "2a6fbce8-87b6-4489-90a5-c046188041b2"
        },
        "item": {
          "id": "2b13e8b1-ab96-41e3-8cd6-b592e2121b6c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "841ba179-cd21-4496-92bf-a1337da01ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4232cbf5-088c-4f96-9cff-11cd2beb8cab",
        "cursor": {
          "ref": "72e2e466-b0db-4025-8b08-16d129799d50",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "cdd1f12c-98b1-411a-a663-89de56334080"
        },
        "item": {
          "id": "4232cbf5-088c-4f96-9cff-11cd2beb8cab",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f23a694e-a10d-4aca-a2b8-aa9bb6f072bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b58fa08b-7023-4a0f-aa19-5dc7c9638309",
        "cursor": {
          "ref": "a414be1a-4ed0-43f5-80ad-def424016ece",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c1b9e8d9-53db-479b-92cf-a3110f105485"
        },
        "item": {
          "id": "b58fa08b-7023-4a0f-aa19-5dc7c9638309",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4c9d339a-9e5e-4eff-9f28-9e798b6c56df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc422e5-3a42-46c9-8009-11af22240b63",
        "cursor": {
          "ref": "e2983ac8-4876-4191-ad45-0bafdbeb3925",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c52dedbc-3a2d-4823-84da-7e14ea7f70fe"
        },
        "item": {
          "id": "8cc422e5-3a42-46c9-8009-11af22240b63",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "cda6361f-12e1-4121-b0fe-cc948ecef2d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a24e0f2-e58e-4552-8f9d-464eba2cb8ee",
        "cursor": {
          "ref": "066b11b9-cf63-45c1-81c5-73186ecc663e",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ebbfe931-cc32-4b20-88b6-74e6ccb7a2a3"
        },
        "item": {
          "id": "8a24e0f2-e58e-4552-8f9d-464eba2cb8ee",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5784094b-7d58-4878-86de-fa7e9aef05b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44564d42-e0c0-41e1-a0ca-5918e5e3a8d7",
        "cursor": {
          "ref": "1741c9bb-fc33-422f-a497-697ef064bdc5",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "208312c9-0f2b-4c03-9f60-6259846221ba"
        },
        "item": {
          "id": "44564d42-e0c0-41e1-a0ca-5918e5e3a8d7",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b0a5161d-3cbe-4061-8f0d-0a83624e36bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6024f42-f019-42df-a821-047192beb643",
        "cursor": {
          "ref": "1bafeb57-1da5-47e8-ac90-9275e5c62be7",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "aea89094-ee4f-487d-8426-b30d4085eb91"
        },
        "item": {
          "id": "b6024f42-f019-42df-a821-047192beb643",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "8def31ca-b7b1-46b8-868f-9abde19ccaa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ba4bf3-98dd-436a-a099-12e63ce3041c",
        "cursor": {
          "ref": "21231755-92a6-4c05-a7e5-8a82732ffa25",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b60525fc-5821-475f-a29b-1c604cfecf21"
        },
        "item": {
          "id": "75ba4bf3-98dd-436a-a099-12e63ce3041c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "cc7f037f-e974-498c-8d5e-a2c688f206f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765ebc5a-b09c-44d2-9c6f-a7afe09c2051",
        "cursor": {
          "ref": "c2f63cb3-c1f0-4f15-81be-67f31f62ef4a",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1bbd4ded-bf15-4873-8c3a-6e78a10a4cab"
        },
        "item": {
          "id": "765ebc5a-b09c-44d2-9c6f-a7afe09c2051",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2c185918-74eb-42b3-a926-4826effd2155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c02b1f-09ce-476d-bb4b-ab10989b9f4f",
        "cursor": {
          "ref": "6f758b46-660c-4ba3-b959-b7298006b94f",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "67c7a4db-6e9d-492a-a6cc-6d2c2511ad26"
        },
        "item": {
          "id": "75c02b1f-09ce-476d-bb4b-ab10989b9f4f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "95042fb2-f952-4a25-8d2d-b841fbcd7b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ecf710-7049-472c-aa6e-fc13d095c678",
        "cursor": {
          "ref": "6171f006-c65d-461e-b788-0e7ea8292bf8",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e3a45461-2a86-4489-9957-37676ab29153"
        },
        "item": {
          "id": "55ecf710-7049-472c-aa6e-fc13d095c678",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "10a3c28f-ef70-4162-8fec-48294442617e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2166030-9bc4-47ea-a354-e8a0dcfc7d91",
        "cursor": {
          "ref": "52e40f93-68b3-4c94-aeaa-16f7dd611d19",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "71971494-93f5-4923-bfa8-f78431efdf76"
        },
        "item": {
          "id": "e2166030-9bc4-47ea-a354-e8a0dcfc7d91",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "154555f9-8760-4ac9-a563-ab35c1fa550b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8914dd92-0cdd-4f8c-9825-e5572a925676",
        "cursor": {
          "ref": "5054110c-cb00-4b2b-b399-98bc8136b6eb",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e2fe28f7-a6f3-4fd7-99e1-72e044de48a6"
        },
        "item": {
          "id": "8914dd92-0cdd-4f8c-9825-e5572a925676",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6070c03b-50e8-421f-a6a2-42d4d4810e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96798ec5-6f25-4e96-9832-7422d67fee91",
        "cursor": {
          "ref": "3aa714ca-b1c9-47f0-991a-72a50b6eb11b",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a4882c49-fe12-49c4-abac-1364a6cad388"
        },
        "item": {
          "id": "96798ec5-6f25-4e96-9832-7422d67fee91",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ef53dbe7-1dcc-40d1-86fd-a57e547eaeba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501c8b92-e8b6-4fb8-8a0b-335f49296c6d",
        "cursor": {
          "ref": "a9f8cc32-e161-4902-8814-77cc1c2b1e1b",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "189df37d-6558-40c7-bfeb-5e1a3a3593bf"
        },
        "item": {
          "id": "501c8b92-e8b6-4fb8-8a0b-335f49296c6d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d76f221f-0d03-462c-b03b-532fa2080f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "621e3477-8884-40a4-a0c0-d8a718a65566",
        "cursor": {
          "ref": "1759c943-3856-4905-a183-92173cac4c29",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b83c658e-6a6a-4fbc-9f78-43a1633600a5"
        },
        "item": {
          "id": "621e3477-8884-40a4-a0c0-d8a718a65566",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "eb71405a-2948-4895-bb9d-d28c0e6047c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b61aab-a159-4667-be8e-a01a3eb546c0",
        "cursor": {
          "ref": "a975acbe-edc6-4c09-91b5-17edbf9c182e",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "6f03e217-536f-402b-b904-10b91e5cb8f2"
        },
        "item": {
          "id": "e5b61aab-a159-4667-be8e-a01a3eb546c0",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "4cdcd0f6-7262-4f98-8bd0-9f63e8e3b5e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26177d02-15e9-4e8a-9f41-e0c6636f23d8",
        "cursor": {
          "ref": "2a73e8b5-ad69-4280-8e0e-273a8994af63",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d8c80ad9-43f0-4fd7-bb8d-bdb94a5bfdd1"
        },
        "item": {
          "id": "26177d02-15e9-4e8a-9f41-e0c6636f23d8",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "fcf1f05d-a62d-4a3d-ad83-5eef750d6a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f6c910-9fe3-4db8-b610-bbaa9b0788f5",
        "cursor": {
          "ref": "227deabe-73f6-4013-ae02-44852aa0dd2d",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "76a57592-8369-40e2-8ce8-cfac489053aa"
        },
        "item": {
          "id": "91f6c910-9fe3-4db8-b610-bbaa9b0788f5",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "fa9998b8-a8b3-4d83-a063-f0ad93abaee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495a016a-5938-4628-8d52-3fdb91ed91fb",
        "cursor": {
          "ref": "eba6446b-d49c-4f6d-a56c-02dec7013d0e",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d026f5a9-418b-4ca0-b53d-ce030eec7412"
        },
        "item": {
          "id": "495a016a-5938-4628-8d52-3fdb91ed91fb",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ec9bc379-02d4-409d-b4af-5a13b5d7010d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f1372c-8382-42fb-a184-b288b526c481",
        "cursor": {
          "ref": "af1d1236-9d1a-4e29-b7ae-346896abff84",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "1f6ec7cc-51d1-4591-8c86-fbeddaee5ef8"
        },
        "item": {
          "id": "d9f1372c-8382-42fb-a184-b288b526c481",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5d39fbfe-4269-4c7e-bc93-caa449a28b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa80139-6795-4da8-b7b4-73ddbc221180",
        "cursor": {
          "ref": "899e7995-5915-4b92-92e0-57696a15162a",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "64c0b510-fedb-4c34-8ba3-fae52c4d97ed"
        },
        "item": {
          "id": "7aa80139-6795-4da8-b7b4-73ddbc221180",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "928736b4-556b-469d-91fe-f7b42409329d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f6cd891-1385-4744-b622-906071998cb7",
        "cursor": {
          "ref": "7a3c1d66-cd08-4a49-8e9c-6df97b4ab2ed",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "075d5ce7-0b72-488d-9c9c-df9976d255fd"
        },
        "item": {
          "id": "8f6cd891-1385-4744-b622-906071998cb7",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a5a3f700-20cc-4f0b-8e73-8066f70d8985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069299fa-ffc7-41e7-a9d1-a13bf3e9bf45",
        "cursor": {
          "ref": "27b8d526-9028-4481-9d95-f5c4012e842a",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "25d9edd2-1442-4000-83ca-4d34a2a54417"
        },
        "item": {
          "id": "069299fa-ffc7-41e7-a9d1-a13bf3e9bf45",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7918815f-dbe0-4bec-b038-ef80086abfa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5fa9a1-adb3-4f32-bc2d-62df6f5f695f",
        "cursor": {
          "ref": "761661da-2586-4703-906b-6e03062ce458",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "9caad589-571e-4afb-b34a-927029f58304"
        },
        "item": {
          "id": "fd5fa9a1-adb3-4f32-bc2d-62df6f5f695f",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "81e9bd66-3433-4f0b-96d7-91d52b816c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a484ff7-d692-45c3-9199-16756ad76545",
        "cursor": {
          "ref": "91f8e4ce-1e88-45e5-821a-f4e59ad0d179",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c9077e59-d848-4782-b58b-f5e97a6c4fb8"
        },
        "item": {
          "id": "1a484ff7-d692-45c3-9199-16756ad76545",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "3da50060-415d-4872-be3f-ff6401b6ad24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32c179d1-cac5-475c-b0d1-c95ab90c4b3b",
        "cursor": {
          "ref": "cd664ed2-7497-4198-a41f-9aa212405619",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "927d80ce-9255-463c-a462-59587373758c"
        },
        "item": {
          "id": "32c179d1-cac5-475c-b0d1-c95ab90c4b3b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "939ec33d-d4ed-4216-af4a-1a9a86379099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88238de6-be21-42c7-9ced-426c84f99a06",
        "cursor": {
          "ref": "3bb5720d-bf55-417c-8656-a4d14f421792",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "18b9e574-50d5-4119-8b13-05e0f809bb06"
        },
        "item": {
          "id": "88238de6-be21-42c7-9ced-426c84f99a06",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "fc72eb5c-89c7-4848-97b6-4d5b8f267aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0df11ea-e430-494a-9fde-c59dc9712460",
        "cursor": {
          "ref": "c63d76f2-9212-4b68-8a04-de461841919a",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5ec200ff-b8d2-4202-ab70-607155658b1e"
        },
        "item": {
          "id": "d0df11ea-e430-494a-9fde-c59dc9712460",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "24aa66ea-be1f-46fc-826d-9960b83fa893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d3177f8-7b69-425f-8235-fd64767f5dd2",
        "cursor": {
          "ref": "5f10e9dc-daae-43a5-ae58-78f5aa7bc059",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "be40648d-29c2-4264-8625-e8f79e5aad7a"
        },
        "item": {
          "id": "9d3177f8-7b69-425f-8235-fd64767f5dd2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d8a5f370-df22-4887-96ac-ad7ed3f943d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa3e1d8b-4a84-4312-a226-f953fba05fac",
        "cursor": {
          "ref": "b188d882-50eb-47c1-92bd-dcb4ad0502d4",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4e7a5035-b36b-46f6-899b-0c045eedf564"
        },
        "item": {
          "id": "fa3e1d8b-4a84-4312-a226-f953fba05fac",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5774d7cb-91fb-4d34-a19c-205eb195580c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9bcc484-0af3-48a1-ade2-602451d56e3d",
        "cursor": {
          "ref": "41aaacb4-8b6e-4e85-90ca-0f821e8fc063",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "877aad06-7836-44d7-b105-5083ca9e48d3"
        },
        "item": {
          "id": "d9bcc484-0af3-48a1-ade2-602451d56e3d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "91617d54-d561-4657-8dca-25487ef3e94f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12d06fc-4d56-47a3-a009-df4ed5d06861",
        "cursor": {
          "ref": "adfbd2d8-166c-497b-a6e3-e88df5222d8e",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3ebf0a47-506a-40a2-915c-3a73be8881ab"
        },
        "item": {
          "id": "e12d06fc-4d56-47a3-a009-df4ed5d06861",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f0195a7d-3389-4efb-b124-9980f4a0ac36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17421db7-e7a5-4bbe-bc7a-74cb7a0e975d",
        "cursor": {
          "ref": "8ccdf04e-ded7-4518-8294-aa68890b8a0c",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "059f18f9-585f-4b80-950f-87c1319ead52"
        },
        "item": {
          "id": "17421db7-e7a5-4bbe-bc7a-74cb7a0e975d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "01ab292d-b818-4cd5-ab98-031906fdb4e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f593f09-bc65-47a4-87b2-d4ee940d7c4c",
        "cursor": {
          "ref": "4ea449f4-46b4-453d-bed1-7955c45f744f",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c133acf8-38dd-46b2-a126-59423c972b8f"
        },
        "item": {
          "id": "3f593f09-bc65-47a4-87b2-d4ee940d7c4c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1943cb3a-a870-4d92-99ad-a11b4e093a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99bdcbbc-6fb3-4090-81a7-05030fed38d3",
        "cursor": {
          "ref": "22cce8f1-9db9-48e5-aa77-d71921f24c81",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0294ae6b-1492-47a5-9c1a-3d52e0d53c83"
        },
        "item": {
          "id": "99bdcbbc-6fb3-4090-81a7-05030fed38d3",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ab56ac78-fa94-4ce2-8855-44942db0bf48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae717a08-f78d-4ff4-8d6a-736c7a8db843",
        "cursor": {
          "ref": "3b3ecfc3-0f33-488a-86fd-4ac354609da1",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2e7275fe-ef9b-47ee-9ae8-6be332e4604c"
        },
        "item": {
          "id": "ae717a08-f78d-4ff4-8d6a-736c7a8db843",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "da8f72a8-855f-4da2-b585-716814dee844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab3591c-9118-49c0-91c8-f56c6cf81bc2",
        "cursor": {
          "ref": "af149e86-b8a5-4524-a8a7-c12676aca2da",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7f349e24-fc95-4210-892e-8253b43de864"
        },
        "item": {
          "id": "3ab3591c-9118-49c0-91c8-f56c6cf81bc2",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "addc0989-1333-42ef-8db9-5566a01f6dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4a9d7d-8ac2-4ca5-a2c6-7a82e06b5786",
        "cursor": {
          "ref": "42f67865-abdf-45b8-af6c-ca11bcad0c07",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9daf61e5-167c-4af8-a743-58b91c8ff9b6"
        },
        "item": {
          "id": "af4a9d7d-8ac2-4ca5-a2c6-7a82e06b5786",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "643705ca-364c-4a95-a147-1af1740795a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7884973e-893a-45b2-bb62-564c909dbce9",
        "cursor": {
          "ref": "6e89abe3-5c79-4431-a842-98ff9e4c6a5e",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "9025bb76-b5c9-413f-baa1-415506d73018"
        },
        "item": {
          "id": "7884973e-893a-45b2-bb62-564c909dbce9",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "af9dd00a-160b-4c99-b101-5c7552950030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d4ad82-56bf-42f8-8cfb-d11fbd56a062",
        "cursor": {
          "ref": "30840144-00ea-47ba-883d-3fcfa8a45bde",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d0d97146-1446-42d9-a09e-ad46f578b229"
        },
        "item": {
          "id": "95d4ad82-56bf-42f8-8cfb-d11fbd56a062",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "6d2e7723-eaa7-439d-a7a6-512bc9d52e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650e9d99-8010-483e-9f9f-dba012c08f38",
        "cursor": {
          "ref": "28379256-2663-4c39-ab27-949f72720977",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f14bade6-3e49-43aa-90e9-6b0601a529f3"
        },
        "item": {
          "id": "650e9d99-8010-483e-9f9f-dba012c08f38",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a87f87ea-fa0e-4177-8c86-288aa9c88cfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754a451e-b90e-4c87-afef-7f6d063f52eb",
        "cursor": {
          "ref": "36e5f33b-a5ae-4f9b-8b98-c3c1d0309766",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c84c100a-19fe-4288-b192-edcc526700c3"
        },
        "item": {
          "id": "754a451e-b90e-4c87-afef-7f6d063f52eb",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "cb185ce4-5f76-4def-84a0-adca9eb974fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d18a2e-489d-4ad8-ac15-9e12d1ddfd0d",
        "cursor": {
          "ref": "2b6c0505-fe1a-4111-b4f5-764b3486a8ed",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "521a286f-f147-46d9-a9fd-a51496923058"
        },
        "item": {
          "id": "75d18a2e-489d-4ad8-ac15-9e12d1ddfd0d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a0a659f7-aeec-4fe8-854f-8bea8e18e9d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a280fc-410a-44d7-b414-184e3bd131a5",
        "cursor": {
          "ref": "e9f55f3a-d7c0-4886-888c-5f2874779d31",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a2365d44-5060-484f-8ab6-733619b07e64"
        },
        "item": {
          "id": "12a280fc-410a-44d7-b414-184e3bd131a5",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e09c4d69-b0ed-4c03-8d01-584a6f4aba75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521f562a-d456-418d-9a7a-1d5feef07483",
        "cursor": {
          "ref": "f1f5d7f5-9648-4d50-868d-e0aa9bd829ea",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "bbf9e339-4367-49a3-a34e-906171df1c9a"
        },
        "item": {
          "id": "521f562a-d456-418d-9a7a-1d5feef07483",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "42a2dd29-77f1-41ba-9a96-af7ebfc5d29e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77296b96-c40f-4dd7-bdae-d90f4fd2deac",
        "cursor": {
          "ref": "af251c6f-d095-400f-986c-183e10febd5b",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4d905bce-bf11-4d40-9ca1-e9cf8544e78a"
        },
        "item": {
          "id": "77296b96-c40f-4dd7-bdae-d90f4fd2deac",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "74f482d5-a6bf-40e7-ae54-79f145eb7654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1900b592-2abf-47ff-8798-1c3b5b4f22a9",
        "cursor": {
          "ref": "e67e3ea3-ba00-48f5-8d84-eaafc1b8c505",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e4fb88a4-efc1-45da-a87b-082a7288848a"
        },
        "item": {
          "id": "1900b592-2abf-47ff-8798-1c3b5b4f22a9",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e5c5af27-295c-4f11-856c-5030e60cc834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b06e10-58fd-4dbc-b4e8-e9360c11b7a1",
        "cursor": {
          "ref": "7a9f57f0-661b-452f-9f40-31ccb9c102ba",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4cf9319c-40f8-4604-99ce-8582957befa1"
        },
        "item": {
          "id": "86b06e10-58fd-4dbc-b4e8-e9360c11b7a1",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "61e71e8a-8368-4292-b1d6-17fa265c33b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022c69d7-65f5-45b7-8c46-d458e25e3a6d",
        "cursor": {
          "ref": "1ca13fb6-d01c-4e46-8bed-5ef1900e2f9f",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d2665ef1-6793-40f8-98b0-e91d07a6d30e"
        },
        "item": {
          "id": "022c69d7-65f5-45b7-8c46-d458e25e3a6d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b97cf862-f277-4c29-8ad8-e7923800be12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04426755-fe67-4e3a-aa13-93555501385d",
        "cursor": {
          "ref": "17699586-3f27-40cf-8b25-9e914b4dcdaf",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b0c030cb-6d63-4ff0-bc30-0a404a9ec239"
        },
        "item": {
          "id": "04426755-fe67-4e3a-aa13-93555501385d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f6567f86-6b7b-4157-8509-e83e668c9967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b01952f-19c6-4163-83fa-61929aad998b",
        "cursor": {
          "ref": "0eb54218-8d1a-4f91-b454-85f91b58ceb0",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "dfeae4e0-ca77-459d-9ab7-10e94bc13de3"
        },
        "item": {
          "id": "6b01952f-19c6-4163-83fa-61929aad998b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b13c7419-5e3b-405e-ba90-93d24245de48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c6a495a-bc76-4ebf-b5db-df5b9bf8b819",
        "cursor": {
          "ref": "b788d9bb-02c0-4ee1-b74b-7b6b654e9731",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "22a0631b-07dd-4f22-9e12-881d84ce0c32"
        },
        "item": {
          "id": "4c6a495a-bc76-4ebf-b5db-df5b9bf8b819",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b375dee1-f1c9-453c-8f83-9ae075237cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4447daf-7047-4871-a4e3-16e1f2b5564b",
        "cursor": {
          "ref": "2141a456-9c76-4688-991f-b94a5235b7d7",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "23d9c450-d293-48d8-8078-dc3e5f68f464"
        },
        "item": {
          "id": "b4447daf-7047-4871-a4e3-16e1f2b5564b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d1fe562c-a95d-4bc6-9cf1-71a99c7a53e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0311bda8-1416-430c-b0dc-72cb0100f60a",
        "cursor": {
          "ref": "35e12411-6ff8-4766-bc72-6ce9675a5ac9",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5bc967fd-1390-4614-9753-2e3455226a93"
        },
        "item": {
          "id": "0311bda8-1416-430c-b0dc-72cb0100f60a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2a177cc8-28c6-44d5-ada1-6cc74b3e63e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385a7071-f75e-4d5f-ada5-46032d1e9461",
        "cursor": {
          "ref": "6f624575-46a1-4f5e-ac3a-cd8ceff81ddc",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a96618bc-a74e-41da-9a84-7d0f9d656d6c"
        },
        "item": {
          "id": "385a7071-f75e-4d5f-ada5-46032d1e9461",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c0ae23b2-1c5f-4f57-8a0b-40018dad83e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b5b9164-b213-4726-96c4-e4a200e23811",
        "cursor": {
          "ref": "18a26668-09b4-4cf2-9954-5b8d05121f94",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f3e871e1-3b9e-4521-aa68-2abc9dc375b8"
        },
        "item": {
          "id": "9b5b9164-b213-4726-96c4-e4a200e23811",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "778c2858-4818-48ff-abb1-cbf717223f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5801d09c-4396-4f7a-9ba8-b9f1b4e2a9d5",
        "cursor": {
          "ref": "28b92658-03f4-4933-82a3-16d07b11edab",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "fac7050a-fd9a-4a76-a37a-a49a4d1dd295"
        },
        "item": {
          "id": "5801d09c-4396-4f7a-9ba8-b9f1b4e2a9d5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "30253f45-756f-4f21-87d1-aeca8edee8b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c72dbd6-5dad-4d98-a090-3a737fad6247",
        "cursor": {
          "ref": "82bc7ae8-ab32-407c-a0d4-e50cc30781ec",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "877bda49-3682-48d2-a7a4-013efb67b537"
        },
        "item": {
          "id": "5c72dbd6-5dad-4d98-a090-3a737fad6247",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "5c65a8a1-8215-41e7-b992-f92ee7d5f894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b61bfc-1e01-467f-9534-54034bc55a0a",
        "cursor": {
          "ref": "4dd037dd-a2a3-497b-8b1b-501ac6417ff4",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "db76878f-932d-44b1-bea2-fe145b1b26fa"
        },
        "item": {
          "id": "47b61bfc-1e01-467f-9534-54034bc55a0a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "0ade6010-1c5d-42af-82de-e01d7657e300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed8d8cea-b64f-4904-838e-743b9a82ddd5",
        "cursor": {
          "ref": "da96a436-f0fa-4a6c-b832-b7d4f03097f4",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "37bd099e-c4cc-46ab-a6d1-098a64284e45"
        },
        "item": {
          "id": "ed8d8cea-b64f-4904-838e-743b9a82ddd5",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "739b9d34-5ccb-46d0-8f0d-219d3b59428f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8781f9d-09a6-4ca7-90d8-90f021d6943c",
        "cursor": {
          "ref": "07d9b66b-0fb8-41a0-976d-3933d1f6bbc6",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "414c77eb-ef02-4415-85d6-eb7b5185d54e"
        },
        "item": {
          "id": "e8781f9d-09a6-4ca7-90d8-90f021d6943c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c0ebc0fa-6c74-4b44-ae9f-decd7dd6b5c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96871f95-b874-47eb-92b7-3e1de21632f5",
        "cursor": {
          "ref": "ff0fa593-d0ad-4c8c-9783-72d4499dff5d",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "438e5617-58a9-4c39-9c9f-65f6e21eb6b7"
        },
        "item": {
          "id": "96871f95-b874-47eb-92b7-3e1de21632f5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6f68b69b-6751-4950-b349-416216ed285a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c50c02-a8d4-4e38-abcf-ccc1fdde02de",
        "cursor": {
          "ref": "08bc155e-4315-4b15-b275-df642a44d230",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a1a76033-68a5-49b0-b31c-2a3c1e7f4ac4"
        },
        "item": {
          "id": "b5c50c02-a8d4-4e38-abcf-ccc1fdde02de",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b4468b1b-6d25-4d2b-a30e-ee48f5cefd11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "0486f6fd-53fd-4f32-b24d-257fbd23c5cf",
        "cursor": {
          "ref": "649cf505-bdb3-441b-b720-7298e1a684fd",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "819f27e1-984f-49e9-a02e-a81b306217f5"
        },
        "item": {
          "id": "0486f6fd-53fd-4f32-b24d-257fbd23c5cf",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "7fa187d2-3f00-48a8-be51-13f6b918de48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "61318b7c-dfc7-48ea-9a63-2d87f26926ae",
        "cursor": {
          "ref": "629b5110-8237-429d-87f1-10709f5c4c3e",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a7e55c3f-9203-4dce-be04-16cde3f35423"
        },
        "item": {
          "id": "61318b7c-dfc7-48ea-9a63-2d87f26926ae",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "feacaf0b-62ee-4b4f-8ff7-fea4224b9c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "2c973ad4-bde3-471a-b549-70a2f76c9c52",
        "cursor": {
          "ref": "bf4717ea-a6dc-4366-b30e-ac34e13118cd",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "3696f4fd-4674-4519-b7d3-bb811a69bd40"
        },
        "item": {
          "id": "2c973ad4-bde3-471a-b549-70a2f76c9c52",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a438d870-f81c-4a2b-a5dc-3073ccdba391",
          "status": "Created",
          "code": 201,
          "responseTime": 5075,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0fab422-0a4f-4ccf-bda4-c05bda32bbe5",
        "cursor": {
          "ref": "3616453d-b7fa-409a-9187-6f45c4d5964c",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "329df8dc-7ba9-4a7f-bc50-3cf2b4a73464"
        },
        "item": {
          "id": "b0fab422-0a4f-4ccf-bda4-c05bda32bbe5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "240c39b8-b371-41a1-b34c-1cc08e089029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "147f5328-4998-4dcf-8780-1237fd92f369",
        "cursor": {
          "ref": "f5ce780b-45d3-4454-920e-32383efe5ba8",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "17080ce2-8f59-4f9f-8d24-88635e1b8c35"
        },
        "item": {
          "id": "147f5328-4998-4dcf-8780-1237fd92f369",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6ff94e75-2046-498e-b098-3bb6203e9510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "3b79ca6f-b2cc-477b-9016-e763cf3fe703",
        "cursor": {
          "ref": "9a9ca7c9-8533-49bf-9392-2eae950487ad",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8d87b116-8cb6-40d3-a862-dc3fab77de3f"
        },
        "item": {
          "id": "3b79ca6f-b2cc-477b-9016-e763cf3fe703",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3f3f34c1-fab0-4e41-a0bc-e4dff174a464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6b55b8-70a0-4a9a-9b00-765fa3dc844c",
        "cursor": {
          "ref": "d8a6d0f7-9ac8-4199-84dd-e6a5fe3712bd",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "88daa709-6e99-4c44-be4c-2e52bf0defac"
        },
        "item": {
          "id": "1f6b55b8-70a0-4a9a-9b00-765fa3dc844c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "226633b3-c832-47c0-ad36-004c60fb0a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d29b1afb-fd11-4f6f-aa2f-66d6a64f3418",
        "cursor": {
          "ref": "df4c3035-4de3-4fba-b946-f2c84e79e6f6",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "bdceced7-0f31-4310-8551-08d35a192c38"
        },
        "item": {
          "id": "d29b1afb-fd11-4f6f-aa2f-66d6a64f3418",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "668efa4b-b7c4-4d62-b7d6-350ffd5819e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebcc6aed-fd9b-4047-bd8f-57fc05f27037",
        "cursor": {
          "ref": "7527b7fb-26f5-44ca-b8a2-2bb82248e353",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e35c2db2-41f3-4b1a-9826-d4c536deda90"
        },
        "item": {
          "id": "ebcc6aed-fd9b-4047-bd8f-57fc05f27037",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e2764b71-6a4a-4c2a-b7b3-5def5ae37ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a1c6fd-7494-40cb-bc79-1a7b4d6a3e87",
        "cursor": {
          "ref": "8f18e319-d9df-43b6-85e8-93d13b747ba2",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "345288cd-4b3c-4a68-8c76-f6898971f303"
        },
        "item": {
          "id": "14a1c6fd-7494-40cb-bc79-1a7b4d6a3e87",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fa4d1a24-d231-4188-bd6a-006424adbdb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6daa527-e3b0-45ab-8648-d6506b0f3728",
        "cursor": {
          "ref": "2a90ee96-5f82-45d1-9853-970750c4fca9",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "970acfb1-7518-4cb8-a7b7-07b2864ffb4e"
        },
        "item": {
          "id": "d6daa527-e3b0-45ab-8648-d6506b0f3728",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6ded55a2-9976-4aa9-8ebf-15724030946a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a237056e-5d96-47ba-bd1a-e59e84a250e1",
        "cursor": {
          "ref": "958e0a5c-1c81-4609-adaa-ce714c03327b",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "9802c371-078b-479a-ad0d-25ac22fea681"
        },
        "item": {
          "id": "a237056e-5d96-47ba-bd1a-e59e84a250e1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9576ecfb-2231-4b6d-8476-f30e8373668a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e35a71-13d7-47a3-86f7-5125628995aa",
        "cursor": {
          "ref": "6a38b6b2-844c-4f0a-8c99-67368f8e9f70",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b5586b66-da09-4daf-9db3-4733cab7226f"
        },
        "item": {
          "id": "e8e35a71-13d7-47a3-86f7-5125628995aa",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2c2431aa-22c0-443c-8dff-85ecfc770611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f03814-d3da-428e-a023-04049d0b3118",
        "cursor": {
          "ref": "207696c3-dccc-42fb-afa5-ddee5ef17888",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ee332481-6bd1-498f-9f2a-c8c04416fcaa"
        },
        "item": {
          "id": "54f03814-d3da-428e-a023-04049d0b3118",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f1e9887d-bbc1-442f-987b-ef64466d65f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb96d2e-8ada-4efe-9a46-16313ccb6d50",
        "cursor": {
          "ref": "79a957e9-1092-48ec-bb16-28d00c554dd6",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ecd69925-909f-41a2-89cb-19185964181f"
        },
        "item": {
          "id": "6fb96d2e-8ada-4efe-9a46-16313ccb6d50",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "568f9aa4-6231-4af1-a306-3820501a8d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88cac9ee-17ef-440b-acdf-32c728d8c63d",
        "cursor": {
          "ref": "20e68125-27d6-4595-b416-3a78a96565db",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "abf7c727-567b-4664-b1cc-719823106c31"
        },
        "item": {
          "id": "88cac9ee-17ef-440b-acdf-32c728d8c63d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f97fdc57-f13d-4d1f-b83b-daa0e056ad24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0111f132-2336-4bf7-9f82-06aaffa00e59",
        "cursor": {
          "ref": "3bee9fd4-81e6-4a1c-a7cc-244b1c7bb7fe",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "50ba0fac-6ec6-4c72-bde9-327d35197385"
        },
        "item": {
          "id": "0111f132-2336-4bf7-9f82-06aaffa00e59",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2c484990-02d4-4fb0-bb7c-31b84b2b998d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0849e16f-ea61-470a-be5c-53a35253fcca",
        "cursor": {
          "ref": "a3c003c2-625e-40ff-b765-937899a0ad91",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f67e92bc-e10a-479a-b823-ad7f73832902"
        },
        "item": {
          "id": "0849e16f-ea61-470a-be5c-53a35253fcca",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f2dcecd4-7900-411d-88cc-8a0f1c617bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dacd292-718e-44e5-97f7-b95ce05c464e",
        "cursor": {
          "ref": "2085fcda-1ab8-4e66-b705-bbf5eb001d1e",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c35ece0f-4215-42a6-9b17-569257727592"
        },
        "item": {
          "id": "4dacd292-718e-44e5-97f7-b95ce05c464e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "02406ad8-56ff-4ad7-9df9-8e4324386cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff8d9bca-ffaf-42ec-b9ec-b647d83fc850",
        "cursor": {
          "ref": "44aeb3c3-2db2-41bf-bca3-024ae3f5d38e",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "cc757e86-626a-475a-9e89-1a0c05f74006"
        },
        "item": {
          "id": "ff8d9bca-ffaf-42ec-b9ec-b647d83fc850",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "60c4cf13-27b4-44b6-abe8-60bd42d0c590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a11251d-0c2f-44ee-b695-ad1bd720f79e",
        "cursor": {
          "ref": "6a13d4e7-e6ab-4feb-8bdc-3f58f9b4c4e8",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b9b8d8a1-87f0-4b1a-a960-47bb848baddc"
        },
        "item": {
          "id": "6a11251d-0c2f-44ee-b695-ad1bd720f79e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f78d2998-ce9f-4988-b683-da300629573b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4976a4a3-3ab2-45bb-a096-d9cc61b7a04a",
        "cursor": {
          "ref": "3dc8bed7-9258-4bc5-9c42-a8bb90560fed",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "9c4963e3-a8db-4eeb-8fb2-c387c92b5210"
        },
        "item": {
          "id": "4976a4a3-3ab2-45bb-a096-d9cc61b7a04a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4204f6f7-5f8a-4571-b563-4c210f65de7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "188329a6-82a5-4104-8643-817aa387ee29",
        "cursor": {
          "ref": "4177c25b-ae49-4811-b30a-1663afce4f59",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b1ed2fec-2b31-451e-b56a-ca60158492b2"
        },
        "item": {
          "id": "188329a6-82a5-4104-8643-817aa387ee29",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "14d172dd-1c3f-4cb9-9443-1a1a05c5f9fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1278b48b-64d9-430c-9cba-005cf7da3665",
        "cursor": {
          "ref": "8533f8d0-4d78-4d14-a8d0-c7ccc512fedb",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "676ceae8-47f1-4afb-96b2-5cad08eb2e68"
        },
        "item": {
          "id": "1278b48b-64d9-430c-9cba-005cf7da3665",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c93f4279-f2fd-4f6f-ad1b-7cd424651e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622eb87e-b3a9-46d6-862f-698f258d0dae",
        "cursor": {
          "ref": "f4fb7440-8c9a-4af3-9109-172e3ea0b200",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d4bdc53b-8b6b-417d-89fd-7abb90451084"
        },
        "item": {
          "id": "622eb87e-b3a9-46d6-862f-698f258d0dae",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d82a4c02-b678-4db1-befc-163d307a775f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5323b73-42b0-462f-8800-551be3d00c54",
        "cursor": {
          "ref": "5132a695-47be-4fba-9c5c-7b9487e69f7d",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c2019975-1613-473f-b0a1-fd9c51d9996f"
        },
        "item": {
          "id": "b5323b73-42b0-462f-8800-551be3d00c54",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "db2ab554-7339-4dd5-8023-c2a69d332a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a37df70d-e63c-4b21-934a-a300c623b8bd",
        "cursor": {
          "ref": "d2763739-48f1-4c5c-8fa8-d011d12c9947",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "24a8837b-e1c6-4852-b688-f68466996871"
        },
        "item": {
          "id": "a37df70d-e63c-4b21-934a-a300c623b8bd",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2c090c23-da03-4f0d-8b4a-d4689735fae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f018f7-83b0-4c67-a5a4-59f559ab6278",
        "cursor": {
          "ref": "4e808e1d-70e8-4335-9f0a-5779e46a0f03",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2f47b599-b440-40ac-9d76-80019fc4f9d3"
        },
        "item": {
          "id": "52f018f7-83b0-4c67-a5a4-59f559ab6278",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a2cd1400-6242-460c-9e8a-a61204d3f69a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823a00a0-cc27-46c6-a28d-5b1e8736b972",
        "cursor": {
          "ref": "6630a201-e674-43ca-a816-5221bcf58b07",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a986bf99-4309-4862-aed7-34d079c72020"
        },
        "item": {
          "id": "823a00a0-cc27-46c6-a28d-5b1e8736b972",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9ed2e48f-d646-4b18-a621-9a757e9b8b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93bb4042-ffa6-484b-9d0b-94ea3cadf3d3",
        "cursor": {
          "ref": "71f1ec56-109e-45b7-9f79-e28c0bc8352b",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "aaa700ab-6b88-4d46-b5eb-dbf70d331eec"
        },
        "item": {
          "id": "93bb4042-ffa6-484b-9d0b-94ea3cadf3d3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "27fdae87-aad4-4aeb-99b0-b1a5dc06d154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8113d3b0-279e-42f8-bba9-22fd0f7885a6",
        "cursor": {
          "ref": "cf69a6c4-e238-4581-b685-cb723423f487",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "aa10d859-3496-47d4-bc92-b97c1e70dd74"
        },
        "item": {
          "id": "8113d3b0-279e-42f8-bba9-22fd0f7885a6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fa283e0b-a363-4636-80fe-f4a2d9507232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccad75fa-bd68-422f-94cd-48987604b7fa",
        "cursor": {
          "ref": "7b37ccee-0d0d-4efe-85cd-89010a00a733",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "38f21138-a2af-4367-8e41-1ad157efbd04"
        },
        "item": {
          "id": "ccad75fa-bd68-422f-94cd-48987604b7fa",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a3662103-382a-4392-ab21-b371f247b7d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e104806-d7f1-4a84-9e1c-e0c654551603",
        "cursor": {
          "ref": "1824564f-757a-46c4-930d-fc2538879fc5",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "82d1a9a3-feb5-4560-99b1-53eebb561b71"
        },
        "item": {
          "id": "0e104806-d7f1-4a84-9e1c-e0c654551603",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1dc874fb-a63e-419d-ac7d-b12a253668a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c8acd71-a792-4b7a-9c64-26961bdd220e",
        "cursor": {
          "ref": "0fecabcc-ab34-4a26-ae0d-b4e14c66eace",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5b14cec4-73e4-4174-88c8-0915a7381543"
        },
        "item": {
          "id": "7c8acd71-a792-4b7a-9c64-26961bdd220e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e17b517e-ec19-4195-b02c-1ffa2e9239cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29510886-6146-4ccc-b620-62c364fc9aa1",
        "cursor": {
          "ref": "37a48358-8201-46e6-87d9-34310f2375e5",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c70850fe-165b-4acd-9c52-612fb28e74ae"
        },
        "item": {
          "id": "29510886-6146-4ccc-b620-62c364fc9aa1",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "19697113-c42c-453d-93b8-93ddd1a3a5bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7a6def-8d2a-4602-a21f-f096e272a0a6",
        "cursor": {
          "ref": "102cd596-5849-48a5-82cd-91f1eabddfae",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a327a5cc-7aef-4fe1-baaa-f28a64df7c43"
        },
        "item": {
          "id": "bb7a6def-8d2a-4602-a21f-f096e272a0a6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "75c258e1-bcea-4de9-8df6-ef738dfefda5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f3ac77-564a-43f6-b0d6-55a6413f5f48",
        "cursor": {
          "ref": "1ba693e2-548e-48f1-83f6-2c1450b80b3c",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "43e4e3bc-9e5f-45e1-a763-2c095c11b971"
        },
        "item": {
          "id": "d3f3ac77-564a-43f6-b0d6-55a6413f5f48",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "f9119983-7e0a-4d74-9edc-44ea66281c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9397c4b0-3328-4cea-9faa-cb5defc93465",
        "cursor": {
          "ref": "4668d2af-dfbd-4f16-8cd3-290b965368c6",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3e73f668-6edc-4313-9e65-038733350d6b"
        },
        "item": {
          "id": "9397c4b0-3328-4cea-9faa-cb5defc93465",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e7082d53-4d01-48a4-9282-c59aa84cb1a1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "288472c4-e2c0-464e-882d-ff74ee4bac7f",
        "cursor": {
          "ref": "98ef43aa-c3f5-4b13-af91-82076b67562f",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a3c457ad-3272-4cbc-8a86-7163f3ed8cc6"
        },
        "item": {
          "id": "288472c4-e2c0-464e-882d-ff74ee4bac7f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "062ec9f2-ed4c-4c53-b6bc-b8d7c26177e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dded7f8-a5f5-4f58-9a44-270a433ad92b",
        "cursor": {
          "ref": "adb7313e-e9a2-460c-8c9c-6257a8952470",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2b8d56f4-d2cb-4f94-82f1-d03b0353ef9b"
        },
        "item": {
          "id": "1dded7f8-a5f5-4f58-9a44-270a433ad92b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "06556646-cf18-4f85-b030-3fa0a1bf34da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c71568-2f86-4278-b1ce-1d2af50ebc76",
        "cursor": {
          "ref": "ef164e31-9fe8-4942-b8fc-03b40bab3385",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "632626da-ae25-4bec-8cb8-f036b2e73983"
        },
        "item": {
          "id": "35c71568-2f86-4278-b1ce-1d2af50ebc76",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "92a1c02d-3256-4cdc-971b-42b1b6cdaddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a795517b-886b-4d2e-b4c8-fcbc69e71afe",
        "cursor": {
          "ref": "99e4b730-8283-48ed-87e5-66d9e74a9e4e",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b48d7796-e149-4fd3-8450-e951d00bfe9a"
        },
        "item": {
          "id": "a795517b-886b-4d2e-b4c8-fcbc69e71afe",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "34a55810-19b3-4b96-8310-2d33910e236e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b158f50-bbcb-4676-993f-5f869d68576d",
        "cursor": {
          "ref": "8ebd2fe6-1a01-41da-a042-00cacd2e44ad",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9986a716-08b3-4b6f-b11a-eeae35eae0bf"
        },
        "item": {
          "id": "0b158f50-bbcb-4676-993f-5f869d68576d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2418779c-f845-4178-9725-c68f8a02682f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3de3e89-3fd8-45dc-9a6b-872f4d4281e7",
        "cursor": {
          "ref": "ab285e09-f0ff-4f3a-a997-48593c2d5b5e",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "54827cab-964c-4acd-8c91-684adfb10c0c"
        },
        "item": {
          "id": "d3de3e89-3fd8-45dc-9a6b-872f4d4281e7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "893f1d7b-c9ff-4bd3-9d1e-fd9bca7514b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4043b43d-f9b3-4aa0-ad58-6712c049c484",
        "cursor": {
          "ref": "412ba893-4348-46a4-b5d7-95da1bb76bdb",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6c2d6f29-5cd8-4355-a5a1-fc637ba518d8"
        },
        "item": {
          "id": "4043b43d-f9b3-4aa0-ad58-6712c049c484",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d62d25e2-fd3d-492a-8a88-78ef43da8d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce93673f-2f79-4d72-8e96-d944af3ff969",
        "cursor": {
          "ref": "db146659-d60f-4d4e-bb22-fc4a7c7d2b72",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "95226726-bda1-4ff1-bfc0-cafba6d855ef"
        },
        "item": {
          "id": "ce93673f-2f79-4d72-8e96-d944af3ff969",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e4132242-7669-427f-bd02-a25eac6f2257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35712d88-8ab6-40a5-b93d-d1e4a7af79ab",
        "cursor": {
          "ref": "e4651e85-352c-4a77-8c21-6e24949b3cc6",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "86a36de3-081c-4d24-bc72-d4e5fa8847a9"
        },
        "item": {
          "id": "35712d88-8ab6-40a5-b93d-d1e4a7af79ab",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1529ad06-4c60-472f-8465-f01d1e21c13f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16549937-9682-421e-bd17-cf85f35d0009",
        "cursor": {
          "ref": "feccbb1a-55ea-4f3c-8c51-bf5e6adeebfa",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d08bc5aa-8296-458d-a3c9-7406c28cda48"
        },
        "item": {
          "id": "16549937-9682-421e-bd17-cf85f35d0009",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "75adfb04-2323-48a6-8dbf-473ccc86b7fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0493614c-51cb-4adb-adf1-c2ac692c2a5c",
        "cursor": {
          "ref": "33ce293d-ee93-43b3-8a4b-be8ed9b6321d",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "58f77ac2-b576-4ff7-b755-2a9011ad0de4"
        },
        "item": {
          "id": "0493614c-51cb-4adb-adf1-c2ac692c2a5c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7245d8e8-0f62-4bca-8970-96040fc87bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a8d468-66e8-482c-a66c-7a5ce6915edd",
        "cursor": {
          "ref": "86873d62-9693-40c5-9c23-683b830b5ac4",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ce9e2455-8445-43b3-99eb-2133557e733c"
        },
        "item": {
          "id": "b5a8d468-66e8-482c-a66c-7a5ce6915edd",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e77c9536-0aab-47de-b926-7e79aa45ea98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93de529-fce8-4032-bc7f-3adbbba432b1",
        "cursor": {
          "ref": "71b02402-0d7c-4d21-9630-fc68c65549d5",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7f3d1888-e9e0-4536-ae8c-20fa8d81150a"
        },
        "item": {
          "id": "b93de529-fce8-4032-bc7f-3adbbba432b1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a69ae1fa-c3b5-4359-b606-c44ed2889fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62fd4737-d500-4a3d-b470-76543e70277e",
        "cursor": {
          "ref": "42f280e9-6755-423c-8ffc-10df40791446",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "eb9ab55a-5ce9-4584-8d2a-5365ee814a12"
        },
        "item": {
          "id": "62fd4737-d500-4a3d-b470-76543e70277e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "52b2913f-e968-4817-a710-ffd0c549095a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed88af7-9b66-475c-b712-f04a6825130b",
        "cursor": {
          "ref": "fa5e72b3-f445-42b5-bdb3-0153d5147912",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5084c23b-d339-4b6c-9fd7-a91bdc953598"
        },
        "item": {
          "id": "aed88af7-9b66-475c-b712-f04a6825130b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ee885e52-8bee-47ac-b2a8-264e87a71ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3784785-4012-4480-b0ce-404ee3c8e3c5",
        "cursor": {
          "ref": "ef335f14-dc0f-4179-975f-173ada003e0c",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4a970c6c-b904-4f96-8d33-0643c27faff3"
        },
        "item": {
          "id": "b3784785-4012-4480-b0ce-404ee3c8e3c5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a9fdd9c2-0463-467b-bc69-6a539d80b679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e9a643a-12a7-4b87-8764-902bf1f90dee",
        "cursor": {
          "ref": "0a363d8a-8516-498d-bf53-14dc5c5247d2",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "387504c4-2f8c-4750-aac8-c15f426ff553"
        },
        "item": {
          "id": "7e9a643a-12a7-4b87-8764-902bf1f90dee",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f0a83ebd-64c8-4992-ad60-3a0da222a2b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3327f7d1-e679-400b-a3b8-e4ee71fe3c27",
        "cursor": {
          "ref": "19e0b0d6-bb7a-4487-bb3b-502ecffea838",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "80e910be-6266-41cc-9a87-4afd6ddaea50"
        },
        "item": {
          "id": "3327f7d1-e679-400b-a3b8-e4ee71fe3c27",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3d1f39c6-cac9-4370-978e-5e6509c1c90c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38655d42-deca-44bb-b0b1-2afa65811396",
        "cursor": {
          "ref": "63786c80-c5bf-4ff0-80f1-591ae261c6bb",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "97681533-adc2-48e3-8268-40dfd0138dc4"
        },
        "item": {
          "id": "38655d42-deca-44bb-b0b1-2afa65811396",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "60c78a9d-5702-43ca-97b7-f17d16503d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4afd8d7e-181b-426c-b96f-7f86bc1d78b0",
        "cursor": {
          "ref": "36e317c4-50d1-4ce0-b6b2-839e58573bb7",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c297fba3-fd69-401e-bc35-e5ffb18bc77d"
        },
        "item": {
          "id": "4afd8d7e-181b-426c-b96f-7f86bc1d78b0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "55d2ea04-3b06-400c-9968-8fa661d0eab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5148196b-50d4-41ca-9a63-901d988b01c9",
        "cursor": {
          "ref": "7c23567c-2e1f-42c7-931c-b6fbd8a97592",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "ca9d61e9-e8ce-45e2-8e66-1798e6be9692"
        },
        "item": {
          "id": "5148196b-50d4-41ca-9a63-901d988b01c9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1019f59b-ebcc-4ab5-bd34-c66dc7f9ab0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b134d53-42a4-4f6e-804e-59100d4c7f5a",
        "cursor": {
          "ref": "ebb277e2-0b41-4f05-b403-f6a3125b4bd4",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8d744ff1-34df-4548-974f-5851f89bcbff"
        },
        "item": {
          "id": "8b134d53-42a4-4f6e-804e-59100d4c7f5a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "fe06bd94-b887-42c5-8a3c-95d48161705c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f8c42b-5078-4ba8-9794-0ff99c947ebe",
        "cursor": {
          "ref": "f3b02092-ea09-46e7-b84c-70639a17f9d3",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "39f233c1-96d1-45d5-a3b4-ea3588d68096"
        },
        "item": {
          "id": "68f8c42b-5078-4ba8-9794-0ff99c947ebe",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "32018ba0-a5a9-448a-85b8-b027954dcd0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c98a0de-5124-4b03-8af1-de1b65740c1d",
        "cursor": {
          "ref": "1f57fd3e-862c-40b3-9100-49e122223a0c",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3106070f-a6e3-47e2-bf8e-1d379d3e03dd"
        },
        "item": {
          "id": "9c98a0de-5124-4b03-8af1-de1b65740c1d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "025eee9a-bb55-4cec-b03b-5a1767af2cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8e32ff-6b9b-48c4-b6a6-5df33cc7a83e",
        "cursor": {
          "ref": "12d3e82c-0260-4932-9420-7904f3defdf0",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4ed812ef-f7ac-4070-bca0-79414a57345b"
        },
        "item": {
          "id": "9d8e32ff-6b9b-48c4-b6a6-5df33cc7a83e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "df627c7a-5153-4e19-ba78-4859a33b5b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f50a876-8898-4b28-a934-6411e6197f63",
        "cursor": {
          "ref": "ea38e28c-7ca8-4963-a291-a7c16a44231f",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5012b4bd-a0f0-4d88-9072-cc82689ea55e"
        },
        "item": {
          "id": "6f50a876-8898-4b28-a934-6411e6197f63",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ec12927e-5b95-4ef8-988e-e3194ca2b29b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0820e6d3-4e0c-498b-9c94-c1b456c8a68e",
        "cursor": {
          "ref": "9ab372ee-214a-40fe-ac28-8df749900c29",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "82014c77-6573-46e6-a9ab-44a6cef4e90e"
        },
        "item": {
          "id": "0820e6d3-4e0c-498b-9c94-c1b456c8a68e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2a7787b9-49d5-45fd-a12c-eb0911bdb865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4931d69a-5490-4b16-882e-35f68d7e966d",
        "cursor": {
          "ref": "60be52e3-4daf-4d64-a07e-046416f812f9",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "bb045059-1a7c-4c20-8d7c-f158e086ae2a"
        },
        "item": {
          "id": "4931d69a-5490-4b16-882e-35f68d7e966d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "84630e16-8891-4c2b-bd85-df06b9596a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b294ebe-beab-4550-acd1-1a0c91e3fd7c",
        "cursor": {
          "ref": "f5e1f9a8-21cb-4a50-b6ba-f65bf619852f",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "71e89ca4-52a3-4a5e-842a-7ded74e67ee2"
        },
        "item": {
          "id": "0b294ebe-beab-4550-acd1-1a0c91e3fd7c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "971a4cc2-8293-400f-a6ce-b5e75eccfaf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec10ecf-5a99-4949-b6e1-8e5767570cdc",
        "cursor": {
          "ref": "68ea08b1-bd9c-4347-894c-bd8896c6aacd",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c53b7a86-b4fd-4f1f-a64a-0d664fba32cb"
        },
        "item": {
          "id": "5ec10ecf-5a99-4949-b6e1-8e5767570cdc",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "27adf1a6-6047-4588-8012-4abb074c0b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2de674-e93a-4c5a-bffa-debb2c7ebe99",
        "cursor": {
          "ref": "f6e6ba45-29ee-47b5-b3ed-67d82d911049",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "cc71126d-601d-43fc-950f-523d850688b8"
        },
        "item": {
          "id": "9c2de674-e93a-4c5a-bffa-debb2c7ebe99",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "17c57f0f-be72-423a-a0ab-79f2a5937796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b673758c-e9ac-4fae-9535-68a663ad0513",
        "cursor": {
          "ref": "6b025c70-abf0-4f31-a49c-65b67d74b8fa",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b27f3042-f635-4d6e-97ed-ed75defa88fc"
        },
        "item": {
          "id": "b673758c-e9ac-4fae-9535-68a663ad0513",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "218aca49-e24a-4ece-a0d5-7532376d9c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffbbced1-d6d2-4533-a2f1-fe1d1add8281",
        "cursor": {
          "ref": "67c906de-c941-4290-ad31-b96877b07c4a",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "564975d6-d55e-4641-88a4-3a6b6e7b9327"
        },
        "item": {
          "id": "ffbbced1-d6d2-4533-a2f1-fe1d1add8281",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "308e6987-2b64-425b-9577-4b5b31d8b797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 176,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff8fd12-ef8e-4963-8785-591dbb2e586b",
        "cursor": {
          "ref": "7fb0dc1d-1ab2-44e2-a609-c28ec34e91f2",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ea6f6d02-f5a3-420d-bcf4-4ba426d0f104"
        },
        "item": {
          "id": "0ff8fd12-ef8e-4963-8785-591dbb2e586b",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "fd426061-f563-4164-befd-2c0ca015b9be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204a28f7-94fa-4fc7-ac3f-6fe00ca2028e",
        "cursor": {
          "ref": "43d1925c-f31a-4cbd-abcd-6a90dd85a00a",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f144ec64-5eb7-41cc-847f-ac2ddfc31e42"
        },
        "item": {
          "id": "204a28f7-94fa-4fc7-ac3f-6fe00ca2028e",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "670278c9-c20c-4831-a95c-6e93a4683b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1df5fcc-ab18-47d2-8238-b23f99623b40",
        "cursor": {
          "ref": "5895d22a-3cf4-4e3b-959c-fd0fbe8f8c22",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e46a7ec5-f7b2-4b79-a99a-e3d4b1edb19d"
        },
        "item": {
          "id": "d1df5fcc-ab18-47d2-8238-b23f99623b40",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "c87a5e4c-be65-4396-a503-b849e1371128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d72890b-a00c-4a6f-af59-327e33f9e464",
        "cursor": {
          "ref": "bc6798d4-f297-470b-bdec-eed0d22ccc84",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "586099d7-2fab-40a2-ae89-60637bc40503"
        },
        "item": {
          "id": "4d72890b-a00c-4a6f-af59-327e33f9e464",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "8a5b78c4-2b95-4647-99c7-bb663467cf6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 158,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d9fd537-1faf-4f1c-b61c-028cdc399639",
        "cursor": {
          "ref": "e76862b8-17bd-4ba8-8c1e-0bf9eb2bd454",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "7a19df94-0b8c-49de-a513-c5960117e847"
        },
        "item": {
          "id": "5d9fd537-1faf-4f1c-b61c-028cdc399639",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b92bfbd4-c63c-4ef5-b9c1-51af40b7840d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3579680-ffdd-4317-ab76-a256eaedd03b",
        "cursor": {
          "ref": "1cc14ce2-46be-46ab-a567-e78bcc151845",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "088b78eb-cd00-4091-b987-5da4eb620b9e"
        },
        "item": {
          "id": "e3579680-ffdd-4317-ab76-a256eaedd03b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c25df40e-ac96-4d3e-a110-246779677c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea77792-8f07-4951-924a-38dfe0dd5ff2",
        "cursor": {
          "ref": "159453df-4531-4f49-8971-7ea393b5980b",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b92152fc-e63b-4535-8613-72f86b976611"
        },
        "item": {
          "id": "6ea77792-8f07-4951-924a-38dfe0dd5ff2",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "901661f4-1a0d-4176-9bdf-5d9460afbd02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "916240bd-077f-4d10-811e-f981655bd85d",
        "cursor": {
          "ref": "819e9d9b-67ed-43cb-9b12-1d4c20a1716e",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "26ce1550-8b0d-4ca2-8450-3199d39c0725"
        },
        "item": {
          "id": "916240bd-077f-4d10-811e-f981655bd85d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "08d2c472-4e6f-4c1c-949c-c158e73a2d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f19033-2fad-42e3-af23-267b920ea1cf",
        "cursor": {
          "ref": "8a2cc6b2-45c4-4e6b-8c6b-04f41d5b29d3",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0b962d40-f3ed-4ce8-baf3-54023061c41a"
        },
        "item": {
          "id": "a4f19033-2fad-42e3-af23-267b920ea1cf",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "93a42920-ae2a-4384-905e-10cbfa714fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0204a18-f551-4654-955b-832139f5d73e",
        "cursor": {
          "ref": "1f8dfba3-e416-4dcb-8b9a-31af549ab579",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "94a68bf9-6e79-4f7d-9262-8e4e51dd5d8b"
        },
        "item": {
          "id": "f0204a18-f551-4654-955b-832139f5d73e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b05473a6-8778-431e-b46b-2a4489dbdd78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa1bdb3-1908-47ef-8744-322ea3bcdc36",
        "cursor": {
          "ref": "13450f7c-4bea-480c-b090-4031c01da907",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "518f98c8-2e89-4b5d-ae5d-4dfb04a1dc50"
        },
        "item": {
          "id": "2aa1bdb3-1908-47ef-8744-322ea3bcdc36",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "cd6b73c6-ef96-4346-bdb8-0da65dae9258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae796bf-cf06-4793-8070-e4c10038ff14",
        "cursor": {
          "ref": "ff919158-1565-4d5f-a595-3c615357164f",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "1b1528cb-dd2f-4ff2-965d-2d8d2250f780"
        },
        "item": {
          "id": "dae796bf-cf06-4793-8070-e4c10038ff14",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "814d26c3-0e18-4209-827d-db19cec72ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6cab9d-f48b-4743-8ee5-1f6d953f7935",
        "cursor": {
          "ref": "86de2228-d253-4dfe-9eea-6eae7889e1ee",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "de1d2ec7-0f5b-45aa-bf41-ec44248b513f"
        },
        "item": {
          "id": "fc6cab9d-f48b-4743-8ee5-1f6d953f7935",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "87875011-2069-4136-9ce8-1001e43ef9fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7038a7ee-a167-4901-8f59-af2fb6da6ff2",
        "cursor": {
          "ref": "f55131ef-a55d-4508-a534-a6e89d4cccde",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1aab6b17-65c2-438f-b330-4f8f6edfc3e1"
        },
        "item": {
          "id": "7038a7ee-a167-4901-8f59-af2fb6da6ff2",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "4afd7e44-8543-48e7-9a6d-e78cb6f26ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b398d8b-e01d-441b-815b-9bb74f6d6476",
        "cursor": {
          "ref": "ad94cf2e-579e-4ffb-8044-52177a848d5a",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "dd7a9873-7d0e-4b37-ae99-1446f7ee775b"
        },
        "item": {
          "id": "9b398d8b-e01d-441b-815b-9bb74f6d6476",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "cc872cf6-c4fa-454c-b057-051466b89dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea7013e-a75f-4219-a2ce-d9e1f7c77df3",
        "cursor": {
          "ref": "9c08b2e9-147d-4f50-9e7c-e0068e22f810",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "04703812-3178-46a3-b70a-e848aa241392"
        },
        "item": {
          "id": "5ea7013e-a75f-4219-a2ce-d9e1f7c77df3",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d4658068-29f0-4903-82c4-4d6b0b3315fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc8356c-b8f6-432c-9e04-ee51f7b254cf",
        "cursor": {
          "ref": "fa3d45fa-f9d2-434d-9149-1d21477a921c",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8d7aa3fd-f3e1-4e85-af49-292c9de593e1"
        },
        "item": {
          "id": "8fc8356c-b8f6-432c-9e04-ee51f7b254cf",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7e9f5d33-17b5-4484-8fb0-3060a721e67b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c1706b5-7d4c-4276-87c8-8ce70f209e04",
        "cursor": {
          "ref": "16f8e2fc-6b1f-45f9-9fdf-da3d145390e4",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "bef0d80b-8d94-4cc2-9256-51f6f1312f6d"
        },
        "item": {
          "id": "2c1706b5-7d4c-4276-87c8-8ce70f209e04",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "88807bce-6f9f-4612-af0e-8846a5ac5129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb8019e-f2d3-4c0b-a0d4-48b23e41d76c",
        "cursor": {
          "ref": "fcfbe21a-5005-4277-ae38-8b78ab4a1bed",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "547dae4f-cbe1-4b9b-816f-87ea1e106cc2"
        },
        "item": {
          "id": "3eb8019e-f2d3-4c0b-a0d4-48b23e41d76c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c21ac13e-c075-4385-b582-14fc746bc102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc54edd8-4ead-4ba3-aa61-257d0f3a65d3",
        "cursor": {
          "ref": "f1eb89d2-6a3f-4130-9ec1-f632ab389916",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ea664bfc-664f-45ae-a014-7872b46d9af8"
        },
        "item": {
          "id": "bc54edd8-4ead-4ba3-aa61-257d0f3a65d3",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8be52f21-6979-4794-9723-043a79bf1db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4013be2-d76a-4a67-949f-7e9099dd235d",
        "cursor": {
          "ref": "40601711-22b1-401f-ae01-aa240c58cfa2",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "0a9221d4-d1ca-4e98-9f42-fbd9b59790d1"
        },
        "item": {
          "id": "f4013be2-d76a-4a67-949f-7e9099dd235d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c618e771-bf04-47c5-82ff-25eb7e4ad862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d875b94-01ee-4259-bc22-5c3ddddb88e4",
        "cursor": {
          "ref": "b7f24fa0-f3a7-4c13-a059-6819e94ef514",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ec0bf924-f209-4ac1-b7e9-dea3cb77c193"
        },
        "item": {
          "id": "9d875b94-01ee-4259-bc22-5c3ddddb88e4",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5b71f939-4eaa-48a2-8e53-ba913f8cfd11",
          "status": "OK",
          "code": 200,
          "responseTime": 95,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "22d8fffc-ef88-49ce-b26b-aada5f47059a",
        "cursor": {
          "ref": "5bdd5385-402f-4082-b34c-05355e6f85fc",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "cdfbd1b2-1009-49ac-8583-7bb2b4698478"
        },
        "item": {
          "id": "22d8fffc-ef88-49ce-b26b-aada5f47059a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "374026fb-abc1-4874-8b29-69fb367327dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db462773-0aa1-45e4-8c61-b263330d3c1e",
        "cursor": {
          "ref": "a5a403fb-c979-4c76-9564-a9b464638a1b",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7d0d5622-588a-4048-8b9a-eb4be6d5acc8"
        },
        "item": {
          "id": "db462773-0aa1-45e4-8c61-b263330d3c1e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b8da0dbe-8db1-4253-8ba4-65222dc65ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1377be8b-1a6b-485e-8c84-962c36f44948",
        "cursor": {
          "ref": "e71efebc-6818-46b0-85da-c7135cc871d5",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d95f450c-56dc-4889-a188-f61f3541c500"
        },
        "item": {
          "id": "1377be8b-1a6b-485e-8c84-962c36f44948",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "85f6462f-d832-4725-adfe-2be862eab39e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f91f484c-8249-4fad-9f48-4b9c128bb329",
        "cursor": {
          "ref": "dae0e188-c4ad-4507-b884-78207cafcefc",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d3eb9dec-36b9-4e48-978c-8c19fe9c102f"
        },
        "item": {
          "id": "f91f484c-8249-4fad-9f48-4b9c128bb329",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "47e8260f-af01-445b-a6b1-de2cc9ffeff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a411d8-5e35-42cc-8635-16ef5e054bb0",
        "cursor": {
          "ref": "995f2ba8-e0b3-4f5f-a694-61b25eac06d1",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7ed4ed81-6120-4d4f-8b51-02751af86ec4"
        },
        "item": {
          "id": "91a411d8-5e35-42cc-8635-16ef5e054bb0",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9be55f87-0b00-491b-914b-309bc1fe217b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8536928f-b827-4222-a8f4-a3d46d43b3b3",
        "cursor": {
          "ref": "33570b84-d269-4fd8-9fa6-197065ac10a8",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "2672c331-7646-46f0-926a-3d5f8809d515"
        },
        "item": {
          "id": "8536928f-b827-4222-a8f4-a3d46d43b3b3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "18685fd7-98ef-475e-8666-deacd3c8c40b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb4a144-0da5-4ce8-b1d9-613f858ca76f",
        "cursor": {
          "ref": "f24dded8-93a8-4146-9a9b-ca76e009511e",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9688bcbd-b481-43ee-beb0-85ff4429f56c"
        },
        "item": {
          "id": "dcb4a144-0da5-4ce8-b1d9-613f858ca76f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "62c41931-34a6-4f8d-aa38-62c26f5ee6af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 129,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e090b9e7-b9d7-4f28-9e3c-665f5659a510",
        "cursor": {
          "ref": "1b273dd8-c38a-4518-b471-e02d4bc3d045",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "eb94af8c-7a9e-4ece-bdd8-84b0a562e16c"
        },
        "item": {
          "id": "e090b9e7-b9d7-4f28-9e3c-665f5659a510",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "87db666f-efd7-44a5-9dde-a3fe4ad3397f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d9f163b-e8e1-41e4-b930-eb5f89c53f01",
        "cursor": {
          "ref": "01a494a9-bcee-46d2-aa1d-76168025da06",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "075a9362-2f6f-4d12-9225-c9999722f0b9"
        },
        "item": {
          "id": "3d9f163b-e8e1-41e4-b930-eb5f89c53f01",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6dddf921-c114-43a0-a8a2-67cf04d3425e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f292c3a-e3ba-4f3b-91e1-0c3f4c5ca81c",
        "cursor": {
          "ref": "d67810d4-e449-4f44-9f3e-65c8242d9abc",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "730a8cd9-20df-4726-8d1d-bb7e8ee8e71c"
        },
        "item": {
          "id": "1f292c3a-e3ba-4f3b-91e1-0c3f4c5ca81c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "59d0fd23-3212-424f-8fba-a1b912b6c37e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0619881b-edc0-42d6-a693-66abd98e7a9d",
        "cursor": {
          "ref": "871a3982-3476-4d03-9288-955bac5438c8",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a760a2a4-e733-44cb-94f3-3477de31aeb5"
        },
        "item": {
          "id": "0619881b-edc0-42d6-a693-66abd98e7a9d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "5db1685f-14ef-4a23-adfd-6cf1073a481c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cbf10c9-be0f-460d-9d87-35463f711d8d",
        "cursor": {
          "ref": "64a5b8cc-87bf-4fa0-92e4-ba01cf78d8cd",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "06befd7d-dff7-41c5-a3dc-221a0227f2a8"
        },
        "item": {
          "id": "1cbf10c9-be0f-460d-9d87-35463f711d8d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e5ade757-dc2d-4780-b92a-159c680a078f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f45615f-dd45-4fa2-9c9d-44088d0f5ea0",
        "cursor": {
          "ref": "f3025304-811d-4083-bc53-16792e02a279",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b732f2ed-d647-4316-9dbd-928adeb7d2d4"
        },
        "item": {
          "id": "8f45615f-dd45-4fa2-9c9d-44088d0f5ea0",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "0d6719bb-4d4a-4db7-be34-ce3bdf0a10b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f264bc-4a80-4e6f-aa24-8cb2e3f24632",
        "cursor": {
          "ref": "8abf7662-618a-414a-9f61-f51cabd915a8",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "1eb5b77f-055b-4a6d-9eb6-9383edc7df5f"
        },
        "item": {
          "id": "73f264bc-4a80-4e6f-aa24-8cb2e3f24632",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d805e3f1-0e3f-4c2c-b22e-8fb8c97cfc69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d55842-9498-485d-8580-0680b717d609",
        "cursor": {
          "ref": "9cb0db9a-4077-4dec-bbdb-b5bf677fb5ac",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f300adb7-2b0b-4d84-8aa8-3499ebf3e5b2"
        },
        "item": {
          "id": "f0d55842-9498-485d-8580-0680b717d609",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "10809947-716c-4bab-8441-2a39595401a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e530622-a3af-4594-a284-81cba11ccf44",
        "cursor": {
          "ref": "0a02cf95-02a8-4da1-b210-eb096cec08e7",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8e3e50e7-56d7-403f-abab-d0a41da9d0bc"
        },
        "item": {
          "id": "7e530622-a3af-4594-a284-81cba11ccf44",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d5ebc1cb-2753-4fe7-bc9f-0f9f4f3ed00c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf71dd48-baa0-4198-8a3a-d3494bb509a8",
        "cursor": {
          "ref": "8bd91c7a-f8fa-4d0e-ac82-6fb7e2cf9e85",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "70e7cdb7-7429-4b3a-b64d-59ac6ab90f0f"
        },
        "item": {
          "id": "cf71dd48-baa0-4198-8a3a-d3494bb509a8",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "5409543c-347b-4f9c-863d-2c899bd17685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee10d5c-23f5-4d98-b398-6d4767216a03",
        "cursor": {
          "ref": "0924c431-0211-4745-b66d-0d6fc2bd0c3f",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ced7c438-da6e-469d-812e-734afef5ebd9"
        },
        "item": {
          "id": "aee10d5c-23f5-4d98-b398-6d4767216a03",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "0da8febe-f9fa-43f7-82a2-5035c0b5c83c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa56bbe-fef7-4293-8348-0ccab340fdb2",
        "cursor": {
          "ref": "149fe252-3136-49e5-a058-afc44c6b53e8",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b6a7ebc0-7aa9-435c-84b4-ebbfc874e5a1"
        },
        "item": {
          "id": "afa56bbe-fef7-4293-8348-0ccab340fdb2",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9e61eb6c-1390-406e-bc2a-51b9e82953d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b3e3571-e7a5-4df0-9cca-08064506539f",
        "cursor": {
          "ref": "34734c63-08a5-41d2-8a15-d4f54d2afd59",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b7912b33-c8d3-4a54-b541-5d7aec4bbdf1"
        },
        "item": {
          "id": "7b3e3571-e7a5-4df0-9cca-08064506539f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "5f2b818b-37be-432b-b588-02d1a6c033cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed658cd-743b-4036-aba7-43ac3c544843",
        "cursor": {
          "ref": "ec707375-d822-4211-aa7e-29726967a342",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "837fea9c-a0e3-4d05-9ba6-0f4e94f38b9a"
        },
        "item": {
          "id": "aed658cd-743b-4036-aba7-43ac3c544843",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9579b213-7e30-4324-b17e-dfb9c3311b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ccfcb0-27ca-4fa7-bc49-903b8c0962ea",
        "cursor": {
          "ref": "7d254c6a-d0c3-4654-a056-a798968b8a29",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3172eb9c-3249-49a9-9098-85adc2cd0661"
        },
        "item": {
          "id": "d4ccfcb0-27ca-4fa7-bc49-903b8c0962ea",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "47935161-9cf9-41ca-8e46-0bf66a47d831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2047cc58-d405-419e-aec3-e518e1cbb352",
        "cursor": {
          "ref": "81bf58b6-645c-4fc4-ac21-2e1c556e08c1",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ebc9b041-40a5-4002-bb88-835da5549f77"
        },
        "item": {
          "id": "2047cc58-d405-419e-aec3-e518e1cbb352",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b8ac949f-3450-4238-97be-92b35b116f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73c58eb-b760-4982-8a2b-d5596a22dfae",
        "cursor": {
          "ref": "ab1d297d-69d6-4f98-aef5-a04300edcd37",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e8fd5079-1a53-4f5d-a931-38a5d89f0b3b"
        },
        "item": {
          "id": "b73c58eb-b760-4982-8a2b-d5596a22dfae",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "21beffae-dbfc-417e-b1ce-68378ab52b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "825fa3b5-991f-4d02-8752-7048eee8df78",
        "cursor": {
          "ref": "cde805d5-8800-4e34-b409-c8bb23133444",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a4066b5b-f5e0-4b15-b1a4-bdf7eafd1d37"
        },
        "item": {
          "id": "825fa3b5-991f-4d02-8752-7048eee8df78",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0f09a036-a6ca-4363-a112-288bbbd6ace8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bdd9fb6-a2cd-46bd-a4d7-b3f8dd743b83",
        "cursor": {
          "ref": "54ec78e7-7335-465a-8e93-427fd9e3dd3a",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e6164470-f2ce-4f09-8b06-ef97497fab7b"
        },
        "item": {
          "id": "3bdd9fb6-a2cd-46bd-a4d7-b3f8dd743b83",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f52c8608-052f-49d0-b056-780f9c5e1c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8517b9af-59c3-4d54-b5f2-2e8566cec004",
        "cursor": {
          "ref": "057d67ef-65fa-41d5-9fec-df868d407d9b",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2d7c5fbd-b95c-42e6-b4db-9dc88881ab04"
        },
        "item": {
          "id": "8517b9af-59c3-4d54-b5f2-2e8566cec004",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "1871efbe-36f5-4ddf-997e-23a379934614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93c48fd-2580-44dc-aaa7-2b3f9d02dbee",
        "cursor": {
          "ref": "65a3f1d6-346b-45d6-8e64-389cd633b379",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "bd7eacb3-a2b9-4d46-9ae0-7d812357887b"
        },
        "item": {
          "id": "d93c48fd-2580-44dc-aaa7-2b3f9d02dbee",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "7df03371-2e14-4eca-916f-a3501531f157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c39a46bf-9b5b-45b5-9a3e-c342eb0ac301",
        "cursor": {
          "ref": "a1ec8867-9e33-4d28-9537-6b8f83192975",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a1a2745b-e682-49e6-bdf4-60fe6fbdd557"
        },
        "item": {
          "id": "c39a46bf-9b5b-45b5-9a3e-c342eb0ac301",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a01912ac-6899-4aec-8e4d-b8b895c9e73b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b43d4ba-ae03-473d-9613-e1213a743f27",
        "cursor": {
          "ref": "82c78039-5bb5-402f-a6e6-7b00ab9b8ace",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "60a17e82-b662-4a65-a93c-fae8f0da98ba"
        },
        "item": {
          "id": "8b43d4ba-ae03-473d-9613-e1213a743f27",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "823f0ac5-229d-4a8f-8fd1-d72527f842f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d431c18-7498-4288-a43f-b29310756b47",
        "cursor": {
          "ref": "efe29fca-c7d1-4c0f-ad3b-26837abc40d1",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b9f96323-1479-49f1-99aa-0d32817bc294"
        },
        "item": {
          "id": "7d431c18-7498-4288-a43f-b29310756b47",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6443461a-eeff-4799-afa0-1f54301daa66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271c4ae3-e6b3-4c24-b8b5-dbcc36708c4f",
        "cursor": {
          "ref": "e68f2559-e43f-4bc4-9e1a-2698d92bf965",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e02f5ce1-e946-4fd9-bb3b-a808d092077d"
        },
        "item": {
          "id": "271c4ae3-e6b3-4c24-b8b5-dbcc36708c4f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "4cbf7d71-0fec-43b0-bae8-32b8a2a48536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a03dd1a3-068c-4997-8fff-3ea1780ab67b",
        "cursor": {
          "ref": "0818f491-8d4c-4315-b0a3-fff38368885d",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "fd36f7e8-740b-44cf-b0b4-8d933609d29e"
        },
        "item": {
          "id": "a03dd1a3-068c-4997-8fff-3ea1780ab67b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f2f29d60-e692-4c9e-8098-0ef36167bab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d678800-ffba-4ea1-933c-e9b9958b67a4",
        "cursor": {
          "ref": "e9baa255-bf9e-45c4-ae9e-5cded5005d59",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1a38b151-ab97-4691-9f48-e9414e6216c7"
        },
        "item": {
          "id": "6d678800-ffba-4ea1-933c-e9b9958b67a4",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "fd723600-3c77-4153-8f62-a0e060444733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea66583-bf57-486f-ae41-a534ec4618bf",
        "cursor": {
          "ref": "f984a3e6-2df9-4343-be4d-3f9d851cbe16",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a14f5b43-1801-4e74-acbc-64c2419edd0f"
        },
        "item": {
          "id": "7ea66583-bf57-486f-ae41-a534ec4618bf",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "fa8577aa-825c-4515-bdc5-a68b212f6ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0bb254-e2af-4eb8-a0e5-c9e558b966cf",
        "cursor": {
          "ref": "d2b8a343-d51b-4061-8e62-1b789c8a7919",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "7e93157d-cad3-46c1-9c63-a6cd1e8cf743"
        },
        "item": {
          "id": "4b0bb254-e2af-4eb8-a0e5-c9e558b966cf",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "aaad7470-3c0d-486e-aaed-5bd888517a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438eedcd-6572-461d-ab50-866b0fad660b",
        "cursor": {
          "ref": "7f15eec5-c2c0-4277-b360-e8dfa2fc3973",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c937154d-ee0c-49aa-a330-ca1ffcaebc24"
        },
        "item": {
          "id": "438eedcd-6572-461d-ab50-866b0fad660b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "7f270c3b-d3f1-4f6d-999a-9f7a3ba89556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f527ca-0209-4f0f-a53a-f518b331d425",
        "cursor": {
          "ref": "1badf4d7-d9c1-4156-90db-673f44dd4e70",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c444d1ce-b2ab-47ed-85c1-ae23e3711e86"
        },
        "item": {
          "id": "d6f527ca-0209-4f0f-a53a-f518b331d425",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3c5d65e3-8d5b-44a8-ae16-27b02203b287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50cffc2-fe27-4e78-a210-3ff11cf4e810",
        "cursor": {
          "ref": "262177d9-276f-440e-a12a-bc5c0125f972",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b06ab928-a3d4-4bd1-b47d-52e985e64d87"
        },
        "item": {
          "id": "f50cffc2-fe27-4e78-a210-3ff11cf4e810",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b1afb152-03d7-44b2-85a5-d5b168f09d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a7ceb4-801f-4a9f-b20b-b206f1cd21ba",
        "cursor": {
          "ref": "f5cdf1c1-4d50-4755-8a38-c06fa3bc129d",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f3edb833-4d95-472c-bf02-df2202a4ffa7"
        },
        "item": {
          "id": "26a7ceb4-801f-4a9f-b20b-b206f1cd21ba",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "7b2a9849-13ff-4cb0-b5dd-81636072cd31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66359b91-cf34-447a-bae7-d681b45efd56",
        "cursor": {
          "ref": "b8ca3421-0247-40b3-8f04-24d77ad85ccb",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "220cbe9c-c3f9-42a6-9e9b-b443e2c5ac7a"
        },
        "item": {
          "id": "66359b91-cf34-447a-bae7-d681b45efd56",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3af112cd-c9cb-4d49-9850-99b6182e7418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b724da-ba11-4efb-9bb0-5952fcbac322",
        "cursor": {
          "ref": "cb60ff9f-f257-4a1d-9a82-4cf81541dea5",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "71719ea3-d6f4-4c90-a30f-1156e8db6bf8"
        },
        "item": {
          "id": "b0b724da-ba11-4efb-9bb0-5952fcbac322",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f5e14305-d152-4486-966e-36b781e1c1f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d463083e-232f-4a66-8262-7a41ee5519ac",
        "cursor": {
          "ref": "28bc4707-49c1-4e8a-81d7-e94cb75f3c50",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "64dde3c0-12ed-43ae-b43a-4c42399f46f5"
        },
        "item": {
          "id": "d463083e-232f-4a66-8262-7a41ee5519ac",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9bf57d05-ce4b-487c-a7b0-f9b759dea56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53fd0aec-54b4-40ad-b791-b7b321177f91",
        "cursor": {
          "ref": "db27578d-c588-4a9b-a33d-123aba216497",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "86e49f76-d770-4556-9867-5f6ab60967ca"
        },
        "item": {
          "id": "53fd0aec-54b4-40ad-b791-b7b321177f91",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ac3725d2-5932-4017-b2f2-361370e16ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da1e59b-9f7a-416f-9316-31908391ebd5",
        "cursor": {
          "ref": "d07afffa-433d-409f-97f4-68c123de783b",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e8295b05-809f-4266-9b5b-a5eca06f459a"
        },
        "item": {
          "id": "4da1e59b-9f7a-416f-9316-31908391ebd5",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0e3bb1f9-6599-42d1-9c59-4c12758e7bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2920e189-c3ab-4da3-a3cc-f0cd43b4f610",
        "cursor": {
          "ref": "c7313355-cb91-49ba-b0ec-5c69068ed95a",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "470b5092-ab0e-4429-a516-0ef4813a39f7"
        },
        "item": {
          "id": "2920e189-c3ab-4da3-a3cc-f0cd43b4f610",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e051732a-c1e1-46db-b534-5e36c6626a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7d41f6-af90-47d0-8df7-9398b7416b09",
        "cursor": {
          "ref": "0f993cf4-eefd-4a97-adba-5c5c21f6c649",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "7c6a12a5-d938-469d-ac14-a7b6acf84e80"
        },
        "item": {
          "id": "aa7d41f6-af90-47d0-8df7-9398b7416b09",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2508743e-91f8-45ea-9198-2936c78e83a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7703964c-dfb3-4b3a-918c-e2fe051c0f5b",
        "cursor": {
          "ref": "a1c5e30e-1f70-40e6-be98-870dd99b5844",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a4ff58e7-cecc-49d4-aced-6c8e62257ba3"
        },
        "item": {
          "id": "7703964c-dfb3-4b3a-918c-e2fe051c0f5b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "59e95d6c-8a99-495e-bcd7-49adeb66aff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0099103-f256-4ab1-a171-84c87a22dcd7",
        "cursor": {
          "ref": "48db26fb-98ce-40d0-ad77-087d08f0cede",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "4646bdd3-b656-4cf4-9a24-7e01606ab0a6"
        },
        "item": {
          "id": "b0099103-f256-4ab1-a171-84c87a22dcd7",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ac28ba1d-f68d-420b-80e6-3e03ba19e1a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff5bc31f-d170-4b04-89ce-bddf845d9aa6",
        "cursor": {
          "ref": "8d3a2070-db18-418a-8ca8-f93fb0231ac6",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "1f845550-68b8-401c-8726-d67953ce48e4"
        },
        "item": {
          "id": "ff5bc31f-d170-4b04-89ce-bddf845d9aa6",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e3ea5240-3910-4144-bb5b-efd395c8a9d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0dc6ab5-b4da-4c07-bccc-a690969cbc97",
        "cursor": {
          "ref": "5c13f60f-fc45-4878-a336-26e84f33445a",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "cd1cef91-f59f-4491-a8a7-9c044b8b154c"
        },
        "item": {
          "id": "c0dc6ab5-b4da-4c07-bccc-a690969cbc97",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "db286744-e614-475b-8ab7-d6e076726682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "165167fa-cc7f-427c-be9a-05bbc99fc99c",
        "cursor": {
          "ref": "2e7e3fdb-9d85-4b1d-a30d-400e332b444b",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "cb216631-ffc3-49a0-911d-d9004cd4c82d"
        },
        "item": {
          "id": "165167fa-cc7f-427c-be9a-05bbc99fc99c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "21fac66c-fe83-4694-ab29-a192a96f7245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f290e92e-343f-49aa-b4a9-66061ee82fd5",
        "cursor": {
          "ref": "201c6948-a47f-43ca-a9ec-5696e5f82501",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "19d301f0-a0e7-4155-86cf-1af7448d07c2"
        },
        "item": {
          "id": "f290e92e-343f-49aa-b4a9-66061ee82fd5",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "22666e22-5e4b-4d55-9464-3bd959919587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 147,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e047ab-9856-45fc-80d0-8a095f025179",
        "cursor": {
          "ref": "6bf9fdd0-e5f1-4a02-8747-8cc7186c4a7c",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "320c4bb8-807a-4ac9-950d-b22f8b89c73a"
        },
        "item": {
          "id": "c7e047ab-9856-45fc-80d0-8a095f025179",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c2cdfbfd-06e1-4b8e-88cb-ccb72ba9e964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d7957ff-a232-4482-a167-64075a252962",
        "cursor": {
          "ref": "f2667c5e-11f2-4e69-bd4e-9ecd62c2b8ea",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6a720022-96d3-477c-b4f8-cd54d3c78f94"
        },
        "item": {
          "id": "3d7957ff-a232-4482-a167-64075a252962",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "06e9ad1f-6682-4e62-a599-942cb13a22ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "affb63c3-279f-4643-98fa-200caf519184",
        "cursor": {
          "ref": "4f0ffee1-57af-4d2b-a3e4-0b3275b195c8",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e2525508-5682-4ffe-84a0-493abd3d3530"
        },
        "item": {
          "id": "affb63c3-279f-4643-98fa-200caf519184",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "beda475e-96ea-4244-a66d-056e204239a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c24a7f-9f2f-44b3-97b7-251de0e3c34a",
        "cursor": {
          "ref": "709e1e44-c390-4242-bbde-acfc9d60b1c9",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "559809db-2454-4b8f-b905-46a9f93ade16"
        },
        "item": {
          "id": "c9c24a7f-9f2f-44b3-97b7-251de0e3c34a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a8dac1ac-2d5f-4601-8f96-a79220fb0d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ad18bf-8468-47ef-b52f-d3d4627ca9ea",
        "cursor": {
          "ref": "cfbe90df-e0ff-45e2-a3b6-5d65b1ff140b",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "1a6e79c3-dcde-4f8e-b609-148f3c344022"
        },
        "item": {
          "id": "92ad18bf-8468-47ef-b52f-d3d4627ca9ea",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3c8bd64a-52a8-45c8-a3bf-a1681e795a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dbdcd39-5f34-493c-929a-f860bf090dda",
        "cursor": {
          "ref": "19a96d19-cce7-45b6-a106-09e2df5d2376",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "1b99a7d9-98ee-4e56-bd5d-e53546f58538"
        },
        "item": {
          "id": "2dbdcd39-5f34-493c-929a-f860bf090dda",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "990d8349-be47-4301-a151-c465195a5a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac098a62-665c-425a-a7e5-9228fb4eaa10",
        "cursor": {
          "ref": "c5f36fe2-7e03-4078-8d28-9de49f92a89b",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "3c559464-98a3-4645-9892-a7285a1a69a1"
        },
        "item": {
          "id": "ac098a62-665c-425a-a7e5-9228fb4eaa10",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2c1a089d-a8d9-4f0d-9120-31d384c347b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230e5ad8-53c3-4499-bbfd-0b11b13c7d6b",
        "cursor": {
          "ref": "1452850e-95a3-4d8b-b11c-e32e00a99f5d",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "5e87493a-339d-4fd5-b805-84ac444c059e"
        },
        "item": {
          "id": "230e5ad8-53c3-4499-bbfd-0b11b13c7d6b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d19faba4-f72c-43fb-96ad-cfdbce2b63ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855f5a3c-6f4c-4b3f-a750-518fa963431a",
        "cursor": {
          "ref": "c5867206-6e25-4fcc-a50d-14c16983e841",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "ce415375-7213-4f6c-ae50-205c7c9cf950"
        },
        "item": {
          "id": "855f5a3c-6f4c-4b3f-a750-518fa963431a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "2798938f-e6e2-481f-8dc3-9b2819964283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "623458d4-73cb-4c9e-bbff-4bf6e35aa78b",
        "cursor": {
          "ref": "bac72c25-5bd2-4739-b507-c6c5bc003f4b",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "92a52bf6-4b86-4a80-8222-5aed5bb72d56"
        },
        "item": {
          "id": "623458d4-73cb-4c9e-bbff-4bf6e35aa78b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e1f12afc-6193-4b72-ab59-f6e9290f0e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e524d154-52ff-47e9-9fb0-5ffcd4958c72",
        "cursor": {
          "ref": "f28028a9-8d94-49db-ae8a-57994ec2c6cb",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "589345df-dcb4-4b05-bf8e-7d82543eb566"
        },
        "item": {
          "id": "e524d154-52ff-47e9-9fb0-5ffcd4958c72",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f62050d1-ec41-469e-8c72-5e3fdd46650e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4bff44-5a08-41d3-a426-4f35d7dded33",
        "cursor": {
          "ref": "a5b3006f-2e51-45dc-9989-9411d12d6c98",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "25c62202-c1a0-4104-b610-724437fc5b39"
        },
        "item": {
          "id": "7e4bff44-5a08-41d3-a426-4f35d7dded33",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "8b9f42ad-0662-447a-a591-cb1e0739cb77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91170c57-da61-4f1d-9b3f-82c1f86056b8",
        "cursor": {
          "ref": "78cb35da-1a43-44af-a1dc-da5211bfb42a",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "db3ae9da-7a3f-49fb-94e5-6690262cba76"
        },
        "item": {
          "id": "91170c57-da61-4f1d-9b3f-82c1f86056b8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "bdd2c1ac-b8ae-4b23-98f9-d171834a93b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebcb2aa3-dd28-48d3-b638-e3bca2b54f4b",
        "cursor": {
          "ref": "3e05f9e4-c95f-47a2-9656-7580ae027b36",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "a91b1070-3ee9-42d0-a0b8-ad22f7155b67"
        },
        "item": {
          "id": "ebcb2aa3-dd28-48d3-b638-e3bca2b54f4b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "702e047d-1fbf-4ea7-80c8-e32f9eb93f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 153,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf5570cf-6024-4740-98b1-a73eca1cbb9b",
        "cursor": {
          "ref": "3456d804-c050-4187-8b3d-ac624524b9f8",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "1dbe2c7e-a8da-4c33-9203-bb2bb9c9c325"
        },
        "item": {
          "id": "cf5570cf-6024-4740-98b1-a73eca1cbb9b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9e47395e-961a-497b-8579-da8f608592a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f9eda1-b517-4be1-ac36-fb5ae5f99b0b",
        "cursor": {
          "ref": "b3d2d02b-8e4c-49d3-922d-9dddc93fa25c",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "14bc5390-cded-473f-8238-9781336da1cd"
        },
        "item": {
          "id": "e4f9eda1-b517-4be1-ac36-fb5ae5f99b0b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7e8c8a9e-a80e-4390-986b-30754e9a6592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b36a47c-8773-4465-b7dd-aad6e312f2c0",
        "cursor": {
          "ref": "731278bf-fad6-46ed-a90d-0f58b31463ce",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "c36fcf85-5110-4ce8-9033-c18434e6db69"
        },
        "item": {
          "id": "8b36a47c-8773-4465-b7dd-aad6e312f2c0",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "18f0afee-58d6-41ab-8daa-2d4d5faf97c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c44fb72-9ef3-447d-a2ab-d743da1dfbed",
        "cursor": {
          "ref": "b4c0d355-58a8-4de1-8042-ff9d33e85637",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "d2070356-9298-4883-98ac-d5d7d81d90ff"
        },
        "item": {
          "id": "3c44fb72-9ef3-447d-a2ab-d743da1dfbed",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e76ce4d8-ac18-4fc2-92a4-55ddc993ce5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4369c9f1-dd91-4d48-885c-5bd0aa4debe2",
        "cursor": {
          "ref": "815691d3-6fab-4b61-b7b0-aa65d0f46ca5",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "31c0f186-43da-4a50-a35a-96703ad07559"
        },
        "item": {
          "id": "4369c9f1-dd91-4d48-885c-5bd0aa4debe2",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "cca1ed35-2c05-4c76-8b1d-fd40071ae320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022d5178-287d-4c8e-9a42-e9be682fe935",
        "cursor": {
          "ref": "d75b5b0f-9d19-4613-87db-1adf5cbffc26",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "b3ddd234-6902-473e-b2c8-6b9ae777b229"
        },
        "item": {
          "id": "022d5178-287d-4c8e-9a42-e9be682fe935",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f3225fc2-12cc-4be5-8a8a-08f5fb3ccbc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc66b9ae-f1ea-46e8-a261-a539f65356e4",
        "cursor": {
          "ref": "9383306f-a561-4aa6-b7b4-ff1a74fa9117",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "83d8b4be-5fd0-404f-9aeb-c684bdedf9e7"
        },
        "item": {
          "id": "bc66b9ae-f1ea-46e8-a261-a539f65356e4",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "41806ae2-6a0b-49a7-b792-6bfc3b995b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26594e7b-ffd8-4186-8655-c8978c960fc6",
        "cursor": {
          "ref": "f0eaeda6-7959-4c95-971b-9f16d4f6e9c1",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "73127aa9-22f3-469e-8030-3e8550e19db5"
        },
        "item": {
          "id": "26594e7b-ffd8-4186-8655-c8978c960fc6",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2605f6c8-a956-47fa-88a2-92301bdb20b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a73ebaee-dbee-4d6b-a4cf-6cc805bd39e7",
        "cursor": {
          "ref": "a0a62b84-d3f4-4728-8b27-4fabcb6e5a0d",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "b8b6070f-e3d0-4c65-8ff6-bb931a6262ae"
        },
        "item": {
          "id": "a73ebaee-dbee-4d6b-a4cf-6cc805bd39e7",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "fedfe34c-d881-4c93-bcfe-9f4a3925be80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e74fc109-da5f-4280-a3da-9040e3483f50",
        "cursor": {
          "ref": "d47fb190-875c-4c34-9db1-f0921cdf6885",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "9b2050f1-d3f1-4b46-b779-5042dac3fbef"
        },
        "item": {
          "id": "e74fc109-da5f-4280-a3da-9040e3483f50",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1feefce0-2a95-4175-86ad-9b139dda6f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ccbbd2-43a1-4a20-b878-679004e5551b",
        "cursor": {
          "ref": "df6074d8-0068-49a3-ab36-527a502ca7d2",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "db1ed4b9-38b3-414f-bc88-3b298d8cede0"
        },
        "item": {
          "id": "14ccbbd2-43a1-4a20-b878-679004e5551b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5a1ab044-694f-4829-96e2-71e9fb8743d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866cafdf-0b04-4428-bf98-5da7923ff005",
        "cursor": {
          "ref": "ac2ceb35-401d-434b-9c68-0d29b53b445d",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "b9dc1aec-571d-40a9-8993-c945f30e3137"
        },
        "item": {
          "id": "866cafdf-0b04-4428-bf98-5da7923ff005",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "82a9db81-dca2-4c55-bcc2-63157414cb76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6353f34b-8c02-4eff-a168-099043dff967",
        "cursor": {
          "ref": "f1582c89-41cd-49f0-943c-b53b4d95ecb2",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "f6f3fdab-cf42-4697-a32c-b2cd63ba275e"
        },
        "item": {
          "id": "6353f34b-8c02-4eff-a168-099043dff967",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "88bf7335-fa17-4cdc-be4e-62d7d6384337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96fae951-abcc-403b-acc7-fe1e3280641f",
        "cursor": {
          "ref": "5f5e0453-b40c-46c4-8920-9a4b33c607d0",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "903018f0-3782-442c-a7e8-a2231f96d9b5"
        },
        "item": {
          "id": "96fae951-abcc-403b-acc7-fe1e3280641f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c3777ec0-2f0c-4109-b46f-e56412ecf841",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3c80d1-9a73-41c1-8965-fa95b634a349",
        "cursor": {
          "ref": "546a62ba-1341-43b2-904d-e8d6114b69e3",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "c46172ba-eaa5-4265-987f-2472d71880cf"
        },
        "item": {
          "id": "bb3c80d1-9a73-41c1-8965-fa95b634a349",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5880bc6d-260f-4e0a-b898-e529e147711d",
          "status": "OK",
          "code": 200,
          "responseTime": 173,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f7e6d4-f9af-4eb6-9c48-a352fb0fe81f",
        "cursor": {
          "ref": "fa4390a6-4985-4696-aa8e-f4af7890c9a9",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "b6f54ac0-eb5e-43b2-a360-2f8e491b7cb2"
        },
        "item": {
          "id": "22f7e6d4-f9af-4eb6-9c48-a352fb0fe81f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "38ec140f-3e4b-413c-b2b8-98f3c1efcc54",
          "status": "OK",
          "code": 200,
          "responseTime": 10077,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da2f384-1bbe-4fdf-84d7-bc05e4149d05",
        "cursor": {
          "ref": "e12d2b48-fe31-44a7-bc45-57b2cc01c06b",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "dc63a63e-8bd1-4bb5-b641-3bd084988f27"
        },
        "item": {
          "id": "6da2f384-1bbe-4fdf-84d7-bc05e4149d05",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "03c32dc2-2a84-412d-b930-d183538fbded",
          "status": "OK",
          "code": 200,
          "responseTime": 3005,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c64ca4b7-2fa7-4902-a7be-7fb3b6b2bbec",
        "cursor": {
          "ref": "f0406699-da8b-4667-8b22-0fa52807b625",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "c60705a5-7019-4df7-8c84-a5e46273791e"
        },
        "item": {
          "id": "c64ca4b7-2fa7-4902-a7be-7fb3b6b2bbec",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "de8d5506-def8-4fdc-a146-1e839cebbbec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c64ca4b7-2fa7-4902-a7be-7fb3b6b2bbec",
        "cursor": {
          "ref": "f0406699-da8b-4667-8b22-0fa52807b625",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "c60705a5-7019-4df7-8c84-a5e46273791e"
        },
        "item": {
          "id": "c64ca4b7-2fa7-4902-a7be-7fb3b6b2bbec",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "de8d5506-def8-4fdc-a146-1e839cebbbec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c76a4814-c438-40d0-a20a-7d40a4bddc6c",
        "cursor": {
          "ref": "4ae47be3-e2fa-4c23-9ffc-f5ff11a3c3f5",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "bbe9269e-4607-45a4-b403-600b7b2114b0"
        },
        "item": {
          "id": "c76a4814-c438-40d0-a20a-7d40a4bddc6c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6642d422-07ed-4162-84dc-74458616620d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 100,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94943236-8a0e-43b0-9285-431d52ff6157",
        "cursor": {
          "ref": "e4a8abd6-118c-4639-850e-c225e59df68e",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "daf4ba7e-f267-4cae-9533-e8bfe30d670b"
        },
        "item": {
          "id": "94943236-8a0e-43b0-9285-431d52ff6157",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "833928fe-d9d6-4335-9af5-6d5f2a5dca2c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}