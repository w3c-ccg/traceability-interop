{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "330fd814-fae8-4d3c-926b-7a905db171c6",
        "name": "Clear Cache",
        "item": [
          {
            "id": "15e144a1-bfc4-4025-83fc-bf4202ad9572",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cf8d20a8-943e-4ea5-a35f-b7820e892a44",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "724f0486-c436-48b0-ac2c-a77dd4fe9ca4"
                }
              }
            ]
          },
          {
            "id": "75c82f54-c38e-4777-ab0c-a8ea680cbb40",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c20c40b3-be3e-46ba-8855-b737202ed102",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c4d0745c-9c83-432b-b25e-8fa39e1951fb"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c208aede-c260-4a0c-b673-b5481be349b1",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e46b7abc-1a9c-47ee-b5fb-2b630df609cb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5c6e9b5f-365b-4531-ac8a-02308fc86f6c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "80563620-35c4-44f4-848f-bd3f0a50cc09",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cc43fd17-09ca-4fbc-ac39-a77259a88b31"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fa7672b4-cf16-4359-8337-ac47a05df097",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2d570c35-d448-4a80-8891-99bb6fe2d00e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a7dff0ff-22b1-4dc4-9864-f18f0c9e27c1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "08041d88-dee6-4aec-abcd-3ba447e689a6"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f952282c-dc98-4ee4-b966-02fc49f2009e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9c6e3fdb-b37e-488d-b293-01ac69bb54d2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a9661ea4-be40-4742-a317-a02d00d590d9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5950d630-c3e0-4985-83d8-9c29387a4462"
            }
          }
        ]
      },
      {
        "id": "e209a106-db98-42cf-8239-e99ae2c57dc2",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "dce357d4-f228-40ac-871f-d5c4d1d39713",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c534f0fb-c7f1-4779-9c9f-a09e4f324c8c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ad977f03-4812-410d-8234-a196e4aa9789",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac131f82-2dcc-4ae1-ba66-aa21c644bdf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ced7fbbd-4db3-4a4d-b62e-d3d79179b4d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f31a4fdf-819e-4dc8-a471-1ec74b92eb73",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f6056e-0f5c-46b8-81c3-23bda208ae6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "41d9cd85-c285-45e2-9436-ca18ffda789f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a65686-face-4930-b8a5-9e6641921988",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda3215a-05a1-4610-b146-3265e5ef68e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd0430a7-3158-4f8a-9e77-6471cb6b9ee8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "115a71f4-a586-408e-bef6-0139a9797e32",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "93b1560b-a3af-484e-96af-1831c05d58ee",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "418b886b-7c4b-483d-a8f7-cbe4427d529b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b6d19f8c-5ce5-4722-906e-92d69fc59b38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5551b229-fd7c-4f06-afee-6ab67fea20bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c01fa1f-67d0-4d05-a5b5-2d0971eb56e6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "921168f5-4560-4d67-af4f-b02ff6fcfc98",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a3c8c591-36f1-4e90-846f-b5c2a337f066",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea1194cd-f381-4393-8893-8dd80be233dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "5f6a42d5-3690-4a90-a122-51ac71565975"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4c1423e1-394c-4cb6-937a-ab7b826daca6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "2e41dd75-8b2b-46f6-b24b-6c70e817de76"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "67216b2c-a8e2-497f-8a5a-7acbeb1ea366",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eaa8bf0d-8244-4a59-b490-562ac058cb69"
            }
          }
        ]
      },
      {
        "id": "8d9f5223-3c53-44c4-9ea0-de70f78676d7",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "5fc057c2-deba-4961-8a7c-4f7037eef3e0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "30377a7a-4b06-4f20-8878-246501b0a6ae",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f5852547-6dc0-4e37-aa02-bf0f2565ae1c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea29689-df53-4ac4-b4ab-8d6a3b6e1aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54ad1762-0bd9-4aa2-90bc-2ec50b772c4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f757c9-73eb-4cb2-b576-684b701a6abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "697e287f-22e3-4629-ab9c-959f80c21bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319d83b6-a8a1-472e-b089-f8f161d04ba2",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7129c6eb-e8c1-448a-b7ec-1c707a69bcfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc0e3b2b-fd98-4b3e-80ce-f8a80d3524e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d21b28-9255-47f1-93cd-e3a0faea13af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97a0fbb8-1be8-4ac5-9fe7-891464d2e2ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0257880d-e198-41e2-a4ca-49ca6e1f3a16",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e8275a-faff-4ac2-9bb9-0055b33bd07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb9feddd-cf3f-419b-837f-c78217b37c06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a811042-7bd9-4d49-9210-fa569eccb1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cfdfc194-755c-4aad-ba99-a8a3d64973b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1acaad-f875-41d2-956b-f104ad2acb8f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a4712d-9203-4d5f-a990-708cf4290a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aca4bb3f-843e-4d4c-a9ac-8ba4947e8c9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72e1996-279c-40a4-8eea-d3e6f3cbe546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92fa716c-6cbf-4d00-9812-b5fc32917e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b06782-9406-48a9-ba6e-66790de875ec",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b237a72-fbd0-4505-93cc-8af5598f64b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34356056-272d-4840-ab48-4a101b9d6dd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "433e68dd-becc-4c03-a85a-7d7341264fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9791e55-c30f-4e0d-9b69-af7fcc79a7a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a874d45e-a491-40c3-a900-5ad175cdc449",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7867f63-7c5e-40a2-81e0-d23a71fa8a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52b99b5c-8f10-456f-83c2-c84721598286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc635fdf-c1ef-4f7f-bf90-df9719433793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "978f7cdc-9b9a-46f7-86a4-5050bbca7702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088083d7-64a9-4532-a4b6-92b829f132fe",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24086a12-36c5-4b16-900a-fbc1927160bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3758d37-49f7-4b20-880f-3c93a3c496f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c80ecd1b-56fe-44ba-9f65-9abddcf79829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de7c777f-8365-4a2a-8b59-3eb78cf6cf00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6665a73f-5a6d-4cdd-8435-c66aee676d47",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d483b951-3bfd-4687-8ac3-92c8630f719d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e36fc43d-594d-4cbf-94e0-442a952bfc55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d20b000-a401-4cec-84ee-f1242b2210d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8cb816e6-e820-4f9a-b309-b7e4a18c314f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a60afae-414e-46fc-946f-8d569be9be4d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c84028df-5bfb-442f-b132-421a167ad528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "182bb53d-3b34-47fd-a95a-1fae0dce0686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a2e88a0-71ab-4bc3-bfa5-a3800a05511a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ce64281-acf8-40f9-a877-45c317c0017b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "430adda3-6677-4c63-abd1-b9d415c1b2d3",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a652ab-5899-4a4b-a851-8d0300c41f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9403f06f-4ad0-4e67-b606-a4cda84e2a3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5aad127-4904-4555-bd0c-5e343575002e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1bce5e0e-13a5-465f-a7ee-69990cab89fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775f2cd1-0446-4259-873f-e79ed7df5f3d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead0d986-343c-43c1-b5ec-d17cc4038eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dff49472-4ab1-4216-b16e-90269db1308b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a06e214-042a-4fc7-9b1b-a1114b50d116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25b9bcbd-33f2-4494-87b9-628785160294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2051ef1-f81f-4cb5-a3b3-274d44732e26",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "947f5bb5-9ca0-4e3c-bba0-b534aeb161e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6af612ca-e7e3-4f42-b19c-de8ef0a4bbab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6361d0ed-38f8-4019-8e3b-70ec423de0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca7cdb8c-7c9a-4c5d-ae77-1dceab21e3e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7260bfba-374d-41ad-ab50-e4db1e2b63af",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b7c069-a570-4c27-bb61-286c08395623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50bff50b-367e-4787-ba80-efb60ac62306"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50796d4c-9ef5-4294-b1b6-9ccb339c00f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28155fa2-c3d8-4981-9d25-babbb9dd4170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e5f543a-c79c-4127-a2d1-c3d6154b3d7a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3240bc20-cbd9-4067-aad9-8a753169035c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af92eb85-8be0-422a-8e0f-04080fc4fde3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76e4dda-d271-4252-a0dc-242e684d2936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2a350fd-dc75-4b80-b550-96a4d7a3d34e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b66ef52-6cf9-4f66-b500-aa57add837c8",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33350de6-211d-446c-973b-94f353124120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdd18e75-df3d-499e-9522-090d44a9e121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7074fc2e-703b-49f2-8cf0-c692405a2b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bdfab765-cc69-4fbb-a203-baee73bf3b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "894a6180-4fc1-4220-b951-89d9976fcd8a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f88ffa-783b-440c-8074-79f26a0c3155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f59eb34e-e1fe-4cb5-90c7-10c1b7e48dfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1daf1e4-134b-407e-8c82-1ce480919443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd207596-7ecf-4eef-b6bc-5840fba63f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28728f94-7d44-4e72-94b9-e2a771fd56ae",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef7f3d3d-dccc-4129-9136-a108208fab8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1c060ea-04b7-400d-b951-29c3e3ff529d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fddac8d-52cc-4067-ac5f-15e262c71bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07aaa1b4-ae91-4454-ac84-7a9a4457e997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e9be3c-546c-4b71-9765-04c50daa8229",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b13b8942-80a9-4f45-ad0d-b0a1325ec280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d771fac-0baa-4767-bd31-278ccb78a27d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c892ca0d-9282-4db7-a69b-5242031caa2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "aece3c0b-1b88-408b-882c-5b9f2712f09f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3534819f-1e26-4363-a165-6d2acd7c273f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e97c77-195c-40ad-997f-c2dbf6a3e133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a7d9d9a-663c-4cc4-a24f-e743c93a65d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30609921-9063-4f80-839f-4cdc241bc362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5fed988-eb85-41d9-b033-62a5154f3390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc2465b1-8bfc-4620-a5cd-92bbe0fa7009",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec91d599-f782-40c3-92b3-a8b1d0a0f77b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bce8b1de-032c-40a7-ae6c-c285d5948a0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23061e72-a5c8-459b-a1a8-2e477d9c9ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce0e4f7d-9a0b-4d48-bda2-655774109463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd71fb78-01c6-4c7e-bc32-ea666810c654",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5997a19c-7ade-4881-be8c-61c1b2148117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ef92de8-6349-4fe4-bf0c-dc9a161260b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164be3d0-4c9c-4a05-8fbb-4f5790632c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a44872d0-17a8-4e61-a38b-bc51010b1239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f2ec9a-0015-4e88-80fa-a23287f29c71",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "635137c8-ac6c-49ab-a4c9-196b67ba9cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62ca7aba-5281-43fb-a3a0-b7cfa30208cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e52e12-ac90-467a-aac8-ef1421f1a33b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "da550c8c-ac78-4f86-891b-ece88280c7d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f11989c4-fba0-4181-8743-8f02f57d8919",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "163ad87c-78d0-47a2-8b75-2310dfa311b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5823179d-f0f3-4f7c-92ab-93a8b8a93859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac3057d-e204-4dc7-a21f-078f72f8e8c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "66bb4ae0-1774-42db-8aa9-fde5193b1ff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a937b5ec-3bf0-412d-8051-82e5750e61cc",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9cfca7a-e8e9-437d-9fe4-d358e193535a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "681f25ae-30a3-41f1-afb6-67a6f65ae0b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6f216d-4512-40f2-9fe6-8eecd79e305c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "237a7e85-2737-40d1-b2bb-b5bb92289efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7172347-f179-4527-a263-c0cbf2713c6d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a76a57df-5584-4232-9b23-ef7ad21d6c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0873b37-60cf-41fa-a832-d6742b5eade5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0d9bd0-4697-4a08-936d-96d26490ff61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5862c897-b609-493a-a3e5-a61c8376f377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f44988b4-2a01-4838-84f1-d68d246bf020",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c0e26da-52f3-475e-aa2e-245949dd8f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1739eb45-0159-40fd-8a4a-059f25398844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a683ad-a04e-4427-a81e-0abc6a98d841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "074568a6-3785-47d3-9533-d6e4c38ec417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e07777-a7fa-4eb6-b48d-588be2a9d1fb",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0487c35-b1f6-4354-89d6-be76d9d06ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fba7843c-f242-4316-be69-f0b5ef41bd0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a7691c-c203-4c30-810b-054c37fbc66d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1772c050-67de-4d38-8faf-273e4c6fbd50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7969df6e-28fd-4515-ad42-1335a178eb5f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db19a88d-914f-4e9a-8fc7-458ff94d4d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c68d3cd8-c580-4fb5-9a5e-f0c32f99acf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9e93aa-40c1-472b-96c6-886a9fa46ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c622769-7647-4a12-a5d9-057610282270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69fc7fe9-4b53-4c8e-ad66-cee72073de04",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e36501-7b03-445a-a9c8-009a34d543e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "682d3604-201b-46b3-930c-eb1e9e00ad35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4d7c63-3a05-44e1-8a40-ae81bb3d3090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "655681ba-3869-4510-a00b-47681e853bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d4c0ea-5a2d-4a11-8700-22d4f7a9cd72",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "557b0087-277c-4411-acea-738eb062ecd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "212b8d01-058e-4afd-9211-5f3a6ec85da8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "788d1f8d-42bc-451f-9a95-d33ea7d8d634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c469e1f1-c601-4933-b3dc-fe79c9d1b3bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc3e6d01-42a9-4838-8d68-c535b3c4d3f7",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7273a4c1-2d92-4527-866e-a8d28ef94015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0ff666e-12cd-48b0-ac5b-1a9acd763b6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c46e28-9ac9-4ffb-8d4a-0aa7a2f7d270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a8f755e-4bfc-43c5-ae6f-d7ee2fff8216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a4ef08d-5fdd-4125-9a98-f44d9bbf5b23",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cff3048-69f4-424f-a008-072793e40448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de27f19b-bbab-4e24-aa4a-b1c637247ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a85063be-f9f7-44c4-836c-9f96c50461ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "61c8ef51-064e-4a4c-a907-5b57003e7fc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afabaeb0-2ec8-46c2-aca0-1ed99542a89a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c76725-71b7-499a-b590-a3c8e4307410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "413018f3-eba6-4d3c-8c19-5f27b00dd592"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f66859f-0216-4e94-844a-be8abea95635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a882af2b-792d-425d-a509-ca73772ac5b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28254703-8c37-4446-b93d-38d6ba8499ff",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca04e63-a367-4595-b15d-dad3c12ed872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a65d7815-2051-46a3-863b-59dce4379f89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6bb00df-4bc2-4407-ae96-3b2517369ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c784f08c-716f-43c4-9600-bc633ddb76da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8069937-37b7-44fc-ba5b-fbd5b22363e4",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd35504-58e8-4b4a-89e2-b34869606ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31e0cc39-7b28-4755-8e78-54778981de1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6522c58-fa94-45c1-b540-b94df82f92eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "207cf710-e203-4232-924a-207337eca34c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba237fb1-2a7f-4b36-b40a-d705d720ce8f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ddceee6-a362-4a3c-b8af-7825f656eff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "335202d7-ea0f-484a-8bc7-6816d9f28d9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6066228e-ccf4-459a-8f3c-6e4fbe315717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "59d96f53-bf9c-479a-8a37-20425e140c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2997beb-d6dc-46f5-902a-e1472cd84ecd",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af33076-5eca-47d2-b787-6ac0ea36799e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "703d4456-9fa0-4309-a89e-3693f3e1d02a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b253874a-b1ae-4aa1-8fe0-b07dfce609c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8438bd6-a80d-4347-9e2c-bc5bbbaedee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a00fd8ef-5103-4849-8e9f-cbf5bc267c01",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "205a8322-2209-4ac2-a89d-681ef84fceee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f286b412-1343-4644-b4e5-671dcef20ab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed051a4-abf6-41f5-b1c1-8d3d964436e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7638f62-297a-4925-a891-90f28b61ec59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332f6fff-2c99-4182-9164-2903ea8e324d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb23480-0ca0-460b-9d6f-d39b05797133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1f733d2-9911-4506-8db8-6645da22780a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad51fa6-af25-43cb-88c7-0ef447413f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d222476-a373-433c-8f40-ef78fc146873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd7bd40f-ff88-4f86-8bc4-0fa321801640",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "832418c4-a5b0-41fa-b9ec-35fedcd411b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baa5af8f-2ad4-4741-b262-28aeb66f922d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d2a64f-194e-4364-b282-e443d8e968fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ae90626-f7a4-4f11-ab5b-84e9ecc95b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5467b9b6-eecd-47ec-8e7a-54030c48773a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a287636-7222-4892-b4d3-e7a20a08db83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d495273-6339-451f-a622-fffc104a3520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e207e48-3065-49ea-9f63-8d936c891fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d41de9d-aa66-4221-be62-ac7fa5a9c052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd97ffda-6237-4cd8-a982-f3ed77cec0a4",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7e13282-fcb8-4534-b5dd-5bd392bab9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c89d248-7c66-4406-bd3d-a64dccf78343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83744bd2-d483-4f9e-864a-42e442414b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b42dbfc9-906d-460a-b901-c78134d09982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff2fdce-feba-4d80-a773-972c86b0e72c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2de27c3-4c26-4329-8eb2-95a1d6938ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9d6e1d3-ce28-4d52-9015-640032b348fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41367981-3227-4f9a-afe1-83657b53ccc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7d4234a-720c-496b-9976-3e86319c8ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35375eb2-6567-40d1-9953-1b04f8ef3809",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda72c11-b9dd-4982-9352-b4277a4cde15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "530f0526-9839-4144-a4d9-f1a4ab6d2580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0568f91-a5aa-4b94-b8ba-e62a48b5a60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ecb98bf-58f1-43b1-b8b9-7919832dee42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7196b586-c44b-46ee-975b-5f82b93e00d5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe053b4-2cdf-42ef-872b-4136dcee781f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1b726e9-f11d-4013-b449-498157198a36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23492978-a5e8-47a4-865b-c5520dee4bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3487de0d-fe0d-4dc4-a145-9888073b8e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa1ac63f-680d-4a75-bfd4-cb62854a5a53",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9eaf842-dd6e-41b7-bab9-cd5e4220530b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb7ef885-1a6a-4b08-b158-04fccba2c648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d03b8ba-c204-43ca-a5e5-1c05e53338b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "73c2d45f-44e7-4fec-8c6a-41ed02aad6f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de59462-f0da-452b-8094-43e9b7e091c4",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea1c515-0a27-42c5-8024-c8c380336017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "298bc682-2440-415e-a1d8-a1b75c9000f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8efe3d4-5717-4174-ba68-fa91f7162a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b447d859-85dc-4e0e-813b-496523e7a14a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62716c46-7ade-4e55-a5bd-9733870a6c7d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "372368f1-e11b-4173-834c-d2dd29d0e068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20c79a07-fb76-4a96-9179-192564cacae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "353d88de-6607-498a-b820-13b40905783e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "158d2acc-e25e-4080-8104-735b1c28a2c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d642f925-b10b-42f3-a4a6-d842fe6150c6",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1ab966-0ff8-45e1-ac74-9dbb8fd2f30b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec02264f-ab7d-45ef-8331-4bb80ed8ecbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feed6f92-17a9-4588-9a10-12bc91bd4eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a81ae198-2e2e-46ff-85c1-f435dff131bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2400c71-29b8-4ad7-80a7-bc752121507c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b4496bf-6e38-41af-8c73-93235382a5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55a18836-a256-40e4-a22f-48e471b2fd7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6dbe39e-da40-4add-a07b-6b1237472770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e9c17fe5-9f18-43d4-ad3a-1465ddf6af63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3540b1a3-e11c-40e6-b017-cc41980cebb9",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba78ec1-51b1-4b3c-b1ea-e9957bee55fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17f20fc8-1507-4c72-92de-2e3dbcf4e1e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd4ed59-8211-44fb-a8eb-c364b5a4227d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a343cb9-92fe-447f-ac9e-39a6e08bb516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9592d8ea-da41-424d-9582-6b34f7d2af75",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1444bf9f-a644-434e-b6f0-4127d4d7cc2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e6d7aae-a0e3-4556-ac9c-b705f873d826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c32175-5588-48bf-a3e2-ffb7cbde99e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9730e74-f1a7-4865-8836-5282a71bc4b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c2c55d-70b9-4f8b-a7ca-3790f8b9a280",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4cc7146-d544-4cc8-bea1-5c65186023ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7508bf96-0eb1-4707-a940-ae4939fcbdb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83926afe-88cc-4573-b8ac-523e9f5b2f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2289bf62-14ac-4b31-a642-44dd92573925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07bdfb1-ea98-4371-8295-0a2287f3d23d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc8fe29-bc17-4a7e-bca3-27eba6fc9d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c128b9be-297f-4878-bb6e-1c7f378a87d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a63f3a6-2471-46b1-8531-b613b1c68f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "deadf46d-4253-4213-9d71-c00a2cd6b1f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee173ceb-e97a-4746-b17d-ace3b42cac56",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7156a232-afc0-47ce-a422-939b61ee6fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c70a9549-5a82-426e-a7ba-3090bf673007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc344d69-e60a-4e39-8c40-78177bc7b8a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d1d281d-9167-42e5-a9fe-f3c05b2e2698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bfc3b05-5314-4a1f-ac0f-6e36f421a208",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd7895a-548c-46db-8d23-80053c6f2865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee3e7b84-3cfb-41da-b79d-973c2feb089b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29768f74-4fd9-4604-97f4-db24c5f4b264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e8223374-1e32-4b38-b37b-8d64738c00b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c45380dd-e22d-4f72-a7a5-4bfc2975e428",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a523c346-69b0-44e6-9105-121475ef0181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e3fa2c4-bb92-4fc0-b94d-5f27c0c6ccf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f408b669-0817-4365-bae3-003d2b5fee00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3017e933-2433-4122-be1a-bb2771c56a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c323b5d-e83b-4179-a3e6-9bb5fbdc84c9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85bf7b00-6d08-4317-ac19-679581c3c92a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6310302-9126-4dd7-9e5e-718250524bd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "060c502a-efc7-4a84-9944-d214cd9546da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a48ec8d1-10fa-4b8f-8fa2-f08f26f674da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dbb4049-62c9-40fb-910c-ede5dd62f82a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0892bf1-af9a-4f92-8be6-2cf4aa8ce750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cb0adb5-3ddd-498b-b7e7-18676ba81ca0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c3d84c1-fa43-4f7e-94b2-803e24f019f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc9eba74-76d0-4529-96c5-131fd8307824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4539467f-c917-4ec5-bb64-0ab419eb2ae4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a688b81-147c-4b92-8cf1-9b18d698a3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1ab6145-1077-4d8c-8af0-ffdca9b01d01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a40635-3507-42d1-9f82-4b9f6c375e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0afbbcf-5d28-4eb2-8b34-76874bd07419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7b0750-8a3b-48cf-93ac-f00425cd6c1d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7243a091-d710-4886-8800-892ef1009cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6eb5218-a21b-434d-89bd-42d70ddfdbd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04dcdf8b-179c-4e6e-994f-b30b6c491065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3792c4b9-aa66-4dfe-a7bf-81966153d2d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb9c4412-1d3f-4f27-ad9c-87a143cce38d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caff0f03-f3b6-4ea7-936e-a9f3d9e1b1fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b74f2ade-58f5-43db-ae84-d0cda112bc98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "711cf09a-f992-4291-9cac-6f8ceecd78bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfbceba8-de9f-42f0-bfb9-06e7dec18a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ff7d9c-fba7-4890-99b1-0b6fb9ffe9ba",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f8f0dcb-cd0f-4632-a393-351bc2695cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e40f8b1-c04e-4d66-afe0-1ec8e5a2d8e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd56cae-d42c-43a3-9274-05b71a51dd2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a4b1b1d-3539-4825-9977-389242a0470b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd43ba5a-369f-4c10-8b99-ce8a56f1e5dd",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a834c5a1-f8df-4542-84ce-1b549bacbbd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fea2ffe7-4cc3-4f69-96f0-2268ae160e35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ebb39bc-87d6-462e-aafd-bb601cdb7996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "43dbefac-c31e-4622-9f8e-a8288b1fb255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c841148c-ff55-4132-96c8-cf27ec2232a4",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49ab1f4-3487-4d77-9e50-895d75f68122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "794d2f3f-03fc-4330-8567-a43fb51a2e16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1e05bc-81ce-44f3-a7be-8b3ca7c2bf5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9355031-7461-47ac-b170-76c90503762f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf07ff0-855d-43bd-b2a6-40e9e818c320",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf1e0eb-a25d-4d30-bf2a-affe4e787e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5007407b-d946-4587-87a5-4b8c2e973c06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "becb9c11-aca3-4fc6-bcd8-53597b758617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "11975c0b-dfeb-459c-a3a0-139f992ff457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20720a9-d66d-425f-81b6-935c8d5de59a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c71eca-844c-4ec1-af60-2cd584c9cc7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eafb6b9-d5d0-4fc6-a5a6-db181e4fbbcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad182fa3-aebd-4625-9844-5712086c4efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3d62ca27-d584-47e6-8a0d-59b3dd2a1b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa80d985-f0be-4604-922c-9ba895d2fbc5",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0133d644-91b5-4f29-8899-93c4fbb07afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aa52c5c-b912-48e4-a3da-9a1c40ee0db6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c80772-753c-4ca8-a30f-feda4f742dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "dedcc67e-1ecc-4f03-9323-7c7c98907db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c95bf62-6cf1-4960-8f8d-700eea20b149",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e90237b-c45f-4884-991e-affca5aa9d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe9ee65d-2442-4d7b-94fc-05b07468ce23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c8592e-cc43-4a00-8bdd-1365a868a8b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a2d28c4-7025-4abe-9aa4-96331b283aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "448917ce-cc58-4634-bd8d-ca230e540a8c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10729505-ed48-4181-a19c-d179e041c1de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40b69d70-f7fb-4f7d-bb13-477512f9aa69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d6867cd-67da-429b-a0db-83307ca5c337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b909c94c-4306-4be4-b6a5-b26fa9102b6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be1aedfc-c0e3-4b78-967c-e7d773c9d121",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2edcad26-ac3b-4499-8e4b-f8ab46de3932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc4f2090-27c2-482c-880a-5e95bbee942d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9694a641-0f9b-4ae7-b5ae-bd7aef6bf4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "db73dc25-3f0f-43d4-a494-338e850a66e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e1e39b-2629-483c-82ae-80ec56f76ada",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e5573a8-606f-4309-888f-74a7864fba35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e23f87f-8d17-4c3e-a6f1-8c7cfdfef1aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b397c3-40f9-4350-bf7e-9a86167f1184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f8c4706-a593-4caf-892b-1557ede7a5e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9071ac47-6f5a-421f-8247-8d278788fcfc",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1edf6639-8515-4a10-a8ea-ddd2c50244c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de433e19-5759-4798-959d-5a3d14cfc63c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae66f57-01e6-4f25-bd9b-fa0d194ed01e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7095a9f-1ef8-4722-a83f-233d8410a5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82126d5c-37fa-4f1c-963f-1e00197028bd",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad337d7-f5a2-4bb9-b3e3-22065947d6f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02a8cdc9-24a5-4a91-818a-8f158f543b5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f7dafc-b7df-4a43-accc-8e7edd42ee68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2f51ed53-65e6-4b81-8a55-a01ac8afced8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e5a5138-918b-4591-b984-da033a72fbbf",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d787923b-8f72-429b-a44d-a1dc3da69758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cc1510d-0338-4c51-a7b8-503fc16da5d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b4a2c2-75ae-45a3-944c-dc5c34fa3565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c51db35e-2db0-45a9-ab07-ed4e6c742492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a897169f-0fe5-45b2-9832-205b3608e6a4",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60bbbfb9-aec4-4133-a96e-ad0aaa6b65e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75e9208a-e217-4ddd-bd9a-330111086c45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f1cca6-daaa-4971-a134-86d962b92aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1a4d00e-4f86-4cf3-87e9-85286cdd8976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34fe9472-b9f0-4cd2-98df-ca543880ceca",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "956881c6-5114-4de5-945c-29ff58f481ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62799591-9105-47ee-b420-dfb7995d6dc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da600ff9-c0fa-4a86-a271-cc970afc18af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c27cd93b-7610-4946-9aab-cfaa921e4c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611cd887-4520-4ad8-a0ee-98aaf5801494",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de9f670-c686-4a89-a0b8-783fc7d3e8f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "637d93e5-409b-4ea5-bd51-2443bd0fd017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9197a35-5cce-47f0-a407-b5a1457dc3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "feabcd04-704d-4958-9c25-8d4c55a338dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c3f3bd-6741-47cf-84ef-d11e4cae289c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b3d5c4-d4ff-4c97-bc2e-57e70213e77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d904a5be-8358-4ff8-ab4c-d68959849b1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c07b6d-44df-44d3-a4d2-2b66a8269d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5bcc4928-86dd-4a25-98cb-19be77e9c702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4949d2e9-a62e-42c4-bfb8-11aeba4a7885",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca5a57f7-f521-4fb4-8087-3cc90d147dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd104497-ff52-46a0-89a4-fe6118d5fc4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "580a7f92-c221-4f2d-bf2c-e36b7f790bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0a009ae2-64f1-4452-b2e7-69495812ff11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02c2e99-a634-4a01-88ff-6146a9271f8f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a417b984-5cdd-41b3-8d73-a7d96d366244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6041a7e1-e99b-44bf-9322-34bad6ab83a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "962cfc3f-d96a-4cf6-8caa-420c48b8c331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd908d12-3ad4-4d0e-9044-aaeb62724f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbc3e88d-369a-4362-86f8-0767348f033c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c4d5ab-1f4b-45c1-8152-54c40a42d2e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f19e033d-cbf7-4865-8d77-f4cd0681d3f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "111b16e2-6748-41c6-ae18-1864a65c9e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8646cd05-e1d8-4f84-b9b4-cd52ec4f4249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d53c0d45-e42d-47a6-815d-8eae4ffeb9ee",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf42cf8a-9086-4f58-b876-ba2eb7a64a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4654a3c9-ab45-4776-990c-699115b46b7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f8eecce-760d-4734-af6e-d084b738b4e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9464b2bf-20c2-4003-85ab-19e637782c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f64be1e5-8b3e-4356-afb2-4861786acc16",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04068647-d680-4d21-9cb7-49d3353125da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38898773-38eb-4813-80b1-9c985701ed32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c6c780-da93-4a58-a0c3-1a4175c62e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "135c4e64-9448-4f68-811c-a46080de8089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e68774-a962-417e-949d-9dcf6ec06bf4",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4177fb25-43a2-4e9c-9758-edf4462fc82b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cfeb73e-cc98-4715-9413-652268879bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47190793-a187-4083-96a9-2612dd84134a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7558b4ba-0096-4f22-bb17-f6885428771b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73f0605-08b9-49b1-a1e9-4aca35e4f50d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f84d60d-47e4-4603-962e-280f0221e3a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d01052d-ba27-4478-9785-e064587d4ed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c4e0d0-074d-449d-8dae-adda9c2192dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "427e2b17-ede4-439d-b399-2aaed821bf66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a891c2d6-37f3-41b4-97d9-469b5affc9a9",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db659c3c-463d-40e6-b662-dbbea83de2b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26392cdb-5497-4def-8b5e-f20dbaf059b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9921d1d1-79fe-4c86-9966-1ec9b21fe6a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4dbfe694-b09f-4e68-a99b-7db7b6dea5ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ac3272-60ba-4e84-b309-7671528cfbd4",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8332b241-8d01-43a2-aa57-246cb3fbe020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ac6b6f8-e765-4a8c-ad14-a27b41811388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b210434-9533-48bb-92ac-cb954cef4489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e90f93f0-6bff-43bd-aa85-a2e0b06a63ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8e27e3-a7b7-4f4f-b630-8dfc64776a1b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc9256a4-c596-43ab-8942-4f48b04c54b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b1dd114-94bd-4e3c-a16a-8c30272757c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f9ad9f-e13c-4ea9-a32b-a0a0fab8aa08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "12d88c85-3274-44cb-b1eb-547a45dde5c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c82b5c4-b09b-4296-a1d7-eee2ad7881c3",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe9a60f-4f53-4f66-9b79-a70c4629ac9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59eb061d-2495-4759-aaec-eb255234754a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf11fa1b-0045-4338-9126-a7edb1600683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1d9a02f-a92d-467c-9980-e89ac21b5307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c94e24-e231-4287-b830-c4502efd038b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c49b9a-cccd-43b4-aac7-06e3dd5fdbec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d56778b8-f580-4a82-8642-3e22a08b364e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6692b4dd-69ef-4564-bff5-baf4e3becd33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "24c5111c-db9a-44b4-80e4-cb74f0ea1e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb06dfe-c416-4450-8ad5-e452c77ac4d8",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ed0190-5963-4a18-98aa-75cf4a7fecd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8e5fc982-d9e9-44cf-944a-987d53d3a337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce996f69-dbd8-400f-be1e-b6bfeba25d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "76f0d8d9-4624-44cc-b591-72fb1cf16e1c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "296927ea-2884-4432-8a2d-b2ac38bb9d96",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "51c7cc2c-54ed-4bcf-b579-5d9fdb155870",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45614015-1656-490b-8620-7a513adfbb6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33254cc1-219d-428e-b96c-9fd065f170dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af27d24c-91a7-4a00-b953-7981fdedf261",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84832def-e936-4924-9707-b591fa9ac2cb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c7e35c7-6435-4a12-a30a-252eaf06af1c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c17e0381-1dce-4d4c-a85a-92f5c5f0e505"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3319b7e-f5e4-4165-830d-1bdd64143f52",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6dbc6b3-290f-4934-b0fe-4a0bb26415fa"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2cd710d3-6ed7-444e-bcbd-280193780e3c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ae0749b1-f5c9-4499-8e5f-51df5bb2c58c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7104d807-a40d-458a-ad94-0a8ee228745b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "46cf35c1-6c8a-4444-8ace-6daa4058ed49"
                }
              }
            ]
          },
          {
            "id": "fae5b26b-ec6a-44be-b4d6-f1c81ed1ea5c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "56644575-1c0d-43d0-a97a-cca1b418a34b",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "5f8474b6-3ebf-495b-a62b-da010f468d54",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a5e2e2-24bb-41a6-b40a-8b97fc1f45ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "026dce51-818a-495a-828f-18de73836e58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5599aff2-7832-41ca-b979-9432d2f14860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08ebf917-1340-4e5b-9105-4d3ee603f843"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0d24348e-6137-404a-becc-46ff4e5e76c8",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e9b0218-11b0-4822-8bfa-7aaeb390145d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "787f643c-8386-4f7f-aca8-830ba651ca43"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2752ac77-c184-4ad6-bd3e-b66453a24313",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ea7b7a1d-8a73-462c-b178-fcce7ef63111"
                    }
                  }
                ]
              },
              {
                "id": "be565541-03e9-4201-baa9-d61efc0e7f31",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a8254a7-100b-4ef8-883c-06baa9bc8dd1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b505e16d-9de6-4e4c-8080-adb259082cfa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a8d4461-3062-4017-b9fb-96dd2e1397d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a8aa6cf1-7d53-4b49-b02d-e4426fdff992"
                    }
                  }
                ]
              },
              {
                "id": "163c965d-e551-4f82-b6bd-01a015b74e7a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "65a90719-06ae-4377-bece-7a45c3af5185",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a67d20c4-0483-4eea-be28-b543522eb4ec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4485adb-68b0-424a-a584-0a95e7779cba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c7301289-feb8-4708-8458-2e30e882cf7c"
                    }
                  }
                ]
              },
              {
                "id": "95fb7f77-82eb-4415-9b11-42f049be3652",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "34a3da72-725c-476e-a650-5239e63a5a65",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0dfd8059-308f-4b2e-b537-9f764bd59534"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e713b5cd-7156-4cf1-aa7b-7a5821b337b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "fb2b68ac-f9e0-4fee-951f-ecf5405d619d"
                    }
                  }
                ]
              },
              {
                "id": "9ad82ee8-2d8c-44be-976d-cdccefb7983b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "44a83171-af99-4ad3-866d-8ba81a8d0276",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3215693c-bf85-4a19-91ff-4217b0156f16"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ee029d7-0e89-4805-beed-9de0d3d189e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ab498491-694c-4640-afaf-eb9887780436"
                    }
                  }
                ]
              },
              {
                "id": "4b8baa24-2699-4224-9f37-c86dc8939c15",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e2748e6-6f0d-42a3-b957-4138f91b6275",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fb528f45-5ba1-413c-ad71-e7683db87bd5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68dc8556-bcfd-46d1-a024-4cb9ca16e595",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4ab2c226-6bd2-48c4-b8d3-34676783d6f3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a2bd7615-0d57-481d-a753-d01c75d9d867",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1d696d95-6089-4c95-8c65-759377918f95"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "028e2e14-c990-45b6-ba63-815e7b3946fc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bef6a18e-ebaf-4d77-a1dd-26521fcf5ec4"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e0a7a6b-2d33-44a6-9d85-763ee2fef24f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "09295211-7291-4a1f-850b-0d86ef76bd73"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "67e456b3-aad3-4087-815e-cb856cfa4025",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a328abc4-ee0a-43c5-9e7d-aa8ab9e88acb"
            }
          }
        ]
      },
      {
        "id": "88a2ebbc-e375-4497-a95b-3151e09231c4",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "599091cc-c66a-4591-b750-3c9926323d09",
            "name": "Negative Testing",
            "item": [
              {
                "id": "27f9ff04-b6d7-47dc-a961-4f719478bf7d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "298a72ab-d302-4aa4-89cf-200ca972dfaf",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8beb8923-f514-4be7-9d6d-2e36aa703e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61405ecb-da0a-4a9f-9232-84673a22fc20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "179602eb-c366-42f0-896e-a066c2cc9124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "466bf918-ed98-4401-903c-4aef4e481810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "894c3159-ca6d-4644-b41a-80bc7b4a630d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6b942e5-7f68-4d4c-a98d-fbb1c09840b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5597c439-1631-46dd-82cc-cc3b9bbdbfb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84716010-71f8-4bfb-91d2-364c312d922d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "18b96941-f79c-494a-b147-82398f867be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c467f54-713e-416d-8353-cdd8147d46ec",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93fd0a97-725f-4781-93b3-50ff49064f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "852c1717-741e-47ac-ba47-819d241d6f06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d60f67a-7812-48d2-8a7b-d01f139de282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b291fd1-b29c-4502-b5dc-e7a3a9f49504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce90bbfb-6129-4fde-9ad2-79af92d4b0c1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba623fe-c94d-4f1c-9784-b1f1af89abec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95786242-82c4-4f69-8bca-958a228da063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e519e28-86ea-46b1-816b-395f65712b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "61338de3-2b88-4283-98e2-ada2ae4c8504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8300ae60-6e26-43ef-9cb1-8da78ea3adcf",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a76acd96-2d25-4cf7-b7d6-ebd3c7d72567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a59d8b0-fe9a-48ef-a8fa-d90d8c5d0ac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3588af9-8917-470c-b34f-690a8e49a34f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf29cfea-743e-42b2-a49d-20aa91f61406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10da060-e3e1-4381-b469-a7fbacfbca2d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d297ff-3a89-4191-b8b9-1b8ec5fc4940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83253ca6-de50-4d3b-a632-7f019ff58a5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b79cbb-b0f6-4856-bc78-56fb91618c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "581ffb4c-48ee-4ed3-aa30-94b79aa71eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c356a05-85f8-4708-b77e-fdac3c31f8d4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "814d4710-d399-40fd-a6ef-6afe3a5da0aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c42169d-49b1-409f-aaf5-319374deca68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b3d9be-1d97-4c27-9f39-9e4ae58c819b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce4eb1cd-332a-481f-a33c-b9a01e63ac30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf6d15c-00ed-4323-ab25-30f925155bff",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6788f84-cae2-40f8-8051-8214b09dcaa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dcae32c-13c6-4ea6-89ff-55ea8470cb10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1234375-9af5-4c02-91f7-e969b3451dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c72e62c-be29-4a25-a3c7-c880cb4b888b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844a1c1a-004e-4ba6-ab04-1b41afe2b9eb",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "800e7e71-4786-4bab-b1a2-d53be70eaa33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3133af6e-c8da-4ef4-8fbe-427a52a4a565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde101da-798a-4725-84f2-d0b0d38f1b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "15007cea-9b7f-49ce-b97d-aeca581713ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf87d6d-d860-4523-a53b-a8fab7420871",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f5a992f-fdb2-4473-b8e1-0139ce838ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54ab84ff-7870-493f-a06f-0d7e3d148cc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0209c80b-4f7c-4b3d-aad5-18db78f08344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0d67f5b-776f-4f28-b07e-081301303b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad55f16-ad23-412f-b2a7-f4fca2f51bd1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed6da9d-420b-4e51-ac80-5d8b6f7779e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4916833-4383-4ee5-9742-8b16b927e420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13a4132e-903b-4b14-a8b1-0804cb8f32d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2b444a29-1370-4214-aa7f-8cba9af4f724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36deb992-1f99-43d6-bb35-eb0474d05c0f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87107c1e-d03d-46b4-9b42-a74bcd9bbdcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "470c1910-3405-4f08-9551-24a0f2249905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d3c3a9-ebba-42a6-8a3b-42881e448337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e59f72a7-1468-48ce-aa82-24a43867b2ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3edec0d-21a9-401d-ab7d-2b586062fd93",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2a5448-c0ee-4189-aaa4-c38d099117e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0c8fe55-6e2a-4f60-bdf5-6d80415cd6a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e0d869c-ddd9-40b2-baad-40745ec48ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b69f2214-7f37-49aa-8ed5-29f5fa1263e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ef3d3a-cbfb-4ea7-865a-599b3caf7356",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3abc9ee-c7f7-441d-ba18-31c34cbbfe76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91ca0266-8718-4338-acea-be4b49b3a3cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f807fe5f-6549-4991-a5d1-c1c9e615b4ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7b2a08e-6bbf-41e6-816e-256a3612988e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa7f557-1812-4751-8768-44987dfc1307",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df0e66a5-5af8-4cd4-9d0b-2cc2707f3fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9bb96ed-0d21-4e52-8193-f92e6cba052b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b17f40-a41a-4a8d-8fcd-526e1d4a6692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "da47d403-2614-42f2-9d45-1d54daa759ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d75da4-923c-462f-8631-d46778f2f2c1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e2bc32f-e969-4b64-b14b-015f3cb8b11d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c6a9483-27ba-4cb4-9298-1759b314608c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef03b75-e88c-4b4f-a927-5f57d87e7430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f10e0c8d-5270-45ba-abd3-fa8f71377abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f4f7c8-85b0-4b8e-9208-79588a490a7e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70c9970-e682-4164-b1cd-d86e0fc8931f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4cfcf9d-dab0-4c56-941d-a8a9a90a05f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da5a25e9-9b3c-4b2b-978a-e067823cc34f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4386b5a9-27a5-4beb-a287-c510df8ae691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1be759b-2047-4434-914b-df34cd87d4d1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea462523-58ad-4e78-b450-a98eefb6a60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6030dd6e-d070-4713-ad1c-749c1486b30c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5c64385-c00d-4a20-8b0a-b618cc5a6fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd579bf2-7a22-48ca-92a8-507baace6541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e554d99-3507-4656-9357-2b2cf5ac2df6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5200583c-a86f-4f21-9fb7-9c1091bb69a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2796db13-fd44-4baf-a33a-5a768af41813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1ba08a-c783-4adb-b3e5-3119b7016943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58f7281e-e2a0-405f-a9c1-0ba9e95ecc71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abaafb7b-1378-492b-b058-1ea0d1b20f62",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a2e41f-8f38-4e91-97c7-291f1d8fcfea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c9533cf-2995-412a-9f65-4f0a9ad6a0ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb53a679-f028-4244-8c0c-59faaa5a728a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b9858be-3300-405e-b4c1-731301ce0c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e82f52-4506-4da8-bc82-657dabd040b7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e10f95-a4ed-4ada-8a0a-365ea9df80f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef86f5f2-a4d7-491e-bf0c-613512f14afa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6ce53b-a8be-4ac4-ac43-800974061f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f579dcb9-8f9e-4c65-bc7f-9ddbeba26e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a1de423-e572-4783-a6d8-f4a939b04c2b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d830f44b-52c4-45a3-b99f-0dd512997c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a55ab171-a6d9-4ec8-b1eb-ad426353861d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b029e726-5758-4da3-89d8-f4c2db634748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e82b0615-e2cd-4f39-a609-9b92ab91d0e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9419ae87-e1c3-4444-9954-4586c6550d62",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7229d17e-ccb9-4854-96b2-86cfc5d8111e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efd5bb0a-c7ee-4053-950f-2a62acd512a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d6d5939-d8f0-41ee-b6e8-cfc7216b1750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6fb9659-072b-4468-82b6-ee332c22bceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad26bfbb-f857-4c6a-a704-17e2b198304c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae20cc93-474f-4772-9096-5c2557bcf431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "092923b7-eaae-4fe6-8071-6cbf915deae0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7859ae8-4f6c-486c-9dd0-14025576d96e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2d1479e-50fc-4737-b844-c9c35642b192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f55099-8e31-4f4f-bfae-e78e664915fb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07bbf197-e3a8-4809-b55a-aee066bfc799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89daa49c-c683-4b9a-a398-62d069a90383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8575ae9c-0551-48c9-a344-bfc5fa725d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d37361ab-e05e-4ed7-83d3-c4063b5a4b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7046bcfc-f6b7-46b5-aa75-b3addc02b1e7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a557f93-16c1-4882-b670-300f317703f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8356f639-95fe-404d-8240-37f442ecb0d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07a9768-903f-4ea1-b191-db53cca6ae64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "481e61b2-90df-4bb9-8432-f42550504805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a14a0784-5d4e-4dcd-a93f-006274c5b8eb",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49772d46-383f-4175-bde5-c1078c9055a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f70f386b-ff1d-4055-ad87-7ebe20dee921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "907561c0-0611-481e-9fe6-f957bc7610ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d6d8961-3633-415a-bb95-07bdd96cf88f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609fdbf8-ecfc-454b-a3b1-2276cb7ffa52",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1591607-604f-4057-8ed2-33b931463ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cbc2458-072f-4a2b-9b88-94d174a34260"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd29152-90af-482f-8d4f-9a3b829fbb2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95773897-c954-4cb7-ab56-11c0d747de87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d18fa608-9fbe-4184-bbf2-0966f4c88fde",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0ec2d2-40fc-41b6-a841-9374eefef32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16062b2d-1fa4-482d-ba68-f4ba87991f8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf421068-3f58-4320-8bd7-393ce3d0ec11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b383984a-7717-4100-8d54-b6fc45483ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d304a147-10db-4b26-ba6b-33b43f823001",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c285b2f1-b87e-40bc-a156-73186706a44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdf5d009-7afe-4325-bd4a-e89754c23bc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e989af82-dc6d-4216-914a-cfb8e234d5ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2b7d620-3a99-4a52-a57f-a29b6cfa485e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2937740-d65d-4b74-864e-9388c32fb738",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a6c5af-737d-4450-9e63-44b087726bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ee8e16a-03ee-403d-9df2-79355b00af5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8169b74-9ebb-4f76-abf4-c93594804e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b40a788-f65b-40d7-a81d-83ee7eec9e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fed6f97-be1a-4c24-9edc-72acdd54ee8a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa1e28b5-371c-4177-b460-63f152fa45b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0da8e084-0532-4bc5-9cd4-8bbc49927e5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf089486-af97-45a3-b6db-2e5a2f52b071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "203f36a5-f894-40e5-b10e-e036cc3d21eb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "65c6a362-b841-4924-bf23-57fc9cec27df",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eba4422b-6a10-421b-8df5-bec377ff8102",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a06e53-12cd-49a5-b0c0-7a25862d2b6a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a48ee8a7-9ea0-4989-a311-03ad9f2a1b16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d17faf2-523c-4592-83bd-f202f3576e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c1f12e8-1a66-4460-a7e6-1fb252d32c9b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "508106bd-15c6-45bf-b201-0e84e8f90bec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31f4e5d0-81b2-488a-a825-92a51e2cf7c5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1fcb378e-2b5c-4de1-a550-638edd4dcaa2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "85654513-2c3c-432a-9c42-6238534eb78c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ba7d7ad-86ac-4ee0-b3a6-9db77017243d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "74feac10-f381-4855-a9df-99069a7c16d7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c0c311bf-c81f-4ead-8e25-eb599724cf16",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dfc5cd47-a1b4-4620-ba2e-853885d7ba7d"
            }
          }
        ]
      },
      {
        "id": "d439bfef-56bf-48af-9052-aa39cef26c38",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "e2bb2224-91a6-4ec2-942b-5267188daf57",
            "name": "Negative Testing",
            "item": [
              {
                "id": "60ef2289-6ac0-4c17-9559-76e3e467c71a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d3fbb283-ce7a-454e-968c-435b34ee77bc",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8632ed-47d0-4ef9-8a2d-7d580942dd84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f70b788-efee-4d3d-acb5-09271ff1a696"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b157352c-9352-4028-9450-0a61f4010365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "157b95c2-def5-44fd-a0b8-8adbbe04d272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac89f01c-e3b8-4486-a8b7-cd378179bb4e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d237bf-285d-498a-9b82-627f65715550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9276e02d-6ed8-4160-a9cd-70a9eebb6ada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc2d181d-3be3-439e-950c-49f6a72fb5ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "06ad36bd-f37f-4eac-a936-c5b8bdfa7df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5647f141-99bc-4b5c-9f49-059a538f60a0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7904e81-b1d4-4b45-b782-647ae989f4f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "448faffa-fa40-4e6d-92c4-4ed1cf1700c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36709ea2-8f95-48c2-ad88-1ff35014f947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "204c053f-af64-44ad-b61b-979a1f2a8360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b53f8ea-d60f-46a3-92d3-2661657af40b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ebe4bb3-c3b7-4114-8706-da3e5aeae297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "438cdaf8-534d-4e02-8a6e-b45bdfe5d99e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc594989-104b-4202-99d2-5c9937807a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9383c401-9270-4fa4-9564-8dd6b928a1a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9167cc99-2891-400b-a724-008ac113dbfa",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f4c19f-5ba4-4b6c-a5c6-aedc30091e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75bd482c-88d2-4754-bd6f-65b3a31f1336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdce3d47-a418-47a1-8407-4f0c68cc7717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6360667-c65f-4cb9-a767-5c7d2bce0ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d15d9b-6a62-4f49-b993-c70af6472438",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c3452a-8e5f-409d-8001-bd746a12a6ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86d8b888-be72-498e-9591-2fb7d21d838a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e76d8aa-635d-417d-94e4-0032b4d86738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d933793e-3be1-4d5b-843e-fa22d947222d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5262a450-49cf-44ba-ac12-3fb1d001a18f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "586281ca-fdf8-4042-95ce-f781645417cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "169f574a-b5af-431d-aff5-7fef34fb9465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7cfab8f-c7e8-4b3c-a4ea-7b799b67c1b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7e9f3e0-ad30-4c85-9aeb-7cb5ceac8550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338b443e-4956-41eb-b8d5-18ef6f545c30",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe5e03b-70f1-4eae-a613-7addbafcad97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90f20267-ea16-4d69-841b-737fb0e80e82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f79a715e-5974-4461-9e73-1f67bba1a955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bfff68c-c5f0-49f1-abdb-63ddd8898db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e3c59e-38fc-4c81-850b-61e1b1b5447b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb770262-512b-4536-93b8-9acf3e1227cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f0483c0-240c-47ec-8844-3f4e9342e5e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3399e176-f5a8-4e5f-bba1-e086a5663ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ebe28dd-ac7b-4979-a711-c276a5868bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32bf9456-6d70-4c77-8c2c-084fa78485fe",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b068d0-d078-40b4-a928-00e00e81521e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0b4fda5-d1bb-488d-9a28-40f96acd0f13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0cfbac-ab2c-4ccf-9522-a10e5d57e152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "93160475-2171-4298-a4e5-b7549470c54d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dabb7c7-4f25-4962-acca-7f746a0fa1d7",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f6bba2-39f5-411b-8d4f-3658f4bf69f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29e48791-cf04-435b-a5e2-c6617be88e3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86ae820-04a8-4665-ad53-56cb35587a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e468cd73-d34f-4f5b-8cee-7f14278a69d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca7f0ea-7429-4850-b8a6-db9c9a6327d2",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18984281-4047-4899-b10c-50107f762bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdc37e9d-b970-48cf-accf-800223f33e48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a0e0e2c-5c3f-4bc0-93ae-39a05f139330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "98e9f0a8-dddc-48ae-94c1-72510e07798b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "873ebf22-497b-4f03-966f-ea669358efc6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a4cf82-dc35-47cd-9a7e-4d27c46e16f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03b23567-14a4-41ab-a5c0-98faf1645536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab22e3d-70fb-488c-ad10-71ad818fa79e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9af086cf-7026-4114-af01-c640506c6bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c880a3c1-9867-41a1-bb98-424a12b86ce0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92848950-a96c-436f-a08e-870ad77bc3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "febc6ec4-6b04-48b1-80f4-06400c64d2e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6923cc48-6594-4208-bdf7-366734c136d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "62336e00-78f4-4098-a7fc-5510bad25ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d141936-0c2c-4852-917f-af62b9ddefd0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "522391d0-b24d-47d0-9858-ae807544d8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8439f08-8df5-40bb-ab5e-4c28471e3978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24711f73-17ff-4f1b-a9c0-4582d6cd6878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "87528630-2487-4c92-b681-025094db4b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbafe3d7-cb6b-4da3-a347-723404abb46d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce41e0a6-0b7e-46e5-83a0-fa2f7c4ac910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1ce01ba-bcf7-4cbd-9466-befdaa6ad514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d57aa9ed-49f0-4d52-8a3e-534d103ce85e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "51e6a1c4-6ac7-4506-8151-acdcf52a8236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bd3fcbb-598f-4aea-adc0-c2a126d7fc9a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c18e2d0c-ad9e-4044-907c-e8ed1d5284a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e5552c9-5338-4f3d-bff9-2b82de432fe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f641197b-aa13-4d2e-bfb2-28ada9a7306c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bbea537-a353-4c3c-aa92-63a76ff4d6f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a8b2f3b-d96e-4953-9134-fbe0b16c6337",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a96dc7ea-1aa5-4c06-a286-7d1cb89168d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0256c59-4f26-4366-b88f-048538bec0e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "411ecb45-a760-4337-9160-a2cceda9ecb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d05df4f6-f5fa-44c5-98f4-45df1ab79fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b1806b-e244-4093-9968-00d486827f69",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08f188e-8287-4afc-af7c-1396b9da54ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "392d8d12-1fbd-463f-a7ad-801f34fa2df7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7adc8b77-814a-4b77-93b8-496a3b461212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e740433-a5b4-47e9-84c7-8a631f81075c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62dc8e33-2e41-4241-8c81-53694219aab3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9887e4a2-0acb-45df-b3e4-e696658c1b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a824e1a-de62-4b15-8b31-43b24454c6fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7310080-41e0-4840-a9a4-7a169c9c88dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5b7189a-9a30-4ed6-97b8-9dd69e64dafb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1697d87d-8382-4b61-997a-20304aa93503",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea82e62-d67c-4c16-afce-410401234ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da37a4ed-5fa8-4e1a-a2c4-46b2ef5eab20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ff7dccc-946d-47a8-9cbf-0f137d5ef747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cd53810-5599-4fee-92f7-222fa3a87e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15994733-722f-449c-94f4-81ad2ca9a3c8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba49fd46-3816-4749-ab3b-1545b72aabb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "868fff72-3910-4724-a9ef-6ef713bc36f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f274d5-4e21-4eeb-85e5-a74c73c2aad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be9e312c-16ec-4a20-896e-52c1e7f92c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9296e6d5-1f15-4c15-89b1-db2cf7dd9d17",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ff86fa-a9d8-467b-9e10-880fa4e4fa17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b93d8f9-e7fa-441a-8d06-d1c69366f68d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7111e229-b6b8-432a-9da6-11aa000e55ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6491f5e5-261b-429c-8a65-3828da1bc1ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc121758-8558-4a63-9290-764cf0fca2b9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60561d51-5f3d-4030-b129-d48dc852f068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "585c78e7-6136-4c1c-b1d1-b0790e6130af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5e3e72-bf41-4a67-a7c3-44e49496fefa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c74136e-6dfc-44ac-b2bf-6b3470c8b980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f49a84-fb4f-4afa-a540-7687d0e4b253",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d56a8c3-fd75-4a7c-9c18-643d3cf1b945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68b20384-ee22-4489-b56f-afec28a19863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20edaa20-752c-468c-aa10-751e698f1952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b1960a2-0834-452d-bbcc-00baf1bbed9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65060f0b-a757-4c7d-a8ee-32ce62eb4cf9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa566cd-9399-4501-9719-3e77e106e870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86be9f5d-a6b9-46d6-87bd-17e2ae5e3284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e5393c-6828-4287-8fa4-10ce8a6112ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f205590-9fbe-4acd-b809-28881388a0ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c26b3ed-7bae-4d90-a9c5-5346d4c6c566",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0cd174f-92fa-48ab-98ff-e84639e0a707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66b6db2b-8f1a-4d26-99f6-f07d8deca4f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd0dda6-1726-48fc-abdf-a74814a94bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8912e58e-5a5e-4f3e-840a-224e4a9ea55b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ec224e-28b5-43c3-9c0b-b44adcf08935",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "804cdc19-9472-4c09-b6be-7d8d9134ab05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "535a0c95-b31c-4e0c-bbd1-3685f0a220ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db826706-50fc-45ed-a68c-ff5e487ed44f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de07b6c3-d2f7-47d9-ab7c-7cfc82274c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08cd120f-e537-4d78-878b-6ab4c8ece072",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd9a433-c015-4f47-9e72-06c087d84e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f330cf70-b8e3-453a-8bd1-318c60c72269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f19e365-6017-4459-b89d-1e9a7d9eb964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a731b05-97b5-4ed7-be6b-5f81686845b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc46df4c-5d65-4370-a6b3-bbfa7f16bebd",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68fa341e-13ab-43a7-808f-c27be256166f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a84a879-b37a-4356-94f5-c89d8a3540d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4691faca-3ddf-47cf-a469-ccf76f549bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "113e3e24-ddde-483b-86ea-aafdd9d81a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41e03732-7380-456f-8217-d6f401ef4c1a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4477b01a-1408-4a38-97de-c050b5fa00b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1d1eca6-51a3-4104-9480-60583474a070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad7d3a2-1204-413e-86dd-abbf6353f3e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bb055b5-1758-4b36-be74-1d630c468592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32deb126-eee8-42d4-a35e-c5f3c0f71d7a",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b773d4f-0a9f-4e05-b5dd-e39fcb11f843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cb5d4a8-66e3-410a-8a2f-c993b4cabe5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e79c2f02-f8a6-4096-9874-101f58803bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2072623e-776e-44fb-aecf-38be99b13eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2dca6ac-58e8-48db-bdb9-eef0b0c0258a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4112e7cd-9a7f-4f4b-a62e-72376f1bd8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc52d4d5-68ac-480b-b246-35fc77459167"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a7a319-db55-47e1-86ac-7c08366bc0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f11f3de-ff44-4cc2-8c4c-7363aedb52a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2eb0bf7-8c6a-4187-943d-ea1b9bd37b3f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d56b5eed-ca42-4221-8c23-d65ded375890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "919993ae-ba77-430b-a2ec-37ecc4f2aff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f410eb17-e04d-4035-b718-51f70b15396b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "348bc100-6a6e-4d4e-b559-b11c935a219e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5abeb22f-c49a-4b92-b5a1-1d26ce8520f3",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a28b3139-8718-4fe3-a209-382f5ea14147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9070ffd2-79dd-4492-a33f-4b7e7948649a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25bf553b-5bd9-45d5-baef-f6290f863f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb9084d6-a282-4721-9680-265df3c79704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80721dec-3a68-470a-b5da-2af0f562fe2d",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba7e41b-a1c0-4557-82c8-86f7802312ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "500fd724-fc5a-4e24-863e-371720a028d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40aace3d-eb01-47f8-827c-0ebfd1869d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e63b8e5-63b4-4080-ab08-8ab5c24c0a66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eddc4b3e-4118-4852-bb06-27fe91ab346d",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "559c2567-fefe-4d21-a740-541bf637677f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3539e04c-8c15-4f71-80e6-0734079005c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b9657e-d49a-4c45-962d-898758f0311b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2bbf276-3d59-4d27-b629-3bc77e727b4d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "92aed5b9-7534-4e2b-99ac-7088139e5b09",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d3aef61d-3b17-449a-bf5f-a0e1e8a5da71",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab830ed-4a41-4cb8-bccb-808e001bd5dc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "33aa1050-1244-46e8-b55b-5a78b282fc15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f2a382-c1e7-4272-9b46-f1cc8a6aaa83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5099ec97-5174-48ea-ab4c-61d23fe58e56"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79200b37-7e7b-4077-87d1-32d49fa089ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64704324-c262-4957-861e-50a52ad4ebcc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3fe4af40-db00-44ce-8b4a-79db53494b40",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "816b6512-1c6d-4ee8-b450-50b7962f083d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "72dda7d1-0e42-4381-8a01-86d378a50b74",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3471a2be-fe8c-4e24-86dc-fb4b3de096f1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "066b6401-9c5b-4aa8-90a0-d90963a12671",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5833fb12-07e2-4917-8888-e66885a18acc"
            }
          }
        ]
      },
      {
        "id": "456f03db-58d0-42a4-8103-f0de73b75b98",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ef7fd88f-696c-4553-9b39-132f71418a54",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b2a618e6-8e36-44e0-a0a3-61b381bbb4b0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8332428d-00c8-486c-a7f1-4227953a72d6",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a57cbb4a-1f68-4295-8396-85c2a690b7c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df67549d-3153-4d32-8f74-eddf2700cd17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8cea41f-3904-4410-9491-678c5c868f42",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1520a3fe-e2ac-4e79-8da6-e349ac37a17b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a4cc8f6-2ce7-4094-a56a-7991cccd87be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11c75c9-8f82-4295-abf3-db28af3f2530",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae8c60f-4e0a-4e0d-84f9-2a8ab59f08eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60bb7adf-c10e-4040-ad13-fdb3f4adfefc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3c0bfd-5eb1-4538-90f3-89835418c235",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e0fcb4-0731-4391-b225-c84e002af421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "565a2ec1-b9fc-470a-999f-140081658e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3644f92-4830-4663-8b0f-552748deef25",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "990f8960-dfcd-422e-adab-3fbfca27e0d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a1920f2-8ea0-4d5f-ac17-32ea328833d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841ceb40-49db-499a-aaad-68843c8626bc",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d4570f9-19d2-4eaf-8c88-4fca3b2c05c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30439187-a7f2-46ef-a5cd-2f22b5337aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb57fcdc-9e57-4adf-9260-60bd5f37419c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79add546-5030-416a-a526-deeaad789857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f875d31-c4c4-49c1-b44c-4a387da8fcf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ada18e-e041-4852-b4a1-d0201770a1e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22ef3fde-1fd1-41b2-853e-4e5df461d40f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b51555-edb7-4db1-84f4-342067f3d116",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f1f885-62a8-4b15-9bc8-85f20427894d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b66c544-1dfd-426c-a27c-e7e2c43d6b92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a08d1b1-8c1c-4278-a9e6-8fd036d9c8cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d44e1d6-ab3e-4774-a834-ee4e854c4a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed660124-7403-4706-9cab-325917f05ee3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd83691-0882-468a-939e-7396eb8d6608",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43ece280-8806-421f-a95b-5c2d064195a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c6e51b-cb47-482a-9751-709259761ba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acd9d3cf-1799-4c71-bc26-94b9180a43a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d469a9d-bd2d-4b43-92aa-5098a9b7823c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77add1a9-0b32-4d98-a2a5-43c50e8ecdd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea884262-ccf5-48a2-a243-7ba8bf7f29f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6354820d-4144-4eae-b0e5-1c57e0973540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d44b1a30-4e0d-4736-b4ce-8ff0932cee1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c235863-def6-4960-a9be-49fa23e243d1",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7faec20e-d737-4ccc-940f-5a8e7faf44e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdff254f-e854-4502-9138-4fec699d51a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c68cbc89-481f-44c3-aafd-554f4d570e6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa05534c-b9c6-4dfa-917b-e88d77fc967e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b23ae97-dfa1-40cf-8fd9-bbae4f6f60ec",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db0d24b-0c0a-4c97-a513-ea8078e0befc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1230046-688f-4c9f-9a1d-823f1048bc3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d4f60f-4a5b-4a0d-98c2-c156f8696965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50bd8109-b8f1-4880-b1db-cdf3db1f7c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a6a3d4-4411-49d0-94d9-249c46bd494c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb71098-9bbd-42d2-b380-4fa8a0205822",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ed68518-77bc-47f8-afec-86880889d1aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41cca91-2b97-4de2-9df0-e2f2c8046cda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "126c4202-b154-42cd-beae-a4ae82720377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "211b4f44-42fe-45d2-b440-d7d2a3701413",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38bb3c51-6ba1-4f4b-9b59-27eb7e5cf871",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51083124-0878-421d-a602-6d093709962d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4225f6df-71eb-4e6c-8dd7-b0bc0d7cd5e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60ef6b6c-d23e-42e0-950d-bc0175a229cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf80f3b1-8e9e-4774-9706-de2fd7017034",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a9d3cc-79e1-497c-9041-a33b0455b0b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f83a47f6-2f5c-42d2-80d6-f7bd9bd11487"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63adbe20-4884-4350-b89d-f4ce7570ecd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da8856a5-511c-470e-b5d1-75e44c4e7990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15202288-365b-4404-819f-a4fdcd9850f1",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a9d56ee-fde6-4faa-b6a5-994529da6f1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43ef1614-53d3-417d-9836-b720e6032b6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5713fc9-a770-4267-9f1e-8fa8f5065832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a965f000-4e8b-4dac-a6b3-e24bfc394db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2881452-4a20-4920-bcea-0732cc104614",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9162031-e5ea-4a08-a80e-d9e36ad6d447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f64e6482-f51a-4042-bf4c-38c5c1b3ce1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c00724-89bc-4e0e-aeab-7392b099ab29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47bfdbc2-3ad7-4104-b2c4-93ecb032c1e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "101c349e-3bb0-47c9-9baf-a93c44953515",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e4cbf0-c991-4080-8b17-ff16016384f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bf6b04b-4d96-46d7-9d88-bc44cad2448a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d9745c-3e3c-4fa1-a865-10c92feeb57b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bbebd79-c053-4790-9d9c-e64dc690e1e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7355dd46-249b-45f6-8c7e-a9c89f2fac3b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95768e1f-bdce-40d0-ad28-bb600ee9ca01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "537634de-b3a4-452d-ab4c-8124b05fe2ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0791bf0-c378-4869-8e98-3184b3ccede5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38427275-a0f3-40bd-a5b2-702bd934300c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1aa4dae-04da-447a-a57c-38fd0b60dd1d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d178ad-6ec6-46b8-8562-d97cfcfd0c7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc588222-7937-46f2-a363-b9140018aa6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8634eba5-7486-4d48-86e7-c532174b7924",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "221a9e3c-ba82-4012-877b-79b0fb1d9428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b1f22ca-76a7-4bd9-856e-5823908d627d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b3ba9c9-06af-4281-9d66-6c6ab230b74a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "366e3aa8-29c8-460b-b755-fa5b15d6a293"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d502d6-5714-482c-8269-9f56ff6408a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5b808dd-0d54-40f8-924a-29f02ae2d756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f303bf-6fab-4e37-a6f3-e9c238982c33",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c1bab6-7a40-40d8-acd1-1e687ff9fefb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b605e4b5-5231-447e-98c1-4905063cd6ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cbd2efc-fce7-4cb7-8512-67f98c266868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b42156f-0bb3-4a40-a3a9-1824cd9b6b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d46605f-79f8-4970-b806-8e28d1051b40",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b8cb8c-b9eb-4322-a076-773d0f97a387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab3c70a7-3bc2-4ce6-bd02-c01a54f24121"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a915680e-1c39-442e-8875-d2cf714ab7a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "530e32f5-ef4d-4e85-86d0-e1b6c8dfdb2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c126fb-ce7a-4d91-b173-d2b572d59719",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d148a4e-c1b2-4b1c-ae81-798ca91dcbdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16413139-6e15-4d53-b950-2b76f23096cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ec6e79-9f46-4c08-bff0-4e2750320c45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5126eb5d-c575-4f80-b40b-a3c4412bdb05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13f2353-4236-437a-ab31-4ba6ab7b7167",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72e8057-71f2-438a-a0a1-b58e5cc0edf0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "250c3523-b4c4-48d1-b52e-c1989b048328"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ef1ca7-b379-47cd-a952-fb1aea083303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b958393-6b19-4b10-b16b-fbb1a44606a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051c037d-a436-4f21-9fa0-25d2eb9bd364",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "430fcf1d-bb27-4713-afe3-fcea8395f64a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "778f3fdf-d776-45fa-8098-66032de195ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "758e0d5b-4b1c-4585-a23f-32b6c23ce4bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "686dae7c-390f-4e8a-a2fb-e69801635783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b57f53c-fc38-4261-8147-204aeff03085",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b03bd84f-ac87-4163-a6e9-ed963b5aa294",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "349e90d3-2d8f-4a1b-a574-f8528f50c130"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "115d0a2d-97ca-4b7d-8e6c-a555d937c23a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b13bddb3-ff90-4b7e-a6b4-43b3dd95b690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9b60be-8598-4a0e-967b-5748b8b6ce5b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c837fe92-4dbe-4c5c-8f4e-b232c0325cb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4319f687-f59c-49ff-8a46-d384d958b963"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11a46c0-9036-44bb-8f95-380c6ef399ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e1bd86b-2d27-4ac0-8bb7-7c30ac6a4ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa776a8c-531b-4c7b-a326-8b54b590ee66",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8356ef-d3fa-4116-8947-2b8a20ea1cf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a8f8285-a96b-4982-acd8-cdb924051be3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d9d4320-f942-44bc-9e9d-821f381fda7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c09ba3de-4885-4b42-8603-0d406fc4cbca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b575a426-12d9-43e4-8ff4-0eb9bdb4e242",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eecc35aa-a8a5-4b7d-a4fa-7d9d5b5fe012",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1911ffcf-597b-4334-bcc1-94bd49ae3338"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "516811ce-9bad-48fe-bab4-81a56674922a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c57edf06-7359-4928-9480-15eb2735f669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5195b0-8bd6-4c22-b47f-27a46e0e1127",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0015e318-ced2-444e-aa48-2f879bcaf40b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7641df51-423f-49fa-8702-efbb5956033c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af76de72-beac-4b0d-b41f-e8cf2693ac32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d14d78c-1889-4633-b4af-d79fd1a12002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dcbc343-96c7-485c-8a2b-9f587c46f808",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a69f9c-c8e8-4fbb-a3b0-6652ee7b15ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef8bb199-32d9-4acb-ab8b-a6430e53497e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e0bf61-f1e2-461a-80ef-3fbc90bd3e38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50944e52-d50f-4886-bed9-f13ba38ebd6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "093390b1-00f2-48ea-be9d-de5c2daeb496",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25892efc-aee1-4e0d-a39e-ff6a3ef944d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbc6b290-6cc6-42b9-b886-9aec2a91909b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1620acb-d172-4838-94dd-5e3f3dc1d1fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7b18e0a-153b-4df3-b30c-77093bc613d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d662e57a-1d05-4527-8aca-2e9d0722b0d4",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a0eb58-4eda-4884-aa41-1177075bd89a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b56ef8de-bdda-44bf-b85c-ccab655d4480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "767e9e6b-0bbf-4ae5-9d76-5631684dae97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20c739b0-bf56-406f-ab13-c96285dbfecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd073832-5bf1-477d-a1e9-0a0e89a61fb9",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b086e695-4798-4c7b-b717-d59f2cac3613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b734e100-0458-4f12-8b50-49ba19327280"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ce41a5-e880-42dc-8bc3-f70e1ed2a88f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72813f68-fdac-4897-8487-f07cfdc0792a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b3256c-9891-42ea-8746-44b23ec1ec01",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46600790-7bbb-42d9-b9e8-f7ad1c075a6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d33d237c-27a4-4078-b7ec-7bf6d8ccb043"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2b6fbb-509e-4611-bc78-1e98da7df1a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fddcb04-c2fc-41ea-aa19-f519a835a95c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e5444fd-05d0-4750-a271-892e93f5ea27",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "974104a3-5593-461f-ae12-cfef3c44f02a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1807c005-8809-47cf-bc6d-a712b5b2b2e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc4f3bb-d204-4020-a093-a5a4c83ba2ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "347b02c7-ea79-4df6-af5a-e017a5baf2f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a2d8f5-fe3a-429a-883a-036042f5a185",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ad9274-d2e2-428c-bf1c-75d782a7ac56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e54e108d-1d70-4bd7-92b4-fb22e474dce1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "247980dc-d84b-4d20-a652-d17254d2577f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4281d6ad-f1e0-4d45-898c-49570a593574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d96b625f-09b2-4cbd-a2b1-72804363487e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c95eac-a4a4-4c61-9295-ac78c3f5dc9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c006e22-0da0-48ea-b99e-5b167dfccdfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2750c16e-1dbd-4227-b395-e579f0a63eb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "835712c5-5567-4e00-b7f1-5aa2e53f7461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0a04f3-7047-4442-ad34-be4eb6b6c790",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d1419d-d6fb-458e-8a2a-052e206018a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcc23fb0-edd5-4149-be62-ee6ade9fb36c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a2806d-dde9-46e0-8953-fefa97c3bff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ee1b2c8-fdb3-4399-af34-f5e4353e6ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b9f162-0386-4802-9449-6883bd3d4899",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0973b914-62d3-4ac9-a33a-44271258f197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c57370bb-bff4-4abf-9886-ca4ad408990b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fede1dc-16c9-4ffb-8250-c356ae95f596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf775a08-1578-471d-b8b7-5b80d64bf1c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33acdb31-bd31-4236-950c-3370ceee8d79",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b4f320-b4c2-4481-8514-84991d411e14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15b3a86f-6908-411e-b14f-0b3545be538a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e47080-051f-4b35-aff4-c69191132503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c08f16e-d993-46d0-ae2d-081a5ccf08c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a5de0c-e8ca-43a9-a68d-d09e53e5b5ab",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b789bd-03e4-4c6c-ab22-e3c3adca9e1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04576c71-84ba-4b2f-942b-a4f6430ca276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa717a9-b4b0-4b12-a422-29cb9c80d944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c36a25b-2331-4351-8ee1-c01745ad23e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "857d10d9-e75f-4e3f-9a1e-5d0199b7a9ee",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dddc92ea-2c3d-4d92-8b97-522bf1df3f58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d587f515-73c0-47ac-a0b1-770cf54d4ca7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a271ce-ea21-4ecb-b419-d0e35dee61a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c7a8bc8-5f30-43b4-a5d0-c920f9b30464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54be0227-2559-437f-884f-77d2cc66b889",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e4e5bd-f469-4b89-b239-d0b4c70b30ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdbc4501-23b1-4450-8ba3-3fb8aae6d93a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b7e584-32aa-43f8-9917-49e73e204753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b1537cc-f37d-47f2-81c1-26a90391e8dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff8ed25-2676-4e63-8d26-2c1773c888c9",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a5dfcd-fd42-41f1-8eef-48af9be9d429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86f273f8-b2cd-44e1-b7f3-6f17202fa87d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b70857-1163-4a61-8cc5-4cfef9f4b317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "298e8653-b30e-44ab-bea1-7a0435fb4001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39068bb7-2e80-4fd8-8b6f-b2b62a8ca3f1",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e96f29-a7a0-4560-9fbc-5bedc6611147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53eaeefc-ec90-4bbe-97b5-9265c5974a59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "286cdb71-d659-4a3c-8576-41c60bcd9294",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa39e185-2ba5-4aeb-8fc8-80f033249bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e0bb15e-508f-467c-85a2-48dc29e8d3c9",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1e97dd-2c8f-446b-8fbf-e95f373cd69d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8be234d9-8bd3-4d22-ad42-88cc47231a17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02961e56-f5d4-46f3-944c-8894a61e59fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60c01fef-5a35-465b-97e7-8722628fda0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af7c8fe6-3ccb-4e5c-bd97-7aed59ee2fe5",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98f68b1-ea42-4428-800d-2378b84d9f2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "446d64c4-978c-4b86-84f0-29b2a8e4fd43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be74e0bf-2a9f-416e-be6a-3f43d4e4c4bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8780e876-c54d-4ad4-ab93-74d20dd96f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db83486-4d80-4086-9e1b-fbad9ca2134b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c177d07-c784-4a84-8dae-4325acfdcfed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bff180d-2922-4531-82a9-82c4fa4b4401"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef4d5b63-0295-4c6d-bc31-0d0cf52ab817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f0f102e-63ec-494c-b4b5-6ce4525958a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7780c233-7ac5-4144-9904-49ff7f76a45e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "394746a5-8ded-44c7-bd0b-932d5cdefe81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb50f0bf-4dd8-427e-b176-c2ca161e0221"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d535a6-1613-45ff-98f7-e443868fd28b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f43090e-fc32-4536-8fd6-4652d34a9145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d2a2f58-09e9-4e55-9caf-6597102e893a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f0779b-e5d9-40fa-9851-31f3ee7d99a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fd58afd-4233-4b13-abe2-2e11aa15d6c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6907c54-d5e8-4bfd-8b91-d374ab68a1f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9f1fbe2-3f24-4819-8478-dee7efcf455a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0a6ac6-6626-4d4b-a719-c153a159a7d3",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d08e243d-ead4-4c03-8d4b-575da4b38f4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25264baa-512a-456a-8e59-6c081f322ce8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6419c74a-7071-47ec-a0b2-b3965024e95b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3afa2860-7db3-4650-a4ee-aec0dcff73ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c173b58-4a95-4382-bbca-88bb2e1312d4",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0650c567-5864-4af1-ae1f-1a7167167a42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f60f8625-50c3-40f0-be02-f9f57d5400ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa0b0d0a-5488-4269-ad02-4d8b863f1c07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a7368b3-7944-4cb2-9c76-6cb6f59a0aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e005e9-8f13-4d2a-9e50-dd5c1fcd4120",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb204769-c7a1-4d35-ba9d-720de8f13ea6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d51e93ee-122b-49f5-9ffb-188f27cf12dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba51d70-18ec-4d4c-a386-3001203ba1ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "142939da-df07-4916-9fe9-f8de27da1f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51853662-1eb6-48fc-8664-1a6f55a17d82",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164bbf60-cdb7-402d-9def-dcec00c92f28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f98ef30-ae29-45c1-8675-3dd13343a6ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce0807c-1ae8-4d97-9c35-ded904db5bc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a15f5559-e1c8-4027-be58-7a433e6feed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08262216-e17e-4fb9-a73b-2293ba7cefd1",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf8a5f0-9c23-47df-bf32-27c719b75a6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f50cd70a-70a9-43ac-b1b2-7f3578de14ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "938cbca0-95d5-4e39-81bd-55e1309b4147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df16e86d-68aa-48bb-8949-a354f6549f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6509608-4ecc-485e-9830-9082520d6786",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaf06a85-f366-448d-8419-a54723b023e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8da9350-3231-4503-bd89-867539209645"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d5a712-c712-4a93-806f-1acbc9e60404",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "411a59b9-9f1d-40ea-8e7f-48cd4a237fec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a1c3151-f149-4118-8d22-affd4e14cbc4",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b67d03e-e550-4f51-926e-c910e494c301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d04fd4eb-fd8a-4641-a316-3f8600edd614"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c3f553c-9fc9-435b-9d12-7ea3cb66f53d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a0d25d0-14ef-4f5d-a81c-c554cc64ff33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d9f359-2fae-481d-bbf7-dc9ad5adce76",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6064674f-4181-4bad-bc2f-1d3344972036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "617ba658-5c23-4891-858d-7bf8f6473901"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a524f1d-9cf1-431a-8cdc-846e686aa4c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d905d97b-50ac-423b-a3ee-1619a40f502f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b3703ed-0b29-43b4-84ba-9c206df01674",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1527e9da-1dff-40be-9db9-594f84de823b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dc4680e-4ed0-4a40-9801-8b3338fa580e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a5a935f-a120-4cf8-aba3-d4011d34b7f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "163f4cf3-89e2-4652-8607-bf42aa04ad76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb28ec23-33e5-4650-ab0b-8544a40d3741",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f318c7fe-bb30-44f1-b9b1-b7311c807519",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a967cd9-2ddc-40e9-b3e1-2e9674dfb815"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6e5873-f88f-4a27-ae7b-5bb60a369c80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bb59231-f900-43a4-b765-761664bdbc45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5f9671-13b9-4a87-9cda-7d9dfd809878",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6f54db-b087-4205-81c7-36d347e48715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "553e5d4f-fdcb-4e85-9123-f18afde381d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9fd94a-df86-4cb8-a6a7-d2e1556ac7ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c99acb39-72df-423c-bfde-b96ca94dcdb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e17ae81e-739e-41c9-bb62-5ca98f61eb7f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11194ceb-d109-4cb4-8efa-1b47316fc98f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3e4902b-15f9-4f5b-a650-390d66f61742"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43dcfff3-6d77-4a3a-8f9e-19b19e4b368b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6b72acd-cafb-41ee-8c26-432168483e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f9e6df4-75fc-4eb6-a208-71381a1e0347",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf129c3c-9558-4bf4-a610-786d27539b59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1751843-f7ec-4187-9969-751ac7bc12b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8cbe531-48bc-4d3e-9ab8-121bd3c826c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2b99b9b-f7dd-4276-8447-d0c5c158d213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "035b07b4-1401-43ef-bd1b-33cd4a731938",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a17d78-257b-4e93-81c7-023f9ce9c158",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88593876-1383-4952-8740-d88c4291b61a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6049c67-ae79-41e2-9832-f1d817d30124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8275ae1d-664e-4491-a325-970b1efd475e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f4651c0-04b8-4500-b029-212af1a77c44",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b41962-96e1-4d57-9e22-a8b2689d40d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "282a04b3-9108-482c-a827-dcb86e8dddaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd9ee95-e0f5-472a-a7b7-3fca2e6cc207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "081d5cb1-8930-417f-b1df-719e6ff762e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c284f2-33d7-4f36-a000-2a7031c9466b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66dde9fe-89f8-4b17-926d-051658f23927",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af8675a0-a990-4094-95b2-4b404ff5ee61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29a29c6-f197-43a4-af6e-4c50e3f3d3a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fb6073f-5e5b-4f41-917b-6eba16e72e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "376adde9-b811-4249-87af-e99dfb54909d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5d9086-5b53-4aac-897a-cf3fbee6a35f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cb16f09-a4b4-4f4e-908e-ed30898506b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a201843-69fa-4f7a-b9ee-15cc1a6b1db8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a73b291-eb06-4449-8719-ab9e2807f360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3461a2b3-b586-4984-8125-c655f0151373",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f71b2c1-86a0-4961-b2c1-66ca76d53416",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ac550ee-a08f-49cf-a5db-1943b15efbc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f0e240-0fa5-4009-8e7d-faf6cfc2ec17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "036966d9-15eb-49e3-89a2-757a35100c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ff2927-c104-4907-9e70-ecadb1ead675",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a98609-eb2f-4d32-b47e-f2ba124fb2f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cceaac16-c75e-4b3e-99b0-8edde7b69dca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "013dae66-fbf2-42ef-afc9-55f74d99c9da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf3fcda-695e-4b60-9f12-3cb885ef67a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80482ae1-5dbd-408a-8c6e-c4c6c87976e0",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e7f32c0-9bf0-48da-b94d-8c62cd6eb6f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e96b8b0-3eff-4a4a-84e1-011c80843143"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "decf2120-f502-43ba-9718-8c375169531e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c1c42b8-dc08-4ec1-bbc4-24982a81d04d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332156f9-830e-435f-978b-6dd579fa9f5d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef98f3ae-5d5d-4645-8b92-ec8da3971c0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c4d62c9-3036-4898-ab1b-bd23c5cfb21c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b554324-48a8-4882-9eb8-f5dd4c7931d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a8f8f9d-a2af-4b7c-8d7d-68ec6646dbee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c848aa2-6952-4ea9-8af7-8ffac39620c7",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b0aaa80-a855-46b4-bada-91413ec27c5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d286053-63ec-4ab5-bb2e-f2ecc7ad115c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd247e8-53c8-41a5-b787-0fd6337a62b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25b34d10-df5a-4052-98f0-430867f0e023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff4e3015-b7b0-4c76-9be0-c1f4d7115844",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98728a33-0890-4dec-83f8-b24a0ad378a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12f26ec9-c354-4fdc-918f-566bb8aabe04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a778e845-54b9-4947-b102-f75c11c0901a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3e22d8e-d9d7-4c0c-ab23-c50a41368908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0818eafc-a5ac-4c8e-b92f-43861a6dd77d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb919b25-8a2b-474d-885f-23a8306ab483",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf5710a9-cc8f-4e52-accc-12e002dc4864"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da0dc9db-d8a9-47fa-a408-89a4468722da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92f3930f-f00b-44a9-b555-4193c7302025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f916ef-c61c-4421-99a3-da1bbe67317f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed6f0cc-b50a-4e5a-aa74-29071c978d63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9970214d-5d07-4846-ad65-51c70003b82a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3271604-158a-4e52-b6b8-5f283be366ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b8a0a1f-8ab5-433b-9d7e-9f1e770a11fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64fe20b3-5041-4c69-9734-4c435215b489",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c95bec3e-3cd3-4663-9b60-e24e556e7869",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7eed0977-3bb7-4ef9-8c89-0ebbcfbe0e4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38a9338-d343-4b31-8d32-f2e36435c971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed71af7c-d2ce-498b-ade5-32dc48c54e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f56521-e984-48fa-a105-86ce1f37c085",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b4c7e7-d168-4163-ba15-990741967ec9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f91ee15-f7a3-421d-a739-b8d20df4fe0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac74013-5dd8-4aca-943d-cf1cb9c90496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d51d0cef-8602-47bd-aee7-9189d94bfd69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "674bd238-1055-47f0-a663-ea439d5708a6",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb890f7-2d39-4226-9a49-499675b14d02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69804cf2-2cc7-4075-a34b-28ce390fe10b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b65d8ef-caf2-4baa-946a-d07ffc2d60eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72110c64-9877-4401-91d3-3c2a312ae39b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2105cf0-b24a-4b15-818c-cea7cf2501eb",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f9748c-a1b1-4e5f-aa75-ea4fe16438a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a56328f4-e94b-4e63-8b35-854dbb0aa1fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f403690e-4679-407f-9f66-5baf239860cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28909311-09bb-48c4-b420-1c67fff29954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba6a249d-1353-46fd-8306-bd712fc957c8",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c67a52-2324-4882-bc73-75b84e4404e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09dcca1f-0b76-40ef-810e-be05796dbb3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "985c17e6-8cec-4081-8712-2662ec7d5bcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "319dc706-87a8-44ba-b091-1e531295eb72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c3af9b-1a4b-47ab-a457-4e99ed97962e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05230107-6151-4b1e-80c0-c5121bbcda73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f37b49c7-fb9b-4d60-996e-63e61e483eb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78dcac17-74ed-4ae6-8d30-bee27c3f2c3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f511f3b9-ee6c-4b54-bb20-76166a44ec5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4167d1fe-d42d-4776-a3af-9cc1127a644b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8c4bda-f84f-4792-95ef-5f0c9f7c8d0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d5cc2cd-aa7e-4cf6-b21d-9cbfb0fa7e5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1723a4c8-4349-41ea-8bbc-2f8bc99189b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "507d9d6e-b45f-4308-86e2-c6deb63b4c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd28681b-716a-4655-90be-c5b460e054c1",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8204b95-a219-4f16-b8dc-3509aaa5b73d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea2392a8-6ca9-4f58-af0f-5e79cc6e7c78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0cb4801-a7c9-4ac8-adbf-b4fb2536bdfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e35c35ae-93c9-408b-a5d2-ef94d30bec5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8302c57e-d6db-4290-9890-15fd62e84efe",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09fdfa43-41ce-4b1e-b4de-b2d4c3fb62cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b24d427-fd80-4442-b671-d4b0559eb0d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb75305-b1c5-443a-8f2f-af79a2cd1961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b810d23-d501-4a9c-b9cf-83c0f7531a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bbb2cc3-6294-4fa8-b97f-b4c00d3df5f6",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c180b7b-aa01-4707-a456-232d9da2acf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51f036c1-364c-4cdf-b6db-5f6b88591983"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ad0a1c-275f-4b64-9f8a-5d8e6d4344e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2de6ec49-bc7c-4f63-8e89-3b3c0f565ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c3bc5b-373b-4d1c-a345-eda25a80b93f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7caf6c74-003f-4693-944c-9bba327e71d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ff42362-b311-4505-abd1-9036cb6c5730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5580fae4-1018-4e56-85d8-840f483fed7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72f3b71b-ab6a-4365-bd08-5c66294340bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "496c3689-f384-4e6b-b482-bae75c9f4aa8",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "026480fa-4d8c-4f9b-83a4-04b97d7fea06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "707c5b3c-4846-461b-9d02-90be5a6c3d98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a380c0f9-ba41-4c06-9b00-595241ded77c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6fe33db-ad2d-4b05-afb0-dbdd500164bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aaf4c37-7810-4dbe-a3e5-96e38370fc84",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b8cc1cb-cdc2-403a-a03e-eed401b31c86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e212f43-a576-44c6-97b3-213a6f1de49d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a3d9c53-bbe1-49a3-aac9-7f79a7ecd51a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70ebb71b-e082-4c3f-9caa-b6b28b2819ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb0ae4c-b2d7-45ae-ba5b-49361f22d650",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc8a0a4-ed28-4697-843c-96fb94ab5e92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d5142a3-ec85-4468-9e5b-30a92b60d62b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43080c8-5ebb-40b5-aedb-9707fe9842e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a515e7e-83df-41cb-9a02-04feeb6e889f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30418dd9-b592-45a1-81a9-518913b7c2b1",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f8966a-f6c4-4b39-9015-0e39b85e7dc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cbe7700-8a04-4471-aaaa-defc7075c11c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ad265ad-4143-461f-b361-242bee0ef1ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bc1a650-fea6-4b29-b065-c23d84403865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417008e6-e339-467f-b9da-8fad3f46e21e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d8ae22c-5165-4edf-8e3d-d97e4eb8c42f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43305768-5990-4dff-a717-82af7c72931a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "606b7bf7-39ca-43dc-92c0-ac82fde6d7da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b326fcec-d9e1-4c49-9d55-4937148d985e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c29e4d4-0ecf-4ddf-a7bc-f2d3737744f9",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53cd9015-a850-4fe0-8906-a79bf2ec122a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5a27851-297b-4b80-9d71-2577d4ad9d01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0513ed8a-a26d-4300-a137-5ba8fafc661a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1acb36b9-2544-48e5-92ff-ea74367b8e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "077bc9ce-16e3-4480-a546-d655e830e870",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3556e8fd-3a07-47c1-be7c-d88b64462050",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fad74465-0077-4255-b692-da3a38b0b22f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "522556fe-ce5c-43c7-9d5e-73811b2e5251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a67883c5-5421-4612-8990-40ecf82da9c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ad1377-ad4e-4ce7-ac55-44cf67ead923",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4aeb72-c8d6-472a-9451-df5522358da3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b54cc3c-dd26-42fc-96f8-c1934bd48d78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e763ab-3f7a-42cb-ad03-a938aaffeae6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c779ca0-a4c1-45d3-9ae0-efd95624f576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b58bcd54-3693-4e86-9ed7-5dd8a05be15a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cbbd975-c6b5-468c-bf2a-7d52f1009b2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd17e786-f847-4ec4-a711-2d35c28f62a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31fab1a-0954-47a0-a573-891537d3bd0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9380a188-d8c5-41fe-b019-53a969b364bd"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d40f31c1-c1cf-4d93-a320-bf85a4095389",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f815f84-0cc7-4a94-86d1-59a4fb352baf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "30173480-a01b-4d4c-afcb-3c579e046ad5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f7780e1f-af76-46d3-9826-0dc9cd5cfae8"
                    }
                  }
                ]
              },
              {
                "id": "8bc35f09-5819-40f5-9bcc-b936896b3b81",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ecf75da2-a290-4b82-96ad-8fc04e090771",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c837db65-f2a1-4d0e-8c13-16742bb691a6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f85ff138-8be5-45c3-941f-eb393df3c0de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "459979d9-c526-4e85-a360-4b05274678d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "40992bd9-1ea7-4df1-93b5-868262627e86"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "70bb0fa2-4c19-4824-ad82-272783404c26",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "90f375a1-4e17-4aac-83ee-8e17a03a15db"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5b826cb-f164-42aa-929a-c45d45583d83",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2731e5dd-31c3-4f53-b831-d974dbdb4e1c"
                    }
                  }
                ]
              },
              {
                "id": "6c19e913-2aa9-4eff-8a6c-20093b13b25b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "d95cbfa4-1dff-4364-8e6d-21f888dc5234",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba39e527-9254-4020-bd6d-28a837c2d9de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7e16acc9-937d-4876-b8bb-36330b4a7f46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a91ed76c-5959-4a00-b284-3099a855bd03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f27a7add-0457-4884-9200-f03f85a87016"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5a19fd8c-de7c-475f-9c1f-56ab45bbb5ca",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4d05a787-92cd-4625-ac3e-b193a3a5ab38",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "989e3610-e636-43ca-8a8e-556d2ec8d2a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4ca576e8-6b34-4e6e-ba70-513c4afb1296"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4816a82b-e5f4-4aee-918e-88138b2753ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf568d7a-1f56-4baa-b401-77a66b64c18f"
                    }
                  }
                ]
              },
              {
                "id": "ebc73c74-8b74-47f2-87d8-773f471b77e9",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f8fe690-c271-4f17-90d7-eff6f9797b1a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4bf360e4-174f-4d6c-8063-b15367342892"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa80b7d5-0200-4aa2-a0f5-fbf7aabfde0f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78a0f89e-a1fb-4f70-9e8a-c8a7944f8581"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0873dcd6-a737-4836-a305-f7870bf35edf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a0457dac-2271-4e59-a448-eed2f5a5bc6c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a8d8bdb6-aec0-4417-968e-08589714d9ee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ffb545c6-f75c-428c-93cb-0c88eee308be"
            }
          }
        ]
      },
      {
        "id": "8d8ecaaf-9850-4e4f-ba09-80b749928d29",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "dabe4b86-306d-42b9-a5ea-b7195b02599f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3a410d8e-c074-452b-af52-94b8a4dbe714",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "83348f0e-9422-4094-8fd4-8ae459a6f2a5",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09574df3-fff6-49b4-86d3-4f2f68dd40d7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "438d9872-ec49-42cb-813b-01166151583a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c53ed525-707a-4bbf-8f9b-fcac3a178819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5bf33a95-0aca-4d2f-b86d-469605699aaf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7399851-4425-4991-ac84-b44c729f11be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f8b34a7-602d-4cb3-aba5-0dd014e4e0b1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca392382-6e1c-4fbe-8f03-7cb2d3a09988",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "912aead9-3a3f-4a8e-954d-f326b7249913"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "706de0db-a222-4bcd-95a1-61b4c473a1d6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f1bdb152-653f-4db3-a85f-05ba057fcbb3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2d948606-ad5b-477d-9b31-3650c996968e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ff6571fb-c11a-4f33-980d-e6db2966ffe2"
            }
          }
        ]
      },
      {
        "id": "dc14686a-c8cd-4916-8732-782d839ac267",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e531dd96-6dd5-470c-9a8d-adc0a2063931",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cdca8391-eaaf-4060-9b5e-b0b06906d38f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bb096a0f-5ac7-4b82-a989-d36514efd5d0",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a21c3045-b10d-4eae-8ee6-2da7bb8371c1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "063734dd-df50-4765-89e4-aa36188e38a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa7e13f-6dd9-45bf-9b63-708dde4829cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d7226937-2f8a-427c-800e-60f4551c9441"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d7816a3-1e0b-4b63-95e0-36fab8ccdf68",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c62b4f5d-10b7-4bbf-a705-7438a041cb13"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f78e550b-fe7a-4b7a-87c4-e5a1a85c479f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a0fd5f5-57d2-4d23-a8f4-abe245a609fb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a5369353-4d77-4541-a1d7-b8dbc29ec201",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b3316cba-d85a-4d20-909b-278b3ea5e36f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0a9d91eb-15d2-40cb-b880-99dffc31dd9c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d6594dcf-6818-4384-b81b-fb71e61d376f"
            }
          }
        ]
      },
      {
        "id": "067f8bbc-2294-4eec-9336-9eda339ab09a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0d2dbeb6-375d-4455-8dd1-4e58f908d68b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "74e6231f-17e9-493f-aeb3-58671632a2c0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7621fac9-1c4f-4db3-bbfa-122f0a51d5bd",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa5854ee-57f6-41fa-aee3-7340011c0225",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71e6bf17-3171-48c4-b3b5-b1cb48e0b839"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8934a41-1094-4564-a3bc-935e07ae30d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22975eaa-2bfa-4d1c-bbb1-a0a290626ba4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3541cff-3fc6-4aef-afaf-c39816547ff3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "581a7936-ecf2-48ed-abf6-e43fc51c93d9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e86f1c13-57a1-4c97-9d44-3d5de163b0e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b580e326-6b93-4482-949c-c8c0b99698bd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2d6491f4-890b-4e0c-b23a-0f605f086145",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0a67d3cd-68f4-410d-b2be-28c7f6fcd061"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4c762c6e-9ab7-45d2-9d4f-fc709f29598a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "68bad023-442e-498b-9ec4-b25de567053b"
            }
          }
        ]
      },
      {
        "id": "34658542-4947-4369-9dfd-d33276bf7f30",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e71be214-8c79-41bf-af91-cb3fd3f13df1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5e77276f-27ad-40ad-8b1f-19d4adff2445",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c6431ca5-3637-4534-82ad-9f6706928e17",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "12a82ba7-15f3-4fe2-b175-f88efb6d0bf8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ddcb8f57-7b8c-4c6d-88e7-34eec6398e7b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 121.87719298245617,
      "responseMin": 5,
      "responseMax": 7175,
      "responseSd": 482.7682408693853,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1702427764964,
      "completed": 1702427809392
    },
    "executions": [
      {
        "id": "15e144a1-bfc4-4025-83fc-bf4202ad9572",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "613e6635-fa39-499e-a51a-eb930bfcacf1",
          "httpRequestId": "ae4572ab-7ae1-4cf9-a32f-fcb5ab31963f"
        },
        "item": {
          "id": "15e144a1-bfc4-4025-83fc-bf4202ad9572",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9ad000de-1242-4c98-b56d-d1e7db8d4573",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 0
        }
      },
      {
        "id": "75c82f54-c38e-4777-ab0c-a8ea680cbb40",
        "cursor": {
          "ref": "4684032f-7962-4947-9119-7613bbb24ccb",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "bb02c093-e13c-4fcd-8a00-1279ddaae412"
        },
        "item": {
          "id": "75c82f54-c38e-4777-ab0c-a8ea680cbb40",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "cd722fde-bfac-4c38-a8ce-5ecfab48c16f",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "5c6e9b5f-365b-4531-ac8a-02308fc86f6c",
        "cursor": {
          "ref": "fba631a3-ff0b-43c3-8cc2-68928d6689aa",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "5543d0b5-9b55-419e-a7d3-2a2fa3f35042"
        },
        "item": {
          "id": "5c6e9b5f-365b-4531-ac8a-02308fc86f6c",
          "name": "did_json"
        },
        "response": {
          "id": "1bba8af1-b7b7-4c48-824e-ac4e6797e6f2",
          "status": "OK",
          "code": 200,
          "responseTime": 383,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad977f03-4812-410d-8234-a196e4aa9789",
        "cursor": {
          "ref": "d2d321f2-da83-426b-8c6c-0bccf7fbe0de",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "77772e35-f292-48bf-bcca-9e1cc0b8fe37"
        },
        "item": {
          "id": "ad977f03-4812-410d-8234-a196e4aa9789",
          "name": "did:invalid"
        },
        "response": {
          "id": "f7aceec4-cf40-42d4-9280-72be3da90e1d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 674,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad977f03-4812-410d-8234-a196e4aa9789",
        "cursor": {
          "ref": "d2d321f2-da83-426b-8c6c-0bccf7fbe0de",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "77772e35-f292-48bf-bcca-9e1cc0b8fe37"
        },
        "item": {
          "id": "ad977f03-4812-410d-8234-a196e4aa9789",
          "name": "did:invalid"
        },
        "response": {
          "id": "f7aceec4-cf40-42d4-9280-72be3da90e1d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 674,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31a4fdf-819e-4dc8-a471-1ec74b92eb73",
        "cursor": {
          "ref": "1ecfea0e-4ec3-4df9-ac79-1092f806d0da",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "db877ae3-f070-465d-8125-c32debcd7aea"
        },
        "item": {
          "id": "f31a4fdf-819e-4dc8-a471-1ec74b92eb73",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "5956e473-50d3-432d-ab79-c90308070aaa",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a65686-face-4930-b8a5-9e6641921988",
        "cursor": {
          "ref": "0c80bc48-a69e-43bd-89e0-d164c648618d",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "74b45e95-1d75-4626-ae19-3ad3c81f0393"
        },
        "item": {
          "id": "91a65686-face-4930-b8a5-9e6641921988",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "827e6c28-1ae6-4e3f-92e6-ac6fb3da6dda",
          "status": "Not Found",
          "code": 404,
          "responseTime": 62,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b1560b-a3af-484e-96af-1831c05d58ee",
        "cursor": {
          "ref": "04534ae4-100f-4e2a-a367-832a5c2b9d0a",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d0386d2b-32d8-4c31-9f3a-0d58ec798b73"
        },
        "item": {
          "id": "93b1560b-a3af-484e-96af-1831c05d58ee",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a6bfbaef-814e-41f3-b454-79e184dd784b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c8c591-36f1-4e90-846f-b5c2a337f066",
        "cursor": {
          "ref": "74173270-a8be-4dff-9971-02ff62ddb6a5",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "38366051-80f5-43e0-8dcc-6f6efbd38c2d"
        },
        "item": {
          "id": "a3c8c591-36f1-4e90-846f-b5c2a337f066",
          "name": "identifiers"
        },
        "response": {
          "id": "4c3137f7-0fa3-40cb-93c6-63a31d59746b",
          "status": "OK",
          "code": 200,
          "responseTime": 87,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5852547-6dc0-4e37-aa02-bf0f2565ae1c",
        "cursor": {
          "ref": "fe81d33f-ec25-4af2-9c43-1963365b2a36",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "e084744c-c755-4db4-b35e-ee2e38b799a7"
        },
        "item": {
          "id": "f5852547-6dc0-4e37-aa02-bf0f2565ae1c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b5433262-24ba-45df-b0a5-7e9700d6ec93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319d83b6-a8a1-472e-b089-f8f161d04ba2",
        "cursor": {
          "ref": "3fa589b0-f427-4a08-a4e0-ab61954b95d9",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a5f5808c-c3db-4303-abd5-e58af98c1550"
        },
        "item": {
          "id": "319d83b6-a8a1-472e-b089-f8f161d04ba2",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "986c63d3-325a-4fe7-b956-766ffabcb009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0257880d-e198-41e2-a4ca-49ca6e1f3a16",
        "cursor": {
          "ref": "17fbfc32-be98-4fa5-8259-7ad97e5514d3",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9960caaf-1258-4e76-bb62-ca407f9720c2"
        },
        "item": {
          "id": "0257880d-e198-41e2-a4ca-49ca6e1f3a16",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ba5ffa50-704a-48ae-8d5d-d112123b684e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1acaad-f875-41d2-956b-f104ad2acb8f",
        "cursor": {
          "ref": "4bcfd58d-8985-4f1d-bccb-ab8585bfe47e",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "724557c0-0643-462b-8c5e-6f9c330aa24c"
        },
        "item": {
          "id": "ed1acaad-f875-41d2-956b-f104ad2acb8f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "57886cc2-ec32-44d5-9834-e351b07bf4cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b06782-9406-48a9-ba6e-66790de875ec",
        "cursor": {
          "ref": "f78c777d-41ef-46ad-83c2-7fe2ec0c2517",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2c4a4ae8-4701-49ed-a1eb-9c41c98fa689"
        },
        "item": {
          "id": "c7b06782-9406-48a9-ba6e-66790de875ec",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "de30ce0b-248d-45c5-b29b-5756fad7d696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a874d45e-a491-40c3-a900-5ad175cdc449",
        "cursor": {
          "ref": "c8e74cf5-f6db-4238-b9b9-fa87aa35ed63",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "362001a9-9396-46cc-8cb0-d40337709add"
        },
        "item": {
          "id": "a874d45e-a491-40c3-a900-5ad175cdc449",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a722d0a0-4f21-49c8-aa87-9f08e488b6ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088083d7-64a9-4532-a4b6-92b829f132fe",
        "cursor": {
          "ref": "6b1c9f14-292e-4e94-b240-4d19336cb401",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c05c11f0-32ba-41c6-bfbc-e7d8106a0691"
        },
        "item": {
          "id": "088083d7-64a9-4532-a4b6-92b829f132fe",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2b311b6c-a0c2-48d7-ae2b-67df7c2a5672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6665a73f-5a6d-4cdd-8435-c66aee676d47",
        "cursor": {
          "ref": "393226b2-c651-4938-846d-c5943af5497d",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "03b8b78d-6783-4159-b2b1-e9ea62afd53b"
        },
        "item": {
          "id": "6665a73f-5a6d-4cdd-8435-c66aee676d47",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "69116a0f-b646-481d-b30f-240eb0fba472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a60afae-414e-46fc-946f-8d569be9be4d",
        "cursor": {
          "ref": "4de22413-479a-455c-8831-1f43148623fc",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3e8fdf42-f598-4af8-9262-a54b43996b85"
        },
        "item": {
          "id": "8a60afae-414e-46fc-946f-8d569be9be4d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a3854194-0b04-467c-8c19-0dccbc859047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "430adda3-6677-4c63-abd1-b9d415c1b2d3",
        "cursor": {
          "ref": "5679211d-f7e9-4184-8a6e-5af5ffd3d341",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "53227cde-80e1-4192-aca5-bda0eef4ecfa"
        },
        "item": {
          "id": "430adda3-6677-4c63-abd1-b9d415c1b2d3",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "bdd9349e-fac4-4285-b883-36bd8e17ebbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775f2cd1-0446-4259-873f-e79ed7df5f3d",
        "cursor": {
          "ref": "8845b488-d416-49b1-859f-b75a8956e8aa",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "71352f8c-e30f-4f9d-a799-49b6e826655b"
        },
        "item": {
          "id": "775f2cd1-0446-4259-873f-e79ed7df5f3d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "53fdcc74-919a-4dda-a029-3e2f96ea4328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2051ef1-f81f-4cb5-a3b3-274d44732e26",
        "cursor": {
          "ref": "157a2662-56cb-4409-9847-4656a9185ddb",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "981364ef-2810-497d-8025-d6e35f618651"
        },
        "item": {
          "id": "a2051ef1-f81f-4cb5-a3b3-274d44732e26",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c3506440-fc19-4b8c-861c-2b6bbd8207f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7260bfba-374d-41ad-ab50-e4db1e2b63af",
        "cursor": {
          "ref": "1e596369-5b63-48c6-9e91-6af0adbd8a67",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9e3837ff-a559-4045-a3ed-2366ac7b76c5"
        },
        "item": {
          "id": "7260bfba-374d-41ad-ab50-e4db1e2b63af",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "9f8a814d-2a8f-4945-b2a2-e9b9d5c7e604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5f543a-c79c-4127-a2d1-c3d6154b3d7a",
        "cursor": {
          "ref": "4551c831-738c-4b9e-97db-b9cb3e9e2b8f",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "207843b8-d88a-4419-825e-516b74c5fa7b"
        },
        "item": {
          "id": "2e5f543a-c79c-4127-a2d1-c3d6154b3d7a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5388502a-cd78-4d23-bdab-795af1eeeddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b66ef52-6cf9-4f66-b500-aa57add837c8",
        "cursor": {
          "ref": "9702d5fd-5db5-47a0-ad82-ac7ca06e9e08",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6288e906-65a8-480b-91d3-80000a660821"
        },
        "item": {
          "id": "1b66ef52-6cf9-4f66-b500-aa57add837c8",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7348ebf5-e90b-4954-a53c-037fc2ea283e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "894a6180-4fc1-4220-b951-89d9976fcd8a",
        "cursor": {
          "ref": "1c443d3a-e0ed-4be9-b4cd-63821daba34d",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "079be557-6b61-4f1c-83c8-a236c3723400"
        },
        "item": {
          "id": "894a6180-4fc1-4220-b951-89d9976fcd8a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "471289b1-f163-4e86-99c1-157a8b5ae63c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28728f94-7d44-4e72-94b9-e2a771fd56ae",
        "cursor": {
          "ref": "8d196588-7eaa-4d5b-b0e0-4becd492ef75",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "572f1406-073d-48db-897f-0954ed65a222"
        },
        "item": {
          "id": "28728f94-7d44-4e72-94b9-e2a771fd56ae",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "12afa35d-668e-46ae-934a-1335b037e806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e9be3c-546c-4b71-9765-04c50daa8229",
        "cursor": {
          "ref": "99c78ca5-d71f-4a0f-bbaa-e39bd5df3330",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9546ee82-5a3e-4d42-a937-cf0674832971"
        },
        "item": {
          "id": "d1e9be3c-546c-4b71-9765-04c50daa8229",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "337541b4-6256-4e02-8edd-a029618c5391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3534819f-1e26-4363-a165-6d2acd7c273f",
        "cursor": {
          "ref": "361391dd-cfad-457f-980f-73c1d0bf6597",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "416714be-7a04-43d5-ac07-9dd7c47720df"
        },
        "item": {
          "id": "3534819f-1e26-4363-a165-6d2acd7c273f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c69a308d-0aad-478a-8c8b-297513fb8d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc2465b1-8bfc-4620-a5cd-92bbe0fa7009",
        "cursor": {
          "ref": "ce72b41e-27ff-42b8-af07-06456cbadd46",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ad8bdb8c-243c-4b88-87a9-1f7111b8d8bf"
        },
        "item": {
          "id": "bc2465b1-8bfc-4620-a5cd-92bbe0fa7009",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "788abfc0-151b-4f49-912f-8a6657afa98c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd71fb78-01c6-4c7e-bc32-ea666810c654",
        "cursor": {
          "ref": "84d5c543-1812-4ce2-9660-909ddfd10b4a",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c19d2ab4-fa10-4b6a-8d85-c2f90866ec58"
        },
        "item": {
          "id": "fd71fb78-01c6-4c7e-bc32-ea666810c654",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "aa070cfe-b8b6-4926-b50f-3f79bbb200cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f2ec9a-0015-4e88-80fa-a23287f29c71",
        "cursor": {
          "ref": "31b3f768-f034-44a2-872e-ba5fa7f2005c",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "17a58896-7e38-4aaf-85f8-78ea370798f7"
        },
        "item": {
          "id": "92f2ec9a-0015-4e88-80fa-a23287f29c71",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "bf9de02a-f2ce-49ce-81bf-7997a66b84ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f11989c4-fba0-4181-8743-8f02f57d8919",
        "cursor": {
          "ref": "09710d77-a533-4571-b0fb-4690aa0093c8",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "930afeb0-b189-4d92-82ba-19e74db237f1"
        },
        "item": {
          "id": "f11989c4-fba0-4181-8743-8f02f57d8919",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "88f5143e-a969-44f5-b8e1-d19cc6b30935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a937b5ec-3bf0-412d-8051-82e5750e61cc",
        "cursor": {
          "ref": "c344abbd-1ca5-438e-85dd-fd3da34465b2",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "23c2ce7d-730e-42ba-bf69-0c6a6be43ccf"
        },
        "item": {
          "id": "a937b5ec-3bf0-412d-8051-82e5750e61cc",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "fe932f4d-37b3-499f-80c4-9791dc9dbeda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7172347-f179-4527-a263-c0cbf2713c6d",
        "cursor": {
          "ref": "2b04039e-2a63-4d69-b555-057e8765b2eb",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2678417c-6d89-43a0-8412-03fe46c5f9ab"
        },
        "item": {
          "id": "a7172347-f179-4527-a263-c0cbf2713c6d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "74baf528-66c1-4fad-9b54-032838c2de37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f44988b4-2a01-4838-84f1-d68d246bf020",
        "cursor": {
          "ref": "ee327d68-85dc-4701-a97b-b9bfd317fccc",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "244fa0a8-7abd-419e-b7e2-1ee023939443"
        },
        "item": {
          "id": "f44988b4-2a01-4838-84f1-d68d246bf020",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "df4b9d94-7971-42ac-8596-93b2603953fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e07777-a7fa-4eb6-b48d-588be2a9d1fb",
        "cursor": {
          "ref": "e07b6388-401a-4161-8559-05e9ff600292",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "cd20315e-51cb-47a8-8811-82b58013b5fa"
        },
        "item": {
          "id": "e1e07777-a7fa-4eb6-b48d-588be2a9d1fb",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9bace850-b5c4-43f5-9e87-ea02b732bc4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7969df6e-28fd-4515-ad42-1335a178eb5f",
        "cursor": {
          "ref": "6f83d267-8b64-4530-a1a9-255270611148",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "87a65731-73d6-4f3f-a042-bbde08a294bd"
        },
        "item": {
          "id": "7969df6e-28fd-4515-ad42-1335a178eb5f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5ea241d5-d661-40fa-b28b-fa7520f7a68a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69fc7fe9-4b53-4c8e-ad66-cee72073de04",
        "cursor": {
          "ref": "4ae07ad7-bdb9-48dc-aee2-5935f5ccb221",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "75a81986-914f-4a7c-bcc3-1d58da48c6d1"
        },
        "item": {
          "id": "69fc7fe9-4b53-4c8e-ad66-cee72073de04",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "beaba5d2-b879-480f-9de7-1e97aac5717c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d4c0ea-5a2d-4a11-8700-22d4f7a9cd72",
        "cursor": {
          "ref": "ab80814f-48f0-4819-8643-8cfedd680cb0",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d2c54504-a50c-42f8-8104-b8229c3ca35b"
        },
        "item": {
          "id": "a0d4c0ea-5a2d-4a11-8700-22d4f7a9cd72",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0ad9578a-cfae-48c4-ad6d-c3b1228e641a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc3e6d01-42a9-4838-8d68-c535b3c4d3f7",
        "cursor": {
          "ref": "6210a327-17a4-4802-8aea-3ca7b1820120",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "eaa1bbf6-90c6-48d4-a440-d3a2dd698a52"
        },
        "item": {
          "id": "bc3e6d01-42a9-4838-8d68-c535b3c4d3f7",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "1352aee6-71a2-44b0-977c-37f94a1b51ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a4ef08d-5fdd-4125-9a98-f44d9bbf5b23",
        "cursor": {
          "ref": "74a47084-970b-40e0-9555-d4fd535aa24e",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "acbc2531-6706-4036-a3a3-4154ec6c8835"
        },
        "item": {
          "id": "2a4ef08d-5fdd-4125-9a98-f44d9bbf5b23",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "684aab27-75f6-4597-8c70-4b10ef843095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afabaeb0-2ec8-46c2-aca0-1ed99542a89a",
        "cursor": {
          "ref": "458add50-455e-4fd1-b5d7-8603ec0f1c95",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "650a2959-e3ca-4ab7-a9aa-710ae2e8faf4"
        },
        "item": {
          "id": "afabaeb0-2ec8-46c2-aca0-1ed99542a89a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8e097813-3a09-4f1f-a734-f0524cf0af5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28254703-8c37-4446-b93d-38d6ba8499ff",
        "cursor": {
          "ref": "d7083db3-8b09-4a06-8f9d-19f6d6280594",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "40cbbe4d-2331-44d2-a7e7-2a42d839e844"
        },
        "item": {
          "id": "28254703-8c37-4446-b93d-38d6ba8499ff",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e5daebc4-1cd0-41cd-b7cb-658875cfcbb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8069937-37b7-44fc-ba5b-fbd5b22363e4",
        "cursor": {
          "ref": "98c9d7fa-80a7-458a-9b5e-d8f14baaeadb",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "74433ab9-2b53-426d-8cad-3d2e618726f5"
        },
        "item": {
          "id": "d8069937-37b7-44fc-ba5b-fbd5b22363e4",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "759daad4-3ba3-4b75-a01a-3f5a3302412e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba237fb1-2a7f-4b36-b40a-d705d720ce8f",
        "cursor": {
          "ref": "f21936fc-dc76-4d8b-aab7-e92427ad7944",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a0b35320-31a5-48a3-a5e0-4b18d00f7d3e"
        },
        "item": {
          "id": "ba237fb1-2a7f-4b36-b40a-d705d720ce8f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "91055b99-b973-4d1d-aeab-e3ec9c9d996e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2997beb-d6dc-46f5-902a-e1472cd84ecd",
        "cursor": {
          "ref": "56b48e30-b1df-4d52-9ba9-f32e3fd13140",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d466c939-9770-4a67-9be8-f48736b9c8c7"
        },
        "item": {
          "id": "e2997beb-d6dc-46f5-902a-e1472cd84ecd",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "0f1d6582-af4e-4889-8ca0-cb5be28d0a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a00fd8ef-5103-4849-8e9f-cbf5bc267c01",
        "cursor": {
          "ref": "c52eb58e-20b1-42d4-97bf-26cac106d6bf",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c791ed49-8b66-447a-adea-09edbc2be9fb"
        },
        "item": {
          "id": "a00fd8ef-5103-4849-8e9f-cbf5bc267c01",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8cd19b74-b1c5-4eed-8a3f-3cccea438db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332f6fff-2c99-4182-9164-2903ea8e324d",
        "cursor": {
          "ref": "206f1e67-a20e-4a7c-9dbd-e93ad794b2bc",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8e16d5fe-8ea3-451b-8b9e-d613d81ef175"
        },
        "item": {
          "id": "332f6fff-2c99-4182-9164-2903ea8e324d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "654eb0cf-19e6-4877-9e23-2fdfe085a6bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd7bd40f-ff88-4f86-8bc4-0fa321801640",
        "cursor": {
          "ref": "72866251-e9cb-4d79-8511-ba3343a9861b",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "96986b82-e615-4f1f-a730-a831db375e24"
        },
        "item": {
          "id": "cd7bd40f-ff88-4f86-8bc4-0fa321801640",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a73804e1-fddc-4a1e-a757-83dddb473b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5467b9b6-eecd-47ec-8e7a-54030c48773a",
        "cursor": {
          "ref": "02c77e50-bc7c-4b2d-b5ef-df111e6875d7",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0c726a8d-8a8c-4240-aaae-7046f3dd7b55"
        },
        "item": {
          "id": "5467b9b6-eecd-47ec-8e7a-54030c48773a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "67329d8c-3d55-4614-ae45-b4f0f50b31ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd97ffda-6237-4cd8-a982-f3ed77cec0a4",
        "cursor": {
          "ref": "2ff490c7-ce96-412d-92e4-dd18ddca7251",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "4f93228d-ac38-4904-a460-539ade84cbae"
        },
        "item": {
          "id": "fd97ffda-6237-4cd8-a982-f3ed77cec0a4",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "78aa2cc1-a326-412e-b430-c4870ca4b31a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff2fdce-feba-4d80-a773-972c86b0e72c",
        "cursor": {
          "ref": "3e173fd5-3ac0-450b-8003-a1cbffe6af93",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "bac2c21d-3990-41c5-b21f-71b620b0f18f"
        },
        "item": {
          "id": "bff2fdce-feba-4d80-a773-972c86b0e72c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7697c50b-9c04-42ed-8ea4-4f2f19c7731a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35375eb2-6567-40d1-9953-1b04f8ef3809",
        "cursor": {
          "ref": "94dc3a69-bc04-4899-93c1-e404ceb0843f",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "fb696e89-eed5-45cf-9115-d97cbeaf5248"
        },
        "item": {
          "id": "35375eb2-6567-40d1-9953-1b04f8ef3809",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c422baed-b101-4e52-a96c-2c5741bbfce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7196b586-c44b-46ee-975b-5f82b93e00d5",
        "cursor": {
          "ref": "982d3a2c-2418-4e38-8a09-049bb1bc4988",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c57bfd60-dda8-4240-8f97-9b6f8dfff07d"
        },
        "item": {
          "id": "7196b586-c44b-46ee-975b-5f82b93e00d5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "37973dcc-feca-411a-a75f-6bf5afd35d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa1ac63f-680d-4a75-bfd4-cb62854a5a53",
        "cursor": {
          "ref": "46f039dd-e495-49a2-9d7f-289b09a3b0a3",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2888ba01-ac0f-4b08-86aa-298be2852829"
        },
        "item": {
          "id": "aa1ac63f-680d-4a75-bfd4-cb62854a5a53",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "5a668711-4169-4815-a5e3-25c13787296a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de59462-f0da-452b-8094-43e9b7e091c4",
        "cursor": {
          "ref": "01166d55-06ee-41a4-8d86-2aa5c0d20902",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "96d2c15e-c387-495b-af7a-db34e0a4ae86"
        },
        "item": {
          "id": "3de59462-f0da-452b-8094-43e9b7e091c4",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "6dcf9331-dc7e-47dd-a267-e6fddbde11f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62716c46-7ade-4e55-a5bd-9733870a6c7d",
        "cursor": {
          "ref": "644c628a-6045-408a-9bb8-b92f37c4865e",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "07f5b366-ab69-4d8d-8c98-ea4231f44712"
        },
        "item": {
          "id": "62716c46-7ade-4e55-a5bd-9733870a6c7d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e067dfc0-fae9-43fa-9c63-9aa1c903956b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d642f925-b10b-42f3-a4a6-d842fe6150c6",
        "cursor": {
          "ref": "442e227b-3736-4005-8670-755115f6a636",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "10bbdc90-c4a8-492c-86ba-a0d17c7f82b0"
        },
        "item": {
          "id": "d642f925-b10b-42f3-a4a6-d842fe6150c6",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d69bc80a-5403-4c2f-954c-972201691718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2400c71-29b8-4ad7-80a7-bc752121507c",
        "cursor": {
          "ref": "4b4993f9-eb48-46db-a982-545326203cd0",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "87727e08-f5c0-4e12-8ecf-e8f183f41fc4"
        },
        "item": {
          "id": "d2400c71-29b8-4ad7-80a7-bc752121507c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9ddfaf82-2127-4ea3-be0b-462ae7bb8e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3540b1a3-e11c-40e6-b017-cc41980cebb9",
        "cursor": {
          "ref": "bd345658-85ae-427c-b9ed-cff618c1bf8c",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "fda96b43-31ec-40e0-81af-2ab4ea333c7f"
        },
        "item": {
          "id": "3540b1a3-e11c-40e6-b017-cc41980cebb9",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "faa479a6-9208-460c-9fd2-b5ebb22c273b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9592d8ea-da41-424d-9582-6b34f7d2af75",
        "cursor": {
          "ref": "4160e83f-c52b-40d1-91f0-d3ccabfb0d6d",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "47d96bef-ef4d-4a06-83c6-fe41c66ef50c"
        },
        "item": {
          "id": "9592d8ea-da41-424d-9582-6b34f7d2af75",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "018fdeb3-6545-4cd3-8d07-02989776b338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c2c55d-70b9-4f8b-a7ca-3790f8b9a280",
        "cursor": {
          "ref": "4effba61-510f-416b-9c89-ee451b1a2245",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "05182207-8694-43fb-b028-fd2e5285ea80"
        },
        "item": {
          "id": "f1c2c55d-70b9-4f8b-a7ca-3790f8b9a280",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f6352e56-a5f5-42d2-b0c9-2d425976e688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07bdfb1-ea98-4371-8295-0a2287f3d23d",
        "cursor": {
          "ref": "b91577e3-d19b-41fa-93f0-084c150d8964",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a4a2b7da-6082-4db3-be70-16e7a929e22c"
        },
        "item": {
          "id": "e07bdfb1-ea98-4371-8295-0a2287f3d23d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "875a9d9d-9d68-47f8-a4f1-0f65aa07f2ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee173ceb-e97a-4746-b17d-ace3b42cac56",
        "cursor": {
          "ref": "baed051c-3814-4f33-bb67-f7813d99ecae",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "884dddf1-83e6-4876-a006-4134a7693e04"
        },
        "item": {
          "id": "ee173ceb-e97a-4746-b17d-ace3b42cac56",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f39a89a7-7dc8-4b1c-a494-27fa84f95777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bfc3b05-5314-4a1f-ac0f-6e36f421a208",
        "cursor": {
          "ref": "5969446b-c584-4b34-a148-45d59abc5c54",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "79a41206-ce46-4b23-9065-4c49aa387727"
        },
        "item": {
          "id": "8bfc3b05-5314-4a1f-ac0f-6e36f421a208",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "abafe697-55e9-46e6-bd4b-f770d7862445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c45380dd-e22d-4f72-a7a5-4bfc2975e428",
        "cursor": {
          "ref": "8b6efb57-fa10-408b-b47b-8e5202589c11",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "dd0adc2f-414e-43f5-b0c4-c65c1f635a28"
        },
        "item": {
          "id": "c45380dd-e22d-4f72-a7a5-4bfc2975e428",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b1a13dae-8719-4f3b-b199-9d6b8e394c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c323b5d-e83b-4179-a3e6-9bb5fbdc84c9",
        "cursor": {
          "ref": "07393643-73ad-47ec-9af4-71f9292151b1",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "5bb84e47-8dd5-4737-ac50-be14a6f12797"
        },
        "item": {
          "id": "0c323b5d-e83b-4179-a3e6-9bb5fbdc84c9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "64722fec-2928-4888-89d7-10f571b68183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dbb4049-62c9-40fb-910c-ede5dd62f82a",
        "cursor": {
          "ref": "cedadbd4-947c-40e4-bcef-528ada74736a",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "80975f9d-7b7b-40bf-b637-99416764e928"
        },
        "item": {
          "id": "2dbb4049-62c9-40fb-910c-ede5dd62f82a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6a6f5975-cdca-4874-b38a-2dc5b6ff5f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4539467f-c917-4ec5-bb64-0ab419eb2ae4",
        "cursor": {
          "ref": "b8bdb579-17ca-4ee2-be14-85dc485cc1ea",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "0c15420b-dc7d-43a5-944c-c807e28485d5"
        },
        "item": {
          "id": "4539467f-c917-4ec5-bb64-0ab419eb2ae4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "3daf81fd-365d-4010-a062-8eeef3e71ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7b0750-8a3b-48cf-93ac-f00425cd6c1d",
        "cursor": {
          "ref": "344706b5-2aa9-4cb4-93b4-dd3549b7ef1d",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "3222f332-8396-439f-afe1-7445086944ff"
        },
        "item": {
          "id": "6b7b0750-8a3b-48cf-93ac-f00425cd6c1d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a6f52002-acfb-4c36-b071-cb97fe7c9587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb9c4412-1d3f-4f27-ad9c-87a143cce38d",
        "cursor": {
          "ref": "c20bec5b-8fa0-459f-bfd6-d78475f46202",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "acca658e-e3ec-4d60-a1ba-2d36fb7f5d5c"
        },
        "item": {
          "id": "eb9c4412-1d3f-4f27-ad9c-87a143cce38d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d7603c22-27f2-4c01-bfed-7b35b1a6d736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ff7d9c-fba7-4890-99b1-0b6fb9ffe9ba",
        "cursor": {
          "ref": "61f60e19-a7f1-4669-92d0-ffccff6ea46e",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d38db9fa-a909-4cb4-a61e-a631aefadd33"
        },
        "item": {
          "id": "54ff7d9c-fba7-4890-99b1-0b6fb9ffe9ba",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f0b0ce80-6773-47c1-aad7-d9fb2013ca0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd43ba5a-369f-4c10-8b99-ce8a56f1e5dd",
        "cursor": {
          "ref": "bab81e29-4a97-47bd-aa35-8b64244bd330",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "86836a48-c834-4acb-b534-d8c3d5c8f3a6"
        },
        "item": {
          "id": "dd43ba5a-369f-4c10-8b99-ce8a56f1e5dd",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f808aa56-ebe5-4cca-be62-6d0434a72332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c841148c-ff55-4132-96c8-cf27ec2232a4",
        "cursor": {
          "ref": "e3191d3d-72a1-4425-947e-aa9be3883c09",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "8fdf7249-bec2-4803-8faf-82623856967b"
        },
        "item": {
          "id": "c841148c-ff55-4132-96c8-cf27ec2232a4",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "7fad87ac-ec6b-46b3-8782-d8a27bdad4f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf07ff0-855d-43bd-b2a6-40e9e818c320",
        "cursor": {
          "ref": "068279aa-c333-4051-94dd-53f4b423ac66",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "aafcd297-526e-43fc-ab9d-4aea330b691a"
        },
        "item": {
          "id": "9cf07ff0-855d-43bd-b2a6-40e9e818c320",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4848f2e0-f452-485a-b4b5-f847a3c731e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20720a9-d66d-425f-81b6-935c8d5de59a",
        "cursor": {
          "ref": "cede7cad-40f8-4304-b2ff-6fc70b2628b1",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e42ada8d-e413-40be-befa-71c7bf75922f"
        },
        "item": {
          "id": "b20720a9-d66d-425f-81b6-935c8d5de59a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c51a48c0-ee40-46eb-831e-252037d7964a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa80d985-f0be-4604-922c-9ba895d2fbc5",
        "cursor": {
          "ref": "c4286e0e-83e6-4bc7-b423-c3518328400a",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3ecd19b9-f576-4b3a-bd68-5c45366cb5d4"
        },
        "item": {
          "id": "fa80d985-f0be-4604-922c-9ba895d2fbc5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "fab23f1a-b8c6-42dd-bc3c-a23aecb70caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c95bf62-6cf1-4960-8f8d-700eea20b149",
        "cursor": {
          "ref": "fbe31245-b8f8-41b0-b6d9-6aac83602462",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "faa869e8-87c8-4e4a-a072-1327971ba7f0"
        },
        "item": {
          "id": "8c95bf62-6cf1-4960-8f8d-700eea20b149",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7f478c30-f850-4c31-b29f-86314a23e573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "448917ce-cc58-4634-bd8d-ca230e540a8c",
        "cursor": {
          "ref": "94d90dff-f131-49eb-8b0b-46b7a20d170f",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b3efd065-8161-4e6d-b0f0-02dfafbb5fe4"
        },
        "item": {
          "id": "448917ce-cc58-4634-bd8d-ca230e540a8c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "41c5cae8-96b3-4055-b2a4-b027eb77f3dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1aedfc-c0e3-4b78-967c-e7d773c9d121",
        "cursor": {
          "ref": "cb5adc94-c39b-40fe-a792-8953c1389f8c",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f5cf6342-2bc9-4064-a345-0a3c664c3262"
        },
        "item": {
          "id": "be1aedfc-c0e3-4b78-967c-e7d773c9d121",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9c50f420-52c0-4bf8-8943-d498cbd94950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e1e39b-2629-483c-82ae-80ec56f76ada",
        "cursor": {
          "ref": "25c3bee5-a633-4b42-a6ef-0c44a8ed3ece",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ba3910a8-e282-4c7f-b661-0139f859852b"
        },
        "item": {
          "id": "96e1e39b-2629-483c-82ae-80ec56f76ada",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "5cd9f276-739b-4ac0-b102-d65682d6d2d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9071ac47-6f5a-421f-8247-8d278788fcfc",
        "cursor": {
          "ref": "02a9ae92-244d-4b67-b8fb-ac12f3be3b12",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "fd9f4c94-8536-4c5a-a98e-469f53186455"
        },
        "item": {
          "id": "9071ac47-6f5a-421f-8247-8d278788fcfc",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e3dc4f70-cfd0-49e5-b369-954808647f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82126d5c-37fa-4f1c-963f-1e00197028bd",
        "cursor": {
          "ref": "b75f42f8-43ba-4007-b92b-f97f6ad68d97",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "5d7cae0d-929f-4bf8-bf38-ff37f23f308d"
        },
        "item": {
          "id": "82126d5c-37fa-4f1c-963f-1e00197028bd",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a19d4533-c4bc-4fe5-8e8b-3bb5cac044c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e5a5138-918b-4591-b984-da033a72fbbf",
        "cursor": {
          "ref": "88bdca40-bcee-43b0-a81e-bf48c8daac5a",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b85dd9eb-be18-4a2d-9489-d3709afe0ef8"
        },
        "item": {
          "id": "0e5a5138-918b-4591-b984-da033a72fbbf",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "45938876-dc7e-4a71-80ff-7df12f866fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a897169f-0fe5-45b2-9832-205b3608e6a4",
        "cursor": {
          "ref": "75945ba6-f857-4bc6-bcd3-9c1f6c4291b8",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "09bbd2ef-3d4f-4ff2-bc56-c36eaa5530a5"
        },
        "item": {
          "id": "a897169f-0fe5-45b2-9832-205b3608e6a4",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b540b71d-a910-478a-a773-cfa7e5f0ab0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34fe9472-b9f0-4cd2-98df-ca543880ceca",
        "cursor": {
          "ref": "b2ada17b-5a39-4dca-860a-0a2327f03c5a",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "6cddd0e2-b62d-40b2-a704-1e27883d2973"
        },
        "item": {
          "id": "34fe9472-b9f0-4cd2-98df-ca543880ceca",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0a169455-8d1a-4693-9875-c127f131a0ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611cd887-4520-4ad8-a0ee-98aaf5801494",
        "cursor": {
          "ref": "d51f27e6-98f0-4fd9-90c6-d13115cfdf13",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ee68c151-75c0-45c0-a013-21358d828f95"
        },
        "item": {
          "id": "611cd887-4520-4ad8-a0ee-98aaf5801494",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "afb4faca-b956-4384-9dea-02c54991c301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c3f3bd-6741-47cf-84ef-d11e4cae289c",
        "cursor": {
          "ref": "d8db5a13-2629-4783-a832-b0ff5d32cdfb",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ad4b6a9d-e0ed-494f-aa68-705204354228"
        },
        "item": {
          "id": "44c3f3bd-6741-47cf-84ef-d11e4cae289c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "1eb8be6d-972c-4cbb-84da-2c8375e0f8b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4949d2e9-a62e-42c4-bfb8-11aeba4a7885",
        "cursor": {
          "ref": "0d532869-38e0-482d-ba89-11fc1a6a14dd",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ebfb3ed8-0b92-494a-ad3b-9a46ec70b50e"
        },
        "item": {
          "id": "4949d2e9-a62e-42c4-bfb8-11aeba4a7885",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "5f8000a9-1023-492c-b065-c249a422cfac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02c2e99-a634-4a01-88ff-6146a9271f8f",
        "cursor": {
          "ref": "78e8f994-257b-4e53-9053-db7ce435c0af",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "540f6772-b6c9-475d-8175-a996a2a6b4f3"
        },
        "item": {
          "id": "d02c2e99-a634-4a01-88ff-6146a9271f8f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "0b19f32e-d320-4414-a2ea-d8fad58b7774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc3e88d-369a-4362-86f8-0767348f033c",
        "cursor": {
          "ref": "35e96d59-aac3-44ea-8fab-49e0ed1da906",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "62b3cb88-816a-4d12-9d23-a57ae189fd8e"
        },
        "item": {
          "id": "fbc3e88d-369a-4362-86f8-0767348f033c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "94139a25-3fd3-4c16-98fe-c9262d9891ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 136,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d53c0d45-e42d-47a6-815d-8eae4ffeb9ee",
        "cursor": {
          "ref": "6ed85042-a14b-4293-9a72-d9e2fd390edc",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5254322c-1f98-443c-9999-3502d10f9c45"
        },
        "item": {
          "id": "d53c0d45-e42d-47a6-815d-8eae4ffeb9ee",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ada0fb73-aa85-4e57-921a-bbbb55014e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64be1e5-8b3e-4356-afb2-4861786acc16",
        "cursor": {
          "ref": "cf310bbd-e8bd-449a-a1e3-6410406ab94d",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "27d079a5-6170-44b4-836e-87096484eab4"
        },
        "item": {
          "id": "f64be1e5-8b3e-4356-afb2-4861786acc16",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "7a568d0f-5eb0-43da-aa9d-d638a7d28384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e68774-a962-417e-949d-9dcf6ec06bf4",
        "cursor": {
          "ref": "e1b8ed27-903f-4e01-bedb-86f2fc40be94",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e6ec5b6d-e324-47e9-a398-f6ced379f63c"
        },
        "item": {
          "id": "93e68774-a962-417e-949d-9dcf6ec06bf4",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b767494d-6a16-4a3d-8517-45cd84b0105a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73f0605-08b9-49b1-a1e9-4aca35e4f50d",
        "cursor": {
          "ref": "d82d2939-948a-4ef7-b10c-98a107aeea57",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "17f41e57-3eb1-4f10-8097-f4ef17f7ff87"
        },
        "item": {
          "id": "d73f0605-08b9-49b1-a1e9-4aca35e4f50d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "2ef7c8cc-3981-48f6-b08f-5c7db1483fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a891c2d6-37f3-41b4-97d9-469b5affc9a9",
        "cursor": {
          "ref": "8d9146ac-c11f-4968-a150-09889e256176",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e3c3a72d-a9a0-4c29-907b-4c6f337aedb4"
        },
        "item": {
          "id": "a891c2d6-37f3-41b4-97d9-469b5affc9a9",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "3ab6f2d8-61e0-4605-afeb-46ff096fd188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ac3272-60ba-4e84-b309-7671528cfbd4",
        "cursor": {
          "ref": "276c279a-3ff1-4e38-8f0c-f4b27d6cb9e6",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8860ba29-cd1a-4b07-8ecd-46278d8d362f"
        },
        "item": {
          "id": "63ac3272-60ba-4e84-b309-7671528cfbd4",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e4dacac2-7b3d-499e-ac8d-bc7135976732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8e27e3-a7b7-4f4f-b630-8dfc64776a1b",
        "cursor": {
          "ref": "550fdd6d-add0-46a1-a1fb-cbab4c6a067d",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3f20ee26-6eb6-4ae2-bf49-4b52c173b180"
        },
        "item": {
          "id": "1d8e27e3-a7b7-4f4f-b630-8dfc64776a1b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "81cf3a17-139d-4f27-8459-f7eff95fa56b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c82b5c4-b09b-4296-a1d7-eee2ad7881c3",
        "cursor": {
          "ref": "47a0c732-4d9f-4093-a6c1-9699d64dc1ad",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "5194511f-6618-4472-abdc-40229782a72c"
        },
        "item": {
          "id": "5c82b5c4-b09b-4296-a1d7-eee2ad7881c3",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "8fe87d56-f285-438f-80d7-243ce055b633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c94e24-e231-4287-b830-c4502efd038b",
        "cursor": {
          "ref": "9f8edcb2-e7d1-4e0c-b410-8c05c2775751",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "75c313b7-b59f-41d6-bd3a-937d530c5f59"
        },
        "item": {
          "id": "53c94e24-e231-4287-b830-c4502efd038b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b8049206-d66c-4887-a6ca-896e075df712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb06dfe-c416-4450-8ad5-e452c77ac4d8",
        "cursor": {
          "ref": "1179711d-9f1f-4841-a3f6-5d6297b6ecfe",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c5e7739f-26b1-419f-826d-6d47a695ad8f"
        },
        "item": {
          "id": "2cb06dfe-c416-4450-8ad5-e452c77ac4d8",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "bdc10dfe-f368-4869-989e-e94240cd26f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c7cc2c-54ed-4bcf-b579-5d9fdb155870",
        "cursor": {
          "ref": "07acad34-e90d-4b85-9910-cda89c68399c",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "69a0a946-ff46-430e-ae28-84f56fda845a"
        },
        "item": {
          "id": "51c7cc2c-54ed-4bcf-b579-5d9fdb155870",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4e87d09f-08eb-4ad9-8453-273f9aceb316",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f8474b6-3ebf-495b-a62b-da010f468d54",
        "cursor": {
          "ref": "7158b7e1-a0da-49da-bb3e-285e39ed4208",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b7c9b878-89ce-49f5-ba71-a2543b88ebde"
        },
        "item": {
          "id": "5f8474b6-3ebf-495b-a62b-da010f468d54",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "c1917529-255f-45c6-9e1b-5249fe8e4d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "0d24348e-6137-404a-becc-46ff4e5e76c8",
        "cursor": {
          "ref": "f5f17a5f-2f2e-4613-915f-82a2ee1975f4",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "fef0f342-daaa-44f2-bba9-4759eed7a923"
        },
        "item": {
          "id": "0d24348e-6137-404a-becc-46ff4e5e76c8",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b2f9c349-2389-4698-afa9-b34fa8f9ddbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "be565541-03e9-4201-baa9-d61efc0e7f31",
        "cursor": {
          "ref": "664d776a-30d7-4c0e-97b6-47f7fea05e86",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8bbd547f-bb16-40ad-a8ca-f933eac59424"
        },
        "item": {
          "id": "be565541-03e9-4201-baa9-d61efc0e7f31",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "a1f7f5b6-5ace-4ac1-8e12-f46c9a6fc1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "163c965d-e551-4f82-b6bd-01a015b74e7a",
        "cursor": {
          "ref": "8e474bad-1d5e-4efd-b2b0-cf4191487654",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "82550796-49dc-49bd-aaa2-20ace0a41f1b"
        },
        "item": {
          "id": "163c965d-e551-4f82-b6bd-01a015b74e7a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8ae24569-4432-475b-94a0-307d420a18f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "95fb7f77-82eb-4415-9b11-42f049be3652",
        "cursor": {
          "ref": "4024037f-a378-4d45-a887-29205534ba60",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "3f030dff-3bec-42ba-9c0f-0ffebc91a1f2"
        },
        "item": {
          "id": "95fb7f77-82eb-4415-9b11-42f049be3652",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "39fe7751-c734-4ae9-a097-fa468eaab31f",
          "status": "Created",
          "code": 201,
          "responseTime": 7175,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad82ee8-2d8c-44be-976d-cdccefb7983b",
        "cursor": {
          "ref": "13253c5d-96ea-49f9-9933-f148a0753666",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "57597d32-6958-454c-833e-93622ebb5680"
        },
        "item": {
          "id": "9ad82ee8-2d8c-44be-976d-cdccefb7983b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "61a37bed-38a4-4f35-9c32-a4ed329d3aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "4b8baa24-2699-4224-9f37-c86dc8939c15",
        "cursor": {
          "ref": "4cb1e94b-1f88-455e-9a7f-5ec543bf5694",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "5bbec5aa-85bb-442c-aba4-21a84f2fb108"
        },
        "item": {
          "id": "4b8baa24-2699-4224-9f37-c86dc8939c15",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4579805c-b181-414d-9c65-8c1d70281802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "298a72ab-d302-4aa4-89cf-200ca972dfaf",
        "cursor": {
          "ref": "be95bfd3-5bdb-44be-a051-f6048c1594ed",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "6ea705b3-72f1-4b9e-b8d9-325d74ce55b6"
        },
        "item": {
          "id": "298a72ab-d302-4aa4-89cf-200ca972dfaf",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9ba97661-90a5-48a4-a573-34e3519ee770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "894c3159-ca6d-4644-b41a-80bc7b4a630d",
        "cursor": {
          "ref": "77427245-93a0-4fa7-a266-ffa3c7356557",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "40d29382-11bd-425f-84a2-5c4602e45d41"
        },
        "item": {
          "id": "894c3159-ca6d-4644-b41a-80bc7b4a630d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5fb1eef8-71d6-41a3-9532-bc31f7a50f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c467f54-713e-416d-8353-cdd8147d46ec",
        "cursor": {
          "ref": "b9a76df4-4c5b-4515-93b1-ebc02e13eda9",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "019bc147-1f48-4770-a96a-5a48f50f9898"
        },
        "item": {
          "id": "7c467f54-713e-416d-8353-cdd8147d46ec",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "417d94af-c6a9-4c96-a01a-49f7afcd24a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce90bbfb-6129-4fde-9ad2-79af92d4b0c1",
        "cursor": {
          "ref": "c42f873f-4a03-4a5a-9b85-78b1ef792f06",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "6b89beca-8cf0-4530-8ab6-7564582af657"
        },
        "item": {
          "id": "ce90bbfb-6129-4fde-9ad2-79af92d4b0c1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6fc79881-1091-4471-bb22-664569d9b37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8300ae60-6e26-43ef-9cb1-8da78ea3adcf",
        "cursor": {
          "ref": "e45de701-3e25-4717-b442-81b601e5e98a",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "ead0a579-e330-4731-9e64-3b7c03771bb4"
        },
        "item": {
          "id": "8300ae60-6e26-43ef-9cb1-8da78ea3adcf",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "54aca8fe-aaa2-4d24-a48a-e6ca4a4c883a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10da060-e3e1-4381-b469-a7fbacfbca2d",
        "cursor": {
          "ref": "ad70bc93-11fa-429e-aa36-16735cd434f2",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c2395949-507b-4d20-ad3b-861a7289c17c"
        },
        "item": {
          "id": "b10da060-e3e1-4381-b469-a7fbacfbca2d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "dded52e9-9d66-48e5-9caf-5e83655ab935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c356a05-85f8-4708-b77e-fdac3c31f8d4",
        "cursor": {
          "ref": "53b0640a-88d1-4dd4-aa38-d4d74cb7eda1",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "812c377b-da08-4645-b4e6-9804ba489c94"
        },
        "item": {
          "id": "2c356a05-85f8-4708-b77e-fdac3c31f8d4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8f1c9776-8df1-4f81-9f08-db56b9ac5f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf6d15c-00ed-4323-ab25-30f925155bff",
        "cursor": {
          "ref": "572e3dc7-8874-4396-b170-0e6b2315d299",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "6d0034df-f1d8-4915-bf1c-ecf710fcd650"
        },
        "item": {
          "id": "2bf6d15c-00ed-4323-ab25-30f925155bff",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "077c2685-a381-42c1-ad86-abf583998bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844a1c1a-004e-4ba6-ab04-1b41afe2b9eb",
        "cursor": {
          "ref": "f9db8ec5-2a4d-4270-947b-7529198e0314",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7d05f8cc-72c1-45a1-aba1-d3a40c25272e"
        },
        "item": {
          "id": "844a1c1a-004e-4ba6-ab04-1b41afe2b9eb",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d4456ddd-4737-4a09-b372-3dd972c7ec2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf87d6d-d860-4523-a53b-a8fab7420871",
        "cursor": {
          "ref": "03263098-449a-4de2-a789-ba0ffb52f6d5",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "abd9f204-0294-400b-9ca3-32b99f79589a"
        },
        "item": {
          "id": "ddf87d6d-d860-4523-a53b-a8fab7420871",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e525e717-4fdd-4c87-9b85-c08c2a026381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad55f16-ad23-412f-b2a7-f4fca2f51bd1",
        "cursor": {
          "ref": "15f4664a-094c-4e58-b49d-73ae08fb998b",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d9d6a00f-29a3-4f05-8d0e-345244b720ba"
        },
        "item": {
          "id": "3ad55f16-ad23-412f-b2a7-f4fca2f51bd1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "694941ed-ca73-4c69-a78f-9d70aeb69471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36deb992-1f99-43d6-bb35-eb0474d05c0f",
        "cursor": {
          "ref": "2ff3350d-1b55-43bc-9075-80b414c59020",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3a9dc689-8bc2-49d9-8300-aa4045e9c833"
        },
        "item": {
          "id": "36deb992-1f99-43d6-bb35-eb0474d05c0f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "59d28587-2fd3-42c4-9671-fdea842a31e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3edec0d-21a9-401d-ab7d-2b586062fd93",
        "cursor": {
          "ref": "8a46516b-3d6b-41bf-8e34-d13aeb5079e6",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "cd7fcfd9-c731-4df7-913c-9fe340b70448"
        },
        "item": {
          "id": "f3edec0d-21a9-401d-ab7d-2b586062fd93",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4f59ee8a-9687-418d-8b0b-ba9815f0b198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ef3d3a-cbfb-4ea7-865a-599b3caf7356",
        "cursor": {
          "ref": "b6dd7e3c-631a-4c52-9e1f-25d0dd045af6",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ab301f89-c3cb-45e1-b5b1-679c16a13a65"
        },
        "item": {
          "id": "d2ef3d3a-cbfb-4ea7-865a-599b3caf7356",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "68cfc3ec-1cd5-4f7b-8fda-35a290583cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa7f557-1812-4751-8768-44987dfc1307",
        "cursor": {
          "ref": "06f52fa7-e12e-48d8-849f-64a0b65b1601",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1776fc05-abec-4a54-ba61-eb00dc6704e6"
        },
        "item": {
          "id": "2aa7f557-1812-4751-8768-44987dfc1307",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d4b37fc1-6b15-4d84-a0a4-7115b86b1fba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d75da4-923c-462f-8631-d46778f2f2c1",
        "cursor": {
          "ref": "4d28045d-7a0f-43e3-a3ee-454c9002fecd",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "edb55c30-6ced-4d68-b3b4-f88439d4c172"
        },
        "item": {
          "id": "03d75da4-923c-462f-8631-d46778f2f2c1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f5ad0432-6e8a-4ac7-840f-205732b1e697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f4f7c8-85b0-4b8e-9208-79588a490a7e",
        "cursor": {
          "ref": "56f9cf94-c5fd-4507-97b3-13e0abbbb41a",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ee446b49-d8a2-47c9-9991-a19de7040536"
        },
        "item": {
          "id": "68f4f7c8-85b0-4b8e-9208-79588a490a7e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9a9b681a-c325-464e-a4f3-04eacf19533a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1be759b-2047-4434-914b-df34cd87d4d1",
        "cursor": {
          "ref": "07f02d2c-acd5-41e2-8e48-98275d25447d",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "59b37e1d-6be3-4934-b31c-4a80fd925bbe"
        },
        "item": {
          "id": "d1be759b-2047-4434-914b-df34cd87d4d1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "538cc3a4-85f1-4cbc-9f4e-41a68f61f5bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e554d99-3507-4656-9357-2b2cf5ac2df6",
        "cursor": {
          "ref": "db74c398-c101-4e67-b86c-e99240b73b9c",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7f923223-3b4b-4173-bc63-7311a3628714"
        },
        "item": {
          "id": "9e554d99-3507-4656-9357-2b2cf5ac2df6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "51bcae6c-b58a-4ee3-aa4f-50f94949b22f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abaafb7b-1378-492b-b058-1ea0d1b20f62",
        "cursor": {
          "ref": "a19db19d-ef4a-4895-b328-fba9fac96a2a",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ce2c263e-380c-4773-9b2b-ec5347043bff"
        },
        "item": {
          "id": "abaafb7b-1378-492b-b058-1ea0d1b20f62",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fdc4c974-dc47-4fac-b55c-9c077284f4ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e82f52-4506-4da8-bc82-657dabd040b7",
        "cursor": {
          "ref": "028653d7-d3d1-4bfa-bc1a-ce63d0cc2b30",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "981742f2-1e66-4a0e-8ed4-8b186107d158"
        },
        "item": {
          "id": "00e82f52-4506-4da8-bc82-657dabd040b7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "163898ed-55c5-465b-8525-d600c795af0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a1de423-e572-4783-a6d8-f4a939b04c2b",
        "cursor": {
          "ref": "88317a67-2317-4bce-a7d1-fa49e71d8711",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "69210daa-4323-4f62-b143-026ef1d1d87a"
        },
        "item": {
          "id": "9a1de423-e572-4783-a6d8-f4a939b04c2b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1c16eb06-af03-4218-b7c8-0bcadc06f4af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9419ae87-e1c3-4444-9954-4586c6550d62",
        "cursor": {
          "ref": "000f6a24-7da9-49f0-b5b5-94d518a509b0",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6873996e-2d76-4993-8735-62d9c6d3b0d3"
        },
        "item": {
          "id": "9419ae87-e1c3-4444-9954-4586c6550d62",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "da13a760-740f-4479-8555-83b957f02564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad26bfbb-f857-4c6a-a704-17e2b198304c",
        "cursor": {
          "ref": "ba726ddd-d2a7-4c69-9ddf-ccb52157579b",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5001aca4-a9f2-4f31-b952-7bc2ef8c41b9"
        },
        "item": {
          "id": "ad26bfbb-f857-4c6a-a704-17e2b198304c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1b8fd17e-9a8c-4d30-aaad-693c1a5952dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f55099-8e31-4f4f-bfae-e78e664915fb",
        "cursor": {
          "ref": "54ce7b0d-543b-4b26-901e-f2bb5ec202cb",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "03c56e79-d75e-496e-893e-3a91eafb8717"
        },
        "item": {
          "id": "d4f55099-8e31-4f4f-bfae-e78e664915fb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e9eb2df8-7fe8-440f-a592-96d4321fc9bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7046bcfc-f6b7-46b5-aa75-b3addc02b1e7",
        "cursor": {
          "ref": "963c9366-7a15-46e3-ae8a-57e92c22a6f6",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "634a2105-b29e-4144-b8d1-9613629206dd"
        },
        "item": {
          "id": "7046bcfc-f6b7-46b5-aa75-b3addc02b1e7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "da213431-c931-4f42-a004-8d59a8960fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a14a0784-5d4e-4dcd-a93f-006274c5b8eb",
        "cursor": {
          "ref": "40af582b-4b80-48bb-815a-6ca757214d27",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c72e790f-0a2e-4c96-b838-9c218c8eace2"
        },
        "item": {
          "id": "a14a0784-5d4e-4dcd-a93f-006274c5b8eb",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "70f8010e-354a-414e-8a69-061fabd6c1bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609fdbf8-ecfc-454b-a3b1-2276cb7ffa52",
        "cursor": {
          "ref": "37e9ff1a-ddad-44f0-add9-bbde0f42aa49",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "05e81371-516f-4447-b4b4-af9cb6630e6d"
        },
        "item": {
          "id": "609fdbf8-ecfc-454b-a3b1-2276cb7ffa52",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2fc618c2-bebd-4a88-acdf-80a57b7d0eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 956,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d18fa608-9fbe-4184-bbf2-0966f4c88fde",
        "cursor": {
          "ref": "0d50ac21-8d24-48bc-b4e2-b15a6d7ddebe",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "dc8ddb0d-1801-41dc-9a46-c61b6c349427"
        },
        "item": {
          "id": "d18fa608-9fbe-4184-bbf2-0966f4c88fde",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6db2d03b-216a-43e0-a476-2c5892a833a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d304a147-10db-4b26-ba6b-33b43f823001",
        "cursor": {
          "ref": "7725f577-b57d-45fa-b746-2817f8adbc34",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6c120e4c-96f3-4dc9-8cd2-71cddfc835b0"
        },
        "item": {
          "id": "d304a147-10db-4b26-ba6b-33b43f823001",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "432e70ab-d779-4706-89f4-69e7a5187fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2937740-d65d-4b74-864e-9388c32fb738",
        "cursor": {
          "ref": "dd248c95-1020-43fc-b2cf-293b11f4afe8",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "45b1dfb6-f803-48d7-8d5a-9be239dd66e0"
        },
        "item": {
          "id": "d2937740-d65d-4b74-864e-9388c32fb738",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8588610e-1fef-45d5-b703-92430961f036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fed6f97-be1a-4c24-9edc-72acdd54ee8a",
        "cursor": {
          "ref": "76e2fabf-9d84-428b-a915-2613cb3398d9",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "220f16dc-3a6c-49d5-b268-de2aa00f395c"
        },
        "item": {
          "id": "4fed6f97-be1a-4c24-9edc-72acdd54ee8a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "5c33797b-32cf-4aaf-9dcb-957101f841fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba4422b-6a10-421b-8df5-bec377ff8102",
        "cursor": {
          "ref": "75358a0f-ec08-4122-90e0-b1f55561f61a",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "8336f19f-791c-4b85-b81c-926190fe6bcc"
        },
        "item": {
          "id": "eba4422b-6a10-421b-8df5-bec377ff8102",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9f42a812-066e-4b85-bb63-adcb9ea20960",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3fbb283-ce7a-454e-968c-435b34ee77bc",
        "cursor": {
          "ref": "2c0562a7-f771-483a-8df6-20c086ae2c82",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "db334bcd-1882-4ba9-9bc8-7c6322fde5ae"
        },
        "item": {
          "id": "d3fbb283-ce7a-454e-968c-435b34ee77bc",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "988ea404-5061-46b8-8278-13be5f5cfbab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac89f01c-e3b8-4486-a8b7-cd378179bb4e",
        "cursor": {
          "ref": "725951fa-4ce3-4404-9b8a-ef36dc4a16aa",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "8075b89f-d6ec-4ce1-9d4b-fb385102c902"
        },
        "item": {
          "id": "ac89f01c-e3b8-4486-a8b7-cd378179bb4e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "dfb311ba-1955-49a4-856b-1c18259d0558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5647f141-99bc-4b5c-9f49-059a538f60a0",
        "cursor": {
          "ref": "8d8d88ab-3c0a-46c0-a677-d14740f835bb",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1313e138-3ab9-4d58-bf6c-2497a35ff4d7"
        },
        "item": {
          "id": "5647f141-99bc-4b5c-9f49-059a538f60a0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7cf04805-b9ef-4958-9293-59d5f3b57f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b53f8ea-d60f-46a3-92d3-2661657af40b",
        "cursor": {
          "ref": "98e96883-03f5-4844-89e7-de988a89c5ca",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "186ae63f-af0c-4b62-82d2-f8facc8ffc7d"
        },
        "item": {
          "id": "2b53f8ea-d60f-46a3-92d3-2661657af40b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2fda2dc7-d3fa-4941-a631-4a7f75aada82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9167cc99-2891-400b-a724-008ac113dbfa",
        "cursor": {
          "ref": "721dc4ec-8bfe-494f-a2c2-894bfe90b779",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6aab1410-7969-4595-b8ba-71a29fe26f53"
        },
        "item": {
          "id": "9167cc99-2891-400b-a724-008ac113dbfa",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d7476915-a8a8-4063-b7ce-bd680b182162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d15d9b-6a62-4f49-b993-c70af6472438",
        "cursor": {
          "ref": "e531fbad-2d22-467a-895d-fc265812744f",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "1d2433eb-2865-4cd2-944d-85b8dd6438ef"
        },
        "item": {
          "id": "a5d15d9b-6a62-4f49-b993-c70af6472438",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d1f0385c-475e-4511-8522-40597d703c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5262a450-49cf-44ba-ac12-3fb1d001a18f",
        "cursor": {
          "ref": "39bd9a1e-fb15-4bb9-a4ce-a2f6880f4366",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "de5bc20e-11a5-42e0-b041-8c1cbab0d178"
        },
        "item": {
          "id": "5262a450-49cf-44ba-ac12-3fb1d001a18f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "915624df-73c1-447a-a6f4-3f84bd6cc7ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338b443e-4956-41eb-b8d5-18ef6f545c30",
        "cursor": {
          "ref": "50562e47-987c-4916-b261-b5b77e561114",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1588a0c8-460e-42b3-a674-6aef308b673a"
        },
        "item": {
          "id": "338b443e-4956-41eb-b8d5-18ef6f545c30",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b284a3bd-92d8-46fb-a9ec-0fbeffee044d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e3c59e-38fc-4c81-850b-61e1b1b5447b",
        "cursor": {
          "ref": "4b45c6aa-0ce5-46e4-9038-63f2a2c99c0f",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d9db744f-ff95-480f-922d-3ccd14ac9c28"
        },
        "item": {
          "id": "d2e3c59e-38fc-4c81-850b-61e1b1b5447b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "dbc9af66-438f-4b3f-a924-44c9f35e810e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32bf9456-6d70-4c77-8c2c-084fa78485fe",
        "cursor": {
          "ref": "793f44f9-9a34-47b9-ad5f-ebd76badf24f",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "91726ffa-48c4-4ae7-a69c-63d0b092051e"
        },
        "item": {
          "id": "32bf9456-6d70-4c77-8c2c-084fa78485fe",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7d40a91e-05a8-4830-8034-cfe7062893a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dabb7c7-4f25-4962-acca-7f746a0fa1d7",
        "cursor": {
          "ref": "ceec9578-d9b4-4f74-9cd8-4426edec8ad7",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5cb51dec-dd1c-4878-aeda-5dc211b18a88"
        },
        "item": {
          "id": "7dabb7c7-4f25-4962-acca-7f746a0fa1d7",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b0160fc3-a00b-43c0-9e9a-fcb146c662ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca7f0ea-7429-4850-b8a6-db9c9a6327d2",
        "cursor": {
          "ref": "b2a5ef96-5817-4c1e-b3d7-8b92ba933007",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "1065fea2-5a01-4e56-890c-70ea1e602640"
        },
        "item": {
          "id": "3ca7f0ea-7429-4850-b8a6-db9c9a6327d2",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7a76478c-cd9b-4809-aba4-b7c2f42b718d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "873ebf22-497b-4f03-966f-ea669358efc6",
        "cursor": {
          "ref": "10d46afd-a0e3-49ae-93da-e9f0414637e7",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "1c0049cf-8d2d-40a6-ba6d-16ed170c6b33"
        },
        "item": {
          "id": "873ebf22-497b-4f03-966f-ea669358efc6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "65417734-4c72-40bc-82bf-29ee15ebbf86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c880a3c1-9867-41a1-bb98-424a12b86ce0",
        "cursor": {
          "ref": "d93b8539-0930-4929-b74b-3ea562ee4c06",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "bb5d6e1c-f663-4566-9f4a-24c1be5ac3fb"
        },
        "item": {
          "id": "c880a3c1-9867-41a1-bb98-424a12b86ce0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2a53fe71-ae86-4f2c-a80f-ddcdfb4dc1c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d141936-0c2c-4852-917f-af62b9ddefd0",
        "cursor": {
          "ref": "7673227a-84e1-40b7-823c-abd4afc342ed",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "bdd2cfd8-886d-470d-811e-3319403f9b9a"
        },
        "item": {
          "id": "9d141936-0c2c-4852-917f-af62b9ddefd0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3c07e25d-24e7-4865-bbda-2ec0417d6f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbafe3d7-cb6b-4da3-a347-723404abb46d",
        "cursor": {
          "ref": "80f27d13-4dc8-4b9f-85f1-a9c009403c29",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ed625849-4f16-4c8f-a227-df95cfea81e3"
        },
        "item": {
          "id": "dbafe3d7-cb6b-4da3-a347-723404abb46d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "85bbcd86-0d95-4eae-8ff9-e108b2fdcda6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd3fcbb-598f-4aea-adc0-c2a126d7fc9a",
        "cursor": {
          "ref": "7579342f-3be7-4440-912c-aa9bfb092652",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "0e52fe42-dc81-4bc2-85ab-4b7ca3b86e83"
        },
        "item": {
          "id": "7bd3fcbb-598f-4aea-adc0-c2a126d7fc9a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "dec03378-f72a-4f78-a58b-de10baec7ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a8b2f3b-d96e-4953-9134-fbe0b16c6337",
        "cursor": {
          "ref": "2505bab8-e925-425d-bdd4-e5072b59f1b2",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "47e69cdf-9808-4ef1-b302-3e6dc1843a7d"
        },
        "item": {
          "id": "6a8b2f3b-d96e-4953-9134-fbe0b16c6337",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ef895471-cfb7-4bf8-b1b3-2371a85ac89d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b1806b-e244-4093-9968-00d486827f69",
        "cursor": {
          "ref": "ebed50e7-d592-448f-966b-bb7307400fde",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9b4bd98c-be96-40d4-bac6-7be450012bf1"
        },
        "item": {
          "id": "d8b1806b-e244-4093-9968-00d486827f69",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5e528db0-10ab-4342-b457-e04f808fc341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62dc8e33-2e41-4241-8c81-53694219aab3",
        "cursor": {
          "ref": "85b9c6a1-8a35-4390-a42f-88e5936a499a",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "36df9ccc-6fd5-4674-993a-88e503803aa6"
        },
        "item": {
          "id": "62dc8e33-2e41-4241-8c81-53694219aab3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "def39d85-0ced-4287-ac66-1037e59be05d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1697d87d-8382-4b61-997a-20304aa93503",
        "cursor": {
          "ref": "d0a655aa-80bf-409d-ad45-f86dfc26c9d0",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b9d53b6f-4588-41cd-8926-531dc86cf600"
        },
        "item": {
          "id": "1697d87d-8382-4b61-997a-20304aa93503",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f92bdcc3-3859-414f-b19d-39e381c835dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15994733-722f-449c-94f4-81ad2ca9a3c8",
        "cursor": {
          "ref": "aa263286-fac1-4df0-98cd-0d0641803478",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "00351135-b0e1-48c6-96b9-05d378eedecd"
        },
        "item": {
          "id": "15994733-722f-449c-94f4-81ad2ca9a3c8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7d1b587f-0fd5-45c2-88b6-4e014cf0e7fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9296e6d5-1f15-4c15-89b1-db2cf7dd9d17",
        "cursor": {
          "ref": "4149c643-3877-4e8f-a373-1a661c945637",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "4e8824fd-ced5-491d-a7b3-343b2c9f2ce8"
        },
        "item": {
          "id": "9296e6d5-1f15-4c15-89b1-db2cf7dd9d17",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "bca9aa60-0d42-437d-95dc-48f359a0b561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc121758-8558-4a63-9290-764cf0fca2b9",
        "cursor": {
          "ref": "d7ac26ec-38a6-4db0-8cad-0406d9503b4e",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "59442674-5c26-43e1-99d2-ee82366caf49"
        },
        "item": {
          "id": "bc121758-8558-4a63-9290-764cf0fca2b9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a6fbbd4f-175b-49e5-aa44-0329d10d2dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f49a84-fb4f-4afa-a540-7687d0e4b253",
        "cursor": {
          "ref": "2a051006-54f8-4c0b-bcd3-8dec3e1f879b",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "360e9cd6-9c72-46c4-8802-31e75097e9ff"
        },
        "item": {
          "id": "93f49a84-fb4f-4afa-a540-7687d0e4b253",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "dc8ba354-a686-44df-a160-b855cd2caa80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65060f0b-a757-4c7d-a8ee-32ce62eb4cf9",
        "cursor": {
          "ref": "53f2984a-d58d-4e99-9478-2dafded9e22e",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4135cde3-110d-4ebd-8281-d5bd6da08d27"
        },
        "item": {
          "id": "65060f0b-a757-4c7d-a8ee-32ce62eb4cf9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a3e56a0f-d860-48ca-bff4-ecf094a37e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c26b3ed-7bae-4d90-a9c5-5346d4c6c566",
        "cursor": {
          "ref": "ae1813e8-c159-4e48-9627-0c0349509be8",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "eaf2e12d-4b7a-45d8-826e-253d0322d9f0"
        },
        "item": {
          "id": "1c26b3ed-7bae-4d90-a9c5-5346d4c6c566",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f5d3fa6c-3855-48df-bbcf-ebe212d371af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ec224e-28b5-43c3-9c0b-b44adcf08935",
        "cursor": {
          "ref": "feb92954-ee17-40a1-8f37-0be8c79891b5",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "77b8050f-01b6-4494-ab3b-2361bece751a"
        },
        "item": {
          "id": "33ec224e-28b5-43c3-9c0b-b44adcf08935",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "fbf83ecc-b26f-4d79-ae8e-54d298f19ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08cd120f-e537-4d78-878b-6ab4c8ece072",
        "cursor": {
          "ref": "e0fa04c7-678e-4483-ba49-883f5092a4fe",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "fc5b6486-50c3-4b03-890d-38fa71551bf5"
        },
        "item": {
          "id": "08cd120f-e537-4d78-878b-6ab4c8ece072",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "740788f5-0221-4566-b56d-123280423a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc46df4c-5d65-4370-a6b3-bbfa7f16bebd",
        "cursor": {
          "ref": "f4302eff-0724-4454-a340-6b7637f6d5b9",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "41b70616-0056-43cf-a8f5-858a554c6267"
        },
        "item": {
          "id": "fc46df4c-5d65-4370-a6b3-bbfa7f16bebd",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b4adc3f6-325f-47de-95e7-498ad2458e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e03732-7380-456f-8217-d6f401ef4c1a",
        "cursor": {
          "ref": "56907613-0173-48ec-9621-ddfb35a9cfd2",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9ca0b016-cc27-4131-8471-d890998d546c"
        },
        "item": {
          "id": "41e03732-7380-456f-8217-d6f401ef4c1a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "67a2ca0a-e313-4aa6-846e-596c686a76dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32deb126-eee8-42d4-a35e-c5f3c0f71d7a",
        "cursor": {
          "ref": "2c0e4375-b888-4c1f-9cdd-e9d0c5332c9b",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c5baab34-34eb-4db4-9687-d6805293cbca"
        },
        "item": {
          "id": "32deb126-eee8-42d4-a35e-c5f3c0f71d7a",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "eb45eded-2cbb-4966-9eed-302a336ad9e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2dca6ac-58e8-48db-bdb9-eef0b0c0258a",
        "cursor": {
          "ref": "be639eb8-7721-4639-b9d3-a7ec2a4c5cee",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6be1936f-2242-4aea-93c4-799b2979f6e4"
        },
        "item": {
          "id": "d2dca6ac-58e8-48db-bdb9-eef0b0c0258a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a3b9c04d-cee8-4949-a97e-63c27b6299d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2eb0bf7-8c6a-4187-943d-ea1b9bd37b3f",
        "cursor": {
          "ref": "e9409c6d-d21f-4cb4-ad38-c413ee05c6bc",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "34033fbe-b9fe-458a-8b8a-127bc714dc02"
        },
        "item": {
          "id": "d2eb0bf7-8c6a-4187-943d-ea1b9bd37b3f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "e2e2ff53-841f-485d-b026-efd3dfe84a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5abeb22f-c49a-4b92-b5a1-1d26ce8520f3",
        "cursor": {
          "ref": "ee04f1d3-d27a-4972-8870-d9896474dd0c",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ff6441eb-f646-4795-8f04-2dda593f30e2"
        },
        "item": {
          "id": "5abeb22f-c49a-4b92-b5a1-1d26ce8520f3",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d381dd33-1ff8-4de7-900a-06461992dd1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80721dec-3a68-470a-b5da-2af0f562fe2d",
        "cursor": {
          "ref": "5ab98442-059a-420a-a041-3308ba3ff5ff",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a55b52b3-74fc-4966-bd49-af73f1b4c0b2"
        },
        "item": {
          "id": "80721dec-3a68-470a-b5da-2af0f562fe2d",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "b9daaae1-4715-405e-a540-b91aa1c13e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eddc4b3e-4118-4852-bb06-27fe91ab346d",
        "cursor": {
          "ref": "be2b8b77-2fcb-4f4d-ad78-67947580bd83",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e251c4b4-5432-4987-8f36-e67758388bc1"
        },
        "item": {
          "id": "eddc4b3e-4118-4852-bb06-27fe91ab346d",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "c16756fe-1963-4780-8ffb-ff8d82b952bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3aef61d-3b17-449a-bf5f-a0e1e8a5da71",
        "cursor": {
          "ref": "5bb20650-192c-4fa1-b1b2-2d7243f83dd6",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "323fa180-160c-431d-955b-e71cc24766ec"
        },
        "item": {
          "id": "d3aef61d-3b17-449a-bf5f-a0e1e8a5da71",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "921b2e46-d655-4ee4-965a-1586c817d0fe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8332428d-00c8-486c-a7f1-4227953a72d6",
        "cursor": {
          "ref": "796c77b5-976f-44bf-af06-065ea39cf56c",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ad298e9b-610a-4436-bc53-31ba7e79d2f5"
        },
        "item": {
          "id": "8332428d-00c8-486c-a7f1-4227953a72d6",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f0f4aeb4-6837-4bc8-9d11-2b5836034e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8cea41f-3904-4410-9491-678c5c868f42",
        "cursor": {
          "ref": "885bb685-20bb-4a0c-8fdb-0c3e82c40664",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "04f789c3-924e-4589-abbe-0c3cba662951"
        },
        "item": {
          "id": "c8cea41f-3904-4410-9491-678c5c868f42",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "133258e2-80dd-4ba1-b03c-7373a641d5d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11c75c9-8f82-4295-abf3-db28af3f2530",
        "cursor": {
          "ref": "3a9e4ada-64fa-4245-a848-adc5c44f3261",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f5840160-9026-4f78-8ad7-cd1c4bd599ce"
        },
        "item": {
          "id": "e11c75c9-8f82-4295-abf3-db28af3f2530",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "debf6721-ac18-4d39-a638-e0b14b88156c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3c0bfd-5eb1-4538-90f3-89835418c235",
        "cursor": {
          "ref": "26d3a700-39f6-4cb3-a65f-9ce9bba313d8",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7b222304-b109-45f2-807d-8be7f3008a0b"
        },
        "item": {
          "id": "9f3c0bfd-5eb1-4538-90f3-89835418c235",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "307dc71e-6b84-415c-a8e6-11299dc8872e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3644f92-4830-4663-8b0f-552748deef25",
        "cursor": {
          "ref": "6dcc6564-e4cf-4a95-ba74-d3551eac6f09",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "030a4c32-3d5c-4d78-a76a-c009c9529d58"
        },
        "item": {
          "id": "c3644f92-4830-4663-8b0f-552748deef25",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0973f397-31ca-48a9-a673-d6f762b3f45c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841ceb40-49db-499a-aaad-68843c8626bc",
        "cursor": {
          "ref": "f57a3a61-9b9c-44e6-87d4-b3e5abc18a48",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "8c8c7e4a-54ec-40d3-a181-7b376ec6d804"
        },
        "item": {
          "id": "841ceb40-49db-499a-aaad-68843c8626bc",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "51adef83-8552-4380-acde-2af4404e6094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb57fcdc-9e57-4adf-9260-60bd5f37419c",
        "cursor": {
          "ref": "ad68edf7-5e20-432f-9266-c83ca311f8e2",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "23011882-c696-4d4d-b448-42acf0f0cb6a"
        },
        "item": {
          "id": "eb57fcdc-9e57-4adf-9260-60bd5f37419c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ab5bc455-76b5-4249-b82e-cad4ff36c03b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b51555-edb7-4db1-84f4-342067f3d116",
        "cursor": {
          "ref": "53181826-e762-4d3e-a9c6-bef2f3aa39a0",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "884c957f-5029-497a-aced-bc792cfb1e21"
        },
        "item": {
          "id": "90b51555-edb7-4db1-84f4-342067f3d116",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6bd8e7a6-0eba-4441-97b2-74e372512e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed660124-7403-4706-9cab-325917f05ee3",
        "cursor": {
          "ref": "44a39b62-8834-4638-a4a2-97332113205a",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4ac1f5f4-bbb0-447f-8b98-fafd6440e3fd"
        },
        "item": {
          "id": "ed660124-7403-4706-9cab-325917f05ee3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "97908d9b-f14b-46bb-b0ae-d21d172b3b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d469a9d-bd2d-4b43-92aa-5098a9b7823c",
        "cursor": {
          "ref": "632b880c-d5fc-4c8f-a713-4cc597e21466",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7f01f43e-63c8-46ba-b26e-cca605b7bebc"
        },
        "item": {
          "id": "2d469a9d-bd2d-4b43-92aa-5098a9b7823c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "5cd3116e-9dda-4ce4-ae4c-d79493f3b8d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c235863-def6-4960-a9be-49fa23e243d1",
        "cursor": {
          "ref": "7f239f5b-523a-434d-bd52-44e0b4de9a75",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e52ad640-b639-4061-8741-f941a02840a3"
        },
        "item": {
          "id": "4c235863-def6-4960-a9be-49fa23e243d1",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "762c885b-1553-41fd-9f02-ebdb63839772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b23ae97-dfa1-40cf-8fd9-bbae4f6f60ec",
        "cursor": {
          "ref": "3d3b0825-7cbd-4fbc-9a5f-013de1065b10",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c4ee9f03-41af-4005-b319-efb7deb8be42"
        },
        "item": {
          "id": "0b23ae97-dfa1-40cf-8fd9-bbae4f6f60ec",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "775935b7-f610-4c3e-b36f-5a70300a58e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a6a3d4-4411-49d0-94d9-249c46bd494c",
        "cursor": {
          "ref": "872142f9-e8a6-4f9d-babb-085b51d30f0f",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "cd57b25a-0fe2-435c-b09f-ed08a214323b"
        },
        "item": {
          "id": "19a6a3d4-4411-49d0-94d9-249c46bd494c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "654bf751-6473-4e77-8f8b-33181d046675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "211b4f44-42fe-45d2-b440-d7d2a3701413",
        "cursor": {
          "ref": "26a56a74-333a-437f-bd03-be8b1038f7cd",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6c2427c0-951b-43ec-8bf6-0d0752840a1d"
        },
        "item": {
          "id": "211b4f44-42fe-45d2-b440-d7d2a3701413",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "8a1b5954-da42-42d3-aa35-cf030f634ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf80f3b1-8e9e-4774-9706-de2fd7017034",
        "cursor": {
          "ref": "aa2f1167-0d57-436e-babf-202139eb69ed",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "02ab0d1b-5f20-4bf6-9f37-9dcb24377130"
        },
        "item": {
          "id": "bf80f3b1-8e9e-4774-9706-de2fd7017034",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "57bdd601-82f6-4e12-941b-5185269447b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15202288-365b-4404-819f-a4fdcd9850f1",
        "cursor": {
          "ref": "a3d585ca-0008-45c9-9520-5005de98118f",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "7562a244-102c-4f0e-af4c-9f10a67bff4d"
        },
        "item": {
          "id": "15202288-365b-4404-819f-a4fdcd9850f1",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5207d13b-946c-4c82-bff4-146e978fe326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2881452-4a20-4920-bcea-0732cc104614",
        "cursor": {
          "ref": "7e042366-3eeb-45ae-a047-35795cfe6b3b",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9b3d3ba0-e77c-424e-8de7-802b41a991e0"
        },
        "item": {
          "id": "f2881452-4a20-4920-bcea-0732cc104614",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1d4066f0-6862-4274-8f9f-18beb6e0677f",
          "status": "OK",
          "code": 200,
          "responseTime": 93,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "101c349e-3bb0-47c9-9baf-a93c44953515",
        "cursor": {
          "ref": "444f30d7-2721-4fa0-b09a-fcd44a7eb184",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "4205129e-64d3-4d63-97dc-0a2fcf7fd815"
        },
        "item": {
          "id": "101c349e-3bb0-47c9-9baf-a93c44953515",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "eeac2fd0-ca15-454d-911f-7deb6fd78341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7355dd46-249b-45f6-8c7e-a9c89f2fac3b",
        "cursor": {
          "ref": "d6dce08a-82e8-4812-9554-b6f5e1227040",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "cc480938-2e65-4ee8-8aa8-959b7828b936"
        },
        "item": {
          "id": "7355dd46-249b-45f6-8c7e-a9c89f2fac3b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "539b815e-4a3d-4066-bc3c-a11ad947bd97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1aa4dae-04da-447a-a57c-38fd0b60dd1d",
        "cursor": {
          "ref": "54ad9aaf-647b-4d88-a7b7-8c4e5fde207f",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "5d10687f-c459-4ab6-b9eb-6f17b509f8a8"
        },
        "item": {
          "id": "d1aa4dae-04da-447a-a57c-38fd0b60dd1d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f34f1b6c-e7af-435e-9ccb-08a9ad0bc639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b1f22ca-76a7-4bd9-856e-5823908d627d",
        "cursor": {
          "ref": "8487d733-fe9c-4cf4-9319-43183bb359d6",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e660bdbf-0973-465a-9a4b-687d673e0c9b"
        },
        "item": {
          "id": "8b1f22ca-76a7-4bd9-856e-5823908d627d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "206b6e24-6e0c-4afb-aa98-895d9b5b4f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f303bf-6fab-4e37-a6f3-e9c238982c33",
        "cursor": {
          "ref": "b1f1f17e-257d-491e-8a5d-d37273668909",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ab776947-ca54-4bb1-8e09-e8c7f3fa5b7d"
        },
        "item": {
          "id": "f9f303bf-6fab-4e37-a6f3-e9c238982c33",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "257e73c4-ecb0-4d7c-a9e8-9a0db3b37046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d46605f-79f8-4970-b806-8e28d1051b40",
        "cursor": {
          "ref": "f6b74c64-0245-4f46-8e08-51fef56b4628",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "686d7f54-9e57-4dda-b12d-caaa9fcc2559"
        },
        "item": {
          "id": "7d46605f-79f8-4970-b806-8e28d1051b40",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "09a02886-0869-4152-80d9-38fec6670e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c126fb-ce7a-4d91-b173-d2b572d59719",
        "cursor": {
          "ref": "d6337576-3799-45fd-9b19-d3e17bb51a6a",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "96ac36fc-27ff-4a6f-a3db-3e605449e2c4"
        },
        "item": {
          "id": "97c126fb-ce7a-4d91-b173-d2b572d59719",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6228497b-23ff-448d-b1c4-9139cfc47de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13f2353-4236-437a-ab31-4ba6ab7b7167",
        "cursor": {
          "ref": "c433d478-352c-4aca-aa48-ba4d02764d51",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "afd7898e-f2ce-4594-9a98-8585460542da"
        },
        "item": {
          "id": "f13f2353-4236-437a-ab31-4ba6ab7b7167",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e1d661c9-b842-491b-9899-ad4b748fab68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051c037d-a436-4f21-9fa0-25d2eb9bd364",
        "cursor": {
          "ref": "5aee039e-70ed-46e4-8cc9-321f555e726e",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "850725be-d5fc-4d17-b740-d1d541045f68"
        },
        "item": {
          "id": "051c037d-a436-4f21-9fa0-25d2eb9bd364",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4419ed52-3f5e-486b-a37a-560043d04164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b57f53c-fc38-4261-8147-204aeff03085",
        "cursor": {
          "ref": "913847fd-9e5c-4290-9de7-1d08f950334f",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "adc1f32d-43fd-4621-a985-26b832c05277"
        },
        "item": {
          "id": "1b57f53c-fc38-4261-8147-204aeff03085",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e6e3c259-2739-4720-8786-2d22466d46c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9b60be-8598-4a0e-967b-5748b8b6ce5b",
        "cursor": {
          "ref": "bfa8abd0-8d1f-4bda-b2b7-7f7da5aa210c",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "812b8cda-4299-42d2-960e-8e96fe93ed61"
        },
        "item": {
          "id": "8d9b60be-8598-4a0e-967b-5748b8b6ce5b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "93e4571d-5d8d-41d0-91f8-0e11ece4cd2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa776a8c-531b-4c7b-a326-8b54b590ee66",
        "cursor": {
          "ref": "290371e4-1ab0-455c-9683-dfbc04939145",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1b89641f-3532-476d-b654-d41d8075ca05"
        },
        "item": {
          "id": "fa776a8c-531b-4c7b-a326-8b54b590ee66",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "91458a94-c76c-417b-ba1b-df0489411c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b575a426-12d9-43e4-8ff4-0eb9bdb4e242",
        "cursor": {
          "ref": "7ba068c8-7253-4255-bc28-ecb404e44d73",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "9647a947-3bfa-4e1e-ac20-68116d65e8b2"
        },
        "item": {
          "id": "b575a426-12d9-43e4-8ff4-0eb9bdb4e242",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b9c37c4e-18ca-4b90-aaaf-4a8daaff4711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5195b0-8bd6-4c22-b47f-27a46e0e1127",
        "cursor": {
          "ref": "42eb5048-c216-4e7e-b349-8a12adbf00cd",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "deefe33b-b0bd-470a-82cc-0a490a5abe14"
        },
        "item": {
          "id": "da5195b0-8bd6-4c22-b47f-27a46e0e1127",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a211a216-8db6-41f5-a899-76eda76e06e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dcbc343-96c7-485c-8a2b-9f587c46f808",
        "cursor": {
          "ref": "c787770f-5e54-415d-9346-4b199eb8c142",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "00731d56-41d8-4e35-8b6d-755613113e8e"
        },
        "item": {
          "id": "0dcbc343-96c7-485c-8a2b-9f587c46f808",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "4172c485-5357-4298-ae0d-9b5a777a3c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "093390b1-00f2-48ea-be9d-de5c2daeb496",
        "cursor": {
          "ref": "1c3e8c56-837a-4e72-8e26-2f1cf4ae5c97",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "94587169-36ba-480b-971e-34456630fb0d"
        },
        "item": {
          "id": "093390b1-00f2-48ea-be9d-de5c2daeb496",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "70edc869-04ab-49f0-89f5-ad59605a64a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d662e57a-1d05-4527-8aca-2e9d0722b0d4",
        "cursor": {
          "ref": "6ca256c4-7eb4-4c35-9c99-91b756e0e2c4",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ef8902e5-a0ab-4cc5-82dc-4b9a68f0f107"
        },
        "item": {
          "id": "d662e57a-1d05-4527-8aca-2e9d0722b0d4",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "d5b500f6-8f71-4363-8cb6-ffc69f9d5815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd073832-5bf1-477d-a1e9-0a0e89a61fb9",
        "cursor": {
          "ref": "0d1431f3-6036-4c05-a7aa-bc14e7255339",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3a15b808-8c86-4ffa-ba26-2b8d2b2acb3a"
        },
        "item": {
          "id": "bd073832-5bf1-477d-a1e9-0a0e89a61fb9",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "15fac481-371f-422d-8b28-b9f5b21b85f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b3256c-9891-42ea-8746-44b23ec1ec01",
        "cursor": {
          "ref": "ef9951a8-0af3-4380-ab62-08dd468bae87",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "889c02d7-1f2b-418a-be55-8dde6c7afce3"
        },
        "item": {
          "id": "66b3256c-9891-42ea-8746-44b23ec1ec01",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e7c23989-05fc-4076-a939-cfb70cd9b6ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5444fd-05d0-4750-a271-892e93f5ea27",
        "cursor": {
          "ref": "d8cdb9c9-b239-468e-b57f-5bacbf792f7f",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "fe0de9e2-5d84-4c0d-ad37-a05e7a465f00"
        },
        "item": {
          "id": "7e5444fd-05d0-4750-a271-892e93f5ea27",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4cec880e-c579-49ee-a258-b0077019ad46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a2d8f5-fe3a-429a-883a-036042f5a185",
        "cursor": {
          "ref": "f52fc255-289f-4c79-97fb-6cd5f0adc051",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "97a76721-7301-42e6-97bb-93e8d552e678"
        },
        "item": {
          "id": "a1a2d8f5-fe3a-429a-883a-036042f5a185",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c86d876d-ff6c-4371-a8bc-87dd485a36af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d96b625f-09b2-4cbd-a2b1-72804363487e",
        "cursor": {
          "ref": "d84267af-23d8-4481-9d73-cea765c84654",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "319f2861-9cb3-4687-87d3-da0470326acb"
        },
        "item": {
          "id": "d96b625f-09b2-4cbd-a2b1-72804363487e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "9fa34294-4d66-4c2c-a5c8-fc2de28d5423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0a04f3-7047-4442-ad34-be4eb6b6c790",
        "cursor": {
          "ref": "873217d2-6ab1-4eda-9e56-ec09d822b99e",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "385d26a2-5f44-49e2-9cbd-808bdb900e2e"
        },
        "item": {
          "id": "5f0a04f3-7047-4442-ad34-be4eb6b6c790",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "11c4262a-50d4-4585-b487-8f15a1719f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b9f162-0386-4802-9449-6883bd3d4899",
        "cursor": {
          "ref": "3b28a469-66f2-4e98-8027-850c02f85a80",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "571a1c09-6607-42c4-8976-d2152158d4f0"
        },
        "item": {
          "id": "e3b9f162-0386-4802-9449-6883bd3d4899",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5a0a74e7-80b3-49c9-a2e8-6db7ef52f018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33acdb31-bd31-4236-950c-3370ceee8d79",
        "cursor": {
          "ref": "3193c5e2-af72-4172-8714-e32180ef8c96",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a65deaf7-cfdb-4bf9-9b12-c4dcd07bf9ca"
        },
        "item": {
          "id": "33acdb31-bd31-4236-950c-3370ceee8d79",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0e87fde3-75ea-48ba-8d7b-9d3a01475de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a5de0c-e8ca-43a9-a68d-d09e53e5b5ab",
        "cursor": {
          "ref": "8e121e4b-9979-4514-ab52-19985cc3af4f",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e790fa44-0f15-43ec-b66b-151111e0c7d0"
        },
        "item": {
          "id": "54a5de0c-e8ca-43a9-a68d-d09e53e5b5ab",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5699e545-b856-4ffe-a6ba-4600bc8aa4cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "857d10d9-e75f-4e3f-9a1e-5d0199b7a9ee",
        "cursor": {
          "ref": "962fcb24-496b-400e-834c-52b99263217c",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9ef2b854-8b68-40fd-b7d8-d2cc8f0623fd"
        },
        "item": {
          "id": "857d10d9-e75f-4e3f-9a1e-5d0199b7a9ee",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "cca8a404-29e8-4e31-8509-5914d2b6cc88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54be0227-2559-437f-884f-77d2cc66b889",
        "cursor": {
          "ref": "a26bf9fb-a063-4f5d-8b60-b976ab4933cb",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a6d02086-ebfa-49d1-9754-2fd1cf33b900"
        },
        "item": {
          "id": "54be0227-2559-437f-884f-77d2cc66b889",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f3aa7933-ca8d-4934-a76f-31cad06cea77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff8ed25-2676-4e63-8d26-2c1773c888c9",
        "cursor": {
          "ref": "c41a7b44-08fa-47df-9c6f-1866141abc6e",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "0ad8ffac-e487-44f2-a9a8-bdbc8ac7d547"
        },
        "item": {
          "id": "8ff8ed25-2676-4e63-8d26-2c1773c888c9",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "94c93bfd-338c-43d6-9b50-76ee2c0652f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39068bb7-2e80-4fd8-8b6f-b2b62a8ca3f1",
        "cursor": {
          "ref": "558826bd-c2d3-4e22-bb51-f5359e54c850",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f4f46e8c-4547-4e8c-bfba-73a44f23b809"
        },
        "item": {
          "id": "39068bb7-2e80-4fd8-8b6f-b2b62a8ca3f1",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "763290b9-e5d8-40af-b489-a5a8d027257c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e0bb15e-508f-467c-85a2-48dc29e8d3c9",
        "cursor": {
          "ref": "f80607f5-34a6-4b7a-9959-d89e94d1b2f9",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "6c8dc169-a480-4ba9-b7d0-3ddec7346bda"
        },
        "item": {
          "id": "5e0bb15e-508f-467c-85a2-48dc29e8d3c9",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "739c56f1-9298-46a0-a69c-6cd42e83badc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af7c8fe6-3ccb-4e5c-bd97-7aed59ee2fe5",
        "cursor": {
          "ref": "5c64e907-2777-437d-be2a-dda724ad79de",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "54a490ae-9e78-4285-8c5a-247a79594b0e"
        },
        "item": {
          "id": "af7c8fe6-3ccb-4e5c-bd97-7aed59ee2fe5",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "bfb68c0d-d0ef-4298-bf4e-e8206a9ff903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db83486-4d80-4086-9e1b-fbad9ca2134b",
        "cursor": {
          "ref": "95e88851-fa7f-4933-974b-f5fb65facb83",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a6f521d8-7a79-4195-a8a0-09c8ec88a099"
        },
        "item": {
          "id": "9db83486-4d80-4086-9e1b-fbad9ca2134b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "64ce002c-e7a8-401c-b81b-5107e57cb0b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7780c233-7ac5-4144-9904-49ff7f76a45e",
        "cursor": {
          "ref": "30443bf9-ceb8-414f-8c48-f530a7228fb9",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4d47c757-4b45-48fc-9ab5-06166f3b3f0d"
        },
        "item": {
          "id": "7780c233-7ac5-4144-9904-49ff7f76a45e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d58523d6-fc04-4865-98e9-5979c611eb08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d2a2f58-09e9-4e55-9caf-6597102e893a",
        "cursor": {
          "ref": "1ab0d0e6-0d9d-4c4d-9a3b-a59f4eafc13c",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "16568595-e0df-4b29-bdc7-e03110221bee"
        },
        "item": {
          "id": "9d2a2f58-09e9-4e55-9caf-6597102e893a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4217ca41-5fe9-430e-b5f0-6f39a58f2e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0a6ac6-6626-4d4b-a719-c153a159a7d3",
        "cursor": {
          "ref": "dee9cda1-11da-4553-a151-29e66e59ce6f",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7b4d9c14-5d89-4888-816d-ec306a075f54"
        },
        "item": {
          "id": "8f0a6ac6-6626-4d4b-a719-c153a159a7d3",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b5b9116c-3afa-433d-b778-6bdcbec69608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c173b58-4a95-4382-bbca-88bb2e1312d4",
        "cursor": {
          "ref": "2cc6b5c9-251f-45f9-a728-c30fa60f9096",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f8ef56b2-0695-4c59-adf7-3e8a9c44d8ed"
        },
        "item": {
          "id": "6c173b58-4a95-4382-bbca-88bb2e1312d4",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "42ad5f71-d1a2-4276-b719-5a228928c8e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e005e9-8f13-4d2a-9e50-dd5c1fcd4120",
        "cursor": {
          "ref": "72a600bd-21b6-4a47-a501-cd9b161649f8",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "9cd1d12b-c3ac-4e49-afc1-1b6f95cd7e4e"
        },
        "item": {
          "id": "a6e005e9-8f13-4d2a-9e50-dd5c1fcd4120",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5f08d05e-b6b0-4a12-84f4-17ef52234f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51853662-1eb6-48fc-8664-1a6f55a17d82",
        "cursor": {
          "ref": "36652249-e45e-460d-a140-018eb4fa537c",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "38f2e776-1c2e-4754-87ea-63447bc71118"
        },
        "item": {
          "id": "51853662-1eb6-48fc-8664-1a6f55a17d82",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "1f830f7d-d2ff-4f55-8cb7-af3a16ec55e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08262216-e17e-4fb9-a73b-2293ba7cefd1",
        "cursor": {
          "ref": "213a9f4d-d03f-4819-9dbb-9b70f8809e37",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "ee354ff8-c7cf-42ba-9fa0-e023d9918e17"
        },
        "item": {
          "id": "08262216-e17e-4fb9-a73b-2293ba7cefd1",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "548dd8d5-fbfd-4179-a144-2712c3854e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6509608-4ecc-485e-9830-9082520d6786",
        "cursor": {
          "ref": "419f412e-c20b-4c4a-b0e2-04e8f17af53c",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "252728c7-78e5-4c56-9306-a55d5c5170b7"
        },
        "item": {
          "id": "b6509608-4ecc-485e-9830-9082520d6786",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "52b94c0b-4287-41e0-ba0e-e96b638c843a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1c3151-f149-4118-8d22-affd4e14cbc4",
        "cursor": {
          "ref": "f66f8a69-2961-4a78-b20a-be989fc715f5",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0e02eb12-2f00-48d3-8c1d-7438cf957199"
        },
        "item": {
          "id": "8a1c3151-f149-4118-8d22-affd4e14cbc4",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "25310d84-4001-4088-8f4c-076b3e7d1ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d9f359-2fae-481d-bbf7-dc9ad5adce76",
        "cursor": {
          "ref": "627229e6-ff5d-4195-8a58-2b54d28d6868",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b756e967-2bef-44fe-99d9-71162f6eab94"
        },
        "item": {
          "id": "71d9f359-2fae-481d-bbf7-dc9ad5adce76",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "57b223fe-4cd8-45fc-b2ef-02607701b294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b3703ed-0b29-43b4-84ba-9c206df01674",
        "cursor": {
          "ref": "f5f2bbba-0387-454c-aa44-624535f5682a",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "15f176ba-d75c-40a0-81a4-1a114110011d"
        },
        "item": {
          "id": "7b3703ed-0b29-43b4-84ba-9c206df01674",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "5912f17a-a557-4cc1-9f76-9a4eab309da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb28ec23-33e5-4650-ab0b-8544a40d3741",
        "cursor": {
          "ref": "280dd825-e3f8-42fc-8f4c-250b6e025493",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "14591dd2-19c2-46a0-9bd5-0985b03c8ea1"
        },
        "item": {
          "id": "fb28ec23-33e5-4650-ab0b-8544a40d3741",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4b99fd17-65be-4d90-bf13-69cb03225fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5f9671-13b9-4a87-9cda-7d9dfd809878",
        "cursor": {
          "ref": "d0b56efa-7bdd-4821-8dc5-9a7d68c2a62c",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c41f74f5-e524-4140-a247-1bd8b69f842c"
        },
        "item": {
          "id": "fc5f9671-13b9-4a87-9cda-7d9dfd809878",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ac0007c0-be07-4e88-ab39-c567dcc01086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e17ae81e-739e-41c9-bb62-5ca98f61eb7f",
        "cursor": {
          "ref": "3dda0ba5-c27f-411d-bcbf-9d09df282531",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "81fff8fd-f03b-4968-9c22-bbf4e154bfae"
        },
        "item": {
          "id": "e17ae81e-739e-41c9-bb62-5ca98f61eb7f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8342dc4d-cbf1-42d1-a88d-5f50c5366042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f9e6df4-75fc-4eb6-a208-71381a1e0347",
        "cursor": {
          "ref": "53a5eb79-4a3e-4e42-828f-c68ebe132f6b",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3247bbe7-3f99-440e-9001-9f424f86e910"
        },
        "item": {
          "id": "4f9e6df4-75fc-4eb6-a208-71381a1e0347",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3de9b4cd-9abf-48a3-bff0-a1d7d72926c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035b07b4-1401-43ef-bd1b-33cd4a731938",
        "cursor": {
          "ref": "c35b0b1d-bbba-4e64-b959-681a3d08d237",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c51548a9-cae8-4811-953f-9cede1da2341"
        },
        "item": {
          "id": "035b07b4-1401-43ef-bd1b-33cd4a731938",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "2b55d8c8-9daa-42a1-992a-c7bb5fe3c3b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f4651c0-04b8-4500-b029-212af1a77c44",
        "cursor": {
          "ref": "6e35a8df-2f53-498e-be60-3e3c0da3a762",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "680a4f90-537b-47c6-afbb-918232406550"
        },
        "item": {
          "id": "9f4651c0-04b8-4500-b029-212af1a77c44",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f65d5db2-4321-45c9-a6ad-93171935bcd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c284f2-33d7-4f36-a000-2a7031c9466b",
        "cursor": {
          "ref": "70c75141-093c-4b0a-99ac-02ad4277bf0b",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "fea09e01-d929-4dc7-9926-d47b2ce68f40"
        },
        "item": {
          "id": "e6c284f2-33d7-4f36-a000-2a7031c9466b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "3b524145-4b24-4568-9c43-c3433a19fb62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "376adde9-b811-4249-87af-e99dfb54909d",
        "cursor": {
          "ref": "0c231dbe-ee6d-48ec-ba7c-8df653427da1",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5d25d4b2-be37-4331-98f9-5388b0a65b53"
        },
        "item": {
          "id": "376adde9-b811-4249-87af-e99dfb54909d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b342d45b-5539-4e96-bb2f-3435f99258e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3461a2b3-b586-4984-8125-c655f0151373",
        "cursor": {
          "ref": "13800d2a-87e3-4118-a613-5cc697dcd8da",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7bc1dce1-2b0c-4453-b607-640171ff7b64"
        },
        "item": {
          "id": "3461a2b3-b586-4984-8125-c655f0151373",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "95d3fdf6-33cd-408c-8d8c-c0158c6ebf73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ff2927-c104-4907-9e70-ecadb1ead675",
        "cursor": {
          "ref": "a642510c-194b-488a-a4a1-86b967675a0a",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "bccba90d-7793-43ac-9df9-8cfbd56cccb5"
        },
        "item": {
          "id": "86ff2927-c104-4907-9e70-ecadb1ead675",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b3b67cc2-fc99-45bd-be1c-71943a0674db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80482ae1-5dbd-408a-8c6e-c4c6c87976e0",
        "cursor": {
          "ref": "517d4227-1d8c-4c79-b1c1-cb7aa3da675c",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "44075a02-4717-43da-8a97-d4816debaf74"
        },
        "item": {
          "id": "80482ae1-5dbd-408a-8c6e-c4c6c87976e0",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0a2808a1-ac80-42d8-b373-1482e3345e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332156f9-830e-435f-978b-6dd579fa9f5d",
        "cursor": {
          "ref": "f9ab693c-78fc-40c6-8a18-ba763081aa36",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "9a064d68-cb7a-45de-96a3-6e8902ec1fb2"
        },
        "item": {
          "id": "332156f9-830e-435f-978b-6dd579fa9f5d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ba6d7c08-3e0b-4033-bdd6-209043b59041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c848aa2-6952-4ea9-8af7-8ffac39620c7",
        "cursor": {
          "ref": "37abc44e-de25-4c59-9cdb-147c51418e65",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "c9a1bc25-9460-41b8-8009-96bb598b3527"
        },
        "item": {
          "id": "4c848aa2-6952-4ea9-8af7-8ffac39620c7",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2199e5f2-eb5c-4302-a765-d3666538b418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4e3015-b7b0-4c76-9be0-c1f4d7115844",
        "cursor": {
          "ref": "3742c4c8-0c03-4999-b6f6-14518c47ea66",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "e4ec3c0a-7fba-4a02-b632-f026cfee2b7a"
        },
        "item": {
          "id": "ff4e3015-b7b0-4c76-9be0-c1f4d7115844",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "58088301-5899-4d2b-bcb2-c81d85afdac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0818eafc-a5ac-4c8e-b92f-43861a6dd77d",
        "cursor": {
          "ref": "ac70b8e1-5ac6-4fc3-b1a8-1ffed7828e7f",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "3a6f47b4-717f-4346-95b1-15bd8cc6b797"
        },
        "item": {
          "id": "0818eafc-a5ac-4c8e-b92f-43861a6dd77d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4712220b-f560-44d8-95c6-859447d301ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f916ef-c61c-4421-99a3-da1bbe67317f",
        "cursor": {
          "ref": "bd509717-1416-4fc9-8cac-5e6656814abf",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "91acf2f6-d6c2-48c0-866e-82131b8cadf7"
        },
        "item": {
          "id": "23f916ef-c61c-4421-99a3-da1bbe67317f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "316a0fd0-8022-4a80-adee-1236240c67e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64fe20b3-5041-4c69-9734-4c435215b489",
        "cursor": {
          "ref": "38db771c-fa3a-4907-90c4-a7f9aa9c1841",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "d44b7e5a-2769-4dca-b492-874ddb4f5309"
        },
        "item": {
          "id": "64fe20b3-5041-4c69-9734-4c435215b489",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b887001c-9c48-4435-b242-440eafbc46d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f56521-e984-48fa-a105-86ce1f37c085",
        "cursor": {
          "ref": "5e464e66-1121-4c93-88e1-29c2176221cc",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "8ce5cc28-22a6-4791-a1a4-05a554d05f54"
        },
        "item": {
          "id": "d3f56521-e984-48fa-a105-86ce1f37c085",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6893221d-69d5-4e28-b913-aff15639d4a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "674bd238-1055-47f0-a663-ea439d5708a6",
        "cursor": {
          "ref": "542e3954-a6e7-47cf-b28a-8aeb3a5aad78",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "cd5ed385-2d29-4d7e-ba3b-2465d38b6638"
        },
        "item": {
          "id": "674bd238-1055-47f0-a663-ea439d5708a6",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4d1d18a8-4a49-4a41-a4b4-2f738a4de82b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2105cf0-b24a-4b15-818c-cea7cf2501eb",
        "cursor": {
          "ref": "6a03a00f-ed2e-41c4-930c-a51b6a3486e3",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "45f9b6e1-a70a-4925-8dc2-8f10815f9b9f"
        },
        "item": {
          "id": "f2105cf0-b24a-4b15-818c-cea7cf2501eb",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "0b4f4261-34b1-4337-9946-538d95854949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba6a249d-1353-46fd-8306-bd712fc957c8",
        "cursor": {
          "ref": "aa6e94c1-6e14-4adb-8da0-be1d82bed9d7",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "11b99582-a4a0-43b8-a619-e8644bcca46b"
        },
        "item": {
          "id": "ba6a249d-1353-46fd-8306-bd712fc957c8",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3d65e54a-5151-43bb-9539-c51a9ce7eda7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c3af9b-1a4b-47ab-a457-4e99ed97962e",
        "cursor": {
          "ref": "10f6e35e-c4c5-4f6d-b632-049c43462370",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "e1f5f526-ca61-4b0d-97dc-7f294a434aa4"
        },
        "item": {
          "id": "b5c3af9b-1a4b-47ab-a457-4e99ed97962e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e6cd850e-0dac-4f2d-837b-83f1b5e97653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4167d1fe-d42d-4776-a3af-9cc1127a644b",
        "cursor": {
          "ref": "7d24ded8-82d2-44d8-9da9-c102d211bfb0",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "d0010952-7402-4f79-a771-932cced05f16"
        },
        "item": {
          "id": "4167d1fe-d42d-4776-a3af-9cc1127a644b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c8a3385b-d4e8-4e06-9a1d-094a47cbb9f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd28681b-716a-4655-90be-c5b460e054c1",
        "cursor": {
          "ref": "eada6ef9-2f27-4cc3-9b6a-49e8b83a7659",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "d0188db4-0012-4c7c-aa67-f1dc3907ce3d"
        },
        "item": {
          "id": "dd28681b-716a-4655-90be-c5b460e054c1",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "62ad130a-523d-48cb-97b6-3e65f89045ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8302c57e-d6db-4290-9890-15fd62e84efe",
        "cursor": {
          "ref": "81be1f4e-6ce3-424c-94cd-c93f6c574887",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "39e0a799-b203-4c13-8c73-0b09cdd73249"
        },
        "item": {
          "id": "8302c57e-d6db-4290-9890-15fd62e84efe",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7b7f082e-16bb-4f79-b431-5491c179c681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bbb2cc3-6294-4fa8-b97f-b4c00d3df5f6",
        "cursor": {
          "ref": "61ccf7ec-3389-4f1f-b758-da1a4290608c",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "09e87b02-eec6-4cf4-913f-48303944de4c"
        },
        "item": {
          "id": "3bbb2cc3-6294-4fa8-b97f-b4c00d3df5f6",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "57ace9b7-599d-479c-a9cd-e0b5c6636433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c3bc5b-373b-4d1c-a345-eda25a80b93f",
        "cursor": {
          "ref": "9e4f1263-0c91-436e-a0e2-37a3b2b0944d",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "5c4b3bb8-049b-4f7c-87d0-4071ab0f3bc0"
        },
        "item": {
          "id": "13c3bc5b-373b-4d1c-a345-eda25a80b93f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "840e8d61-707f-4aa5-8fc5-b8519fe6edcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "496c3689-f384-4e6b-b482-bae75c9f4aa8",
        "cursor": {
          "ref": "0b85bb95-414f-4674-a02b-2968db874a2a",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "702cbc94-ed28-4bd3-abfb-29cc4528ba50"
        },
        "item": {
          "id": "496c3689-f384-4e6b-b482-bae75c9f4aa8",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2539facc-ce3e-4acb-b22c-9beeec94a5fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aaf4c37-7810-4dbe-a3e5-96e38370fc84",
        "cursor": {
          "ref": "6f3021ca-34e8-488e-9a5a-241ce0056c69",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "a0c000d4-8f5b-4cae-9f0c-a7327ced7bde"
        },
        "item": {
          "id": "8aaf4c37-7810-4dbe-a3e5-96e38370fc84",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b4955086-dbbd-45d9-8930-e8b01f465524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb0ae4c-b2d7-45ae-ba5b-49361f22d650",
        "cursor": {
          "ref": "c9a9b9a1-e1bd-40d7-a8c7-f91e9e821d17",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "221aed4d-7894-4efb-8160-ed36b27dfe9e"
        },
        "item": {
          "id": "8bb0ae4c-b2d7-45ae-ba5b-49361f22d650",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f6e7bbfc-7730-4e7c-91d9-02235a64fe7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30418dd9-b592-45a1-81a9-518913b7c2b1",
        "cursor": {
          "ref": "09a20cb3-438a-4f57-abd4-cca5ce10086c",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "a3dcb7f3-9a29-410f-891a-cdcff1ffdf49"
        },
        "item": {
          "id": "30418dd9-b592-45a1-81a9-518913b7c2b1",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "5072380f-9db3-4842-9797-bcae12bad60f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417008e6-e339-467f-b9da-8fad3f46e21e",
        "cursor": {
          "ref": "afe97f7a-25f9-41a5-a43f-a9b9c69b46f2",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "51326829-4bee-4989-a762-1f753a5547d7"
        },
        "item": {
          "id": "417008e6-e339-467f-b9da-8fad3f46e21e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7fe46a89-493d-4f00-a054-8dfc3fe2366e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 956,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c29e4d4-0ecf-4ddf-a7bc-f2d3737744f9",
        "cursor": {
          "ref": "385f8740-fa4f-4a30-8bdb-a679b95fa0d7",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "db738eef-8f2a-49a3-ad79-8b4f67d0b79a"
        },
        "item": {
          "id": "9c29e4d4-0ecf-4ddf-a7bc-f2d3737744f9",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "4ce280b7-1753-4b40-80c3-768efa439935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "077bc9ce-16e3-4480-a546-d655e830e870",
        "cursor": {
          "ref": "ec2ebeff-e89c-4b50-bf44-71fe4d8a2982",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "a1100e02-7163-4a93-a659-fe52712571eb"
        },
        "item": {
          "id": "077bc9ce-16e3-4480-a546-d655e830e870",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ae174d94-ebd9-4b1c-8665-fb184c25c154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ad1377-ad4e-4ce7-ac55-44cf67ead923",
        "cursor": {
          "ref": "cc3b7f9c-812d-4915-9aa4-7748bb4a589b",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "8d44386f-48ba-494b-8e60-1affbf8fcc9c"
        },
        "item": {
          "id": "99ad1377-ad4e-4ce7-ac55-44cf67ead923",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "90a83fa0-5a2b-492b-bd99-72e19eef242d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b58bcd54-3693-4e86-9ed7-5dd8a05be15a",
        "cursor": {
          "ref": "e204641f-a262-4b5b-8a3c-7704ce497919",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "e8c9a258-9f71-409b-afd8-7ef62a3c10de"
        },
        "item": {
          "id": "b58bcd54-3693-4e86-9ed7-5dd8a05be15a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "9f80dd1f-681e-4ed6-8073-d859e20ddf7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf75da2-a290-4b82-96ad-8fc04e090771",
        "cursor": {
          "ref": "bf1f6807-ede4-4ddf-a6bc-460c8eaf07ab",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "638b1de5-147e-41f7-a618-e8988a9901c9"
        },
        "item": {
          "id": "ecf75da2-a290-4b82-96ad-8fc04e090771",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "724c7743-243b-4cd1-906c-04f3ea4c44d4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d95cbfa4-1dff-4364-8e6d-21f888dc5234",
        "cursor": {
          "ref": "ce290d7c-7994-45f4-87bb-db29c9235411",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "d1377263-88e2-443a-b784-a4b9652bb3f6"
        },
        "item": {
          "id": "d95cbfa4-1dff-4364-8e6d-21f888dc5234",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "984db47d-e089-4e30-842e-673d348211c0",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d05a787-92cd-4625-ac3e-b193a3a5ab38",
        "cursor": {
          "ref": "604be658-8912-4e2b-94b9-75a8dffeb594",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "ad34743f-708d-4c4b-b597-4af2ec16f968"
        },
        "item": {
          "id": "4d05a787-92cd-4625-ac3e-b193a3a5ab38",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a82bf9a8-803b-47c1-896c-fd865c0116db",
          "status": "OK",
          "code": 200,
          "responseTime": 3041,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc73c74-8b74-47f2-87d8-773f471b77e9",
        "cursor": {
          "ref": "822430c1-1ca4-4986-a65b-db572780b0e8",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "062437d9-926e-477b-9e7b-e03e113b74d3"
        },
        "item": {
          "id": "ebc73c74-8b74-47f2-87d8-773f471b77e9",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "2e418af1-b454-440c-bdd0-a8740e2d577a",
          "status": "OK",
          "code": 200,
          "responseTime": 2225,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "83348f0e-9422-4094-8fd4-8ae459a6f2a5",
        "cursor": {
          "ref": "9715f34f-7a70-47aa-95fc-c700ec7947ed",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "8219dbbe-b7a8-4cb0-ad51-3f8d4745388f"
        },
        "item": {
          "id": "83348f0e-9422-4094-8fd4-8ae459a6f2a5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "77e8cffb-36c0-428c-ae30-4f0c3dd4b343",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83348f0e-9422-4094-8fd4-8ae459a6f2a5",
        "cursor": {
          "ref": "9715f34f-7a70-47aa-95fc-c700ec7947ed",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "8219dbbe-b7a8-4cb0-ad51-3f8d4745388f"
        },
        "item": {
          "id": "83348f0e-9422-4094-8fd4-8ae459a6f2a5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "77e8cffb-36c0-428c-ae30-4f0c3dd4b343",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb096a0f-5ac7-4b82-a989-d36514efd5d0",
        "cursor": {
          "ref": "054d998f-bdd1-4961-865a-5e76222d5370",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "ba662f59-4680-4ed2-90d2-e875afe2e8a1"
        },
        "item": {
          "id": "bb096a0f-5ac7-4b82-a989-d36514efd5d0",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "cdba03ca-6fc3-4649-aa1d-1ebf55b32748",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7621fac9-1c4f-4db3-bbfa-122f0a51d5bd",
        "cursor": {
          "ref": "5a9a020a-0120-4587-914f-0716f486b7dc",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "c1cad178-bf32-4af3-a41f-03a49f5f5ddd"
        },
        "item": {
          "id": "7621fac9-1c4f-4db3-bbfa-122f0a51d5bd",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a327805c-4b88-4ce8-a87e-dee1d66ace30",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}