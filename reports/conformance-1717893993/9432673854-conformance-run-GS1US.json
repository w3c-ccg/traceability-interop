{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8e519e80-5d00-4fc4-a567-c2b52ea81a45",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8137be76-d254-40f8-a89f-353fac071ee4",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3134d150-0fa8-4aa1-b863-71b4e982b50c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ad7759d9-4796-4e72-8bc6-3b7f62fd95b9"
                }
              }
            ]
          },
          {
            "id": "b4d110f8-5e14-436c-8943-699ecc746d99",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "134ab137-0017-412e-9d83-3cce376685f3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "92f59b83-857a-4f9b-9c91-f92d9e4dabd5"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9e542da6-8009-4f6c-b8bd-e69a8f3e620e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "05e11855-8e25-461b-a5ac-a057f9d9c41e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0e6ed213-e5cc-44ff-8e6a-4fca4f46730e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c600bb5-c299-49c6-866e-40046809a5a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "800ad8a9-63d5-4d1e-9f3c-47b76db044e9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aed2b839-225e-4300-95bf-9a08b0d95bbf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "be8ed670-d68b-40f7-918c-c1cb58779f2b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b845af52-fc9e-4a50-a643-108f8205def8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4b8a093e-6816-43c2-8d5d-de50032f83ec"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d0414bf-b92a-4f95-b363-e98fc11855e1",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4eb18fe9-2b60-4579-8f38-2bba05445ae1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "77c5b7e0-d380-4202-9020-e56bd18acbe1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "17903e00-d3d4-4b34-9524-9d03cc891be1"
            }
          }
        ]
      },
      {
        "id": "b3f02405-396b-4e07-a0e9-cd0a67cd5703",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c5365cee-c51e-4765-8d3a-81093726bf71",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8719a2d9-b659-4f75-a30e-7db601ac9c80",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9012f771-2970-41bb-9f8f-01b8dbba3d62",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce8fc8c3-d291-4ef1-9300-5592e28cc4d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c0019ff8-7ca8-4283-85d3-adf2ae427deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ba73ec-cdd3-4b9f-a4e5-f42f29cba498",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "565e4a9a-bae8-4a0a-ba56-27ab1e2d82e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ae4c1899-f477-4002-b21f-eb81cde84687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2700aa1-cb8f-42f2-a5a4-1ea5e0634454",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a98f894a-afa9-45b8-82d0-d56b23138be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4033d5d6-baba-45f3-9256-96bd5b39021a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2a7646bb-5d43-4710-af9a-d47dd7711c03",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c869c6bc-97e4-4b31-849e-7672f2cb1589",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "489fa666-172a-449f-921e-f909a9c03dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "adca3a42-6c3d-4e6a-891e-3bd349660a33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73c7896-bc1a-41e2-bd6c-7fe9aeadab7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21e646a5-8daf-4554-af99-f101fdbf3594"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "839b83bf-d4ca-4e87-8cd3-7c171d6e2370",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f8968b1a-8986-4dab-89c4-68ef97d1b210",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3eb7cd05-8d19-4312-ba58-9f12bbb2ebb5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "294add4b-a5d0-42aa-a7f6-fef4613e3019"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e68c7258-b124-4f87-9fe3-f2214371b678",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "affa52a2-36c1-47d1-9df5-f014ed6ca51e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ceb93441-08ca-44c7-8a12-22a2bcc222d4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4a3cb324-f428-4927-89b9-972ab86ee8b1"
            }
          }
        ]
      },
      {
        "id": "31ad1415-676c-47fd-af5e-97738fd451ca",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0a1c13e6-7e21-4ad8-ac2e-ee894009e790",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5b02ed0a-e501-4784-a3de-5cf5ef7d31e3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5cefc5fc-79f2-4cea-a7fc-040aa94cc773",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40dcac35-eee5-4bee-92e6-14cbaeb26e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "396ac83a-9b8e-4211-9614-f03ee0a16577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73c5e1c-1475-494d-bddd-d50d38085112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a820f07-db54-4901-8dcc-46e2cb7f4889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368e7cad-d1ae-4166-bd32-ead516778a53",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a7f6cb-b150-421c-96ec-b31fd85968ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c1c6928-5672-4715-b851-0ae94c59f611"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2678ba-fa2b-49f3-8a84-5e616f7ab0b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "761e5daa-a98e-42fe-8b19-13768ca86c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed0c199-12af-4a6e-a465-0607f0633a54",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c27b4fc-ccb5-42e5-bc92-23b2f3c2bfd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20ab2487-ca7d-44bd-9a60-6d86b70fc751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03878782-bb44-4027-b204-40d9f6b51c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "133094d9-4fc3-4e3c-8ee7-3db448774c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05bbfee-9b3f-41be-a307-8dbb14829ab1",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c26ae7b-9c4f-49f6-b808-cb5f15297fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc8f4b97-fa65-4fe4-a475-2f07d3399925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f5d77c-c47f-4e29-a4e7-b47053ca163e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92dd4f6c-c524-481a-9676-ca1e0a9c83e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d224a5dc-c10a-4bde-a278-81c4686dd122",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25439011-e99b-410f-9902-4f073338aa9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2a5c7b2-3b85-421c-a111-1699d08935a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4640fcaa-4c4e-4fa5-833a-5e473bf2e433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5be4409-68ee-4909-8a1f-303ea2f2de7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f82d084-2e31-4d82-a789-f04ca6a3347c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa480b39-54fd-4fe9-b036-d778984047a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "443e5817-b506-4438-9cab-bd04491fdaec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "127275a3-297a-4a51-9dd3-0ad9d7da204c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5675205f-90c9-43ae-934e-f0bcb9d8bf0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a20719a-462f-4ec8-83b3-d5b2acd4a791",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac36a29-b717-4e0f-901a-09b359e5bb29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc7c2017-77a3-4300-b61b-f16b04bbbdb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35f151c-03a2-4000-b37e-949064359813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68dd012b-d473-42f8-b446-7647c1e72e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "136b04bb-a96c-4220-b08e-31d44dd3c0e7",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1eed891-4129-43df-88bc-281623e604a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4a9bee8-9b0a-4df4-930d-0fdc3b2847cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a11f567-492a-40b4-bcd6-2c6988920c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad1254b2-41e0-4b2f-9e4e-3e83c603f1fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f45bcb-3194-4564-824b-e76b8ab418a3",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f248393-451b-4703-9b8a-e03976033271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81b15e5b-e855-4aec-b103-0f24327ec87e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d84f4dd-8a05-411e-aab6-7566c88fb057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5387c5d-5169-43b3-a906-3ee351788b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "743ba603-a621-45fa-aee4-3ec8bf4a80be",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e28c8d-0389-4652-bc03-09712a7404ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "563ed968-1238-4af7-a75e-4e4d40116756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ee26dc-d7c3-465d-8359-748f85cd4f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bcbbecbb-9bff-46d5-b099-788caeca3b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ec1eab-6065-4690-84b0-70b7a731b551",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebffb0c-aa11-437d-9736-f5c67808155a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7230658-7d4c-4a75-9f9b-44ed91b2a4f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255c4715-b9e8-4529-af16-813e92519096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13acf768-d7e9-4086-9ada-9be8a6f8d452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff7c3b10-f37a-4969-a13d-6af8d649a062",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40e311a-4478-49b0-a477-ea4e6ba02612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf189e13-5f66-4400-8047-47895acdc549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba07b5be-9942-4bc8-be67-5c0b78a9b0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ddc829eb-1d7e-4845-891a-e783dbc4bdc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b790efbe-69bd-45d9-a65f-e08cc4760013",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9853efce-e498-401e-8746-08ad4f5f6bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74dac3eb-87d6-4cdb-b416-f96ddbb3ba30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5654e51-33ae-4e77-ae0d-8eb31a1e3841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "133e87d1-eb86-4f66-a2c8-a9cac1939e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e5dd040-751d-493f-a6de-6663fd760a5a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4e0e33-26ea-4a9d-892f-f391d10ba4a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcbe63d4-030e-40f9-bda8-66a04b097924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62fe8639-4173-4724-82ca-f4cb1571c1b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a19531f-69a3-42e1-b0fd-4fcfd93111b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc98508-8414-43e4-b782-5762dacddb6e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3dfe3c7-ecb4-4ea1-bbe3-a730bf93a27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df09d21c-3d03-4d8c-ba2e-ce7b58603d33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9748659-7d4b-409e-907b-810fc30b4c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66aaee0f-8b26-430c-bfa5-6c273512bbcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "305b64f8-fb71-46d4-9f45-ee235cb06280",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb3f1eed-a85c-4b08-afd2-ff5edc70f1c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c45aa62f-7a14-453b-b579-15e853987b3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f174d4-4da1-44fd-813f-178de04eb1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5fbfb741-8891-4d91-8747-5f9dfce7aea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a96e59e-acb6-4c22-b298-709f9a0ea9a3",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab49af84-1c6c-4abe-9c7f-5472f88bda54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e48c87f6-5de2-4e45-9eee-caa6300b765f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44fd2847-1ace-4600-bce9-826af3e0465d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e33f2fc-8182-4235-bf92-e9402a66cc36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d5d4c26-2a2c-4634-afbe-f61883edd8bf",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e99b94b2-aa07-4b21-b345-a9ab3b66ff6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c7426f3-4782-4b33-9cdf-3468c6dcbc7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d450205-ef19-4c76-bb1a-fd0bc39ac6fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "43cf5f31-81da-4344-ba81-75040ac2f890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f07d023a-ec86-41fd-adb1-908d33e63ce3",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b24f5610-196d-41bb-8d01-7ceedc3587ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a91657a-3430-488c-a0e3-bea0be068854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34763060-7128-4024-abaf-74961d180448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "faf1563d-fc8d-4c2a-932c-08e43fb1a596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b541fd-7794-43c4-85e5-41cacb846af1",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc965ce-5f85-46ea-acf6-a4dcac8b812b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37cc756c-51f8-4d1d-b60c-6f20a49de287"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf67655-fd18-4f08-b637-64c92cc6ab85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4b6c4b2-b5d1-4041-b8f0-caca47c783e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e03478-4398-4a39-be48-9bb0c4159234",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ce4501-4965-4aa1-aa78-107e8bf6651a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95e01b0e-ec29-4214-ba95-3e2e93556f3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0be204-ebc9-4e39-a728-a06801ae2c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9ab2748-bee6-459f-8097-ee3669bc5273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e65abb-17c2-4f14-93d3-42a2640b5a11",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ec130b-9ecb-4c00-8b41-645012f1d445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ea437fd-fc89-43cc-ba0d-bd771ceb15a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf91899-23ab-465d-bc6d-670f22f8a9c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "22409c9b-aeee-4fe3-b732-25be9c1cbe5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d11a0b-286b-4bd8-ad4d-75dd026c2fa0",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c9461e-16dd-43d6-986f-c37f0bb2e29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e21d25e-7c36-4565-8b62-d3603b70db8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8467e3-ead5-42d3-85bc-6aa7526e33dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "362e4550-a58f-4967-9434-05ae04f21624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96aec096-2988-4204-ad9d-2414f909861f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c4fee4-61fe-418a-8212-2271cb04b840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96fcaef7-f6dd-4843-94ca-948443bb1f05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24a06f7-dfc5-4673-a242-2e519759cf35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "12ca4aab-e130-4f18-9b91-68be0c73ac7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab55214-dbf6-45a8-9878-0ef7cc0b22ea",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a404bc-d639-4624-ab24-e308ef4f6fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76352fe6-a23a-4a7f-bc61-84349b925775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4178ef-f6d7-4dd5-b902-64e6cf655b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5476f8f-e5d8-40ef-addd-fd194d2de59a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d4a0070-151d-4976-94d8-69bc3d9a5d89",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f0c1b60-9cbe-40e8-b20b-5bd36eaf8781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2f7f6af-89c4-4527-99b3-ddcd88afb007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b3b900-59d2-4509-9abc-0e77a74ab11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "15ae6c02-aa62-496e-9706-cc6da6c8a7f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "680d3092-48e0-4a99-aae7-3f74e4ddd5af",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70425315-5dce-40e1-9367-4aec9b39ec7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "439643a6-10f6-4802-8e9c-10ffe961f30d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c03a58-482e-4238-9a03-d86171d8a367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce4a7c14-7c0d-4cba-84e3-480a3de69ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55a5e5d-86ee-4e27-94ae-10eb6f2e05b0",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb5e0d7-0501-4410-9305-1da5c4a10d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb72a985-806c-44e0-a08d-f13c6bf4f3f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "facb7319-0375-4a74-9bb8-64f043f13b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bc87f87-b9e3-47d3-804b-4bc24022b9d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f60895-b50e-404d-96d1-5c526bc18d9c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "465e4148-efab-4415-9422-540f972e600d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d046078-99dc-405f-b9b3-6af2de6a426f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84cc0716-8974-481d-83aa-759bbe0d8363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5201d777-630c-44f7-b596-cf2d42fa9ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd034c4a-a721-4a83-a77d-3dec323f1776",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8278bc5-b2e8-4b28-a39b-eb7679cb07c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5ba335d-eabc-416d-b324-3b1c0c826e8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3315eca8-9106-429c-8080-5e35faf753c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "463f2568-25ed-4a05-8f1d-7a60bbe04fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa7a93c5-2124-4a35-9a3e-c09107b8981c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b40636-d054-40dc-8ce1-d2f175bc3225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f31b5465-0dd5-4a2e-afa9-62cd7b7b92be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a77478d-c7b3-4705-9d90-7f398c8bce7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef268b11-c338-427b-bcfe-7929560b6f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e04576-8702-44a7-814f-b421c0ef62bf",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c48c974-e4f5-4c5e-8c9b-d27ccc294f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0c37dd3-cfa5-4980-970a-d521e7504646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50496b2f-a91d-4260-9f6e-48e8b34355fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1a1ead1-493a-4c31-b736-a58c8fccac87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a885c4f-b058-4da1-8537-0b7fdeef59ba",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c872cd-8416-4054-92f3-82b7a021a1e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c074659-47aa-4850-ade4-dfd6ecdcbe96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1661a818-e3c1-4ab5-8dfa-ff2a7fdb779a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff5ba7c7-2afe-4130-9eae-91b2d9ebff33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df83ec07-2c40-4d4f-ac7a-0f3e5f5faf90",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef72cd5-6aa1-4ef2-8433-8c993b8b943b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18348891-8301-4411-bc91-03b52da88cf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4d2552-7bfa-4885-a8c6-ced89108f148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "63909f99-ff6a-4402-9902-1e1390db1cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b293ac-7b39-4d63-ae92-8f287e58ce4c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00494de0-1be1-44d8-8815-7a7afd5c9634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c5caf42-100b-468b-8c0c-5a936a9c34b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba7ed63-faab-491d-a0ce-5e4cd811e34f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "de21b013-c31f-450c-9536-9bb96ca33fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4b2d8f-2b87-4858-9dd5-203268ea2b1a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb5613a1-528d-4d6c-96f6-c94d60e51208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a40c771f-33a0-4174-8260-64ea3aaa79e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe9751e-2bdd-46e1-9738-32600413b359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "98c7dab9-afe5-4b96-b732-f49df6a9b4ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d0302f-b584-428d-a5ba-46309568423b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe94bb17-9cbc-4c83-8c99-7dbf4a3529aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90f7399c-2d2d-42dd-9b88-d8fe64a898a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a877f3-b86c-4d0f-90f4-25b65b7b9d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d81aac4-1aa3-4ba5-9fa0-51652301f8f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e43b4c-57a0-45c8-9bf3-09f37da1e2c0",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eedecb2-64f1-4ef9-ad74-8fc9d1627113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfe97866-2e37-4a69-8e62-ac4a490c0cba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250317af-2ce2-41a8-85cc-76a2e12ae525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b20a8669-a4fc-4fa5-b76e-fffb8fa6296e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab8ec36-919d-4226-83cf-59dcc52d3ec9",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0130ff-02ca-43e0-86b8-7c10af53bd9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8542ed26-f5c6-4195-af59-1fd36a24acc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2fb4898-ea8b-4e94-b723-95c7e1764f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "54aab63e-782d-403e-9ec7-701bad29c22a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c1e8308-565b-4734-ada9-c70430526932",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b963659a-e506-430a-b128-7d539bf0fbbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b39a24ea-ef9c-4c75-9050-ff1a877f9391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c84676b4-0cb1-4704-a41c-f58f9e27a5e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6296a74-fde3-4ce6-92f9-6e5e592b26b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bacda580-f2e1-4c20-9e87-e3a93d33566e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0827ab5a-a00a-4f28-9f27-392162a3ea1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0097d039-5ddd-4218-a830-ae320bf87da4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9907f788-2b2f-4b60-a435-62f52ed8d59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "41575659-1bfc-465e-bcb0-2b0974723bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34bb744c-e7bd-42e2-bff1-902cc08ea9a8",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3216ed43-01fb-4f61-9b60-428e99e13eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13a4e805-6f9a-4cd3-a507-28be356fe519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b51d6988-15cd-4f19-9378-067b8cb09c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "deadffa8-75d1-4f8e-96a2-700e8bbffddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc374f8-e0cc-48d6-ae90-1863b3d4f36d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a507d39-644f-4a86-8bde-4f7b0222b323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "201d644b-dc10-4fd7-8e55-9e5ae5775bf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed7c3f8f-0136-43fa-949c-3d39aed6a29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "718f29af-c55d-412d-b2f6-18831dd100bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7eb9386-512d-4633-9a07-24f842b1ef82",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c66c0ec-f0c3-4fee-b2e4-85023888210d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36ece93f-a063-4240-927c-49f86deabb5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd89e57-1121-48c9-980c-9eea8a768ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a068285-fe9b-459b-8bd9-10b6685610e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4500a013-e50e-4d3c-969d-58090bb1dd92",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f83e327-ef08-442b-9a2e-0f1f20647d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49d0f8cb-f2ba-4aab-8355-2291c8a3c39d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db5a69b1-abf2-4bb7-b3f9-9de4044e49df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "37d4cbc9-d6d4-44f7-ac0b-a3ac2d25036d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5de9a871-58dd-41d6-a7d9-2f1658db6442",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1c6b8f-0058-4bc3-8fa5-94f563006fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "247d9746-e4a4-437d-bd25-a22e7a7732ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685f8534-019c-4cf1-a0d6-efdb7b969e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6a076fb-93c2-4ab0-80a9-92101b563d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b2d3111-900d-4fdd-bcef-ee58cd331020",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5214fa62-215a-40bd-93ac-d944a08f8d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f2aa4a5-6ca4-4010-bdc3-46c9363b9acf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163fc5e4-82b5-49e4-962d-6d835d0b35a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "570b0f2a-40d7-426a-bffd-1cdcbfeb97db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d66ec13b-04a1-47b5-96e8-327742f1bffc",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc333d2-c345-4908-bb12-f797e54df269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dec59d82-ed9a-4901-b1ef-9ea1ec52402f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5fcac33-03a2-4603-b61a-d8d084a8ab53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4458bc5-6129-48b1-acef-0e6375cde478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4158f9-5087-459a-924f-a749c12955d3",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e8ed26-32ee-4dfd-a9a7-cbbebc49737c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a72f2be-2d00-4022-bc92-881e22422b40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c69ad4-1b84-4bca-880a-c07f32074b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "556973a4-334c-48cd-bf76-ae60d0c257de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad786721-1fd0-4e0f-8fe3-e61f482a5f12",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a35285c-b7f6-4b0f-a94c-85914488052b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1995767a-6e2e-496b-8781-b0ec028ad6be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "833227d2-677d-436b-a8a8-1739e473b2a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "527940eb-68ba-4e47-af2f-9d381cf8b5ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea5ea39-f65e-4d92-b373-89b5a8973af3",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "321ea9d3-972e-4b6d-97a2-7dcde031c655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ac37c23-ff39-4645-9821-e98c358771d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63df0c8d-4013-47eb-98ad-0e5df32b0be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcf68474-3aa4-4249-9257-3240621645cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "022a2460-ab22-4ed7-b7c5-04839e4187f0",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a44d3c4-33e4-4ad5-aca2-9cd804f36b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ec71b7e-388a-4565-8354-a551861fa56a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd68484-cb91-4804-89a9-3c6195cb4abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "99f796b2-9312-4304-b333-427fda5a17d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "babd93c0-8a9c-44b7-95c5-7d99818e61f2",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ebe595-ee96-4d29-a91f-61ef1b222088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ec02f13-bb3d-4b4e-8209-36fad8c25ad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "971854ce-574d-4a62-8d0a-5e6b4cecf5d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b104121f-c019-4676-bab5-a243045855f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb3f723-3795-4c80-8c33-84042c8f732e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed4d1ef-bee0-45f7-bb36-850597d9f96b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c92c54be-72ad-4e33-9257-8d4d6066a042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6315e9-fbef-46bc-ac78-b72601875e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bbee0d1-d708-435b-882c-ab8d33bda32c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6657f0fa-419f-4fc5-b3ad-f3b302eac775",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19bab0e-5a28-42f1-8e19-ad1e1ca26689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2091d079-3ed8-4c2b-9401-f0cda59347de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cabfc36e-939e-40e9-acb0-8a5bd7314481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "89ef41ea-b17f-4d23-9e96-bf677c589f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e3ba2f4-b1b6-4a77-8304-7b0ab06d9717",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc65a84-0186-4d80-bdc6-3dae35d64e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b33992a1-db29-4b7b-b628-84f8667fabb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9052645d-3c7a-4f1d-8123-f543c87a1a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "fba879f3-401f-4ead-93e3-cbb2cfea4d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67fdc44-c2a0-46c9-8365-39a8588fc97c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "956b6db2-0bfe-4083-80bd-dbc4faa4ea51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f82a350-65ab-4059-aa67-1a84fbccee48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "776997bc-6022-498a-b967-37678c682f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "522c8b03-5690-45db-9380-0420d058c6f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "944fb11d-d1e2-4c20-8851-84ed7947f60b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eccea9b-a8ce-43ad-9bdf-7615b33de0f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "112023a7-9af9-4968-bbbf-592015ce71f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f4899a-cc9d-465f-a636-9bd4fda688d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0527982b-dc1a-4b81-aabb-372b3d05c73d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf647fb-f814-444b-9d93-6f100855ac9b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ddc79e8-158f-41c9-a1a9-3bcd1b593118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50bc363f-1e59-4cca-b745-54ecdc234447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d87447-0c49-438e-b762-aa85a71fb34a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "62de38e5-24f1-42d8-8003-9e01fc575f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f19950-b48b-4631-908a-412812f3f32d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8650d609-6ffa-4248-99ab-e60762fcb9b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4ea8d19-73c8-4bb4-987e-149cf09c1d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c53e6ec-8eb6-4387-841a-4d891ce12580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "58d34365-c5a3-4148-a776-490f2cf0c9b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb4ddc9b-ae4d-4055-a5e9-7f0118b3d329",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "870550f1-9f9f-419c-ad70-4bc147ed183e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17a47c9b-b41e-4157-a7e8-9fd5a096ca47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2921e1c4-c985-418b-806b-0a9c87fb2225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cfa038ac-477a-42a4-8a73-019af17587e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b97622-88b5-4938-813a-4c851c34b3cc",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad7c8c7-6ee2-4599-b663-8a7ddf91bdd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f38e28a8-a19d-41b9-9cf1-33252395c6c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1682feee-bc6c-48ad-818f-8ef4a091fb41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9aff8549-4c6a-43fd-a174-b161fcc051c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b76e28f1-8e75-4ae2-8348-44e7f5d7ab32",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "450dbcd2-b0e5-445c-9dea-b0f81be346aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc3617a6-f59d-4883-a0e4-98b398617011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b293f7c3-65d5-4c7c-997b-12fdc329d8ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5db4b5f-f20f-4e44-9bad-0528f70c04dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e58d886-93e8-4d33-af4e-38e6e71bc080",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f469c63-b989-4374-931e-05e5bc6a0fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25fecf56-70fe-47fc-90cd-6c54609d21bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a8a8d3-2e8f-451c-96c5-ac266e5833f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f31b5464-50fa-4ceb-8500-5bcc17ca67f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a70b6d32-74b1-439d-a4d4-019e676a698d",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "004f6098-f928-4303-b0d1-1ffd870b6454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13fae9a0-b9ec-44ab-b071-e546cf254c75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72a387d-1da0-4d30-ba45-aa19b04563bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a10fd314-dc61-40aa-84ea-0eb602e2e85c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1770ae05-d44b-4f8b-8339-85414c2d6b3d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0162a8b2-939e-45af-b346-5a010cd3fb51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfbbf74a-d6b4-4bee-87cc-66aa6d32179c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ced827-073c-45bd-ae91-bcba6492d3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a632c02a-edf8-4d55-8b4e-f185225874da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba0cb990-3148-4e6e-b0c3-e498fac68d42",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd151a7-f026-4234-902d-742a1f59053d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9916c3ce-7194-4161-a658-807ddf589d45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8baf6a2b-1f21-43fd-bf1f-1381dced81f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f98f6a73-29d3-40b7-aef8-8f8138a3c760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a100391e-a077-4517-913c-a9b7048d0501",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e2af060-44fd-4e4d-a78d-ef5ec93b4013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14b056c8-f2e1-4a9b-a373-595a7a99ba51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "629e674a-0b50-41c3-88c7-7384cc6fb5f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "88ef128a-1cac-45e9-b6e7-f884402c3c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9b08a5-a7c4-4c42-ab73-f096913f50e6",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1d3a19-83d0-4d1c-b22a-e4329d035ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33e605aa-f06d-41dc-8646-0c57a868bb85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a0fb3e7-141b-4bea-95fa-2b183a985700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b712751a-4384-4194-89aa-1329ed2801f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a787aaea-edc1-41eb-99f9-26d21f2ea6fd",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "043279ea-d687-426f-b588-2888a0923620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c98ab07e-b3dc-4a1c-971a-aeff0145302d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c720ccb-e591-4ab9-ab23-978e9733c5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcb95bd0-5c16-48ad-ae3e-84d54d2ff2f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f635c500-913d-4c91-a8e6-90860f2c7b01",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae500d7-2a03-49d2-b887-4d29b801c98e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c168803-f64c-4cf1-9e60-79fee105245a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa87323-727a-4e83-827c-c877931a8633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0169ea5a-7762-433f-bd0d-c416effcc89f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5479f6-9721-4561-bb5e-9f743f5bc07d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19369cb7-0797-4d8b-88ee-4fcf0a9d546c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9b8ad2f-7203-481d-87f4-7eafa376de73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd8cc0a-cc92-4176-b226-616376ca15f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b43c4f7-0d69-4d5a-963f-c171fef7ed7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d925d44-917b-4ea1-ba89-34a699563778",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d1d95e-14d9-4470-98a0-ba084ab6026a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e47eab0-4f2d-4f2a-a1f8-4da771f5cfce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32874727-a3fe-467a-be8f-adaeb4e1cabd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f027ebd0-f17a-4764-9440-1b2096e9a96b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee8e86eb-e434-4ca4-9ef8-26a826b3ce81",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22321bcb-7049-4403-b3e8-41ddaadbe043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "600fb0c8-9f08-43b4-a048-b0bc2141ff67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe49206-3f43-451f-a327-ef7977fbf105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8d1d9633-e176-4269-aede-31edbf2ceda5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda8b6b6-1b2b-4832-9411-ac5c09969ee2",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c892da8-fdfb-4da1-af1e-e2a2093128b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c25c8ff-dc21-4e38-9ea9-6f00be39036f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e10d27f0-25f1-4e04-b2bb-063a487df78d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4258090d-fe27-4739-8a03-85f2964b050f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f824ad-bd90-451c-82a1-fb578ab0d18b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede63dc7-78b4-4b09-aba3-bc9aa9be22f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9a6fe2d-b3bb-4278-80e2-22e0d07bd587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "259913c6-e93d-4f20-9183-52420dd828af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cba8ad96-8ee5-4b6e-897e-8a884295211e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e289bd6a-831a-4ff5-941a-fe60cefb60a6",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae494333-5543-47df-8ad4-7fdb81657b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "093f56ad-c1fe-438c-8dd6-c1d70e3bbb66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d55f017-bc5d-4e67-99aa-410541d46eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4530cf7-5ed6-4de3-ba9b-5114b97005e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed4b88f3-b8bc-4ea2-b1c4-6a9a4672d5da",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acf6bc52-4110-42d7-bee2-493cb94eb45f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef3379ef-77a6-4be1-bf89-f75e7ccbe628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e61ef019-78bb-48f5-a5fa-ba7c0d110ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1c597ec-14d9-4a34-9b12-45c45aeb33cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7aa34b2-c07d-4034-b2d7-a3620af81de8",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9e2849-871d-48ec-b870-7bfe9348bce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc159541-a56f-4f92-bfb4-ad3908cbee41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44d1a34-65bb-4f7c-a9f4-6361f436ad53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2695ba50-6010-444a-b4e4-d625a45a9328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b8269a-03db-484e-aea8-9c661d158f5a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21288e50-54f2-4ab1-a124-947c4ed7fda4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c982bb8e-1f4f-4ded-989c-7801eaa4c5cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d0e7e9-0633-4bd3-886a-c1ab1e48540f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "746c5dbe-342d-47ab-8aa0-1e222b47e174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e2f22d-4fc5-46da-8246-3f484fad81ba",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2410cec-a5f8-48c1-8398-0d31d80c9f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b06e3c-fff6-4575-b61b-e1c05ed0d1f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1635bc05-a0f8-4c8d-9c51-129507912a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b2d7e3a-2750-478a-b789-d7272566395c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e4c7dd-84bf-4f09-ad1d-e1c99219df5d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bef1d35-b22f-494c-b085-5b2322d77680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68ee65ba-068d-43c1-961d-b80a8a78df25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee88999-1e2f-42e9-8eff-8ffd90c8c822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2dbaa8fa-c6af-4851-8213-6cb3286ce052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4507d17e-0960-438d-a67c-fe6e9026e98c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "776dc9f4-7b4b-466d-aa16-386e11c417e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adf174e0-024c-4e06-90e3-d9f2fd654fe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dfbf52e-d7e2-420c-993d-6dbcedac4a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1af1dff5-c241-499c-a3fd-ef501f6a8e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2dc3cef-2812-4f05-a377-9f80b753d50f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0493bcc0-3114-4c90-9a01-c93bf0c11852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3a4168b-1cd4-401e-ac45-44e879ada6c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "560a4782-16b0-4e2a-a273-fa96c4d803f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2c85d1c-5d7e-4a94-aa83-43a48e6ee331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a37f780a-d46c-48f2-ba6b-62ffb98cf5d8",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b192c3fa-a3f0-4f1e-8c3a-cd680a1a1629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5340531d-f976-4765-a2eb-44c14af68f8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de8c74e2-571d-49ee-8350-1609accabb94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b7ab924d-6903-4b84-bcf4-d106139cbdf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c91edb5c-8e06-4457-a4b8-359e0ffebdd5",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54172cbf-c7e3-4b48-a68a-df190b2ff3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cec87bdd-3b77-49c3-bc0c-5fcfe4daa680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e60e8f73-db2e-4e08-9e2b-dee14f7439e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ceab74a5-0a8b-458f-a922-d051f2a7cb58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef82e2b5-4a37-4c62-899d-7894f0b4f1ec",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2f0011-8847-44e9-8e06-752bb2ec6cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d628075f-7a36-40c0-a103-1af0e1dafbcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1842cffe-3f28-4410-83fc-60e8cb015b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "50d67d31-80d1-4b88-843a-495d93fe5135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6def16f-ac35-4b2b-b46b-9d246fa5d914",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c1d0aa-1519-4e39-8c4e-3a50baaacded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24f5c41b-9014-4f44-8a74-ac550fb55b47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d80ce811-2db0-49d1-9fa6-fa92eb58787a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b6233ea-f869-4bff-8abd-6ae92b5a5c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3467392-fd75-431b-9ed3-cf401fae4408",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43bb085-2e47-4bd5-ac3a-19ec0c1fba78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4527470-bf07-4444-892e-121e3213fa9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df49cf78-7cb0-4c41-9190-bec8c6beb1c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b767c9e9-55b5-41c5-a753-ad4ebb807fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02747a71-d3b5-4cde-b6de-299965c54ca8",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec48eec-bf57-4161-94d3-95a0efc38d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fd5f468-bc91-4505-827e-d0abde01c731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b44fa2af-1efb-4ef9-a524-dbc4a4472b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1e61f9f-0460-4ec6-bf9d-cc719a530b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a48b06-af93-40cb-b642-d42f47e7766e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a992c1-4bb1-492f-8b5b-73ba327401c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b069052-7d60-46c4-a907-206b00f1746c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1529400-30f6-42af-aa55-31dc7fdb109c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "feabb865-8e5e-43c1-911d-e5b19b74c748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48c07e2-1f3a-4d37-975d-09cff227d87e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef23abe-43d2-4481-9d26-18bf574affe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5ce0d840-bbdd-494f-8855-9e90b3e00861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf92eecd-c08f-46de-8fa8-4d885738f50a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc76a03d-a86c-4bd9-a3e0-55626772371a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "de971831-eb2c-40bf-8b44-06e8249102bf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "31ec3c3d-d862-46ea-93fa-f863cfa98855",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af07d7b5-d7ca-48a1-baa7-fdb0abef38fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7710c9e1-4a62-45e5-99a3-fb134a43aba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf449d1-64d1-4867-873f-06efbd64d977",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c233b994-6a23-4041-80e8-28cfb898c7f6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6514d6f1-0ab5-4e37-b15f-78ad79e050b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ee94ffe-4ee6-4679-a73c-4ca1b9d52cb9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2732799b-4731-459e-a868-60650c7742fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd86248c-b722-4857-8b8d-dcd4ac3c181d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "102b4841-c970-4cb7-a424-900047955817",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5ed08605-9a00-432c-a0ce-eea2848f6c7c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "595a2660-6fad-46e9-86d3-3f191ed82793",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0f68b242-9738-4ed8-9a57-3fe9a34ff92d"
                }
              }
            ]
          },
          {
            "id": "ed602b1b-0ded-4471-a25f-aca2e261141b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e24baf94-f156-44b4-b7fe-1310d12d5c73",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "3b6b7b7d-5f16-4c1a-b89f-586f7a1056c9",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44807bc4-fa88-44f7-8839-85ffcae07ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4f1c72a0-5995-4ebc-a2b7-8077a0fea1d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "052e9907-2e9f-4d8b-9df6-651502ff7cb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f9ff092-ed9f-4bdf-9ec1-108eacd9d602"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9ea3f9ea-4450-4cf4-b9f0-9b0af87a1bc4",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "466577b1-0477-4f84-8758-280a46019392",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7de2969a-b5a0-45fa-8e72-0512d52cd8cb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e66b87f-5cc9-4be4-a327-c69a1718514e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7ffbec2f-a159-49fc-8897-663a2da60b4f"
                    }
                  }
                ]
              },
              {
                "id": "a9addacc-b8cd-4703-b16a-04526d689997",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c85825de-f8fb-4014-b442-089f2036aeb2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8c0c8ac4-c2d1-49d3-8ffd-3886ccc5b393"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3beb4e3-52c9-4762-a431-8de09d487a8c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c0aeb516-7740-4c5f-8fb4-364641a9abe4"
                    }
                  }
                ]
              },
              {
                "id": "ce051b8f-9d60-4410-981b-8456d4c52edf",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d887c2c9-491e-4a6c-93d8-6d73cc86086a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "60d87051-f2c0-4415-a056-81d5ed64e523"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2be71e5f-97cc-4438-b48e-cd93fbe7b7f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a1ac26a0-0d8a-4966-9d8a-fd8bc7000d25"
                    }
                  }
                ]
              },
              {
                "id": "21262420-59b0-41f7-afa3-da17a3747274",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea9cfded-4284-416a-b6bb-8184d7d54bf4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bc332885-0158-46c6-82ca-7781008cab50"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cbb00ad1-60d5-4ff2-b85e-d0e7a4f540ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b7004b2d-b88b-411e-81f2-ec3fd2490d05"
                    }
                  }
                ]
              },
              {
                "id": "cf0939db-521d-4188-8d08-0f6996a9cb06",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "89ddf3a6-0187-4bba-a11d-66d850cd5b32",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bc1e77c1-fcde-45aa-9dd4-cd44efbf79e5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be9edbd9-4c37-4c7e-ad8c-9eb343bc680b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "22300c41-6239-46b2-9a90-01008f3c215a"
                    }
                  }
                ]
              },
              {
                "id": "9c9454e5-2ab0-4d01-8f20-a6491da7ec20",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6359513-3c86-4b5f-a19b-44e27214fb20",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d34cd199-ddd1-4c68-a25f-7f6791ff87e1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4852ea76-b53f-4a6a-a388-a9b58bd420cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2d7fbaed-2ba2-4770-9c8b-6ea1eeb5e36d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "451d0b5c-8a4d-428f-8eae-96188eecb871",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eb4c80dc-b903-4269-89dd-effc3f07f81d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4fc84dc1-2ae7-413b-88c8-d39850bb7392",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7bf1e6dc-5314-436e-845a-ec5b9990e744"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "253a976c-dc90-4716-83b1-70c2d89ffa2a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "63764d5a-7bc8-44a2-9931-ffb5350ff19a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8f218da9-e908-4138-8916-c905bbc26fe5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "668aa4e9-a02e-4bb3-b092-4a2c55968d8b"
            }
          }
        ]
      },
      {
        "id": "1d825178-3daa-47f5-9ea4-a6be7cfc0be6",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "64e8fd62-eabf-4af1-ac0b-553760580d89",
            "name": "Negative Testing",
            "item": [
              {
                "id": "978682db-0886-4352-8e14-5ce9f6479987",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fa847b72-ec3f-4f3d-af43-af277ce7c1cd",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0107c6b9-76ec-42a4-9db5-c3aab5fd87ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e774ac94-d6e7-49a7-8641-97ee5d136576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c403d04f-5923-41d0-8192-dd7f562d2596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "291b839a-8691-40f8-b97c-9722d7cd7fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c09528ad-b171-4e62-8734-4963369dc22d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8756e625-9c02-4ef9-82d1-35954826eca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0490cc2d-4f17-46e0-9c86-fe7632f37af5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf27fc3-dd60-42d1-8b9f-e5f5339a009b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4199ac5e-1f66-45ab-a2ad-0cfa53bcd768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "984c530d-21e8-4b55-9946-c395eadb1f01",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddce1414-78cd-419a-8a98-e81a6ded048e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53845007-8b9a-4123-b9f2-b3d2915ea067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd8e0b5c-8b13-4186-8d15-01f0a5a1ef04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "274fae44-ee33-45a0-804d-580864b1792c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e3cbf7-8bbf-4b09-83c8-067d2f083e57",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "231dfb7f-f15b-4fcc-8072-01b67e7eb9ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0d36e68-3cdb-4b1a-ac15-93b3ebd2d33b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "060b2e79-f4d8-4426-b631-22883a02e6ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f2c3e9b-cc2e-4847-b779-54b648a01fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aacec43-0ee9-4f69-9a95-d335bb29cf3e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be2ea29d-d15c-4ef1-8e3c-6d5b232b4379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "051bd877-12f7-455f-9248-931a6e780c60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "591f5d7c-3494-4d0e-be3f-5e18bce42d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b591ee8-0432-4149-8c5a-3409562534e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abcd9b5b-5e9a-44ad-9f9b-2959b528f42c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ec15b7-14fb-4ae3-a1f2-ff5a73639aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecb19e0a-e1c2-4cf4-836b-0041cc0ba1ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52345ae-1029-47fa-a576-a2c1bbef4b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a1dcfe0-5291-4443-8824-b92eb2138a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c4a3e62-c34c-4cc9-8b1b-6849fd5093ba",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d939f7-170f-45c8-adff-5d51f55800a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e294158d-4e52-4018-925e-69e83b2b8aa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0acfe31-3e91-4a37-9d3e-549daa842cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "11553228-df1c-4264-a6c6-fb28e72e25b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729c74c0-db01-487e-bc73-be1f2c0cd4df",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05abc313-632c-4383-9a31-c93e22efd236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "957be857-c1d6-49e8-babe-dc0d1309481c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be0caa5-aedb-41ab-9a08-ad69d05ec7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab49880a-d229-48e5-b580-e30fc7b7d399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5d0b1d-f96f-4523-924e-6549af7579bf",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f07d2b1a-cc5a-489a-84c0-9df215698c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e3f548b-3446-49af-977f-b1e22bb12ee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb715cda-3c8f-4402-8fd1-34d7d293b4bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aedd5285-a023-4a91-a2ef-3501bfd00927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6362598b-1beb-47d2-865f-97877967d273",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf9d4678-5ddc-4acb-bc91-22cd19172dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eafdbe51-5e53-410d-a52e-338215c71aeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "838302b2-5779-4bc4-a905-6ad7ee2b7305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfe955b7-f63a-44fa-98b6-f5108ad5bd67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bffc1586-6c54-40d3-b897-564cb030a8a3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "385cf237-e0f7-4f69-81b4-25fe19ee0852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "313b5aac-389c-4281-ba4f-b9961899653b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20921bca-dd38-49c1-b050-4bf0453f7837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7a7a43ff-7598-4ca8-b834-f8dfb414d88b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da68f044-5a11-4d24-9309-189d0efabb09",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2bdabe7-0a6a-4629-a353-08f4aacb7829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc354cd9-fd74-4455-9271-69bcc35f57b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de2ead48-459b-4a94-ac19-af69035d00d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "264de27c-7827-421b-8dc3-310be7eeaccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a3ea945-b60d-4498-9b3b-83e538be23bb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebc36d6-e083-472e-aff8-bcd552f2272d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b17e113-63b6-48e7-a204-d71d720d04d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b14e9081-5fe0-4a17-921e-b36df315b22d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef689060-43ad-4792-9d83-f8715874c3bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3203ee25-76e9-4a2d-9de2-d3c924fff9c0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a10bc18c-b0bb-409b-bc52-c8272b6aa230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8c9c108-aa9f-437f-aa42-357a622207dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f954b1e-de14-4cfc-b87b-0d2cf757875d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "90464f61-cbc1-4782-9811-4794e4fbcbc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05506f26-1926-4e99-841d-cc71c075aa21",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44ad57d-857c-4cd3-bd89-2fb61878bbcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25bc66a9-f3cc-4300-9ce3-54d4790d00dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf785e64-6543-49ee-b2b4-aafd3ebc1547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "597b7f14-7398-4e35-9180-5a987ec862b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bbb693d-e2fa-440d-9687-a364c209e802",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "715fc3c5-8a15-4101-a971-458b31ebc73b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c45d784-8ce0-4571-bb6c-2ba45528d187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac346043-7f46-488b-8625-69fc4f07b66d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "07010ff9-8432-4a8d-a964-00787fb55907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534f20ee-c2bb-4996-8f4d-e798e2457ad8",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e74eaf3-c356-4312-9aab-dfe1893f395e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f58ff055-c1e3-41da-8da0-33d0f72db268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a8fe1b8-5e25-4700-98f2-bda0a2e5789e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb4c26fb-7e45-4e05-abdc-b31b5d3f7b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7db1967-dab1-484d-9ea3-381253a35666",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88adef91-2452-43f2-a4cf-00c5dbaa134c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fefbfd51-7d7e-4470-aa38-b2ecda57ccd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e5ba9b-cdd9-42ed-995e-d5c7e8fde63b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dab0471-bb3f-4046-b158-3abeba208dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7862070-6217-480c-9b83-27ecec1cfdc1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e07d88-bd92-4224-91b8-e038a501e0df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d885af5-2026-4f4d-bd5c-218c7e1c7bd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad9ed0a-a4e7-4664-9d1a-8643546cb921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a559b6d4-4eff-459e-b321-e6c3a5be146e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5c5553-846d-4f41-8ee5-2a024a1e48b5",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bbbb70e-4e2a-4c7b-90c0-913d937dc3e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb8bc145-773e-4cba-b021-f617f7f5e9a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b5120f-4254-4b52-a04c-0dd3bfa33e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca51d21d-0c28-4ee6-a441-af8032fe2080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "004c14b6-d6fa-498a-83ab-f126e10aacd5",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d8affd-5d3f-49c5-9a72-14095e16966c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdaac8dd-c280-4890-a794-797b00d23950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5051447b-ac09-45d9-8c7d-bc35cacaa5a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf818ecb-5384-4728-afdc-6a43d5d2f6a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5942a2a0-3b9e-4fe7-85e7-591fcdc5faad",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f62479-f690-4f27-b74a-5b7731e8f2b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "275a4dec-475d-458b-9d4e-0416e6452fd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a82b2cd-810d-4aa5-b637-a78e50869042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85bf3562-f019-443b-bd84-84a3deafc5bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "262cc4a7-c79e-4a8b-8911-99282a4c3106",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c853f0-3df6-4f2a-a669-283b8c1049ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f90d4118-bd37-46d4-a74b-41a22119b429"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8658c34-9f1b-47d5-a0a7-7297af6e3841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fba44b7f-ac6f-4070-bb0c-16f5076714c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f04856d-6ca3-4aa1-b631-a248eaa6b779",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00054c46-d64a-4084-8e88-0e9e784c540a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1e7cbe7-9980-4cb7-aeaa-6531f9df5ca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f16089e-52fd-48eb-8958-422afd1e3e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "407c07ca-521d-4753-818a-deec7ab9ba33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "827721b6-1c0a-45fc-bc2d-c654d7e10511",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b750f4-00e8-4717-8863-9174a2579513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca00050e-53ad-4716-8ced-036fa9df0b1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd753fcc-27f7-414c-90a0-d2a16eb0d04b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9851ce42-e96a-494e-9338-659ed59e1eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7871f35-4b4c-4ca7-8504-5c42778703cd",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0923224c-178f-45d8-981c-f991d01cf0bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cf201a3-4fb1-4cc1-b8fd-5258642d560e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "892489f7-9d4f-439d-b898-96f724d53382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13ea7712-cd57-435a-b380-bc9d548adc39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf88935-5f9a-4cf5-a416-8c0cabc18f7c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd4ea8e7-92b8-4161-94b9-3303d31ad714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72c709fc-0065-4434-8b51-982aacd2c209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3455e89f-5083-418c-9296-8b01346d5229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3317e051-b886-4ef2-a588-cb17588efdff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2919249-e2c0-4d81-bdb4-a488365d607f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae6d40f-69be-4d58-b387-105ea1ad7e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75b11695-9e55-49a3-9606-7fe3f3db2a42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c635cb7-7a1d-41af-9a57-92763d96697e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc3d8be1-d4c5-4248-a713-519bdf0c012f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d0777e-4667-4afc-8f5d-929fa2aa6bdf",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0eb1e43-226e-4337-9f76-b21bdbfcde90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "155ff7f1-0358-4ae3-90e3-5c9e3ebdcad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f94c90d-418a-4d0c-90ac-819adffc3a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71c4d61d-5278-4ffd-9e55-2c00c342d587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7abfb130-825e-42b5-8e06-434da4285ca8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c89291-ed00-4355-8903-e426dc7aca3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5b4391f-d59a-4cc6-90b9-239d3686462f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa3f5a54-216e-4c7b-8732-e323e42375ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01d9177e-f449-47f6-82d5-25bd6cd73ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e703931-b0c1-412a-833e-18978e3d9286",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f837d26c-a9f7-488e-8fd4-5b1f0f998459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc704198-bd56-4833-82b3-663201c00a42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c87ce733-70a4-49b6-b534-b3f1d44f2210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9802b223-15fb-4ae2-b498-7fa9091c0a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dba2efa-c9c4-4222-8298-189acf4ae704",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "250affa1-0d7e-4ff9-a79a-5520112b7bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efaff668-f822-4be0-b784-970f48639627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "305e82d2-5bdd-4d48-8213-a9f7453695fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94804213-cd38-4931-9ace-6bfc0b7bac58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d39c5ef-a994-4343-aa6e-c7bf9938ae27",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e87c345-5336-4ba9-ad55-c60ebc50601f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "186deb3e-6b03-4c51-9759-e6c15a42ac9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6158a86-83f3-483b-8ead-e0787e0141aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb8bbac9-87df-4c8e-9b92-aed90aba61aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b47593c-5ed2-4990-b36a-3ddbd6556d11",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef3494a7-ac00-44d9-8393-2b037168f400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75e3df9e-d3fc-486e-8dce-5ead07044065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c79ffd-37a7-40ce-92b5-afa739a7b32c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69501577-e194-4d50-bc50-0dbb92996eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f4c459-c069-4a6e-af07-58e8ac44d46b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc7a761-a116-46c6-8a38-bfd639761958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de891768-dbec-4b92-a4fd-efdc7ef03ce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "353cce17-3d69-4267-b4a7-edf0a6597f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13d4ac98-bf3c-40d4-8858-571c39d9e288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b193ff28-9bdb-4afd-82ec-a7ab24c87890",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f0f9e08-6268-4d63-83e4-9565fb80cbd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "504a5092-77ab-4964-8719-2c8f5cb4e33d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ea3624-5017-47b9-abb9-48887212f0bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a28ed030-f62d-4f45-bb6d-7b12a5db057f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e65266-833e-43e1-a92c-e89908f79eda",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5812709-f732-4e5a-8ea6-1009f9c73630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "626ee90a-9419-4fd6-aab4-4b9e64f93447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87cf0612-a2b5-4093-8ce4-ea19dd51d271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "541f4915-9a9b-4b1a-9d63-98bb1193a79a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2742b95c-b623-4fc0-9b29-590c20772f2d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "80214056-2d4b-4ba3-95ab-d254887cd1ad",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a11158-7a53-4089-8f16-533d128f9b59",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "afd3901c-b63d-448c-8c2b-21e55aa834ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca02b04-7e4d-47ec-9eb9-0ee888f3a979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7ea3945e-f7c1-4dbd-9af1-0729b951a0e3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c16a8625-92e3-48a3-8dbb-9ebc7f533580",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "abe96b5f-2423-4fe7-a97b-a06f3729bf47"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8fe19f33-685a-4fad-b658-ecd612df58e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e2fc6f0-3bd7-49b1-899d-f08ffb0f3135"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "04253ce2-a929-4957-bb0b-d7eee8592ecb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ffd12989-f775-4406-aa6f-2bf6c69961c7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8f104f96-ab9c-4a20-85a4-80be36f680fa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "39fd96d0-24ed-4b1a-876b-47c47de06729"
            }
          }
        ]
      },
      {
        "id": "9ead8b10-ca2a-49e5-a44d-d7ec9229589e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f912a1b0-7d46-4028-a4dd-bf2c5d67b6dd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "404cdd05-eb64-462c-b9f6-25a72174eed7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "694e41c5-6533-455a-b1e4-c1a8bf40218c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "978a01aa-4718-4bf0-9d4c-7c938a193c47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83525daf-8d66-45bf-8199-f22e8a065c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea7b9e8-764a-4e5e-9c9d-d22c70a3fe54",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec795545-4ad0-4cbd-870a-9a73608a8c8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a662086-0ff6-44d3-952c-76dcb9ca161b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0535b8eb-dffe-4642-8157-d1c099df4499",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d226d1b3-7c72-42ac-989d-0f86a345f1d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b60a9112-7054-411c-b95b-91e0f84ccb34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba55c0e-d7d0-4af5-9514-1c6f1ac357a5",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d3a470e-3e01-48a2-8593-5c0000296da9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76834a63-b7a4-477f-a467-215d893cb959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3ddc96-b355-4202-ada5-ae2eb1bbb1fc",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f10e25a-1787-4248-949a-75f7f0100093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "123814b4-a0de-4097-bbff-0c2da06de910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba6da07-9a59-4847-a114-566fcb85c7de",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "228a1c98-168b-4628-bfdf-a8a3c73eceff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b36913a3-7f63-4ec0-92b6-c1976333632f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9f9635-4aa1-4264-8de6-df9115448259",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff281013-2e8f-4f8c-9881-c2dcdcae167d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "834759fa-9cd7-432f-8ede-59e3187b8b4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "834ee093-93fd-4ccf-85ea-3d166faf178d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62e2a7e2-cd79-4607-8d31-5dcafe727bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "172c6181-0012-46c9-ad25-f0f3afebf7e3",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae6ec496-1982-4a50-abbd-a35e82c0b9b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e074208-a4f7-4f9c-89a8-addf5a33bb45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d910c4a3-151b-413b-902b-88fa82e1fe97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf7dda90-e265-4305-a340-fe6218a52048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2142cd-d21f-46cf-889c-3990f7195d7f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdcfc464-9d84-474e-a60a-a176bd87923b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2b1771f-3a19-4dd4-9f4d-126186fa88c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "841e604d-8f3e-414d-8b8b-6914749f00f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4124b586-5684-4f51-94d2-45d5c0776cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2513fad1-7b06-46b9-8907-a691a6bbdb8d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "305995bd-cad9-4ced-85a0-6d226d3091fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a5606c1-97c7-4526-83d1-9fd37a30bbd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60544d73-2d2b-49e6-984c-d874950f91e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73a4502d-b6d9-4733-8d51-61bed6f5ef87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88bf8c7c-fc4f-4a2a-8271-6884ca5109b1",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dfbe025-4621-4cc4-a635-3a4efd573c83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9501c803-9033-4699-8929-55759f3bfc7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab02dc7b-c558-489a-9f8a-4760dc7b05c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d7b16b2-94c6-496c-b332-2036af02b917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27bad2ca-2f68-4bd1-80cb-80b0f4c560d0",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd78ac7-2fdc-47f6-8ab1-75d38b5f4eef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "738361ed-9e35-4044-b4cc-33ec0390cef5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef20cc63-7028-4c3d-a80f-1d1b4da4b538",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b8ab30d-7263-4b2c-8b74-304c407cb04a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56444faf-57b2-45aa-9d29-9fcbc58ddb96",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6c8221-2757-4041-bc22-6138703bc58f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc1114fc-bd45-4169-9251-6572d8e21785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42663b28-a5d7-48f0-9647-a44331deb2c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06d3f27d-ccff-4e91-a4c2-31aca07a1a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e94ed8-0192-4a31-a0ae-f97c55daf62d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e50763-bda1-4477-a13d-946824598642",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfdd3b3a-01aa-4bb2-9113-4bf39d9a787e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7abf19-978d-4468-b080-b053f2c95e36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9995ca3a-b3c9-44e4-8e79-2e99bb329c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "454cc0b7-a221-429e-b984-a0485103b67d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a75c7b2-5311-4f84-9939-60e31fbfc483",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f014f9d-c73c-4965-a2bb-2c890a30d474"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac122de-4d5a-48e1-99db-4478d5164a31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "debc9f32-cb38-4f39-a80e-3e357948f2f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "094b3f9c-2795-4b65-93ff-5a2e81e0850f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57720998-3bef-451a-88f5-448c617cc252",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ffc9010-d657-4d2d-b90a-3f80968cdbf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e3cac1-7064-4efe-bee4-9e718e6a37eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b2d2d3e-4e04-437a-bb98-6759afa1cb2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca8b302-c95f-40c7-9e23-7a0faf05563c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f209696-5632-46f1-9328-7e3b1689b963",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a4667c1-72a0-4969-9cd7-63e29c8d5df6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f0c19b3-b0b4-4a0b-8d5e-7c1ebc045cd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca6317bc-9351-4de8-b240-a1657d055ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a3ce5c2-d699-44c6-b52d-3cea13253ea3",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12833b1a-1986-4d59-8be2-0e7e62d59de4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60c28f8c-14ac-4336-8a4c-5fe864c7bf20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "249f8c73-c13e-47b3-acfd-7a13201383c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ff713ff-68b2-4531-965d-af28f5a7a60a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed05a03c-2e08-4a93-86a5-809655a08219",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d593bf-82c1-4a2b-acab-26007ecb83e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2fd97d7-bda7-4f59-a5ca-ddcfa71c0749"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6889eee1-f152-49eb-9e9b-680c2f5bd49d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75da245f-9b1b-4e9a-af70-f1cd1dc864d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0fe93d2-9e8e-409b-892f-bebd3f551f92",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4099748c-6ba7-457f-b6ce-3986720997da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbacd64d-7a32-424f-be6c-1d3d15e5470d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "420f53f3-5232-4067-bb18-b81b5d3b9710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "663000d4-86fc-4c04-9f1b-7e306319f996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a54ac4-d151-42fb-84e1-b1541f43a487",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3465d6b-8912-4de9-b6a2-05ddf52f0521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5beb994-65bc-4476-b8fb-b0d6e5742b9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4526dd95-0064-4822-9183-b3837f163ed5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a271c2e9-f9df-489f-a853-d6cc0b093e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871187c2-fb94-4c2e-bf9b-9e91fc768be9",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "374d7f23-c1a2-46d6-9635-bc9f9888ec2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85666a0a-4eeb-44a9-be25-68c668e2b238"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b365246-df7b-4416-a5fc-944225f60488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b72c5f7-e827-43f5-af6a-f66f800602bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96898dd2-9870-4d18-a9cf-622c389f307d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f6445e0-2ba6-491f-9dab-cedd737b86ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b179aaa-2ba5-4923-8a83-80a78dbbab2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4892956-f862-48e6-a50d-7e148ca41f9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ba32cf7-6a06-478a-b69d-d12a67b05248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f1a4c05-3ff5-4e68-bfbd-6731ed116230",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f321bd-b27d-46d0-a5bb-b9822e0a2c66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba6abb79-56ae-430c-bc71-8768be4cfb9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd3d47e-7c82-4835-a0d8-a2c12c0d3e75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4a30b16-d8bd-4f91-8be1-57d22841e9b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "496f7575-05ea-4651-ac8c-42da53cede0a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389a4ec9-a60a-4868-ad3f-d15a525ec623",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47a67418-3563-4bbf-aed3-22c79ad2d752"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30063f17-add2-41b9-b88d-2fe4d080d75b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01c5294a-83b6-4c06-ab23-4810a5e2d723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba0374fa-f502-4483-b41b-919072e19365",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcbf8013-a568-498b-860f-5c0522ae0c01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "334451f2-f407-48a6-8472-d6f9d111f0b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49cd0311-1d8a-44d1-9018-1d6f1edf0c3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fb47269-12ef-4e9c-b710-e2016ff03e77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf57fc4-2095-47a6-8dd9-9c5266b68493",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeda748c-7c2f-487a-b65d-cf7cfbe5bb00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb2f64de-b1b3-4121-b8fa-5aca49ba82ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f8ce99-8635-4442-92fa-c18470a32be6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6c9bc48-cc49-4b72-bf48-ef7c68afb8c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62499539-78a1-4585-af4b-a4e06c248db3",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "592188ba-f168-487f-a533-b6015f70e6c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2d0c44a-59e5-4177-bd7f-f2693f66470d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83aa5f9b-744b-4101-83c8-6dd859cacdd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b085079-50c2-4f20-9c86-b88c9ab7221c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05705387-9096-4a00-83f4-6b699fbb2a45",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09716330-059b-4344-91c7-04c9fbee6004",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c93c9b5-0f3d-4103-8e53-527263ab7c85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94d6d71-876e-45c8-93b9-89d2c98a0358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d38f9698-63b5-45de-90fd-b8e8d073376d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c6d56d-f8d8-47cd-9c73-60a53ca33a60",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f4502d-925d-4d3e-b2ab-ba7950b70f18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e53f70e5-67b4-4894-8174-bdc1e05bb105"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "741ac90f-8bf0-4257-a184-f714af75b7e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b079c23-a10b-40e1-a8ba-aa772cb183e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a52a815-904e-476e-abd3-c65b10328f6a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f73a6b56-e44a-4b28-810a-f6239a4788fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bf6a8f2-1d20-44d5-9558-cd1f1947fe10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "518d7d80-22f3-4b85-a058-96ea37b1e27b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1d7c10f-816e-4ddf-8791-14bed91db346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f0a3df-b4c5-4267-a399-17bb3778f04f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639a9120-08e8-4a66-9587-650f2a7cd967",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "059af2a1-820f-4c97-b757-d95e8973bb3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "953188f2-2447-45d1-b89a-766469e8509f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "250c1d36-2add-40ca-8651-9a7c10b89d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a35b9e49-5b46-4478-b562-730b2dd6e614",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "368c94e9-a5bd-4b3e-a9d7-81d09a795a90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e386c8e3-7ccd-42fa-92c3-7f06b2ea4d04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "645860c7-6156-43cb-ba9e-6854affbd601",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09ef6d11-04f9-452c-a6ef-6a034ab6a493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c7eaf6-30f5-4eb7-ab59-d4cfb806e0b2",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c2be6b6-fa95-4657-bf00-17e61d582f99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb6d6a6b-0534-4611-9acd-62be4c27e94f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d3feb2-3825-4f24-af31-a66be9b5fee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bd76cb9-2505-47be-8d63-58bc5990689f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41e15b5d-8b67-43ca-b445-fb1e8f2c4656",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "127c2740-307e-4016-9653-d9a792258912",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b8f5c47-1e80-4b24-9121-887eb89247dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f13d2b-94c5-4606-b508-a99ee15de645",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3dc0c80-2e55-44fa-8b63-20ee16c693d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d24b2d-c13c-4976-aeab-48d1f6fcb177",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f7d00d-1b83-45b7-b478-a554262f8ad0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44ed49e5-957f-44a8-889e-e430e1bdc358"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1c851a-0886-427a-95ef-3b5c6ed4ab67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "119f69cf-4016-409c-8761-bea27b9bb792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0363341c-e91c-430b-8d16-7a31c526728a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44899f6c-46cf-433e-8b19-cd05f591f534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad89a3b-567a-4505-b98f-56101d892e36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c84c74c-60f8-4306-9427-821e33ff3b09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63fc9ee0-5d24-462b-9e90-a54dfa6ab5dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36324e14-00bd-4185-b003-a697e89ac92e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e9cc32-fed0-4fa3-925c-b87529a68878",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0068790-2b51-436b-af33-fef01980b40f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f503cd1-419a-413d-9b98-a025b542af28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3c1ccfe-0b2d-4204-a76b-9277e75add15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b956166-5c2f-4caa-a21a-ca4ecc26dea3",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6003025-019d-417f-b14e-6fb66ca965e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa3b5a29-11ff-4ebb-a129-9921efa44520"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d60e0a0-81eb-4e26-95a2-acb2ef494f53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c73c9c74-ffb4-40c5-a3fd-1d015d3af797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5b38e4-0372-4107-b4dc-bd499e449529",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd8cd09-c42e-410d-aa05-34aed816625c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5d02a08-1b45-43dc-b19f-ae66efbf161c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0a9eb6-6957-4331-a90d-4f46a71e1bee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3de812c5-249a-4671-94b2-40d69815b04d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca04af7e-3d4a-4218-acdf-3ae21845d17d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8498d2-e6de-4b5d-af05-7aa76fac17c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8733432-6d0b-4ac9-a89e-5d8e884523a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7691af-fe19-49fe-90de-4f1c4c948808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e8246b6-47d0-456c-b65d-02ae54c57d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39aa5d77-3866-4480-b308-7657f4f43756",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af847fe-564a-494d-b5e8-71fee2399a46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "816c75cd-62fe-4a20-9fa2-b650299f47a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "518f1166-e116-4f5f-9ce2-541b4e4d5fd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53cffbcb-9420-4834-ae82-63d39a97a9fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f32b5c2-80be-4a40-b665-e7fe0ddeb6a9",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f5b2998-f28c-46ac-8224-57e5fd880cf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62f04f40-c7d2-4dda-9bdc-16803a84ec85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46906235-36f5-411a-91c1-cd14639d34d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02bb624f-ef43-4c87-a333-3d3c16e70e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5235fa28-f70f-4eb2-95e0-54cc442eb24f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05248ac-a621-42da-acde-ffc8c134f69d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e02e553f-3a05-4bd9-822b-a9525982660e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bcc2ddc-85fb-497d-b41f-09927c23e2d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5631f616-ce17-449e-929c-38c04a478b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85210594-d8d0-4d85-9658-aab20f54c3aa",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec10c62f-f931-4475-9fe3-9b45d57e9c3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76eefffa-5398-4eac-8620-39e9d013acee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae82d37d-478f-4ead-b3f7-f40d12b14d82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "790d7347-3a89-4d95-b8da-11bc17f4290f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c1756f-3b6f-465c-9db5-b6ebd1693e52",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0f26ea-5d99-424a-888b-ff701566d628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eea0c682-e91c-4c4e-ae55-c31b45f6005a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbbb846a-7ad7-49da-bf09-d4d54a8be9a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58f98a1b-57e9-45c0-b299-6cbd2d9caa59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc0b2308-0462-432e-96ec-a548513f8dd6",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db47667-e4dc-4f8b-9267-819b2d587bd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30350be3-43d4-498d-8e92-ba61d693193c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "230d7412-e55c-43c3-8ba9-4779fe0ab54e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3749794-c66d-4df3-9dbb-c84e456b18cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c120736-9faa-4cd4-823b-ca4ca0fe291b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46853bbb-c18b-42d1-a3f6-2b36be455489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "903ef96c-e3d2-4fd4-a268-5fa6d753636f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fdaefad-ec8e-414b-b715-5af4d75c0c19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cfe264e-6af2-467b-88da-ac557f5d6cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa8394b-ca86-4a71-9c5f-8458b3703ed5",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f42602b-a4e7-41d1-b380-91e52bea9cb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0794149f-fd3d-432b-9c5d-d00c85146d3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b47eaf-9a9b-4783-ac5c-fb0dbd7f9b29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd5f4a2c-3b55-4f0e-9a0b-b1d432253b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e5817b-1d33-48f9-acfd-46f723bc68b2",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34753a5c-ffef-49ac-aede-2aefa999a32c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e2365c6-37a9-4159-83fe-2e2898c5d54c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94422a18-cea7-4a59-a0d0-1898d5adde05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97ce78f0-a6c9-47fe-8d83-8184003edf41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a876e5-e257-4e51-84b6-692e9a3b6d96",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a99ba430-bf11-423c-8d7e-da96f2970312",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f3b3816-da79-4166-9c8d-bdc10a4ce539"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c7f0aea-9834-4a80-8289-351ae55b7e4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f918ac67-8a48-4f00-a42b-5f131bccf46b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "819cd38c-9a48-4dfc-a0ef-4674717e6875",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdad3ec7-d425-4ef4-8ee5-da27b2777e4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "203d1b61-1c2f-444b-af93-6c61ab989d84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "786409a8-391c-47b1-ae7b-0ac8b0a54edf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0098ede-2c20-4c0b-9eb6-3c7c9d56d747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9667d1b6-ed76-48cc-964e-0ce7d312d3a5",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe080e86-f1ef-406c-8ebf-2c8fdc411fe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d72f9455-1916-49de-bbb2-fec95c57f2af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "875af9bf-8b68-460b-b65c-bc00448c50e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95ef81fd-c1b5-4da8-af2f-7c4b94838c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac452089-afbd-4f90-925e-fad4da9e759a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e18a706-f919-4add-a759-642ea0549120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0239cdc-fbaa-4766-9fb1-c13d4ceae70a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db928604-df39-482f-96a4-ec8dc82766be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba6b7e07-f810-490a-abbc-4a7d360dfe0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f754b6c8-5432-4815-ad0d-868a5fbfb228",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a31ed877-56b1-42b4-8a9c-994e903010f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f1dbedb-af94-42b5-b62b-5044acdb906f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f945778-631e-4636-b45a-602c044fc240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef96616e-3e69-468d-a536-2f3daa2ef062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb2f072b-c4b9-4f02-832d-05e469304256",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0482407b-1008-471f-ac99-082a75797f5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a25a8f54-b9bd-41d9-88d3-755c06e376a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e124075-610d-4883-9689-ab28ac787795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0bde833-ecd0-42ed-891d-a61d4d0c91ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04cbf77d-3305-45a0-b5df-6e73b09e238d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca824787-a2ba-4dc8-824d-828bc2bfd457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2768ab0b-cbf9-47f2-842a-849a1d918f89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b53498-e6b4-4a37-a2dc-383f8c305ab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "802cd089-2fb7-4673-8e39-7a6673bc53b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7269d2b4-92da-4063-948e-27cc885bb2bd",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7190d7bd-c837-4df1-99ab-836609810b25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33948a5c-868a-499f-85e5-494041e86524"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a035d4-a66a-4364-a352-f9923d60cfcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "723747d7-0b18-4af5-83ff-c2b40c88d783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac2b529-ef4f-443b-ab90-48f4d777509f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe6c6270-aef0-4278-8ceb-b5d90f4cbb15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b42278d8-180a-4e62-b90a-6765009d4c13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6b3f678-b2d2-44f2-a7c8-0e3d53767d86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aade20e8-b60f-4b08-bd25-07881824d18c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f5c66a-22d7-46da-8406-3a66cf5df647",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff02e96-792a-4170-be36-3088338b15f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4e1f1c2-28ff-4df5-a6b6-b8dd9b66edb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b950a168-9e95-42c4-9326-a3234dd92c21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "685e9236-936d-42fa-8ad8-440652905cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f24d7b-6878-4541-9920-5c065ebcdc86",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "762d4329-f9e8-4384-a957-399d9207d4ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2386dc1f-cc75-4c98-bf64-3742deb895b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a89cf93-7a1f-42d7-8eb8-85c457916322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a128a265-06de-47c2-a9e1-2a5c0fff973f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b26261-1935-44b7-89d0-79094cfe7e33",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b33347c-04f7-4509-8507-1153d3912887",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "753095f2-db50-416c-b6d5-464be8ef47a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c230d047-90f1-45af-a0d0-902b18a140b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85b2e326-9aa8-411b-8881-f1fd2c62d108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d347a982-3787-4fd7-94dd-36c473d13cfb",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c865816d-bc20-44dd-b678-e9941026f20a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f06a16b-68d0-4d7f-bce6-285bb6dee565"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "466f6df0-179d-410c-88b9-e3e936916665",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35bb5a1c-d3d3-426b-ba7f-a2b2293ca2b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ba5abc-a67c-49a2-9efc-f1317a9de02a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a13f8b5-17c7-4637-8509-e9c6544de3af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78801b35-6222-4483-b789-d4243d4d3eb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "930d44e8-6d0a-43e3-8e9a-f59351978cda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49a90aa7-3fcd-44cd-bc70-70db9a4e4a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85beccc7-eb8f-4656-8730-6c93b8a97416",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edddad70-f869-4aa7-92b0-79fd1457ba92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80e90f60-d79f-494f-bfd3-43a8b24248fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "114021da-539d-47dd-a18d-bf6744a8d408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b24654d-ee6f-4d93-8d6b-666da77f5f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c278b511-68b5-47bf-a4ee-8f3c325795cd",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f4a241-06ff-47b4-8966-60355ffa2f65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae1d7a41-06f7-40ed-b9b8-45bce99f8ecb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "698dcb80-8417-467b-9475-fdbe38191388",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e977bbe-ec25-4684-b510-078bec6506f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "843775e0-282c-412c-8129-742cd8d8094e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b617f5e1-6b24-49b9-9c48-cae2dc1c181b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f1938f4-0553-4eee-9bed-5b5f40704ee6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f252b88c-cc6e-4238-b44c-74d8a6e2eebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8244d31-529d-4b3f-80b6-7dfdf663b6fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9168e4c8-e1ec-4489-bc26-43b33525fa75",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88fde868-2057-4de0-a7d6-cdb1f7e6043a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8f2570b-2b5b-4cff-a8c3-2ace04f9b420"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73bc5c05-48c7-4072-9c87-48edf92103f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f54cfe45-aaff-4def-8b86-421a39fdadab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e61de1d8-9bd2-46b5-8679-049fd19349a9",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe373311-1f14-491e-88f0-f11e849fca1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d37fca6-f2bf-4c3d-a1d0-f33491406ede"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4220f58f-17fe-41c6-befe-3f593831e8f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe030fd8-0ef2-43c5-b9ca-6ba2df0290d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68796c1d-91e5-4c0c-a9fd-b818342756d7",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29296ef1-6fc6-47c5-b0b2-c3839f6eac4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "371f44a8-ba75-4191-a626-177fd20b5aa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2a5f56-bece-44c1-a3bb-68e90a3e4e75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce1111e7-96de-41d8-b206-8bc3ea912603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1b0ddc-aced-4045-86f6-595a6c89af65",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d722c53a-167a-4673-aea9-1d39b88fae46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ba5f862-3b6e-42a2-857e-9916c4714505"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92599db-ba60-47ab-8b93-854458058b44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bf2d6ff-eea1-4bf6-96e9-4c04e77730f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe7bd4a-0681-444f-a1ba-bad32748e09d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c7be573-5f91-4f46-a6c0-738433dfde1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "732cb1d1-7030-4a77-88b1-15ca2d5c753a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "773db5e0-8d55-4e80-9e18-87286d50a95e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d89b43d6-ffae-495a-8b47-6a5274593ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f10692-8921-4d06-8a51-ea7650453a49",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de018821-959c-4a9e-b279-bb4561879097",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcf83207-4c76-4326-a052-573d91d8efbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8997d423-2477-472b-84be-65265cfbd21c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9566b251-d9f7-4ddb-a8e4-067e7b5bf78e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f9522b-9b4f-4821-86a8-ccf8327bd9de",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c2460c-312e-453d-ba85-41d24186973c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35040a1c-8a53-4fdd-96be-540486928707"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34fb6cf0-69f4-44d0-985e-aefd175ec220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3000adce-fdac-421f-b546-35e26c581c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "985cea30-b115-4f5b-934e-bb2b43302d8d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe2ac45-57a5-41db-929f-a7cbc954954f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59a2a128-6f1f-4723-b00e-7250be80e3d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc485714-0f71-419e-b6c1-21cbd9dd6ec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bd35cd7-742c-4b94-8655-ba1025d147b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c41db55-1e75-40d9-a88a-ac08c4d7158d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63fea993-0708-414f-b8c3-066710e61f44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bbafb2a-a2f9-49e6-bf80-b59ec1e70dcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "299691b4-c9ba-449a-a974-a85f0496451f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef6941a1-b9f9-477a-b295-0ed9750133e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dbc90a7-bcf4-4ce8-9a55-93abd6417c38",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2697d16-516e-499a-adc5-a5fec0011755",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54d792f8-1efa-4004-af6d-58e50f086948"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd52f3f-809b-4bda-8b82-449164f4aa80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e92a2d52-a37e-48cc-9758-d4ee54af8ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4939eae-dc9e-4689-9181-c768ca42379a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37dbd9c9-24c9-4896-91d7-fb7043fd998b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68fbe74b-3662-4842-a161-de38c0588e8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26bb82f9-b0c0-4d62-b9a0-6a65edcf2978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b56ac437-67ca-48e4-8277-ce49892911f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a7f78ff-aa65-49b2-b101-a4a8379cc68e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a74a9c-2587-417b-8657-75b3df91eefc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d1b44cc-bee4-4bc3-9c16-a2b2a745fdab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c7ebb5-c7c6-4bdd-924c-e5732b57180e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a723c634-f554-4431-8468-f5a15f9f9067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb8ff9cf-340e-4055-9c7d-70cb973d83df",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ca486d-ee4e-4e2e-afee-722d1e267979",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e75efd93-0f46-4d32-a4b7-57066781a4a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8caaf4b9-7757-432d-b2da-6f5ac67cf9ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02687bf1-5a1b-46ed-892f-01e4af0ad169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1715bf55-5088-47c8-84d8-586cdadd49ab",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf9a2a08-1cb0-49c5-8bfe-761a4f4b8499",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7986572-2472-4710-8072-0925b7232e2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adad3388-0cac-4dbd-bd3a-0c1da7e47205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "342eaad8-b8e7-483e-96cb-e8ff26c7f1d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7842f4c-b408-4b0c-98c8-c543cf69bbd3",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a35d806-4e3f-4bfd-b89d-e2cdde0344df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfb87bb7-4842-4752-b04b-ea7095b4b527"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b037834-5a8f-44f9-bc60-705c23d6f096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97c85203-38a1-4435-9f6d-f79619b3d971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c66e3ba1-561a-46a9-9316-3d44f6438fc5",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "638431af-7125-4a61-ba22-3215ba80dd8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb326c1a-baab-48ad-82f6-263b704bbe81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e81f9be-948f-4c6b-9bc6-9dc23c9c16f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc63a970-5a0f-4935-8950-50cd85ade85f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25746b9-eb61-4dee-ab4a-516447d0bb2e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d797266-04c8-42b0-b294-3bb5818e72aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64b2defa-b078-4a2c-ba65-8e8d34448711"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7572d90f-6467-4c39-8b7d-5a312385bc9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fef11b83-f959-4186-ad1a-59d219e67940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc6e0586-bcfe-4fe1-856f-96c015ed3e12",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c25abdcc-9a5f-4c63-b07f-2c2e0ad6340b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f87da39-e517-4125-8b62-30304988b3da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d3774f-160c-42eb-832d-6992d46a17ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cba2b39f-aab2-4a4e-8598-115b95f70fb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b8b5f09-8eb1-472b-9f88-a25da8749c70",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c5ed5a-ca56-44ee-a4b6-c3d20c13f605",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4067b9de-c43a-4ffd-b167-89e1913eac76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba55088-10e4-4e4b-8845-40a19de14eef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a422668-8c66-4cb2-ab87-e7a824fc8640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1be771-e8a6-4a31-b5a8-252bf71709f2",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2efc35-e85e-45c9-8bc9-d2d6fc9d1252",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "245891bc-aec9-465e-b0c0-5ddb6d34edd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3706bd87-82e5-4e50-8992-ed11f7929527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7f02f22-8432-4b6a-9045-5169b5ff9cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae78f491-dc7c-416e-b061-0f49a11d80ce",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a3ce05-0ee2-4445-af5a-17e9a10fc1db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b9de9ac-b2d5-4226-863a-1c49c3a7fd39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45447386-0247-42ad-afb0-11db88392f77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86d4f9c0-7f9c-41eb-b634-9d12b8f1fded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff3c965-480e-40f7-9b1a-37822507a596",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d150db4-1080-4d35-98dc-3d2bd18cc984",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc551b11-2c30-4509-b47b-10e1ae6b041b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de73f8c3-6668-44ca-b4c8-99b4206e7dec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5933051-f85b-43da-970b-ca7cc8cebc49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20dc884-ccbb-485c-a10e-10fc51addba4",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14303c73-3273-4ebe-93f5-e68a85937fe5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ec1032f-bc1f-4e64-a92d-c68495e177a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "625b28e2-34e7-4c2d-b9c5-704101c9714e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "088fd52a-6b21-404f-ad7e-765e456a7104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0387bce8-0942-486b-8bc1-d638698ea51a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6fdf600-7672-4de9-bcc3-320293e8e7b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13ae45ca-2bc7-4eee-96df-68e50423510f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83558b09-cf85-4867-bef0-e5cea1c49a7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c9c622b-ec96-4a38-a07b-815912782627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5593670-7fa2-41a4-90f1-61effb99ce08",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e46b61e-860d-4568-b162-f3166d2a726b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b865288-a860-4223-abea-1acf5bb6121d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ffd559-e12a-46be-a70e-4c5bc5de41ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c3e54c4-0f4b-4402-8cb7-deb03d93c55f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f803234-aead-45cd-8bad-5f45dc9c83c3",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9139de59-9134-4ce9-95a5-e8d112d0e064",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3866fe65-5216-47a2-8725-5e7bcbb4d436"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e80da4-1988-45a3-bde0-1d95b9b55fc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2349c96-d4dd-49f7-b91f-c4cf7253d954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07cd32fc-7853-4c20-a731-6ceb22c3d6c7",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63aef7e9-3eb9-46ea-bbf8-77cb6fa42c15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06335d7a-1abc-4597-b7d1-9403322e7448"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb39243e-1d41-4f45-b7ff-cf396882a1b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d3106a5-a6f3-423b-ba97-9a0348520f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a6302a-894c-469e-b197-007422c18e6e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "652295d7-26fc-4ba5-8ee1-86460cc8455f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e48e4e7-160b-40d4-b6e4-296e208a8ffa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc015a3-3f0f-4091-a0c8-67b6e5cfe6b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6948def3-77de-4346-8ade-b5a45f40b37c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b189fc4e-05f2-4d8f-8125-d1c02249194e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318f4989-1083-45ab-9772-87a835347dbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "778ae61b-7461-4e00-b45b-9d692bf55f2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42470de6-2b3d-40df-9c8f-d7b0d81522fb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9faa10f-425a-42d1-b0f1-c9de00ad4a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81835e2f-db0f-4062-9bb0-89ac39de0e06",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e1753c-68ae-48e5-ba09-4cb0b379ddc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03e5f35b-8a34-40db-9da8-069c60f961e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e921f1f8-1541-4e09-b2ba-75e80345d547",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2881e929-7c4b-47f3-8fa8-3c279c8888e9"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4af439c1-e87d-4f9c-9706-4fd004526d61",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "99a93d14-84cd-4bd0-8f2d-7d31b29a087a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "02a6108d-c682-4114-9a1d-47e31891a0c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dfd74dbe-e8a1-44f5-9928-759188c3212d"
                    }
                  }
                ]
              },
              {
                "id": "660cbf60-6a3e-445a-b669-6ebec6205637",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e0d977da-9e0a-4b1f-9793-10f215a546a8",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8873798d-2b97-4eff-8842-1cd8da127e39",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "6f37b5a3-ae0b-42df-a229-1c9aa9044f97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca62d5bd-ac1c-4c0a-ab05-4ac07c655c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1da82c02-c946-499d-b2e1-42c8034fbde8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2c12955-a2f9-4e6d-ba38-540700982d8d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2deb8a4c-57ca-4694-998f-ad448f552668"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8a6badf-14c8-420d-aaae-d3f3eeb7d2a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8bee219-7e0b-4235-b925-915aea66d9e6"
                    }
                  }
                ]
              },
              {
                "id": "d8e1e57a-7722-4a60-9f19-d5c9248d7146",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "49dd6d45-a61f-4241-8364-e368890ef6b3",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77f7021-8fe7-4460-8177-6267c69d2087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a78e9220-81cd-4f12-b30c-2e4a0ed06325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda29ed2-c3e2-49f7-8709-b2a9a5cd9e1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8604c882-1414-436f-8538-dcf1f658a5dc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "882db946-44a4-4e8a-829d-041a92599424",
            "name": "Positive Testing",
            "item": [
              {
                "id": "36f17791-2db5-4e78-a684-bfd8a80fb828",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "00f6794a-c77c-4efe-9a93-67ef5f3ed5f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3b9ed4f0-34f1-44f3-8bd9-7627d5f36d34"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "879d5880-ea2e-4772-8c3f-e85644184a91",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a5e231f-b71f-458c-b2b6-c99abafe7fcb"
                    }
                  }
                ]
              },
              {
                "id": "fb4950ef-1da6-4bdc-beaf-ed495abb236f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "acb2bf47-d5f4-4502-8be6-26de428ceaf4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "083ff7d1-e0f2-40b0-9020-b525fd7e9588"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "60bbf6d0-8672-494c-b703-6a8743493b40",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b90c892-b51d-492e-83c1-e5097df8bb68"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c33064c5-babc-45c6-ba0f-1c93279d4fa2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "00819371-62c4-4d65-a57c-27344c62fbbf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "591c8a4e-d61a-4134-a169-6268cb654c7f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e6ba35d7-04c4-4406-976f-a33038528759"
            }
          }
        ]
      },
      {
        "id": "7a20c628-3caa-47d0-acf2-8e892c03006f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "3da250f4-8287-4744-8833-94fe22abd9f6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8a97440c-3a2a-493c-b8e3-b794ba9ae345",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d93a1ba1-7013-47dc-bc1a-e4e0c8dfa9cd",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7d9daf-3e28-44dc-875a-11d657dbf404",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "001584a0-eeb5-413f-9626-36428e21a65e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c116f53b-ae56-4864-bb72-beaf3b45a141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "98291545-dba6-4105-a94e-f8e3f40ff080"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4208e793-44cb-4d52-9b45-2a432b0ff560",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "226d3ec0-6492-4a11-88a8-523933ad1097"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b66312d4-57c7-4ead-a375-340f391f1877",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc10c78b-1f2a-4027-bb67-5bc9062ea409"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0ad8968c-cf59-496d-ae95-ca04e1cd4a7d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "6a86d54d-cb2b-43e4-aeea-7675d951d45d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e98f503-c42b-46fa-8545-4656d195c6cf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4e2cd7f2-b9a5-4bd7-9bd1-afe9599ed573"
            }
          }
        ]
      },
      {
        "id": "2fca357c-9b1a-4c3a-a247-448c0ce9d727",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "425cd020-9c60-4c9e-aba3-3671c57a0fab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ff4f892b-47dc-4e41-acdd-2481042b3b60",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e2a96afd-79bb-458c-a15d-0d4467b36c5a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f7361b-e0ac-4ddb-a493-bc60e886d476",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ac13d75-e8a5-4099-9f0b-aba028e516b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a672bb3f-2986-40a2-8695-d0f61cda8a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d7894b4-64c0-45db-a7c6-000ed9783d98"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1f642a5-88c3-412a-b7df-0c196c73a8b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86044954-88e3-41c9-b76c-7f85d0c913f7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "27c9b9ad-fb99-45c4-9ea3-060b8d086718",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb4e92c5-2300-4144-bfd1-0fb8f9b5b0bf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "243a385f-a6b9-41b5-a5f3-5af478899b95",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "01f4945a-4b31-4e97-941e-a963bf8eee22"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "434e1ab3-0972-4c5f-a98e-bbe1fb27df03",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "93feab6c-e96f-43b1-a995-4ec6d4183647"
            }
          }
        ]
      },
      {
        "id": "f59a8e70-4c7a-45fb-9485-8e773d75dba9",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "56f51791-9f36-4b3c-8599-aa1f6380fd2b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4c403c6d-7536-413f-bcce-75d502151d2d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "27bf3e59-bc83-431b-8560-c9a36393f574",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b53606d-3e5a-412a-9d24-102558571879",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17e935f4-b270-4733-8598-7346c876cdc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb87234-3398-413e-9944-58bfceb727f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e501da97-bc63-4afc-8a24-cbedbad12655"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4954bcb-27c3-457e-a7d3-b763e1831ad3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "974cd5c8-e8de-47d4-869a-e5f1e0ab3294"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d28e0619-f602-498b-9636-2b24ee1c4544",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3cc633ef-3729-4f71-b26d-127e8b5df7cf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2b63f5b0-d413-4ac0-a94f-0055a788da84",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ca274669-191f-46d4-8725-844e4546a7b8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bfeb6796-bf8d-4d8b-9b11-985f9eb2695e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f1df9b8-1cde-4aca-9796-0874cc6ba56e"
            }
          }
        ]
      },
      {
        "id": "ae773422-5560-4142-b352-86c823baec1e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2c5e34fc-6aaf-411b-8c2c-75ea0f1c7b5e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "808f2280-f040-4e23-971c-0f7afbf49c8d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "2542f9c9-f5fa-4d3c-9d4f-466a903da0ea",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2527a5b-9d1a-4cb7-8e0b-0152836e1b09",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "23009013-323b-4ee2-a177-725d8f9b40aa",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 187.5674603174603,
      "responseMin": 8,
      "responseMax": 10749,
      "responseSd": 789.7244140907694,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1717893724677,
      "completed": 1717893780368
    },
    "executions": [
      {
        "id": "8137be76-d254-40f8-a89f-353fac071ee4",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "af38f901-6cf2-4e6c-9147-3bea414cad0c",
          "httpRequestId": "bea90a14-d2aa-4d4f-9fb1-45c3afa84eac"
        },
        "item": {
          "id": "8137be76-d254-40f8-a89f-353fac071ee4",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "fab5e96d-ec38-4727-b6ec-c200e10d17e5",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 0
        }
      },
      {
        "id": "b4d110f8-5e14-436c-8943-699ecc746d99",
        "cursor": {
          "ref": "a7105864-8340-40d9-9692-d4e4a4721281",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "539f28f0-2740-4daa-b86c-51ebf2e1bc64"
        },
        "item": {
          "id": "b4d110f8-5e14-436c-8943-699ecc746d99",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "918c85a8-36cb-4ecb-9dec-cbef0140ee2e",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "0e6ed213-e5cc-44ff-8e6a-4fca4f46730e",
        "cursor": {
          "ref": "2908a531-9499-42f9-b233-4ddd9812f06a",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "259975ce-1dc1-4af0-b0d0-d0c7f6d383de"
        },
        "item": {
          "id": "0e6ed213-e5cc-44ff-8e6a-4fca4f46730e",
          "name": "did_json"
        },
        "response": {
          "id": "861ed327-85e2-4b47-a976-ae49dbcc5fb3",
          "status": "OK",
          "code": 200,
          "responseTime": 303,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9012f771-2970-41bb-9f8f-01b8dbba3d62",
        "cursor": {
          "ref": "a3e7817c-a8be-432c-8727-1ec7fa9d4e92",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "88e17379-aac6-4dd6-8ff9-ac0c4a5eacfe"
        },
        "item": {
          "id": "9012f771-2970-41bb-9f8f-01b8dbba3d62",
          "name": "did:invalid"
        },
        "response": {
          "id": "d2da82a6-a608-406c-853f-e280fd61a232",
          "status": "Not Found",
          "code": 404,
          "responseTime": 266,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9012f771-2970-41bb-9f8f-01b8dbba3d62",
        "cursor": {
          "ref": "a3e7817c-a8be-432c-8727-1ec7fa9d4e92",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "88e17379-aac6-4dd6-8ff9-ac0c4a5eacfe"
        },
        "item": {
          "id": "9012f771-2970-41bb-9f8f-01b8dbba3d62",
          "name": "did:invalid"
        },
        "response": {
          "id": "d2da82a6-a608-406c-853f-e280fd61a232",
          "status": "Not Found",
          "code": 404,
          "responseTime": 266,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ba73ec-cdd3-4b9f-a4e5-f42f29cba498",
        "cursor": {
          "ref": "22db10da-7965-440d-85a0-410a869bb5b7",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6e6b9664-f01c-459f-9768-6e3b0fdf63a6"
        },
        "item": {
          "id": "88ba73ec-cdd3-4b9f-a4e5-f42f29cba498",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d07e0e92-32ec-4960-b923-fe3ee4d73e8b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 48,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2700aa1-cb8f-42f2-a5a4-1ea5e0634454",
        "cursor": {
          "ref": "11a96677-91a7-4324-a3e8-dfbc0c02618c",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c06c552a-8075-4af0-8a0a-77d01930dee8"
        },
        "item": {
          "id": "e2700aa1-cb8f-42f2-a5a4-1ea5e0634454",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7cdaafca-1722-44bd-b6ba-73d42953b13b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 37,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c869c6bc-97e4-4b31-849e-7672f2cb1589",
        "cursor": {
          "ref": "42fca163-5dfc-4f7a-be53-4660910cdcb1",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a1f534fc-c02f-427b-9076-585520cdcf6e"
        },
        "item": {
          "id": "c869c6bc-97e4-4b31-849e-7672f2cb1589",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d19478d7-433b-43e8-8e2c-4afa48f9a9fe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8968b1a-8986-4dab-89c4-68ef97d1b210",
        "cursor": {
          "ref": "8f352d8d-fe4a-4a2c-9c36-b0401bd17d31",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c0389ef7-8557-4d06-bf22-84e89a7209c7"
        },
        "item": {
          "id": "f8968b1a-8986-4dab-89c4-68ef97d1b210",
          "name": "identifiers"
        },
        "response": {
          "id": "ed4bf674-960f-438f-afea-18acbbb080b9",
          "status": "OK",
          "code": 200,
          "responseTime": 43,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cefc5fc-79f2-4cea-a7fc-040aa94cc773",
        "cursor": {
          "ref": "e64f68d2-b7c0-4b51-9412-eb40eef6d6c8",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5d1ed9a5-a49b-4ab7-9e5c-b207c6d26ea8"
        },
        "item": {
          "id": "5cefc5fc-79f2-4cea-a7fc-040aa94cc773",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b7284a32-457f-4ec3-87b1-99eee3295037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368e7cad-d1ae-4166-bd32-ead516778a53",
        "cursor": {
          "ref": "fcd10f2f-64dc-479e-be48-06e01cb4a975",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d1ca98f4-27cf-4a3f-a9df-42fa019771d8"
        },
        "item": {
          "id": "368e7cad-d1ae-4166-bd32-ead516778a53",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "745edf00-d514-41fd-9a05-7381722ad20d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed0c199-12af-4a6e-a465-0607f0633a54",
        "cursor": {
          "ref": "65abb184-6d96-4e96-85b4-7f1834e86cc0",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a8bee30d-d386-4511-a58d-55cc60003564"
        },
        "item": {
          "id": "2ed0c199-12af-4a6e-a465-0607f0633a54",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "75a71c51-4390-4be2-9429-48169a269e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05bbfee-9b3f-41be-a307-8dbb14829ab1",
        "cursor": {
          "ref": "950e3732-b0e5-4d96-a19b-18fdd08f815a",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3d701595-b593-4cdc-aa0a-b6af4e13020e"
        },
        "item": {
          "id": "e05bbfee-9b3f-41be-a307-8dbb14829ab1",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "84f9169c-93d6-4ad5-b427-66200cad98f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d224a5dc-c10a-4bde-a278-81c4686dd122",
        "cursor": {
          "ref": "1e2e2720-4ef3-4540-a31a-8ca6fa1e34d9",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c9b9cc09-7609-4ce6-88f3-98659f0f36e3"
        },
        "item": {
          "id": "d224a5dc-c10a-4bde-a278-81c4686dd122",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c5179a83-8cfd-4873-bf92-fa3cdc9590dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f82d084-2e31-4d82-a789-f04ca6a3347c",
        "cursor": {
          "ref": "194cbcd2-2785-4060-a382-21217c8d0a8a",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c9a66ad5-82df-49d9-8c46-66767f367dd4"
        },
        "item": {
          "id": "8f82d084-2e31-4d82-a789-f04ca6a3347c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e275beab-346e-47c5-b213-5181178efab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a20719a-462f-4ec8-83b3-d5b2acd4a791",
        "cursor": {
          "ref": "43187d9a-719c-40f4-92ed-c643da84629c",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "042d1781-b850-460d-a89b-a2dcfbab1ac2"
        },
        "item": {
          "id": "0a20719a-462f-4ec8-83b3-d5b2acd4a791",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f04b0cad-6cf3-4c1e-acd1-7e3a005f19e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "136b04bb-a96c-4220-b08e-31d44dd3c0e7",
        "cursor": {
          "ref": "3807dcb9-7797-488a-a1e1-014e15114ac1",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a9e71e84-1cc5-4878-bcd1-c541635bc0a1"
        },
        "item": {
          "id": "136b04bb-a96c-4220-b08e-31d44dd3c0e7",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "579384fc-4c01-40a1-b783-caa4a840da2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f45bcb-3194-4564-824b-e76b8ab418a3",
        "cursor": {
          "ref": "58eaadd7-d345-4493-98f2-2afedf282988",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9e14da6d-877e-4de9-bf7d-47232a86e94c"
        },
        "item": {
          "id": "33f45bcb-3194-4564-824b-e76b8ab418a3",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0f3c5171-bf39-4436-afe9-92e46f6e8802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "743ba603-a621-45fa-aee4-3ec8bf4a80be",
        "cursor": {
          "ref": "b3b9982a-de09-4377-b385-78b3a276c1f9",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a1671791-3722-4199-9dd1-59e53d85bb6d"
        },
        "item": {
          "id": "743ba603-a621-45fa-aee4-3ec8bf4a80be",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b0e09a4d-5d0d-41f3-92fb-b59a1db27d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ec1eab-6065-4690-84b0-70b7a731b551",
        "cursor": {
          "ref": "2bae0059-c36f-44f1-afb3-5933ec2aff50",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e7c50c22-dc5b-48ef-9ed0-88cff6043195"
        },
        "item": {
          "id": "09ec1eab-6065-4690-84b0-70b7a731b551",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9ede6738-c97e-4764-a117-4aec654c9701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7c3b10-f37a-4969-a13d-6af8d649a062",
        "cursor": {
          "ref": "4b1c232d-023b-410a-9078-ce7a8b868489",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "15e8ade5-3523-4326-9dcb-657e5cc7e45e"
        },
        "item": {
          "id": "ff7c3b10-f37a-4969-a13d-6af8d649a062",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d3bd7cbf-08ea-4d87-a5fa-0b1d44c5f5a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b790efbe-69bd-45d9-a65f-e08cc4760013",
        "cursor": {
          "ref": "87c74d2d-3480-4c95-bdfb-c7a8efde2998",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1609eb3d-c671-4574-af5b-43474e6c14c2"
        },
        "item": {
          "id": "b790efbe-69bd-45d9-a65f-e08cc4760013",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5f782894-9459-4b2c-8417-1c33d1e9cf7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5dd040-751d-493f-a6de-6663fd760a5a",
        "cursor": {
          "ref": "2920d3e0-94b6-42ba-970c-55239cea552d",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "eebb1e25-1785-483c-93a6-a3c6da063b98"
        },
        "item": {
          "id": "5e5dd040-751d-493f-a6de-6663fd760a5a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "989f6daf-7fbb-4617-a596-c9c09ba77082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc98508-8414-43e4-b782-5762dacddb6e",
        "cursor": {
          "ref": "46953d63-973c-4f2a-bc43-0fe2006196f4",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "8bf990d1-4039-460d-8c78-1e149e602553"
        },
        "item": {
          "id": "5fc98508-8414-43e4-b782-5762dacddb6e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "77467e04-963e-4426-ba49-5ca683d9303b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "305b64f8-fb71-46d4-9f45-ee235cb06280",
        "cursor": {
          "ref": "36ba1f15-b5d6-428b-99d1-32cc0205f025",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "185401ea-9ac3-4b86-9d2e-fdd49433f568"
        },
        "item": {
          "id": "305b64f8-fb71-46d4-9f45-ee235cb06280",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "17eba759-2b58-4206-a57c-816208047cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a96e59e-acb6-4c22-b298-709f9a0ea9a3",
        "cursor": {
          "ref": "2f652ce3-6496-4d13-a590-6036aa07a632",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b4f9cb32-597f-4df8-ab71-24eb4412afbf"
        },
        "item": {
          "id": "5a96e59e-acb6-4c22-b298-709f9a0ea9a3",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7137fbd8-dd15-44cc-b4b5-b4b041431c6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d5d4c26-2a2c-4634-afbe-f61883edd8bf",
        "cursor": {
          "ref": "476c003c-35a6-43b6-9a0b-8fc28ace8ec8",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "10b19936-5fc9-41da-a806-08110fe74db2"
        },
        "item": {
          "id": "0d5d4c26-2a2c-4634-afbe-f61883edd8bf",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ad28ef04-2ca7-4cb1-802d-17dacc9ebf57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f07d023a-ec86-41fd-adb1-908d33e63ce3",
        "cursor": {
          "ref": "9fb528b8-1e44-4d2d-beed-2c05a4060a60",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "70cecb68-d49d-4515-bc74-d029b768e991"
        },
        "item": {
          "id": "f07d023a-ec86-41fd-adb1-908d33e63ce3",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "da27a1dc-e57a-4757-a706-67590d8890a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b541fd-7794-43c4-85e5-41cacb846af1",
        "cursor": {
          "ref": "ec0f685d-9e7b-4c99-9610-f51177d62805",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "0bc65ff5-2d1e-47fa-8ba8-12951d7fcd58"
        },
        "item": {
          "id": "e9b541fd-7794-43c4-85e5-41cacb846af1",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "25872d7f-812b-45ba-88f7-2186432c6483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e03478-4398-4a39-be48-9bb0c4159234",
        "cursor": {
          "ref": "bfb6d061-0da3-41eb-ab02-0a5dd1831d15",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6955cbc8-b60f-47fc-9bb1-ee4d4bb94799"
        },
        "item": {
          "id": "c7e03478-4398-4a39-be48-9bb0c4159234",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "bd9cd29f-8f54-44ff-ae1f-4b260bedf4aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e65abb-17c2-4f14-93d3-42a2640b5a11",
        "cursor": {
          "ref": "427a9f7a-2167-45a5-80b9-c30e83bedab0",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "652ac2a0-949b-4bd6-836f-e31b690ebf77"
        },
        "item": {
          "id": "72e65abb-17c2-4f14-93d3-42a2640b5a11",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "cb3b4f61-a835-4253-a526-2c72fa0e9595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d11a0b-286b-4bd8-ad4d-75dd026c2fa0",
        "cursor": {
          "ref": "057cd0aa-201b-4cf8-a650-57474eaaf44e",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "be995603-0390-4053-9a96-025ebfea7b6c"
        },
        "item": {
          "id": "72d11a0b-286b-4bd8-ad4d-75dd026c2fa0",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7e919327-8c6a-4cda-965e-0975e1b93a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96aec096-2988-4204-ad9d-2414f909861f",
        "cursor": {
          "ref": "b3968eb4-2f1d-4a47-9126-ed9d4eeb7319",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "25343695-69da-402e-a0b8-16cc2afe239a"
        },
        "item": {
          "id": "96aec096-2988-4204-ad9d-2414f909861f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "21b896f6-abbc-42e2-9bfd-539fd044f8cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab55214-dbf6-45a8-9878-0ef7cc0b22ea",
        "cursor": {
          "ref": "6c4ef25e-2fca-47b4-a003-cfe0b9e64188",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9377a99d-9307-4f3b-a8da-ad18a17606bd"
        },
        "item": {
          "id": "cab55214-dbf6-45a8-9878-0ef7cc0b22ea",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "1c21843b-c37b-419f-a4cb-80f472095eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d4a0070-151d-4976-94d8-69bc3d9a5d89",
        "cursor": {
          "ref": "f88d4f02-b5a8-4920-95ea-4f1e7261fe0c",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e9032958-ff13-41d2-ae92-d0420a6e0562"
        },
        "item": {
          "id": "1d4a0070-151d-4976-94d8-69bc3d9a5d89",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "7b232054-31f2-45d6-bf6c-6db62465e9f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "680d3092-48e0-4a99-aae7-3f74e4ddd5af",
        "cursor": {
          "ref": "613c31c5-eb74-4f34-89ab-1779af3edb9d",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "014878f3-7996-4530-acce-9dbd5d7fe2be"
        },
        "item": {
          "id": "680d3092-48e0-4a99-aae7-3f74e4ddd5af",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "5e3e24e3-8989-4287-ba19-ec5fcee8383d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55a5e5d-86ee-4e27-94ae-10eb6f2e05b0",
        "cursor": {
          "ref": "1a158573-d709-4f68-899e-f4e96326c97e",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "bfd73fd2-ca85-49bb-b715-c5b4db5645c9"
        },
        "item": {
          "id": "f55a5e5d-86ee-4e27-94ae-10eb6f2e05b0",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "0ea40ba1-846a-43e0-954e-dd8a730a065e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f60895-b50e-404d-96d1-5c526bc18d9c",
        "cursor": {
          "ref": "d36c0a7c-3761-4a2f-b89b-38e76ede6804",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7dac1cd6-cd82-49f5-ba0a-646a26915978"
        },
        "item": {
          "id": "d8f60895-b50e-404d-96d1-5c526bc18d9c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4450911f-d071-4f1d-9986-29dd62cf1526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd034c4a-a721-4a83-a77d-3dec323f1776",
        "cursor": {
          "ref": "0b7ba0f9-2f37-42e6-9551-46794dee259e",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ac10d5b1-458a-4ff9-bb4f-239cca263032"
        },
        "item": {
          "id": "fd034c4a-a721-4a83-a77d-3dec323f1776",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f3d2224e-fa31-4447-b089-51e0919bfffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 159,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7a93c5-2124-4a35-9a3e-c09107b8981c",
        "cursor": {
          "ref": "9c7e0b45-af19-4d3b-b19d-fd71ba255f6b",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5bcd466d-0457-456b-afda-78aa3fbe8b32"
        },
        "item": {
          "id": "aa7a93c5-2124-4a35-9a3e-c09107b8981c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "97ec4e15-d285-4312-85f3-27ee6e3a897e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e04576-8702-44a7-814f-b421c0ef62bf",
        "cursor": {
          "ref": "ebf468d4-3bbb-4e51-945e-1d3b14c806f2",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b250b7a7-09a1-44ed-8ecb-671396ee0ab2"
        },
        "item": {
          "id": "a5e04576-8702-44a7-814f-b421c0ef62bf",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "629c5531-673a-452c-90fe-4534c1417930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a885c4f-b058-4da1-8537-0b7fdeef59ba",
        "cursor": {
          "ref": "b067b627-eee0-4e08-8d85-37777dd1ed1f",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0a78d936-f2ac-409c-9a82-0a5994191580"
        },
        "item": {
          "id": "4a885c4f-b058-4da1-8537-0b7fdeef59ba",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "bbffb73e-b588-42ff-87e7-437f0eb098ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df83ec07-2c40-4d4f-ac7a-0f3e5f5faf90",
        "cursor": {
          "ref": "fddd8d4b-6b09-411b-9674-c0aa2f96e12c",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e8a129dc-1ff5-4d70-864a-fb327b956d71"
        },
        "item": {
          "id": "df83ec07-2c40-4d4f-ac7a-0f3e5f5faf90",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "461eaaba-096d-41ca-9b63-db26fe8682b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b293ac-7b39-4d63-ae92-8f287e58ce4c",
        "cursor": {
          "ref": "8786851c-ee31-4e68-ab93-220342da2022",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "051b42cd-fcea-4b36-90ae-23c371be586b"
        },
        "item": {
          "id": "e7b293ac-7b39-4d63-ae92-8f287e58ce4c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "96aeafdc-a185-4b04-926b-bb7d2c756ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4b2d8f-2b87-4858-9dd5-203268ea2b1a",
        "cursor": {
          "ref": "a7bdd748-011f-45d3-a556-aabed1f20391",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ff8fe4f1-5843-4258-bfb6-b82430d936ff"
        },
        "item": {
          "id": "1e4b2d8f-2b87-4858-9dd5-203268ea2b1a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "6074f1b5-9527-4651-ba92-50b4e4cd9829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 160,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d0302f-b584-428d-a5ba-46309568423b",
        "cursor": {
          "ref": "f17bda82-c055-424b-bde8-f32a67047543",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "38c5ae4f-2db6-4bf7-a0fd-b02b642a57df"
        },
        "item": {
          "id": "b1d0302f-b584-428d-a5ba-46309568423b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "32ce297e-3802-47e7-9788-1f9eeee24df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e43b4c-57a0-45c8-9bf3-09f37da1e2c0",
        "cursor": {
          "ref": "31f43179-9f42-49a5-bbb1-0c7c614d6591",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5aefbde4-39a8-4bfa-8ec5-0df622134353"
        },
        "item": {
          "id": "e1e43b4c-57a0-45c8-9bf3-09f37da1e2c0",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "dbcac724-8ae1-4242-8a13-768959cc897e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab8ec36-919d-4226-83cf-59dcc52d3ec9",
        "cursor": {
          "ref": "46eefb0a-5e65-49e0-acc2-e3e59a5048c2",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3f30e2b5-d421-4929-9282-5d085f21e987"
        },
        "item": {
          "id": "aab8ec36-919d-4226-83cf-59dcc52d3ec9",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ebdb0ba1-c568-468a-859d-54c699b7fd6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c1e8308-565b-4734-ada9-c70430526932",
        "cursor": {
          "ref": "f08652a9-b908-468d-89eb-96fdc0bf9314",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1e17186e-e7d9-4e41-a0d8-111b281a899a"
        },
        "item": {
          "id": "8c1e8308-565b-4734-ada9-c70430526932",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "eb9e5f17-649b-4e84-ace9-df022a7e0c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bacda580-f2e1-4c20-9e87-e3a93d33566e",
        "cursor": {
          "ref": "f20bcbe5-bcf0-4c83-9197-1b1edddf1b5f",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "06848c4b-4d16-4bc9-b66c-394b634dff01"
        },
        "item": {
          "id": "bacda580-f2e1-4c20-9e87-e3a93d33566e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "bc8bc6f7-23a3-4742-ba99-a4451e33aaf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34bb744c-e7bd-42e2-bff1-902cc08ea9a8",
        "cursor": {
          "ref": "dff65229-397a-4123-9890-6fc78cc7c9ba",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8746c2bf-c19c-4fc5-89f5-44f353046e30"
        },
        "item": {
          "id": "34bb744c-e7bd-42e2-bff1-902cc08ea9a8",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "21911fb7-c94a-4c88-9098-fdb94a85fb66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc374f8-e0cc-48d6-ae90-1863b3d4f36d",
        "cursor": {
          "ref": "a2959a98-2989-44ad-abdd-93c33a460a3b",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6c55b4dc-8321-4419-b2e4-3fd5e4edf263"
        },
        "item": {
          "id": "5cc374f8-e0cc-48d6-ae90-1863b3d4f36d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b7239520-dfe3-4125-8d69-123f06dc7432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7eb9386-512d-4633-9a07-24f842b1ef82",
        "cursor": {
          "ref": "dd2389c8-2563-43c6-9c20-4ec24a3b6675",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d33d78c8-c29e-47f6-b3e1-c63eb315a5f4"
        },
        "item": {
          "id": "b7eb9386-512d-4633-9a07-24f842b1ef82",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "9ed9e7b6-5e62-409d-b20b-ff25d51bdf2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4500a013-e50e-4d3c-969d-58090bb1dd92",
        "cursor": {
          "ref": "dc648ad9-b818-4b90-93a6-b4edc079c153",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ca0dd7d3-fce5-4e32-9e0e-a69e05c2e35a"
        },
        "item": {
          "id": "4500a013-e50e-4d3c-969d-58090bb1dd92",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e0b25713-af55-447c-8ef7-7ee5ef7f1b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de9a871-58dd-41d6-a7d9-2f1658db6442",
        "cursor": {
          "ref": "20dab99a-e0d7-406e-8d9c-f128894ffac7",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "63495860-49d7-4307-99b1-2a888174ad98"
        },
        "item": {
          "id": "5de9a871-58dd-41d6-a7d9-2f1658db6442",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c640d2a5-46b9-4f59-b6df-3a48606806d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b2d3111-900d-4fdd-bcef-ee58cd331020",
        "cursor": {
          "ref": "f65d9f0e-e56e-41f2-9622-85c2f53ebd2b",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a8736b99-e710-4b73-a06d-1d636f10d481"
        },
        "item": {
          "id": "3b2d3111-900d-4fdd-bcef-ee58cd331020",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a839fb10-54ba-43e5-bb7c-ce904494a54d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66ec13b-04a1-47b5-96e8-327742f1bffc",
        "cursor": {
          "ref": "a82613b7-44aa-4b89-8daf-8c0a1158d1ce",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d8d92da5-7e41-464e-9b88-c72d35db1bff"
        },
        "item": {
          "id": "d66ec13b-04a1-47b5-96e8-327742f1bffc",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "453d770d-f3ae-4f98-99c5-dfe932d71124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4158f9-5087-459a-924f-a749c12955d3",
        "cursor": {
          "ref": "ad2cde70-2c5d-4e6c-a0b2-ddf7875dd361",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ae6d21af-099c-46fa-89ca-ec0c420d5bc9"
        },
        "item": {
          "id": "dc4158f9-5087-459a-924f-a749c12955d3",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "7821fe8f-a7d3-45f3-aa6c-e6a3933f31f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad786721-1fd0-4e0f-8fe3-e61f482a5f12",
        "cursor": {
          "ref": "6d4398bc-7984-4937-bd3a-7afbc3889666",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c91ff9df-6ed2-4f3b-8f35-1b4c8f901ea7"
        },
        "item": {
          "id": "ad786721-1fd0-4e0f-8fe3-e61f482a5f12",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "fd015285-18bd-4c2d-aafb-04364ecb5b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea5ea39-f65e-4d92-b373-89b5a8973af3",
        "cursor": {
          "ref": "1800793d-c10d-470c-9523-310a82afb71f",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "2db0462e-d691-4466-b45d-994f41ea60d7"
        },
        "item": {
          "id": "cea5ea39-f65e-4d92-b373-89b5a8973af3",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "94012257-96be-48b5-bef0-8a315ae9d6f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022a2460-ab22-4ed7-b7c5-04839e4187f0",
        "cursor": {
          "ref": "f46658b6-7403-4ec8-8488-7314a587b845",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b64b6c8e-c914-4b42-8a88-16adf68e76ec"
        },
        "item": {
          "id": "022a2460-ab22-4ed7-b7c5-04839e4187f0",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c640c2a0-8ba5-4f6a-8a7d-5a842db1b010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "babd93c0-8a9c-44b7-95c5-7d99818e61f2",
        "cursor": {
          "ref": "8e0a48fc-113d-40aa-8fd3-10e95298d951",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f9a4a456-0e7d-4658-9b04-d4ee5c80f172"
        },
        "item": {
          "id": "babd93c0-8a9c-44b7-95c5-7d99818e61f2",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d01f8b7d-82bc-4de6-95d9-472743cd493a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb3f723-3795-4c80-8c33-84042c8f732e",
        "cursor": {
          "ref": "375e9eab-1e7d-451f-939e-70e8d3f4e054",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ae2f44e2-8656-429a-bc0e-17c1bf225463"
        },
        "item": {
          "id": "9fb3f723-3795-4c80-8c33-84042c8f732e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "55dc9b6e-f0f8-4f18-97aa-a1e6fcb9b594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 136,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6657f0fa-419f-4fc5-b3ad-f3b302eac775",
        "cursor": {
          "ref": "8a6c65d2-48a5-4c0a-b05f-415ad48e504f",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "bb531f26-cd74-427e-9b32-1cca3d16e8f5"
        },
        "item": {
          "id": "6657f0fa-419f-4fc5-b3ad-f3b302eac775",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "99a29620-1510-4a3e-9ad7-0e914c2f12a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e3ba2f4-b1b6-4a77-8304-7b0ab06d9717",
        "cursor": {
          "ref": "81f303cb-5fd1-4696-b016-b4423110e093",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "cc26cab2-8fce-4778-8c37-4608c5c7fe61"
        },
        "item": {
          "id": "2e3ba2f4-b1b6-4a77-8304-7b0ab06d9717",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "addeba8a-669a-49e5-bbfd-3d656d57b418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67fdc44-c2a0-46c9-8365-39a8588fc97c",
        "cursor": {
          "ref": "ee7018e0-413b-4586-885d-6f8e3d48fcc1",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b39ec2ef-a726-42ba-83bd-a0f7e57321a3"
        },
        "item": {
          "id": "a67fdc44-c2a0-46c9-8365-39a8588fc97c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7e77620b-c2c6-4af1-ae8f-1e021772c467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "944fb11d-d1e2-4c20-8851-84ed7947f60b",
        "cursor": {
          "ref": "1b865e82-8cea-46ed-83a0-679c09292c5e",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "441061cb-fc5f-4306-978c-899714926c5b"
        },
        "item": {
          "id": "944fb11d-d1e2-4c20-8851-84ed7947f60b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "4be1426c-c1bf-4851-8be9-e062f35b76c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf647fb-f814-444b-9d93-6f100855ac9b",
        "cursor": {
          "ref": "db0a23c1-a39b-4b58-b65d-ccff61c7fc28",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4f811cb4-07f4-40cc-902e-9eb7bf30794d"
        },
        "item": {
          "id": "2cf647fb-f814-444b-9d93-6f100855ac9b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "10b929bb-d476-41c9-b159-0a434524e6f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f19950-b48b-4631-908a-412812f3f32d",
        "cursor": {
          "ref": "d277231d-fbcc-43f3-9a5d-7afb69a52e6d",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "edb2c0ca-70f0-492d-ae56-2edf914452be"
        },
        "item": {
          "id": "08f19950-b48b-4631-908a-412812f3f32d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6a5bb044-41d3-4df7-9b1d-c488bb5fea87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4ddc9b-ae4d-4055-a5e9-7f0118b3d329",
        "cursor": {
          "ref": "0bb26288-dfc7-4874-97a6-8dbf38ab043b",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b55da666-d70c-4805-aac8-429ab3e99eee"
        },
        "item": {
          "id": "cb4ddc9b-ae4d-4055-a5e9-7f0118b3d329",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6b345dd0-af15-493c-be12-084edd3b6c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b97622-88b5-4938-813a-4c851c34b3cc",
        "cursor": {
          "ref": "64163d3a-afef-4ab0-bc16-b6b2da8f3091",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3afbc739-0c10-4cf9-9708-06bd6e3b94e4"
        },
        "item": {
          "id": "f6b97622-88b5-4938-813a-4c851c34b3cc",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "adf32e61-30b5-45c5-9900-595a78f621a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b76e28f1-8e75-4ae2-8348-44e7f5d7ab32",
        "cursor": {
          "ref": "f53163b2-bb97-433b-9379-36ab723fce4d",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d3c42b77-cd36-4dfb-8138-b47d4155ca91"
        },
        "item": {
          "id": "b76e28f1-8e75-4ae2-8348-44e7f5d7ab32",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "05546f0b-e113-4cbc-a39a-b3c6902b8d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e58d886-93e8-4d33-af4e-38e6e71bc080",
        "cursor": {
          "ref": "235e03e7-63ee-46c9-b284-cae18978b6d0",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f8234b47-2e26-428e-8c0c-3a15051909e0"
        },
        "item": {
          "id": "3e58d886-93e8-4d33-af4e-38e6e71bc080",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2c9cc26c-19b1-41a0-83fd-918e3da5fefd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a70b6d32-74b1-439d-a4d4-019e676a698d",
        "cursor": {
          "ref": "3fc2810c-688b-438a-8fba-ebcaa46dc18a",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e7f00910-e7d0-40ea-bbb9-d8eb2193f9e4"
        },
        "item": {
          "id": "a70b6d32-74b1-439d-a4d4-019e676a698d",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "17aa26cd-8d7c-40cf-9c31-33f214068c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1770ae05-d44b-4f8b-8339-85414c2d6b3d",
        "cursor": {
          "ref": "0f7e3064-75f4-438b-826c-6c43d8c15230",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e6fec9ee-c84a-4927-aa92-50034f1e8d31"
        },
        "item": {
          "id": "1770ae05-d44b-4f8b-8339-85414c2d6b3d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9aa79efc-d48e-48c9-b575-42b81e8283de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba0cb990-3148-4e6e-b0c3-e498fac68d42",
        "cursor": {
          "ref": "923d5c89-f93d-44d2-936e-8659323412e3",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "676fc57c-890c-41d1-9c46-426766e4829a"
        },
        "item": {
          "id": "ba0cb990-3148-4e6e-b0c3-e498fac68d42",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "08a8cf39-2b42-4ad5-bac0-1243dd82d380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a100391e-a077-4517-913c-a9b7048d0501",
        "cursor": {
          "ref": "45ced816-df63-44ec-8aed-f37ccd7f9c0c",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "64102d97-81dd-4de0-94f4-bd2da3427dcd"
        },
        "item": {
          "id": "a100391e-a077-4517-913c-a9b7048d0501",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "6515f665-8bec-47c5-a478-10398b850f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9b08a5-a7c4-4c42-ab73-f096913f50e6",
        "cursor": {
          "ref": "324a2cf3-1bec-42d4-9e93-13c1202f1d26",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "27c3397d-970b-496c-aa64-bf50e3a14578"
        },
        "item": {
          "id": "fa9b08a5-a7c4-4c42-ab73-f096913f50e6",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1bf33945-ebb1-4887-a065-c4de53b944b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a787aaea-edc1-41eb-99f9-26d21f2ea6fd",
        "cursor": {
          "ref": "1924b3d7-6b03-49f0-b101-3d08474e4352",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "41ffa3de-568e-4c10-9379-9a04e216f022"
        },
        "item": {
          "id": "a787aaea-edc1-41eb-99f9-26d21f2ea6fd",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "62fb106c-5373-4f3b-8144-2a0fe1672b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f635c500-913d-4c91-a8e6-90860f2c7b01",
        "cursor": {
          "ref": "748d97f6-2a36-451a-808a-06b87e5baffd",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f9610f77-0f26-4032-9919-8523e0b00c11"
        },
        "item": {
          "id": "f635c500-913d-4c91-a8e6-90860f2c7b01",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c6ec8fb4-cf4f-437a-a31f-5594827b72ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5479f6-9721-4561-bb5e-9f743f5bc07d",
        "cursor": {
          "ref": "427e347d-cc29-4943-87ac-dca4342626ea",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "678d892b-e0a1-4df9-956a-541b5ed845e5"
        },
        "item": {
          "id": "7b5479f6-9721-4561-bb5e-9f743f5bc07d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0e102577-1266-46de-8280-a680db3795df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 160,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d925d44-917b-4ea1-ba89-34a699563778",
        "cursor": {
          "ref": "cbce2f8a-a8db-47b1-923f-0cefcaf6de1f",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ff787dcf-c1a2-4cd3-acfa-7d96977fad7d"
        },
        "item": {
          "id": "9d925d44-917b-4ea1-ba89-34a699563778",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "95157539-8af4-451a-98e5-ef949e1273b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8e86eb-e434-4ca4-9ef8-26a826b3ce81",
        "cursor": {
          "ref": "521d8887-a539-4dbf-a8c6-7e591a397b94",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f9e85e4d-6b8f-472c-aaab-d0507f91169d"
        },
        "item": {
          "id": "ee8e86eb-e434-4ca4-9ef8-26a826b3ce81",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "efff247c-84a7-4288-9229-e35083df4aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda8b6b6-1b2b-4832-9411-ac5c09969ee2",
        "cursor": {
          "ref": "86868c40-431b-444f-bf1b-149a9f615666",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e09af0c5-a665-4d49-a99c-aaced45c8332"
        },
        "item": {
          "id": "fda8b6b6-1b2b-4832-9411-ac5c09969ee2",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ad19cf4b-7103-4a05-a487-f0731c9ba74e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f824ad-bd90-451c-82a1-fb578ab0d18b",
        "cursor": {
          "ref": "8c7e3982-993f-46d2-a3a9-9fcb2f5457d2",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "5299f9eb-47e0-482c-b116-36d4f7d5cc76"
        },
        "item": {
          "id": "64f824ad-bd90-451c-82a1-fb578ab0d18b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2fd2b241-ab05-47f9-87e5-ce8523b7dfb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e289bd6a-831a-4ff5-941a-fe60cefb60a6",
        "cursor": {
          "ref": "927e6687-2d2b-4658-8036-ba5ad1c3504a",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e5b8173d-038e-4a6f-8573-fccde10e4295"
        },
        "item": {
          "id": "e289bd6a-831a-4ff5-941a-fe60cefb60a6",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "112d0a8e-2670-483c-a08e-ccef1ad0b03f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4b88f3-b8bc-4ea2-b1c4-6a9a4672d5da",
        "cursor": {
          "ref": "c65aacce-a403-43e8-af37-3a0b1231b4c5",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "393db864-12f2-4b75-8aa9-d79255f7fbd8"
        },
        "item": {
          "id": "ed4b88f3-b8bc-4ea2-b1c4-6a9a4672d5da",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "75e6f4b6-82cb-4a97-848e-6f0a7e5e623e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7aa34b2-c07d-4034-b2d7-a3620af81de8",
        "cursor": {
          "ref": "74d9220b-db1a-440a-a2b1-0a5ee2cd5096",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d8186509-3873-4964-8a37-a5694347f666"
        },
        "item": {
          "id": "e7aa34b2-c07d-4034-b2d7-a3620af81de8",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a9de1592-d1aa-429e-8729-ec7887292f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b8269a-03db-484e-aea8-9c661d158f5a",
        "cursor": {
          "ref": "7ba067d2-64d4-448b-875b-574d954a5abc",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "606070f6-aef7-4532-abfe-32b14e8c95c2"
        },
        "item": {
          "id": "43b8269a-03db-484e-aea8-9c661d158f5a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4f888740-5499-4465-90a5-78bda80cdba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e2f22d-4fc5-46da-8246-3f484fad81ba",
        "cursor": {
          "ref": "58cd845a-a005-46fb-8c9a-8266c4002052",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0ac608d8-cb45-4d18-b487-2f44e4bb6dc1"
        },
        "item": {
          "id": "36e2f22d-4fc5-46da-8246-3f484fad81ba",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "303fa6f0-49ed-480c-bf87-cad3ff059e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e4c7dd-84bf-4f09-ad1d-e1c99219df5d",
        "cursor": {
          "ref": "3fef99be-b564-401e-9cf2-6889969047a5",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f8546cc0-57df-4a79-b7d0-13ce463e1a6a"
        },
        "item": {
          "id": "56e4c7dd-84bf-4f09-ad1d-e1c99219df5d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7df397d6-2a8f-4a92-bebc-d122e755bdb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4507d17e-0960-438d-a67c-fe6e9026e98c",
        "cursor": {
          "ref": "23bd6a73-0f14-444c-ba0a-179b4420e06d",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e9c6ffdd-7eaa-4acf-a1a8-2c7904e449e5"
        },
        "item": {
          "id": "4507d17e-0960-438d-a67c-fe6e9026e98c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "6489a93c-1aec-4e9c-8233-b7e509ac7f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2dc3cef-2812-4f05-a377-9f80b753d50f",
        "cursor": {
          "ref": "d553aa3e-8255-45e8-93f5-3ebcbea70d4d",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1bdd1672-86f2-40ea-9286-6b205e490295"
        },
        "item": {
          "id": "b2dc3cef-2812-4f05-a377-9f80b753d50f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ac021d27-1a31-4ad9-abe6-765a36fbde6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a37f780a-d46c-48f2-ba6b-62ffb98cf5d8",
        "cursor": {
          "ref": "27c93cb7-a4a1-46f9-a7a4-57c5d023106a",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "30726cd0-86ad-40eb-9363-baaab883acd2"
        },
        "item": {
          "id": "a37f780a-d46c-48f2-ba6b-62ffb98cf5d8",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6b6fb529-0b92-42a7-8e2d-e28fc07759df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91edb5c-8e06-4457-a4b8-359e0ffebdd5",
        "cursor": {
          "ref": "0ae37a9d-351b-49dd-acc5-5ef1b38154ec",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "dcc0a78f-7b8e-4a14-920d-b45089c5d2e7"
        },
        "item": {
          "id": "c91edb5c-8e06-4457-a4b8-359e0ffebdd5",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ade21940-a430-426d-8a3a-0ea9bec2f128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef82e2b5-4a37-4c62-899d-7894f0b4f1ec",
        "cursor": {
          "ref": "1712feff-4551-4113-b0c2-240a1a7b56cf",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7e880e10-a832-41e8-9285-2a96027d696d"
        },
        "item": {
          "id": "ef82e2b5-4a37-4c62-899d-7894f0b4f1ec",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "143ee687-1985-45de-8fa8-5bb12e5442aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6def16f-ac35-4b2b-b46b-9d246fa5d914",
        "cursor": {
          "ref": "144e0935-4148-49d8-9310-660ecd88fbfa",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d4fc30a0-c7fa-4286-9643-554097fb3c77"
        },
        "item": {
          "id": "e6def16f-ac35-4b2b-b46b-9d246fa5d914",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "116f0fc1-5257-4d63-bbe3-6ebcadd1ea57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3467392-fd75-431b-9ed3-cf401fae4408",
        "cursor": {
          "ref": "148b8e42-3da2-4c81-9f09-bf9a96f97259",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "cb2b8b0c-8258-4150-ae33-424cf06b2919"
        },
        "item": {
          "id": "c3467392-fd75-431b-9ed3-cf401fae4408",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ed1310c5-1dd1-4187-a77b-9bc8a673f4c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02747a71-d3b5-4cde-b6de-299965c54ca8",
        "cursor": {
          "ref": "c5197c46-3736-48bc-9b19-d424449fd3da",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "50dfef78-dae7-43c4-844e-35e615d450f1"
        },
        "item": {
          "id": "02747a71-d3b5-4cde-b6de-299965c54ca8",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f9bdf94d-42f1-4520-bf49-586c26efabb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a48b06-af93-40cb-b642-d42f47e7766e",
        "cursor": {
          "ref": "9d3abc88-359e-4136-8c41-78a9a43f86eb",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "cacaebe8-c5b3-48fb-be35-144f7adcbfb7"
        },
        "item": {
          "id": "18a48b06-af93-40cb-b642-d42f47e7766e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f73c8e90-0b69-4b2f-9324-512399fc629c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48c07e2-1f3a-4d37-975d-09cff227d87e",
        "cursor": {
          "ref": "548b54c8-2196-4292-83c5-ab8c4a243385",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f9fbf5ee-8598-495a-a38c-13527196a673"
        },
        "item": {
          "id": "e48c07e2-1f3a-4d37-975d-09cff227d87e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "79ed2d64-15fb-4cd8-8ece-292a425ff70f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ec3c3d-d862-46ea-93fa-f863cfa98855",
        "cursor": {
          "ref": "9cd38cbe-7848-4ba5-993c-b24e1882e575",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5e8916d9-aa7f-4ded-91db-2f1541532a33"
        },
        "item": {
          "id": "31ec3c3d-d862-46ea-93fa-f863cfa98855",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4911eff5-6e07-4f15-9472-ca8bb5c951cc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6b7b7d-5f16-4c1a-b89f-586f7a1056c9",
        "cursor": {
          "ref": "d8db1483-1fee-47c7-9df9-c5e6b190c456",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "bcf57b82-bd04-4168-a3ae-a93ea7bac012"
        },
        "item": {
          "id": "3b6b7b7d-5f16-4c1a-b89f-586f7a1056c9",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "8329e5fc-cbc4-4865-9114-e1c325b07bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "9ea3f9ea-4450-4cf4-b9f0-9b0af87a1bc4",
        "cursor": {
          "ref": "72af539e-7849-4e18-9ace-8dd1cf1975cd",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e20d9866-d1e6-458d-8e07-456237b595fd"
        },
        "item": {
          "id": "9ea3f9ea-4450-4cf4-b9f0-9b0af87a1bc4",
          "name": "credentials_issue"
        },
        "response": {
          "id": "3868fca3-69bd-4458-8310-e426c5c56234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "a9addacc-b8cd-4703-b16a-04526d689997",
        "cursor": {
          "ref": "0a19e77c-eb44-4f6d-bb7f-a5138a883bc9",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "38c9ce7d-2d56-439a-bd78-bab6ce2bf540"
        },
        "item": {
          "id": "a9addacc-b8cd-4703-b16a-04526d689997",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f13eaf58-7497-4713-95b2-ae9a690dd976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "ce051b8f-9d60-4410-981b-8456d4c52edf",
        "cursor": {
          "ref": "950220e7-f576-4873-912d-ebe2440b2eda",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d89b5771-8362-4bca-ba6a-7374f8d4d5e5"
        },
        "item": {
          "id": "ce051b8f-9d60-4410-981b-8456d4c52edf",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "2182cfd4-356d-44ca-99e2-5fbee70bd908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "21262420-59b0-41f7-afa3-da17a3747274",
        "cursor": {
          "ref": "704c4d7d-a04c-4171-8b80-4c7fdd2c3e92",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ab37f658-6029-4030-a7f5-dbfcd99c49d1"
        },
        "item": {
          "id": "21262420-59b0-41f7-afa3-da17a3747274",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4c19c32e-a272-46d4-8039-e34da16aef44",
          "status": "Created",
          "code": 201,
          "responseTime": 10749,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf0939db-521d-4188-8d08-0f6996a9cb06",
        "cursor": {
          "ref": "abf4de87-2bcc-40c2-9674-dcda9a3a1fb4",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e1b3e23a-5f03-4663-bfb9-e748e694128f"
        },
        "item": {
          "id": "cf0939db-521d-4188-8d08-0f6996a9cb06",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "34d7b9ac-36e6-418f-9c8b-f1153b6aae7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 186,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "9c9454e5-2ab0-4d01-8f20-a6491da7ec20",
        "cursor": {
          "ref": "3219e18d-fa47-48d7-bafb-0c20f749316d",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "48690808-aaca-4a07-a67a-36a7f361b195"
        },
        "item": {
          "id": "9c9454e5-2ab0-4d01-8f20-a6491da7ec20",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8dd5102c-366a-4823-ad4c-c277bbdd6f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "fa847b72-ec3f-4f3d-af43-af277ce7c1cd",
        "cursor": {
          "ref": "636eca66-3681-4bc2-af52-09a298364dac",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0a01e7e8-33ff-494d-92c5-4f20dee5ffde"
        },
        "item": {
          "id": "fa847b72-ec3f-4f3d-af43-af277ce7c1cd",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f41ef46e-8c44-44bf-ab61-f8436d763c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 139,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c09528ad-b171-4e62-8734-4963369dc22d",
        "cursor": {
          "ref": "56c53c64-b170-45c8-92e2-44a139cf051d",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "bff75c78-d7d3-4dc9-914b-9fe8711a4a93"
        },
        "item": {
          "id": "c09528ad-b171-4e62-8734-4963369dc22d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "cb47df6b-deb9-41e4-9ea0-b0c0939dcaf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "984c530d-21e8-4b55-9946-c395eadb1f01",
        "cursor": {
          "ref": "acfc9d3e-7507-4ec9-a064-cc9a4a4b7b3f",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "edb8bc8b-cbd9-4502-9d31-09e1d0d17142"
        },
        "item": {
          "id": "984c530d-21e8-4b55-9946-c395eadb1f01",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1d1ea693-d7c3-4c44-9236-81eb7b2becfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e3cbf7-8bbf-4b09-83c8-067d2f083e57",
        "cursor": {
          "ref": "e28a3653-9247-4223-8df7-0777dc479bcb",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "4e7697d7-b1f5-4bf1-8378-0858477a4a86"
        },
        "item": {
          "id": "39e3cbf7-8bbf-4b09-83c8-067d2f083e57",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "80ecb5a7-cc76-4a45-8391-dcca6c4878fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aacec43-0ee9-4f69-9a95-d335bb29cf3e",
        "cursor": {
          "ref": "82d20fb8-7ce0-4923-b2cd-01b46d4967d6",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "408d7ab3-004d-47c8-8c92-55ea795d6e13"
        },
        "item": {
          "id": "3aacec43-0ee9-4f69-9a95-d335bb29cf3e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "03628997-0b54-4547-a917-14fded4b46a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abcd9b5b-5e9a-44ad-9f9b-2959b528f42c",
        "cursor": {
          "ref": "5ca36657-f6c9-4ab2-a87f-d4a7a1e214bb",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5cebe49e-ed20-4679-a71d-62ab0aa49edf"
        },
        "item": {
          "id": "abcd9b5b-5e9a-44ad-9f9b-2959b528f42c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f7ffe6ec-3d9b-486a-abc9-431c0496e8f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c4a3e62-c34c-4cc9-8b1b-6849fd5093ba",
        "cursor": {
          "ref": "87f6c1c8-76fe-4dfa-a478-59a871954f8e",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "094099a1-ec0d-405f-9ed5-d684a70d5708"
        },
        "item": {
          "id": "4c4a3e62-c34c-4cc9-8b1b-6849fd5093ba",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a1abf030-7211-4893-ace7-b97d30338ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729c74c0-db01-487e-bc73-be1f2c0cd4df",
        "cursor": {
          "ref": "0791dbe8-922d-4571-b305-61e11c6c7ae9",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "274b158c-47ed-4b26-be4e-99c37ea746d5"
        },
        "item": {
          "id": "729c74c0-db01-487e-bc73-be1f2c0cd4df",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "047738f1-3f17-4b03-bb87-412ac4ba24bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5d0b1d-f96f-4523-924e-6549af7579bf",
        "cursor": {
          "ref": "637ae105-ee1e-4a6d-bbd5-a5b6b1bf3732",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "bcf79c1a-cc81-43d0-8acb-47ede68289c2"
        },
        "item": {
          "id": "4e5d0b1d-f96f-4523-924e-6549af7579bf",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "25554896-7b1c-4ea3-9e5a-9ae0747955cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6362598b-1beb-47d2-865f-97877967d273",
        "cursor": {
          "ref": "b4f24b36-e3bc-43b8-b505-1f31235a0d08",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "cf55f6d2-0528-484b-81d6-8a8000a534ed"
        },
        "item": {
          "id": "6362598b-1beb-47d2-865f-97877967d273",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "69a4260e-06d5-43e9-9f0f-1bd743dde572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bffc1586-6c54-40d3-b897-564cb030a8a3",
        "cursor": {
          "ref": "86fa77e0-56eb-4589-9c12-eab72429cf64",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8d2454e2-83f8-4c51-941a-aae86b3759ed"
        },
        "item": {
          "id": "bffc1586-6c54-40d3-b897-564cb030a8a3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "58063334-c804-4785-b204-9957c4dbb20a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 144,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da68f044-5a11-4d24-9309-189d0efabb09",
        "cursor": {
          "ref": "ed9ca9e7-8219-48b3-9a91-26384fe7e8b4",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "5e1e29bf-f187-4133-be1a-90adc6055fee"
        },
        "item": {
          "id": "da68f044-5a11-4d24-9309-189d0efabb09",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "aea306d2-790b-4a58-8d43-d3413e79936d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a3ea945-b60d-4498-9b3b-83e538be23bb",
        "cursor": {
          "ref": "ad30e609-c4b5-41cc-98ab-620f537cf1b1",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a021daa7-a670-4978-96de-20abc46eb307"
        },
        "item": {
          "id": "9a3ea945-b60d-4498-9b3b-83e538be23bb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d2607183-e636-428e-9599-9091777fe38c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3203ee25-76e9-4a2d-9de2-d3c924fff9c0",
        "cursor": {
          "ref": "8fea92d3-6392-45ed-ad44-3d2f836d8a4b",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "47403f50-4304-463e-bd5d-fc45ff96b9ad"
        },
        "item": {
          "id": "3203ee25-76e9-4a2d-9de2-d3c924fff9c0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "081ff563-2816-42a3-9ffc-1316677a1a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05506f26-1926-4e99-841d-cc71c075aa21",
        "cursor": {
          "ref": "56f4ff38-b51e-45fe-bddf-ba772136b871",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "df8eedf2-be9e-443e-b9fd-6675897da5fd"
        },
        "item": {
          "id": "05506f26-1926-4e99-841d-cc71c075aa21",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4417ab69-8f28-416c-b952-2e6177dcf3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bbb693d-e2fa-440d-9687-a364c209e802",
        "cursor": {
          "ref": "e810086c-d45f-4584-8caa-1c7c1eba7c4b",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "ce8808a5-0ed4-4714-8899-9d0124547dca"
        },
        "item": {
          "id": "8bbb693d-e2fa-440d-9687-a364c209e802",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4efa9599-efcc-4053-b707-64e646461c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534f20ee-c2bb-4996-8f4d-e798e2457ad8",
        "cursor": {
          "ref": "d2c2d4a7-69f0-4c5a-a9b7-2cabb359dc01",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "60d99f65-740d-4420-bbbf-59ed90a0a8d2"
        },
        "item": {
          "id": "534f20ee-c2bb-4996-8f4d-e798e2457ad8",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "55334c9c-5671-46da-8e9d-321c2f582fb1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 78,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "e7db1967-dab1-484d-9ea3-381253a35666",
        "cursor": {
          "ref": "a7758d22-28b0-4e20-8edc-6dc6499be03d",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "5625e9aa-910d-4bac-9620-198f3d330c37"
        },
        "item": {
          "id": "e7db1967-dab1-484d-9ea3-381253a35666",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d9fbea55-3e4c-42cc-a41a-e7f4ca4f5244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7862070-6217-480c-9b83-27ecec1cfdc1",
        "cursor": {
          "ref": "07622710-a736-4ea1-b093-2562d55d3d42",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d2986cca-7e57-4390-9e7f-745eec0e08a1"
        },
        "item": {
          "id": "e7862070-6217-480c-9b83-27ecec1cfdc1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "267b7e22-8c3c-4443-ae3d-eae0feb14c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5c5553-846d-4f41-8ee5-2a024a1e48b5",
        "cursor": {
          "ref": "4b09771e-bc90-4966-901b-7ae37fe65bf8",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e3deefe2-81f5-403b-bb98-b039e65e4b90"
        },
        "item": {
          "id": "7b5c5553-846d-4f41-8ee5-2a024a1e48b5",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5b8fb29a-1f1d-44b9-ac05-82c4b5bfd60f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "004c14b6-d6fa-498a-83ab-f126e10aacd5",
        "cursor": {
          "ref": "316b7fc4-3686-445b-ab9f-7882f31b40c2",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "daff0361-b7de-40cb-ab9b-a32d40fccf2e"
        },
        "item": {
          "id": "004c14b6-d6fa-498a-83ab-f126e10aacd5",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "76b014e8-1e8f-45f5-b2eb-52d0cd8c0b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5942a2a0-3b9e-4fe7-85e7-591fcdc5faad",
        "cursor": {
          "ref": "74bb8e38-8fe1-42fd-9896-6639a29dbd5c",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1855b549-27a1-42c4-8998-101e69825f03"
        },
        "item": {
          "id": "5942a2a0-3b9e-4fe7-85e7-591fcdc5faad",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9e449dc7-2a61-4f1c-9115-c02743db008d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "262cc4a7-c79e-4a8b-8911-99282a4c3106",
        "cursor": {
          "ref": "ca0b086d-cb10-4093-a2db-5e22ad6c3eef",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "cc84897a-ede5-460a-b644-d14cef65e093"
        },
        "item": {
          "id": "262cc4a7-c79e-4a8b-8911-99282a4c3106",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ca991778-c634-4c10-bc47-9520eb43ee3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f04856d-6ca3-4aa1-b631-a248eaa6b779",
        "cursor": {
          "ref": "90862124-271e-4063-9204-0634ed11c712",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "fc77b515-ac5d-4fe1-be11-e358874c1722"
        },
        "item": {
          "id": "9f04856d-6ca3-4aa1-b631-a248eaa6b779",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "17e6c494-8fe6-428c-8a1a-f82ef8afb004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827721b6-1c0a-45fc-bc2d-c654d7e10511",
        "cursor": {
          "ref": "4fc12ac5-396f-47d0-8066-a804b5d34e23",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "72b66b2a-aa47-4dc9-84d2-4edda74872a3"
        },
        "item": {
          "id": "827721b6-1c0a-45fc-bc2d-c654d7e10511",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c16e7fea-f4ab-4004-a7d6-001af4f3949b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 95,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "c7871f35-4b4c-4ca7-8504-5c42778703cd",
        "cursor": {
          "ref": "a03105fb-5402-4872-a9e2-ab82dccdc0c8",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a0dd299b-e4af-4201-a532-81d8a7830601"
        },
        "item": {
          "id": "c7871f35-4b4c-4ca7-8504-5c42778703cd",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a03f385e-bfec-4af3-9fae-3e7599b87e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf88935-5f9a-4cf5-a416-8c0cabc18f7c",
        "cursor": {
          "ref": "4bc1c061-83dd-475a-8df0-1dd485ee4646",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a1d74c7d-e52d-4cbf-b7fd-b5a9570590fe"
        },
        "item": {
          "id": "fcf88935-5f9a-4cf5-a416-8c0cabc18f7c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f69d8546-d6f6-4e97-ab69-aa0398ec606a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2919249-e2c0-4d81-bdb4-a488365d607f",
        "cursor": {
          "ref": "3eda0e85-039a-4240-984c-5adc50c0a417",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "50ff63b7-9d93-4959-bd21-56e495ab7702"
        },
        "item": {
          "id": "f2919249-e2c0-4d81-bdb4-a488365d607f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "468f2442-ba87-4677-bc33-95b541ff7aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d0777e-4667-4afc-8f5d-929fa2aa6bdf",
        "cursor": {
          "ref": "882faa83-8c6f-4188-8ecb-826291a52e44",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ab191305-900b-4f98-bcce-a8330623f196"
        },
        "item": {
          "id": "e5d0777e-4667-4afc-8f5d-929fa2aa6bdf",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "675ad266-2b80-4c4c-9e6d-f3505b8fd8c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7abfb130-825e-42b5-8e06-434da4285ca8",
        "cursor": {
          "ref": "5def548e-1aec-4426-8cfa-64ab28a31c0a",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "48a48a33-1838-41f9-a992-7d8f0d538de6"
        },
        "item": {
          "id": "7abfb130-825e-42b5-8e06-434da4285ca8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f461fba8-030f-4bd3-a398-7fd790bea01b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e703931-b0c1-412a-833e-18978e3d9286",
        "cursor": {
          "ref": "d8e1e268-3e2c-4382-aeb9-2db2b96c28ec",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2fb03854-6907-4f3d-908e-2490e7fe090f"
        },
        "item": {
          "id": "5e703931-b0c1-412a-833e-18978e3d9286",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a2a6c99c-64ae-4d22-a6ec-1f68e7fd298f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dba2efa-c9c4-4222-8298-189acf4ae704",
        "cursor": {
          "ref": "2b241df9-4e00-402d-962d-8c58eb3446bb",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "150fac93-5124-49a4-9f57-cf6b4fd460c0"
        },
        "item": {
          "id": "2dba2efa-c9c4-4222-8298-189acf4ae704",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "5caaa97b-a22b-49b3-ae0b-ca90d856c541",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 45,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "2d39c5ef-a994-4343-aa6e-c7bf9938ae27",
        "cursor": {
          "ref": "89cb5dd9-a3d5-4db4-a15b-d7a62a79ad74",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "95fd60f5-2f02-4209-a37c-d014be2000e4"
        },
        "item": {
          "id": "2d39c5ef-a994-4343-aa6e-c7bf9938ae27",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "7317b541-da4b-4d47-8232-e18b65a13c48",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "4b47593c-5ed2-4990-b36a-3ddbd6556d11",
        "cursor": {
          "ref": "b9f3b13f-5bae-4f01-9896-8cdd61a46424",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "53904a90-d966-4ba4-ae2b-909102312c7f"
        },
        "item": {
          "id": "4b47593c-5ed2-4990-b36a-3ddbd6556d11",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "299077f5-40b8-492e-ba02-cabc9062ea62",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "78f4c459-c069-4a6e-af07-58e8ac44d46b",
        "cursor": {
          "ref": "a6a5807d-8830-4240-a2c0-f9af07eb44c2",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5fab8f1c-008b-4df1-8e09-b63b3b71e199"
        },
        "item": {
          "id": "78f4c459-c069-4a6e-af07-58e8ac44d46b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "4cf9b19f-d920-45db-9505-be1a70855e27",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 54,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "b193ff28-9bdb-4afd-82ec-a7ab24c87890",
        "cursor": {
          "ref": "5ccfe29a-0f97-4099-a8f5-1c256610353a",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d4f51b9a-be76-417c-acd6-d3b8895aa7cd"
        },
        "item": {
          "id": "b193ff28-9bdb-4afd-82ec-a7ab24c87890",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "8be6238a-5430-427c-8752-16cca7397000",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "50e65266-833e-43e1-a92c-e89908f79eda",
        "cursor": {
          "ref": "55e929e8-c20e-4be8-843f-e748019d52a6",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "2a351bac-ac77-4188-a05a-9f515d0a461a"
        },
        "item": {
          "id": "50e65266-833e-43e1-a92c-e89908f79eda",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "616594b7-ecaa-404f-bf77-69c0d0c69131",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 122,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "80214056-2d4b-4ba3-95ab-d254887cd1ad",
        "cursor": {
          "ref": "47d7256a-882b-48c6-8b8a-fec91cd21e52",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a91b98b9-19b2-41a9-a3a8-14114c60ed43"
        },
        "item": {
          "id": "80214056-2d4b-4ba3-95ab-d254887cd1ad",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b7e04822-73c5-455a-a37b-baeccbfdf3e3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694e41c5-6533-455a-b1e4-c1a8bf40218c",
        "cursor": {
          "ref": "460664d0-39bb-472a-af5c-4e48c6965aaf",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "5b640363-e065-4fe2-8646-4a37fa6aa52b"
        },
        "item": {
          "id": "694e41c5-6533-455a-b1e4-c1a8bf40218c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a78b7ba7-8e9d-4315-9d57-29b3cf5b55cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea7b9e8-764a-4e5e-9c9d-d22c70a3fe54",
        "cursor": {
          "ref": "f61b9b0b-74a9-4c1d-97d0-4cc2c3310ef2",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "753e2a69-7a8b-4954-a1bf-37222c27bb70"
        },
        "item": {
          "id": "5ea7b9e8-764a-4e5e-9c9d-d22c70a3fe54",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "da43bc43-50e3-4f57-be54-563fd4ec1eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0535b8eb-dffe-4642-8157-d1c099df4499",
        "cursor": {
          "ref": "8b500ebb-8237-4c5a-a0d0-40b7bc4711a0",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f47bd346-b1ee-4672-8730-15c22fa50fd7"
        },
        "item": {
          "id": "0535b8eb-dffe-4642-8157-d1c099df4499",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "2525b8f5-d50d-40ea-b606-194e039fa40c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba55c0e-d7d0-4af5-9514-1c6f1ac357a5",
        "cursor": {
          "ref": "78359010-2a0f-48ec-8057-7b18d04a0fa3",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b6c83b60-5cd2-4a28-89a5-6ff9da9fb402"
        },
        "item": {
          "id": "bba55c0e-d7d0-4af5-9514-1c6f1ac357a5",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e3bdae17-c79e-4ed2-a6d5-630c29a4fef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 159,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3ddc96-b355-4202-ada5-ae2eb1bbb1fc",
        "cursor": {
          "ref": "69230edc-23b5-4204-9406-b48217dba3e7",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e2ff92c6-7b45-4963-9b5f-adab0b406906"
        },
        "item": {
          "id": "2a3ddc96-b355-4202-ada5-ae2eb1bbb1fc",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "83282bb4-8df1-49be-be53-49643d6d6b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba6da07-9a59-4847-a114-566fcb85c7de",
        "cursor": {
          "ref": "ddc9fe61-46e9-447c-9890-d8996d863fe5",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "47d5eaf6-13bd-4a9e-99bc-d8c4714d3027"
        },
        "item": {
          "id": "dba6da07-9a59-4847-a114-566fcb85c7de",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f1d2645b-7895-4896-b9ff-29ba7deaa790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9f9635-4aa1-4264-8de6-df9115448259",
        "cursor": {
          "ref": "8b0255c9-6245-4a1f-b923-4d55f3e611c2",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "40c119db-a6c2-432c-b0e9-3f1ead568649"
        },
        "item": {
          "id": "aa9f9635-4aa1-4264-8de6-df9115448259",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f5d64d95-876e-4f5c-a451-19a6d8b81957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "172c6181-0012-46c9-ad25-f0f3afebf7e3",
        "cursor": {
          "ref": "55750e8c-06dd-4fc3-bf4a-fa76ddcd5102",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "86df9a73-85d4-4138-be87-e3126a716c97"
        },
        "item": {
          "id": "172c6181-0012-46c9-ad25-f0f3afebf7e3",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "bdfea437-a347-4e4b-9648-c9287e5dedfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2142cd-d21f-46cf-889c-3990f7195d7f",
        "cursor": {
          "ref": "d678c11d-be80-49ac-86e6-41f09e168f7b",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "49f5ddbc-9cd2-4161-89f6-3f068304917b"
        },
        "item": {
          "id": "ce2142cd-d21f-46cf-889c-3990f7195d7f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "12446815-72c1-42a9-8867-8e6690d55f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2513fad1-7b06-46b9-8907-a691a6bbdb8d",
        "cursor": {
          "ref": "531b5cd8-1f2f-42c6-9ade-12276472b5a8",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "99b1cd50-105f-445b-90fe-91878cb81133"
        },
        "item": {
          "id": "2513fad1-7b06-46b9-8907-a691a6bbdb8d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "65d35575-e1a4-4a92-bd2a-bb46bf6202ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88bf8c7c-fc4f-4a2a-8271-6884ca5109b1",
        "cursor": {
          "ref": "9c862688-2e37-4a15-9dc0-326dfbd1ccbd",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2cf43284-16c1-4e27-b7c0-e5e9dbe317c8"
        },
        "item": {
          "id": "88bf8c7c-fc4f-4a2a-8271-6884ca5109b1",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8b4f63a0-87e3-469c-b606-9a819c9f17ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27bad2ca-2f68-4bd1-80cb-80b0f4c560d0",
        "cursor": {
          "ref": "2eb2df23-4e50-439b-bd91-7462065d554d",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8160887c-5f32-48e0-95c8-2c3616881a31"
        },
        "item": {
          "id": "27bad2ca-2f68-4bd1-80cb-80b0f4c560d0",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "31e3b8b0-637f-4c5e-8112-e7c9296a82b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56444faf-57b2-45aa-9d29-9fcbc58ddb96",
        "cursor": {
          "ref": "830fc895-0ce0-4ed9-95af-fafa1d7fbf09",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "9ff01428-6626-4c42-9157-fb9af672aef3"
        },
        "item": {
          "id": "56444faf-57b2-45aa-9d29-9fcbc58ddb96",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3941300c-e9c1-4d3f-ab27-726cbdc74253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e94ed8-0192-4a31-a0ae-f97c55daf62d",
        "cursor": {
          "ref": "1409f354-cd3f-4c4c-9a22-5fb5ae48fc3c",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "70639346-e3c2-4ce8-b0a8-69cd4395f3ce"
        },
        "item": {
          "id": "f1e94ed8-0192-4a31-a0ae-f97c55daf62d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "96b11950-edcb-44b0-babf-0a7f46afbb7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "454cc0b7-a221-429e-b984-a0485103b67d",
        "cursor": {
          "ref": "e0ade646-cc5c-4da9-80fd-377c9d79ef55",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e1d53107-0a70-4c0a-aa3e-1a2a30969f93"
        },
        "item": {
          "id": "454cc0b7-a221-429e-b984-a0485103b67d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8e8ef489-9ecb-4bc8-b67b-ae350fe353ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "094b3f9c-2795-4b65-93ff-5a2e81e0850f",
        "cursor": {
          "ref": "1c4afe20-867b-480c-b35d-80845a9692e6",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3b03b657-918b-4091-bdcc-a454b1f18979"
        },
        "item": {
          "id": "094b3f9c-2795-4b65-93ff-5a2e81e0850f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c47f6fb9-bac4-4021-a1b0-e94c4f6f87c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca8b302-c95f-40c7-9e23-7a0faf05563c",
        "cursor": {
          "ref": "d615a8e8-db79-477e-b3f1-e3a720b7cdae",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1e99615a-ade2-41a7-8153-3e0f66d59e02"
        },
        "item": {
          "id": "eca8b302-c95f-40c7-9e23-7a0faf05563c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f6114d0b-f376-4d1b-993d-cc8b15efa1f8",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "7a3ce5c2-d699-44c6-b52d-3cea13253ea3",
        "cursor": {
          "ref": "7b98c4ba-57f5-4f23-9722-d8b3a7d6c590",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b42fc3c3-4d40-49ad-b8f6-bb79c7226f94"
        },
        "item": {
          "id": "7a3ce5c2-d699-44c6-b52d-3cea13253ea3",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "1b81fa84-472e-47b0-9cf1-d452eba50963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed05a03c-2e08-4a93-86a5-809655a08219",
        "cursor": {
          "ref": "46c05ddb-afe7-4570-8541-4a1e079759a9",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "938bc63f-b926-441b-97e1-b4b0d66ab0f3"
        },
        "item": {
          "id": "ed05a03c-2e08-4a93-86a5-809655a08219",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3f3dd30a-7278-4264-9d0a-573ada2c2e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0fe93d2-9e8e-409b-892f-bebd3f551f92",
        "cursor": {
          "ref": "940d7f97-a20d-4af5-8d52-98d8aea582cb",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "bb935d22-1c90-40fb-a301-7f609034bbaa"
        },
        "item": {
          "id": "b0fe93d2-9e8e-409b-892f-bebd3f551f92",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "506e7cdb-3eff-4b21-81bf-d5523cf94fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a54ac4-d151-42fb-84e1-b1541f43a487",
        "cursor": {
          "ref": "e9d1d84a-6fb2-4bef-b2be-2cc23ae285e4",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "90a6646d-1e96-47c8-8a8b-b0e7d2f71557"
        },
        "item": {
          "id": "a3a54ac4-d151-42fb-84e1-b1541f43a487",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "bd42703c-733a-45dc-9127-e09337f71944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871187c2-fb94-4c2e-bf9b-9e91fc768be9",
        "cursor": {
          "ref": "9a881b6b-b9c7-4ab8-9df5-9b80ec603dc5",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "6f3fc876-acef-4d33-b90e-75621b94eaad"
        },
        "item": {
          "id": "871187c2-fb94-4c2e-bf9b-9e91fc768be9",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "cce40e48-d3a9-4b2d-aca0-b70cd1c82816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2440,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96898dd2-9870-4d18-a9cf-622c389f307d",
        "cursor": {
          "ref": "0e44124f-cb2b-48f2-85b7-55b1f23ed59c",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "dbec2ee2-4f9f-46aa-8543-c48106f796e0"
        },
        "item": {
          "id": "96898dd2-9870-4d18-a9cf-622c389f307d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7835e06e-26e1-49e3-a18a-f29774879c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1446,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1a4c05-3ff5-4e68-bfbd-6731ed116230",
        "cursor": {
          "ref": "84708db8-5cb2-4d8e-8a77-3615f54a9ba3",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "5c8069fb-3917-4793-9155-44696aeda364"
        },
        "item": {
          "id": "8f1a4c05-3ff5-4e68-bfbd-6731ed116230",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5e14d63f-37ca-4710-847b-b5ae435a858b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "496f7575-05ea-4651-ac8c-42da53cede0a",
        "cursor": {
          "ref": "11cc367b-e6c5-429b-96fb-3eb0d64f8af0",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a5235f6e-423b-43de-9a7e-0063e4308622"
        },
        "item": {
          "id": "496f7575-05ea-4651-ac8c-42da53cede0a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "14912617-f6ad-49f7-9aa0-89caa7aa1c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 203,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba0374fa-f502-4483-b41b-919072e19365",
        "cursor": {
          "ref": "1ed6c0ac-5231-48f8-951f-8df9122c46dd",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "3a35fb2a-3fa4-4caf-b921-aedbf3bcc970"
        },
        "item": {
          "id": "ba0374fa-f502-4483-b41b-919072e19365",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "afe601b9-cf58-4669-97f8-d2089b3b6512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf57fc4-2095-47a6-8dd9-9c5266b68493",
        "cursor": {
          "ref": "c5799477-88e3-4db8-ab91-2d62aa8676ec",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "8b8a0ef4-1d63-4e45-a017-b35d40b3e133"
        },
        "item": {
          "id": "5bf57fc4-2095-47a6-8dd9-9c5266b68493",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "7b971aec-1b38-4f90-9ecc-0463233e524c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62499539-78a1-4585-af4b-a4e06c248db3",
        "cursor": {
          "ref": "ac970f00-92f9-44a2-8f8f-e7724d5adfa5",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2ed6dd7e-1ce0-4522-b960-a9a7fd8e0871"
        },
        "item": {
          "id": "62499539-78a1-4585-af4b-a4e06c248db3",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "7502d5a2-c8c5-4c72-abb6-d43f51d73c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05705387-9096-4a00-83f4-6b699fbb2a45",
        "cursor": {
          "ref": "73813528-4140-4f3a-b458-7b57d7449e47",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "79a68100-3a49-4bb5-b4e9-ce09512f9924"
        },
        "item": {
          "id": "05705387-9096-4a00-83f4-6b699fbb2a45",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b22fc9ac-107a-459f-88be-0efe767739f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2399,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c6d56d-f8d8-47cd-9c73-60a53ca33a60",
        "cursor": {
          "ref": "5895881b-ff37-486d-addf-edc114f4efbd",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "3210353c-cbb7-4e9f-855b-bc8ee1fb1e6e"
        },
        "item": {
          "id": "63c6d56d-f8d8-47cd-9c73-60a53ca33a60",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a835f169-198e-4140-ae8b-36908ab8bcb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2444,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a52a815-904e-476e-abd3-c65b10328f6a",
        "cursor": {
          "ref": "b7105dc1-4704-4072-97a7-f2ed3c7b4ff4",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "135b35a1-7539-4319-b756-22e77c0acf52"
        },
        "item": {
          "id": "7a52a815-904e-476e-abd3-c65b10328f6a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "78b16de9-1ae5-47a1-99e2-c4bf516146e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f0a3df-b4c5-4267-a399-17bb3778f04f",
        "cursor": {
          "ref": "d370b4db-abd6-49ac-9be9-bc7654b339ed",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ecd35fbe-bc00-4099-981c-4b9eb5d384ce"
        },
        "item": {
          "id": "a1f0a3df-b4c5-4267-a399-17bb3778f04f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f8510174-68a5-470d-8807-72552aa69543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a35b9e49-5b46-4478-b562-730b2dd6e614",
        "cursor": {
          "ref": "706da8de-4b71-4a65-8537-c4b4d98db8fe",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "579bbd66-35a8-4e80-b72d-e9de88ca8227"
        },
        "item": {
          "id": "a35b9e49-5b46-4478-b562-730b2dd6e614",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "be9fb382-7379-44b1-9184-f6090dac61ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 153,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c7eaf6-30f5-4eb7-ab59-d4cfb806e0b2",
        "cursor": {
          "ref": "399e069d-f03c-4981-a925-0d4e6fadf591",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "6ba7ab3b-f080-41d4-ad15-02236700cc6a"
        },
        "item": {
          "id": "81c7eaf6-30f5-4eb7-ab59-d4cfb806e0b2",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a947b652-c206-45f5-bff3-a3309648f0dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 223,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e15b5d-8b67-43ca-b445-fb1e8f2c4656",
        "cursor": {
          "ref": "12f19688-d844-426d-a2cf-f6332aad73b2",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a05fa484-0ff4-4fc5-a6a7-4d03ae68d27c"
        },
        "item": {
          "id": "41e15b5d-8b67-43ca-b445-fb1e8f2c4656",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "89453e2d-cb6d-4dbe-b480-c1a0f9415d5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 206,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d24b2d-c13c-4976-aeab-48d1f6fcb177",
        "cursor": {
          "ref": "0d8d7d93-642c-4097-a08f-45dbd76567b7",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "13641d9a-3e11-44ff-89d7-adf559869c83"
        },
        "item": {
          "id": "c5d24b2d-c13c-4976-aeab-48d1f6fcb177",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "fa8377b5-7673-4a77-b665-ff7a2f8786be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0363341c-e91c-430b-8d16-7a31c526728a",
        "cursor": {
          "ref": "74e69a23-1014-4a09-b483-0ac7008b4184",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b8ad64de-b587-42a6-8f58-89e15f72e959"
        },
        "item": {
          "id": "0363341c-e91c-430b-8d16-7a31c526728a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0f199d59-6132-4c38-8e4a-6a5785bbdf1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36324e14-00bd-4185-b003-a697e89ac92e",
        "cursor": {
          "ref": "cbe23bb1-c6a0-4a46-8edb-90d234e9c56e",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "37fa6ede-a457-48c5-8f1c-4f2db9d2adbe"
        },
        "item": {
          "id": "36324e14-00bd-4185-b003-a697e89ac92e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "320d0798-aa88-4b15-9833-55cf7885a8b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 177,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b956166-5c2f-4caa-a21a-ca4ecc26dea3",
        "cursor": {
          "ref": "8c24863e-7963-4c07-bf5f-64b4e7384652",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7c893c12-6922-4bcb-8848-4db61183f91d"
        },
        "item": {
          "id": "4b956166-5c2f-4caa-a21a-ca4ecc26dea3",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6bdb6038-a97b-4c77-b773-9bc2e91bd894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5b38e4-0372-4107-b4dc-bd499e449529",
        "cursor": {
          "ref": "90c124e2-5933-4f10-9a9d-a013bc51a3fe",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "4d5fe754-05de-4ed4-b792-9a888bd2ec92"
        },
        "item": {
          "id": "aa5b38e4-0372-4107-b4dc-bd499e449529",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "16578ea4-a889-4db3-80f3-4b1dc299acec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca04af7e-3d4a-4218-acdf-3ae21845d17d",
        "cursor": {
          "ref": "dbc681aa-fde9-48d2-9d6f-55f5269d965c",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "61aad636-c3a0-4ae8-a611-e7ec3ea54542"
        },
        "item": {
          "id": "ca04af7e-3d4a-4218-acdf-3ae21845d17d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "cd8589f2-f849-4b82-bdec-b39223aefdf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39aa5d77-3866-4480-b308-7657f4f43756",
        "cursor": {
          "ref": "db1cbeb4-c250-41a3-8c6c-79fed813756d",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "31d2b77b-a079-4b0c-bfa5-f2f96aba58d9"
        },
        "item": {
          "id": "39aa5d77-3866-4480-b308-7657f4f43756",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7c4fc6bc-33c4-4829-950c-1578544be111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f32b5c2-80be-4a40-b665-e7fe0ddeb6a9",
        "cursor": {
          "ref": "7d6b7bcd-ecb7-4835-a795-ac6f6c7a53ec",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0b4d1a38-7402-4c87-b718-6d1c0565ee16"
        },
        "item": {
          "id": "6f32b5c2-80be-4a40-b665-e7fe0ddeb6a9",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9ef5a561-c898-4326-b81c-dc3c819ee5a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 144,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5235fa28-f70f-4eb2-95e0-54cc442eb24f",
        "cursor": {
          "ref": "670c8e10-7def-4d7c-ae76-7c0f295581be",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "59fa3e72-cc2d-4ecb-b736-20a076cdbd31"
        },
        "item": {
          "id": "5235fa28-f70f-4eb2-95e0-54cc442eb24f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "cb0b669a-446d-40df-bd43-5acbbf222fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85210594-d8d0-4d85-9658-aab20f54c3aa",
        "cursor": {
          "ref": "af2493b2-8722-4797-9d6e-34d603a06cac",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8ebd29e8-fa6d-4edd-b054-95afb02f4000"
        },
        "item": {
          "id": "85210594-d8d0-4d85-9658-aab20f54c3aa",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "329ac0c0-0402-4f4f-a81d-58a6df6ed482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c1756f-3b6f-465c-9db5-b6ebd1693e52",
        "cursor": {
          "ref": "3b70f23b-704e-45a3-93b3-506715a506c4",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f2130c6a-db6b-4f87-90da-f9e3262eeab6"
        },
        "item": {
          "id": "13c1756f-3b6f-465c-9db5-b6ebd1693e52",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ceb0ab52-4298-4b48-92c8-ab1745e60873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0b2308-0462-432e-96ec-a548513f8dd6",
        "cursor": {
          "ref": "89a52575-3c36-4fe0-b3e3-a38c48204f31",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "48053bc9-d894-461f-858d-2c2be8ca50e4"
        },
        "item": {
          "id": "bc0b2308-0462-432e-96ec-a548513f8dd6",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b335df5c-d470-450c-84cf-e700e5a94e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c120736-9faa-4cd4-823b-ca4ca0fe291b",
        "cursor": {
          "ref": "cab160a7-8f87-49d9-a026-7c9f17345957",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1e1bb54f-4e07-48b7-8255-e7a1edd13228"
        },
        "item": {
          "id": "6c120736-9faa-4cd4-823b-ca4ca0fe291b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2153788d-9bf4-4b92-9a42-16d065066381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 175,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa8394b-ca86-4a71-9c5f-8458b3703ed5",
        "cursor": {
          "ref": "011d532f-5c35-4081-b248-fda3cae9000a",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "dc75981b-9d67-40f7-839c-f4ed8a9d8a63"
        },
        "item": {
          "id": "caa8394b-ca86-4a71-9c5f-8458b3703ed5",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "741fccbf-3136-41df-819c-1aabac09b73a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e5817b-1d33-48f9-acfd-46f723bc68b2",
        "cursor": {
          "ref": "8899405a-f652-4ef1-ae72-242e904a7265",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d37864cc-a34a-489e-a28b-7b3a91e9ff78"
        },
        "item": {
          "id": "46e5817b-1d33-48f9-acfd-46f723bc68b2",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "9afe7587-4a6f-4411-bc34-c60c8ae32070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a876e5-e257-4e51-84b6-692e9a3b6d96",
        "cursor": {
          "ref": "f68654bb-8876-4247-8cbe-4492661bae4d",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "0e1aaa1e-a7df-4a3b-9140-53d24734fbb5"
        },
        "item": {
          "id": "02a876e5-e257-4e51-84b6-692e9a3b6d96",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "fb98c4ab-fa23-4656-b8e1-9eb55963b7a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "819cd38c-9a48-4dfc-a0ef-4674717e6875",
        "cursor": {
          "ref": "acb2ae86-4ef8-4018-ba86-a9e32dc9b502",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "63be3374-c27e-4c95-abef-5eca8f2250da"
        },
        "item": {
          "id": "819cd38c-9a48-4dfc-a0ef-4674717e6875",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3837da8a-2e32-4e2b-b486-3ca1abea4363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9667d1b6-ed76-48cc-964e-0ce7d312d3a5",
        "cursor": {
          "ref": "04f0124c-8789-4a1b-8342-9213ead8b62d",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "367938b8-57d9-4439-acc7-9c379cec7b4f"
        },
        "item": {
          "id": "9667d1b6-ed76-48cc-964e-0ce7d312d3a5",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "fafb7d2b-a1f4-4106-87d2-f84b91395ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac452089-afbd-4f90-925e-fad4da9e759a",
        "cursor": {
          "ref": "6ef90bf4-124c-45ce-a8a4-e89b27d367ae",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c266a9f6-d333-4eb1-b891-0d192819ff46"
        },
        "item": {
          "id": "ac452089-afbd-4f90-925e-fad4da9e759a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "91c9ee78-3b62-49a6-94fe-48d0eb3e98a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f754b6c8-5432-4815-ad0d-868a5fbfb228",
        "cursor": {
          "ref": "6809f4aa-60cc-4d84-8d82-1ce68b734e75",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "84ff5dd6-79b8-4d36-bebe-139ad8dc8def"
        },
        "item": {
          "id": "f754b6c8-5432-4815-ad0d-868a5fbfb228",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "40a9f905-64fa-4f03-9c9d-58311ea5bc0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb2f072b-c4b9-4f02-832d-05e469304256",
        "cursor": {
          "ref": "83dc350c-85f9-4737-a6c4-d43f059315ed",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5da68808-b651-44b2-a102-d0bc2e25c56c"
        },
        "item": {
          "id": "cb2f072b-c4b9-4f02-832d-05e469304256",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "15706abb-a363-4599-a071-d160bbe941f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04cbf77d-3305-45a0-b5df-6e73b09e238d",
        "cursor": {
          "ref": "e7b7f971-944f-4e99-ad2b-1b5feb027d61",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "353b93dd-af9c-44ff-9a20-0664ed8c485a"
        },
        "item": {
          "id": "04cbf77d-3305-45a0-b5df-6e73b09e238d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8f942df9-d337-409a-a6e2-1fcc20f8d751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7269d2b4-92da-4063-948e-27cc885bb2bd",
        "cursor": {
          "ref": "90d1a332-f6c7-4337-9b76-2d4443ced1d1",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6de2df98-7f42-4177-96d3-1fe737e27802"
        },
        "item": {
          "id": "7269d2b4-92da-4063-948e-27cc885bb2bd",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "2b90eabd-1306-48ff-b743-510ace28525b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac2b529-ef4f-443b-ab90-48f4d777509f",
        "cursor": {
          "ref": "9e6b9c59-b242-453d-a04f-dd2cb673d1ff",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9660eb73-df2b-4ea2-9bf1-9dcc60dee71f"
        },
        "item": {
          "id": "cac2b529-ef4f-443b-ab90-48f4d777509f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "7ed56ac1-b8eb-4b5e-bc65-581f225291e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f5c66a-22d7-46da-8406-3a66cf5df647",
        "cursor": {
          "ref": "f92e34bb-3221-4a61-ac8f-b85885df64d1",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "66c5240b-fd7c-429a-9a23-ecc51fadff4b"
        },
        "item": {
          "id": "03f5c66a-22d7-46da-8406-3a66cf5df647",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0010359d-a533-400a-95fe-bd96468d2006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f24d7b-6878-4541-9920-5c065ebcdc86",
        "cursor": {
          "ref": "7e29b9ce-caa7-42aa-8cd6-b77f9414f068",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "14d76f3d-29f3-4160-b35e-21804afe1038"
        },
        "item": {
          "id": "23f24d7b-6878-4541-9920-5c065ebcdc86",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "dc7d39bd-f001-4007-b498-7a1bda4d67a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b26261-1935-44b7-89d0-79094cfe7e33",
        "cursor": {
          "ref": "e9b07454-c4a6-4957-aa66-0fd8ae8b237f",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4ceb996b-287e-4269-a224-bfbf03ea2474"
        },
        "item": {
          "id": "81b26261-1935-44b7-89d0-79094cfe7e33",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f315c9a5-f164-438f-aeb3-08191dce4a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d347a982-3787-4fd7-94dd-36c473d13cfb",
        "cursor": {
          "ref": "5bb7e520-a522-41af-bb1e-53b65b14a627",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7caeb79a-c925-476e-bd1c-924f1a88cfc4"
        },
        "item": {
          "id": "d347a982-3787-4fd7-94dd-36c473d13cfb",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f9c3c861-a92f-4dd2-b9f9-4a01563da525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ba5abc-a67c-49a2-9efc-f1317a9de02a",
        "cursor": {
          "ref": "1003a0f3-0c0c-4b8f-b52f-c79d1df6658b",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "28cfebbf-29af-45c1-bb10-6d80108c8e1a"
        },
        "item": {
          "id": "90ba5abc-a67c-49a2-9efc-f1317a9de02a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "fc37a13a-f97c-4dac-a979-c9229a758c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85beccc7-eb8f-4656-8730-6c93b8a97416",
        "cursor": {
          "ref": "af5af5e7-4bf9-448e-aaf1-cd8f90ba42f5",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "fba0aec1-6ea5-437b-986c-5a086249f63d"
        },
        "item": {
          "id": "85beccc7-eb8f-4656-8730-6c93b8a97416",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "455d2a44-4558-4e3c-8663-2740bfaea9ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c278b511-68b5-47bf-a4ee-8f3c325795cd",
        "cursor": {
          "ref": "a8848560-b7c7-4489-9ac8-9c635d1f2784",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "6671946b-e425-4944-8543-889722ae552a"
        },
        "item": {
          "id": "c278b511-68b5-47bf-a4ee-8f3c325795cd",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "79bc4e9d-2164-4c44-b41d-33d7b53c5cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "843775e0-282c-412c-8129-742cd8d8094e",
        "cursor": {
          "ref": "be9e5091-b3bf-4ecf-b026-3989038268a8",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "99ef90e7-8531-4275-b9e9-f2c2e0cd3b1e"
        },
        "item": {
          "id": "843775e0-282c-412c-8129-742cd8d8094e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5b1ea978-2711-4a7e-ab76-310a87a680f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9168e4c8-e1ec-4489-bc26-43b33525fa75",
        "cursor": {
          "ref": "20c72152-5754-441e-828f-108f598b2402",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c36fce02-b47c-4bb7-9286-b408e8dcb703"
        },
        "item": {
          "id": "9168e4c8-e1ec-4489-bc26-43b33525fa75",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b2847352-1ccb-4e45-bfe0-fbe9173ec2db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e61de1d8-9bd2-46b5-8679-049fd19349a9",
        "cursor": {
          "ref": "74244ca7-08b0-49bc-b91e-df17c836fede",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1b35626e-5191-43a7-acae-0e5da2af2b11"
        },
        "item": {
          "id": "e61de1d8-9bd2-46b5-8679-049fd19349a9",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "fe8909c8-013e-4ed8-bcc2-805e72cc1245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68796c1d-91e5-4c0c-a9fd-b818342756d7",
        "cursor": {
          "ref": "9fa36165-e985-45d3-8268-fd0c3132d98f",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c7f0fd96-7180-4070-aae4-355f78913b77"
        },
        "item": {
          "id": "68796c1d-91e5-4c0c-a9fd-b818342756d7",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4d04e9cd-eca4-485d-b3ad-c2f063b0c765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1b0ddc-aced-4045-86f6-595a6c89af65",
        "cursor": {
          "ref": "a4ccf92b-d9b3-4471-ae65-f5a533412cf4",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "826509b6-b6af-43a3-85d1-69b55d07d789"
        },
        "item": {
          "id": "fe1b0ddc-aced-4045-86f6-595a6c89af65",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "84ac09b9-bb0a-4090-8d56-c6362736cc92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe7bd4a-0681-444f-a1ba-bad32748e09d",
        "cursor": {
          "ref": "6b93d84e-a819-4c4b-90c8-2d85d60c0092",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "2e657e2f-75cf-4438-800d-04cf429648ec"
        },
        "item": {
          "id": "abe7bd4a-0681-444f-a1ba-bad32748e09d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d6233038-5482-44ee-84a5-d344cfa00472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f10692-8921-4d06-8a51-ea7650453a49",
        "cursor": {
          "ref": "a62cb8b4-099a-4f78-8f21-b83f9051ca9c",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "6f9ed8aa-d97b-439a-af20-6984403e0197"
        },
        "item": {
          "id": "c4f10692-8921-4d06-8a51-ea7650453a49",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "25a7debc-20aa-48b5-b0d1-ab363567b581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f9522b-9b4f-4821-86a8-ccf8327bd9de",
        "cursor": {
          "ref": "631d192f-217c-4f8b-9a9e-095213eef4ae",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c19278c7-4f5c-4917-bd80-080b7bf56318"
        },
        "item": {
          "id": "58f9522b-9b4f-4821-86a8-ccf8327bd9de",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "4d38deda-986e-4ccf-85e2-b843db2f1215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "985cea30-b115-4f5b-934e-bb2b43302d8d",
        "cursor": {
          "ref": "622f16ae-4c57-4fd4-a383-cc0a0a5e19d6",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "92a84aa9-9523-4c6a-9a54-edac54ff880b"
        },
        "item": {
          "id": "985cea30-b115-4f5b-934e-bb2b43302d8d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "63732728-964e-4bc1-aadf-026ce568f769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c41db55-1e75-40d9-a88a-ac08c4d7158d",
        "cursor": {
          "ref": "2ef08c66-2ab2-40a9-b5b2-82bb3e6c8cd4",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "46789ff2-f9cc-4a2c-80fe-e42b50f3928f"
        },
        "item": {
          "id": "8c41db55-1e75-40d9-a88a-ac08c4d7158d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "861206c7-846b-4ae9-a964-b011710acb5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dbc90a7-bcf4-4ce8-9a55-93abd6417c38",
        "cursor": {
          "ref": "77eae92b-64fd-4d2e-8397-90b286f35991",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d07aebc4-b062-418f-9467-3216e8d6910e"
        },
        "item": {
          "id": "6dbc90a7-bcf4-4ce8-9a55-93abd6417c38",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "fbb3bbc2-0678-4e64-af62-dad8f18f2135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4939eae-dc9e-4689-9181-c768ca42379a",
        "cursor": {
          "ref": "b2d9d433-168c-4728-b441-9a2b976fd5a6",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7c5bfac7-9205-42a9-b0c4-5ad9f7b76fab"
        },
        "item": {
          "id": "d4939eae-dc9e-4689-9181-c768ca42379a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "bfcca56d-2a13-402e-8492-1316212d1814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7f78ff-aa65-49b2-b101-a4a8379cc68e",
        "cursor": {
          "ref": "396eb5f9-ffaa-45b0-bb6b-12d761a2f58b",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "12a1b92f-9225-46cc-8048-f69ec22510a5"
        },
        "item": {
          "id": "4a7f78ff-aa65-49b2-b101-a4a8379cc68e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "cde58efe-90ce-4776-974b-1158d993b122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb8ff9cf-340e-4055-9c7d-70cb973d83df",
        "cursor": {
          "ref": "5131987b-2d5f-4a47-aec0-824f4a75ca70",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "54fce91e-8cb6-4394-a1e7-3db402332732"
        },
        "item": {
          "id": "bb8ff9cf-340e-4055-9c7d-70cb973d83df",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "7ac8bee4-4c30-4a04-b0a0-792e689f4f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1715bf55-5088-47c8-84d8-586cdadd49ab",
        "cursor": {
          "ref": "cc82611e-efd7-40ef-9a7a-3d5ec84f0b57",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e80416de-c4bb-4a8a-918c-3b3a01efa557"
        },
        "item": {
          "id": "1715bf55-5088-47c8-84d8-586cdadd49ab",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b67bb9bc-911e-451b-86a1-7fa39f3987cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7842f4c-b408-4b0c-98c8-c543cf69bbd3",
        "cursor": {
          "ref": "efffe06e-310e-4cff-a2c1-5602c412c24d",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a571bb89-a0a8-4712-a5ad-18eac7815c32"
        },
        "item": {
          "id": "a7842f4c-b408-4b0c-98c8-c543cf69bbd3",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f2c30d6e-656d-4985-b3ff-9fef29bcf946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c66e3ba1-561a-46a9-9316-3d44f6438fc5",
        "cursor": {
          "ref": "e4d407cd-05e8-41fe-aaed-3160a6e08188",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c8f056ba-4cae-401c-b8a5-789c31c079ce"
        },
        "item": {
          "id": "c66e3ba1-561a-46a9-9316-3d44f6438fc5",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "17533818-f4ca-4e9f-89d7-34d60153d2d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25746b9-eb61-4dee-ab4a-516447d0bb2e",
        "cursor": {
          "ref": "10b63c66-672d-43a6-8912-45b72490b5c3",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "72912937-27d0-4f64-b842-f4a86355ced4"
        },
        "item": {
          "id": "f25746b9-eb61-4dee-ab4a-516447d0bb2e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "90d7301f-e387-4122-8995-a9c2200596a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc6e0586-bcfe-4fe1-856f-96c015ed3e12",
        "cursor": {
          "ref": "f1f03439-9539-4778-88d3-6ab103a9c61f",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ca930813-4b3e-475b-a06f-b4c40008bd67"
        },
        "item": {
          "id": "bc6e0586-bcfe-4fe1-856f-96c015ed3e12",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "22e07dff-2111-40ce-a56b-97feb26d3f73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b8b5f09-8eb1-472b-9f88-a25da8749c70",
        "cursor": {
          "ref": "70e2d421-c784-4f10-9875-f991a89e2a82",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "401efc2f-a243-4f2a-b56c-8215a05963fe"
        },
        "item": {
          "id": "0b8b5f09-8eb1-472b-9f88-a25da8749c70",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "561e2ea0-43a5-4380-9287-4fc1734ab513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1be771-e8a6-4a31-b5a8-252bf71709f2",
        "cursor": {
          "ref": "88c7e7a0-be4e-4b68-8337-315f61f88565",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "73f2e082-234d-4987-9c2a-eba5a27ebcab"
        },
        "item": {
          "id": "ad1be771-e8a6-4a31-b5a8-252bf71709f2",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7520e082-a2bb-4f8f-aa9b-1fc3b4cd8eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae78f491-dc7c-416e-b061-0f49a11d80ce",
        "cursor": {
          "ref": "d82ca4af-4eef-40f3-ad76-60c3a9ca18dc",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5844280e-668a-44cf-b176-a9f990a9c997"
        },
        "item": {
          "id": "ae78f491-dc7c-416e-b061-0f49a11d80ce",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c1dc327d-5346-45ce-9cd9-a8d349221994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff3c965-480e-40f7-9b1a-37822507a596",
        "cursor": {
          "ref": "ff427afb-6ce4-4eda-8e3d-291f1f9ff9e8",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "07afa974-5d3b-4d2f-b6c9-03a6d70eb048"
        },
        "item": {
          "id": "6ff3c965-480e-40f7-9b1a-37822507a596",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "fcdc8dd3-0c34-499c-abb3-f183b41b0f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 153,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20dc884-ccbb-485c-a10e-10fc51addba4",
        "cursor": {
          "ref": "fa67321d-83c8-4dc4-90cb-c5145b548e2d",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "350684be-767c-4951-9424-237c635f9cd8"
        },
        "item": {
          "id": "c20dc884-ccbb-485c-a10e-10fc51addba4",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "be129e02-19df-4d5d-a141-f4335b248a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 154,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0387bce8-0942-486b-8bc1-d638698ea51a",
        "cursor": {
          "ref": "79cff69e-8ec3-4bdb-9829-7abc8aa07b00",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b0bae97f-a344-442d-9cbd-ea5724123421"
        },
        "item": {
          "id": "0387bce8-0942-486b-8bc1-d638698ea51a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "baffe026-89e7-4201-882f-e47d5ea1ddbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5593670-7fa2-41a4-90f1-61effb99ce08",
        "cursor": {
          "ref": "a0abb7f6-a41e-45de-b3f6-961ebcb7bebe",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b02e2ab9-a2fa-4632-8d5a-ee1f7623cc3d"
        },
        "item": {
          "id": "e5593670-7fa2-41a4-90f1-61effb99ce08",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "374b6251-f884-4ddc-a2be-d253daff9dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f803234-aead-45cd-8bad-5f45dc9c83c3",
        "cursor": {
          "ref": "a421cf35-f5b1-4260-a4f6-c375d726702f",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d796963c-c8de-4c87-99be-0c09606ae32f"
        },
        "item": {
          "id": "9f803234-aead-45cd-8bad-5f45dc9c83c3",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d5a309ea-0e74-4c71-a884-b334aa175bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07cd32fc-7853-4c20-a731-6ceb22c3d6c7",
        "cursor": {
          "ref": "13360665-80c3-47f6-93f5-bacbcb48f3eb",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4fe97692-a77c-466c-af97-67757f7691d5"
        },
        "item": {
          "id": "07cd32fc-7853-4c20-a731-6ceb22c3d6c7",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d760f5cf-6857-4c92-8511-47474200b3b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a6302a-894c-469e-b197-007422c18e6e",
        "cursor": {
          "ref": "002320f8-5a34-4f38-87a4-38ee099263ee",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b1e3fffa-1e69-40c9-b407-b24be99a47ba"
        },
        "item": {
          "id": "e5a6302a-894c-469e-b197-007422c18e6e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "da14d784-980d-488e-8a36-0fa02ddd38d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b189fc4e-05f2-4d8f-8125-d1c02249194e",
        "cursor": {
          "ref": "5581407f-f8e9-43da-9a3c-a7b4625261f1",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "5ba9f6e2-68a4-4462-b589-7dcaa0eeb88e"
        },
        "item": {
          "id": "b189fc4e-05f2-4d8f-8125-d1c02249194e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "bb19d037-f951-4058-91f9-89bfee139fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81835e2f-db0f-4062-9bb0-89ac39de0e06",
        "cursor": {
          "ref": "c94e6b92-c4e2-4e7b-9773-0754457e8b0c",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "274da63b-bf0d-4cbe-89ab-cc759a0020c1"
        },
        "item": {
          "id": "81835e2f-db0f-4062-9bb0-89ac39de0e06",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1b7946f2-f459-4699-a568-e58827bfb13d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d977da-9e0a-4b1f-9793-10f215a546a8",
        "cursor": {
          "ref": "8ea9d03a-ee8f-49a7-890e-85cad5e5935f",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ae417318-c705-4d1d-a076-4437cbe43c1e"
        },
        "item": {
          "id": "e0d977da-9e0a-4b1f-9793-10f215a546a8",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "83e66f16-7af5-4521-b3e7-b86e5205f6cc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49dd6d45-a61f-4241-8364-e368890ef6b3",
        "cursor": {
          "ref": "803910ea-2fbd-4201-9ca5-69afc7509b2a",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "03306dfe-578c-45c0-af74-c00dc93fcf42"
        },
        "item": {
          "id": "49dd6d45-a61f-4241-8364-e368890ef6b3",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e7c603c8-0eb6-46f0-b39d-0181174d95d2",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f17791-2db5-4e78-a684-bfd8a80fb828",
        "cursor": {
          "ref": "e55f18da-c227-4152-81fd-4b0d4acac7dd",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7c951eaa-4d21-4db2-ba20-3032a863de18"
        },
        "item": {
          "id": "36f17791-2db5-4e78-a684-bfd8a80fb828",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d462cd4c-a0ea-4bbc-bdad-ab8ed00cb6ac",
          "status": "OK",
          "code": 200,
          "responseTime": 2832,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb4950ef-1da6-4bdc-beaf-ed495abb236f",
        "cursor": {
          "ref": "5703f926-ca0c-4a4e-9a09-3f4d32411fdf",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0a076bd0-01fe-4b66-bda7-62d94d36627d"
        },
        "item": {
          "id": "fb4950ef-1da6-4bdc-beaf-ed495abb236f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7baf627e-1349-4c1a-a25c-f6e03e0e8a95",
          "status": "OK",
          "code": 200,
          "responseTime": 4212,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93a1ba1-7013-47dc-bc1a-e4e0c8dfa9cd",
        "cursor": {
          "ref": "d4019820-59de-4367-b1d9-4181ebd4a29a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5ada462e-0f6b-4b59-a3a1-424f17d8d712"
        },
        "item": {
          "id": "d93a1ba1-7013-47dc-bc1a-e4e0c8dfa9cd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9c7da920-047e-49e0-9195-c3d3f6307cab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93a1ba1-7013-47dc-bc1a-e4e0c8dfa9cd",
        "cursor": {
          "ref": "d4019820-59de-4367-b1d9-4181ebd4a29a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5ada462e-0f6b-4b59-a3a1-424f17d8d712"
        },
        "item": {
          "id": "d93a1ba1-7013-47dc-bc1a-e4e0c8dfa9cd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9c7da920-047e-49e0-9195-c3d3f6307cab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a96afd-79bb-458c-a15d-0d4467b36c5a",
        "cursor": {
          "ref": "35fddabf-eef5-432a-995d-ef00b1ac14ba",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "cb7df4c3-9504-4f46-8816-208d65151b65"
        },
        "item": {
          "id": "e2a96afd-79bb-458c-a15d-0d4467b36c5a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "cd0fc82d-5df5-452b-a298-9cbfa4e6266c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27bf3e59-bc83-431b-8560-c9a36393f574",
        "cursor": {
          "ref": "7ac0e36f-0895-40c0-bb20-f06c85ace68b",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "67fb5e27-f71b-4cd4-9e1f-a70ebd5f548a"
        },
        "item": {
          "id": "27bf3e59-bc83-431b-8560-c9a36393f574",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "21c92f01-4411-43e5-b60e-d47629103fec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}