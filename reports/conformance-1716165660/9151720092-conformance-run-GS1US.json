{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "713a7a61-5cc4-415a-9976-fb977bf763c4",
        "name": "Clear Cache",
        "item": [
          {
            "id": "0d0948be-6d81-41a6-a3eb-713759bb639d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c4bb46c3-c30d-4f99-8de4-691d216da835",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b575df3e-7232-4569-843d-0e3088ea35bb"
                }
              }
            ]
          },
          {
            "id": "e2ef0732-1a1c-4d11-a402-a9e8ab29e625",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6f4b02f0-167a-4333-b2ed-be00273cff19",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6fec2d3e-e460-4386-b5a0-bbe8cf7d3c66"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "02d7e3dc-b7fe-4702-852a-9dadfc7e1fd8",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c99dc36c-1b52-4adc-ac9a-c2289b9771d1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bef5292c-0014-4015-97d3-be6fd4c732da",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e99f450-ed1a-4b9e-9091-3d5e8e60e9b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "79fc4e5b-8093-4972-92a3-ab0739755afc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a560e83d-a63d-4284-b8cc-4e15e4a99de3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f3b72353-9f9f-4eca-a0a8-c32d59df22b4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "710c1511-abef-4110-b4b7-3a4ea9663c1f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ee08865e-7966-4b5e-b71c-3612e91e3a71"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b6626adb-3e9a-4cbd-8be5-31c281828bb4",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "64087dd6-21a1-4c4a-a6c3-6bcca9b48849"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07299f41-0ead-4285-aa50-f38773734218",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "54247aa4-a162-4717-b0d9-e255f192e36c"
            }
          }
        ]
      },
      {
        "id": "e231b8dd-9196-41c2-b1d1-43d7825325c4",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9bac232b-6e19-49be-a9da-c5be3c0bc4ef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a7db22c5-49f7-41be-be8b-c751b97cc8ee",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ae6776e6-f973-4858-9ba4-a8629c53a82f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "091c7ff4-270d-41be-a9d0-6598dca1e5b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da439c23-077c-4942-8051-5d272c0a5977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a1c1eb-0c3f-4c6a-abf0-e573da751f7a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5936ebc7-c4ec-433a-aabb-40e18ed82d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ffe17616-5a0e-43d9-9fdd-41bdd71aa7ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b76fe6e-99d5-44ad-865d-5609b6e8832a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f13fb74-9705-44cc-a3ee-58891d843e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c34ad647-290b-411c-8fab-330c79d0c6d0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b4b7c357-e3df-41a4-b7a8-31aff21df76c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2e524ede-5931-4e0a-b8c8-a8be53a4f073",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b880cba5-03dc-4102-acb7-fb2ff073f594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22971f65-d1f2-4d10-8907-75dbd82a82b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad809e6e-4036-483a-902a-3b0653c90065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d660b79-97e7-413b-996b-9fafa021fc59"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "22fe9dcf-20b3-4283-bcec-de542824e577",
            "name": "Positive Testing",
            "item": [
              {
                "id": "27d1d2b5-cbf4-4833-bdfd-fa390a830647",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b83647c3-91c7-4898-bc94-1d86ed71935b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b0c4eafc-5020-4289-a80b-3592ce32e28b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "148fc618-34e8-4c58-a02b-ed0ab851edc2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "66f0206f-ab1d-4309-8827-59904a0559a3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e48b1647-b9a9-4c7f-be88-b31678dfbc7b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "80eb941e-dc36-4d23-85e7-b831abd04bbe"
            }
          }
        ]
      },
      {
        "id": "7bbe4b64-c542-4ea2-8304-500dfbe7eca4",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "65355529-fe33-493e-98d7-5b76748a40a9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a5b31307-a88a-4ce4-b484-1099c542ba8e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "3c5534d0-a615-461f-9f5e-2bfe2ea02249",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1049c9c-4d7b-4a41-8ef4-319fbdceccf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f439a83a-db81-41a8-9cbb-c4aaa3353bb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce34298d-a421-4550-99a5-484f0316621b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87625dd8-6362-45d6-a8f8-04a8ac8d49f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d359e605-8a5d-4b4c-b7a9-149b87f7b716",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c96db76-e9cd-4900-8d82-a582d46972a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99db87aa-5b6c-460b-8570-8e4fa3ca42a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f72eff3e-eb25-4d6a-93bc-c008c1791cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40b0b300-5e85-4930-9814-d842a50aa4c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99069eaa-e2f4-4339-b75c-377768277c53",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bad2edd-e5dc-462d-9c85-db9e6f232629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a27019b6-5201-4019-80d1-9bdb6c3281d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1976a63b-8295-4bcf-ac89-76cd9e2505c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "445fca2a-a4f1-40b6-bfcf-6d4d811bfa45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8139f665-c257-403d-b81c-83630c9fce61",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d9fc6d-13d1-4c84-a397-bd1f1c2e9ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0cfc636-836b-4fdb-9084-0ff1bf7e04d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc02be0-2106-440d-8d76-13baff068deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b75a0de7-066b-4285-98c6-f7e7e14aed28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc9ee8ae-2c75-4f50-8ab0-74cef59e7ecc",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8090fe0d-3180-4cba-b084-39a2b0d6899a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82520ccb-a499-4479-be28-06e2fae5b1b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "112b430b-1eca-408f-8a52-81e850de6fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e12d8825-a8c4-424b-8ee0-1110dfb3d20b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4754182b-8f79-4c41-a580-3b92b63fee29",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9461b496-0d19-4a08-8bde-32ce09222399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3d2b57d-2848-423e-86cc-fa138cd3706e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ca31e0-1ee9-44f1-8220-82472008b8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7611d19-09f5-40fc-ae46-2793b9c171fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f9650c5-430a-4bf1-a627-c0f3110837b9",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45dbf37e-0874-498f-bb58-18b8aeebd9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff8c387b-4499-4b83-afbe-612dbd87fb68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a2fc6c-166e-4b2f-8d6c-bf2c93ffd4b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "659f2c84-c293-4d1c-8333-c9c694c687df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae3edb3-bd34-43a0-89ca-d1dadfc47f95",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2122b710-0cb2-4bc5-b1aa-4a86e8bc5b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac806b81-3dff-4fc0-a57d-d2652a23911e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "183b69fc-85e8-4cfb-9b23-8ae331a341c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43e209ac-7d28-4be0-8517-27aae91d5a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a6e3e8e-eb40-4a49-8a2c-89507cddea23",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "729a88dc-39da-4691-83c2-645b65d2fcb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed96f0b1-4268-4024-b49d-cbddff2a7c0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c0a1630-ab66-4238-b3a2-3338a8038595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c891903f-8c61-47c9-84c4-cee867739e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba0f3493-6e21-460c-9a6a-2f8cd3c20e65",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "752a418a-5eea-4cfe-afbc-0ec57c7d8d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "246f6686-4458-493f-8987-6f5d86b4028c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c120957c-a36a-419a-ac45-d3323c784768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "230e66b6-854b-4daa-8d7a-042cc12d5f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f04f096-65d9-4798-8c6f-1b00e1958d85",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d25d91-2148-4fdf-87b9-991a3c774880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c223de8-7338-40d5-aed0-dd875d350dbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3689400-b1f4-4a0f-8c1e-2e1fc336d352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "617a8595-240d-4b54-ad7a-179e208383e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac9b9e5e-9910-4246-a9f4-ec1f48659010",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe3c8ab2-e005-4ec1-92a6-45ea04d76ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af5698ca-fa42-4e2a-9234-928d2582c33f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99fb2cb4-4105-4c61-8404-227f35b21f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "667c1054-1a59-4638-857e-c443c7222cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "223ceb93-83d1-4150-8632-6a8e17ee77b1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a8a78ca-b2f2-4b18-8eb6-16790f20e8a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61fdd477-049b-431f-81f2-5b29b9b614df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421929d1-e0b4-48f7-b751-14b2f33e26ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7fb462f-56c2-4615-9663-a43118afef94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e37dc25f-5f2d-44b2-bd53-112e3ea89fe8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c4a5ebd-dd71-42a4-bf6b-0f71ebb1c0a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc3dba3b-a39e-4f84-9515-3d793fc1c1ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "581f4844-0403-4888-94bd-42576e0e831c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aac632bf-cb09-48ba-8417-3bd8bcedf805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7455d444-4f23-4f95-952b-8e9178d513ea",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "229eaca4-4577-4b1c-9e4c-52ea6e36af10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2196630a-5f26-481f-93cf-46257eb96f79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9027aba-21b8-4088-8a83-2c24760c0e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ddf7d151-9b90-4051-a53f-c232c245fde9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89917594-2416-4cb5-8157-70168e8cbc35",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ba8c02-2000-415d-bdce-26899412064a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "166b6332-18a9-40ac-aebc-6e6afb9c2065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b286ae5-c72f-47d4-8c29-d4498b00b7a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1f24f77-1a4e-418f-992d-b6ebe6b83be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b124272-b842-44b5-a0cd-a4a552ac294c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ec7e44-92bf-47ad-9a4d-8bc7c19af60f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "988154c8-d128-49c6-aaf6-73e2aa80434f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f6915e-d864-4865-abb8-7d61cb69254d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59014088-6281-40ab-91c9-b4ea0de8f6a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa198aed-3e3a-432a-aba7-d95135ea6f7c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96da59f-1df6-4ada-8e16-77e5a79148d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd44e9aa-477f-4a9a-a3cb-b026cd82f13c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe2f55d-4716-49e6-b7ab-b7955cfa20d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2deb5dcf-d337-453f-8237-85dc1c9d0dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33918d8-1150-488c-8930-8c255dc3ee1a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9271c36-7af4-4da9-940b-ed550b217476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86a27b2c-fc99-447a-b00b-2aeff18d301c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c3df2ac-6022-4b4e-8ecf-5e35e71e2de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9e4091f-1cb2-4716-9e63-3d65998a9c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00efbca4-d135-4fdf-846a-552b66c4d199",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868c532d-3614-447c-84ef-d9240489d8fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48b5ccbf-afa9-4888-962c-cff08d90e9fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "702e454b-fec9-4d10-8329-18b655bff800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c82843c7-88df-4d64-b0a0-37a8f40026e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b193750-64f2-4bad-86fe-706fce00586c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "129b9fc7-5c5b-4c47-ae31-130ba2293d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f041ea8-d92a-4b9b-bcec-fbca9b62fa29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d914027b-aa46-4d54-9ed8-e1fbb79d8159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b10d027d-d77d-444d-8cdc-6e78baba5934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "749a61f6-9be0-48c9-90ef-785b634e17da",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "840e8bd5-3a98-4491-b4cc-27cf8e0c519b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "500fab34-69ef-4719-805f-c24841611b36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78eb5bab-0427-4cee-bc5f-0eda9931fa78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed0e9620-0aad-47f2-b4b4-6817ff241eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81496fab-3888-4d4e-bce1-3b7fac0e0ce7",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe20f0f-3f4f-417d-b66a-b43bf4d456ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "905ef497-0ca3-443c-886d-852f0b4eb96d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9868860c-3f67-496c-9270-40642e8fd13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "45877a07-7b4a-4fd1-9d17-838b9cda7af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d50c1e14-c977-4aad-bdb7-119fb297f389",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72be6020-a867-403b-b941-c2aba2bcbbd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "563c72d6-a4b4-47e9-9afb-c6b299480f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7639690c-5f9d-4d57-a568-56695e5a2084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "88d10169-8593-432b-8b26-0d159f3131a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e304b56c-87ba-4013-9c14-6d4b73c217f5",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e445d87-6b0d-48aa-bed1-d0c4eaea16ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be66d582-7b95-4098-86e8-0aad47dac739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a36315-fb1d-408f-80bf-eb1d1fe26196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4bef9cb-facc-4831-848d-953702852b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e007fb69-1a01-4b15-9134-4e157b9c593f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd4b7c7-358f-45fe-b154-112bdd9d0136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72d06894-ef45-4aea-a18f-89f335fb694d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8596ff33-2dfa-41af-bba1-964a6d363acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "05337519-1114-4ccd-ad31-fc4dd93d17ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c398064-7533-4a6d-b1eb-9372d2abd0c9",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "988acc6c-3f1c-4ee8-b09d-8d31ecd2a11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c639381f-c83a-4e11-af59-caaebfc3808a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149d4fc0-393d-46dd-8089-ed0a14d2c3fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd11ae3d-080e-4c35-9d63-792abb2c938d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f245a76-9bd4-473b-97a4-61dab7f6dd7c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d5eac1c-7944-40f7-a799-5d7064e30301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cc99cc4-fb4d-4856-88a4-7f9eb25abe34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d4316f-80ac-45cf-90c1-5f9c8b2a2b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "278c6b9b-5ae2-483b-83aa-a228fbf015d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c78d697-813c-4c70-b03f-db28c193d11a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e4cf4a-7715-491c-9fe0-f01b0c65ff3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cf34d3a-97a1-49b1-926f-afcf3ce365ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "638a466f-1579-4814-af5e-38e3d3f36586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6cbfb8c-bc29-4a3e-b86f-7e3319ab7828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d76aee-96c4-42a9-af06-97ec2d931c3d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4714bcb7-9cfb-4fae-a100-58ad99934ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72f266e2-7409-4b0a-90de-0bb16cbadb5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e56559-d8a7-42fb-9a56-431ee6cd408b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a5ec877-c917-486d-87c7-ce47a69b39b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8363dec1-7bcc-4cc6-ad08-78a3264004c3",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b82b95-fdee-4855-b541-021b977f6327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "260d6495-9d55-49fe-804b-292d18923c61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "916dd76b-5855-41ed-b301-a2e50c27afac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a24ea2f8-e671-4abb-a26f-7b8036ce3267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "506506bb-5e86-4176-a846-6803b47132c9",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a3b4026-291c-45b9-8c18-424ed5e86b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c430084c-b370-41bb-9048-3ea5744b4461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55bcf086-9f04-42d6-ba57-4c2b37bb8a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac62ccb7-9944-479a-8365-ca77c2368fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c0708a1-ad80-4ecb-8947-7132c76a9b60",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe6b136-2df5-402e-9658-1b740a0ab4a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e919b214-0094-43f4-b8f8-d96ddf7b216d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe678e4-e149-472a-9698-b34819b55626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ade81db-2dc0-47df-a20c-644728858c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2530e5-bb85-444b-a4f9-35c87a5003da",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f412706d-c2c7-48f7-aaa1-f0f5024467b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cde0b34-a6d7-4012-98df-7d3f7513f002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c50fc77-2905-49e8-8af7-155b002963fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "43f526e0-f889-4a86-8df4-5872693164e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "157a11b7-cac0-4ea5-b03f-86681713d0bf",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7542e19-26cd-4116-a6f8-63efe320bd64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab4dbcb9-0c46-49f1-94a2-61b0946ea927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a3f7f5-c8aa-4ae9-8eac-5801bd1971a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "67ce7fcd-2aae-426b-abeb-5f55e1045045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c62ce7d6-74d8-4776-8c51-8f1dc48b0b18",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf8ab10-10c0-4160-8c62-dbc4692c4985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ab39a9fe-3426-4882-82c0-11ebd6430188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41dd146-94bc-4240-8993-2c14346f72d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c2ace934-b827-4bfd-a9d3-ef821ea8c1ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecebf71d-9b34-44d8-8dda-3b1101a27e0c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "112caf0c-19a7-47fe-93ca-e13d73f33162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57d4e228-fc68-4668-826e-84d3aefa8348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cba16ae-f163-4877-bbe6-4daf69766887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "82f6c7f9-9c08-400e-ab66-5d72c6969fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e478406-e4de-4002-838d-2ed1f2be5487",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede28ae8-88d7-4046-9431-ce18992dd1cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "482315e5-f6fb-4728-9e60-2a57714e173e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ebdb09-fb16-46b9-9273-a3932b4ace91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f58b3bc9-5794-427a-a22b-d334137a5363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b831ef93-4f51-4208-83b3-0e6f3fdea4e8",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3917ddc-6402-4cd2-9772-230d6298cf9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7492c8a4-b396-43cc-b395-9debab68b394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d873ab-3709-4216-ae0b-91f6e4e4c7fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3cb6aff4-d4ad-41ba-aab9-dd08199ef03b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77807f5f-8901-4eca-ac0b-8a83be7b7612",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efadc86b-81d6-430c-b98b-e71146aae754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be99ad2d-b8ec-4fb3-a593-77a2df7b6ed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a81395c-59d7-4cfd-9316-db36969f0094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e801d86c-d3f4-4ad4-924b-c06df82e94ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c90c11e8-d87e-4ae1-a754-a121f1b31fd6",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0dab76c-6ccf-4c55-8e02-c67d80085be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2c8a21b-569e-4401-9864-c8f44c8bf359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b2a986-3af1-4eac-a2cd-dfa2a0bdf39e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b146c9d1-4ff4-4c64-b6a5-89569e41cdd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c348692-6182-48c8-a1e0-51913f442b6c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8f00fa-44cd-4529-af58-b3d34f99115e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3862a0bf-9eec-4beb-975f-1f99eb15dae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5b3d29a-58b3-493e-970f-da7430b5d5d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "8578ac64-56da-4e97-b183-de4b015c2c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23553da-fb86-44d6-97f5-4684236aba11",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fba06e9-68f5-4c16-bcc4-4380107a6b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4697f6c6-7777-4c70-a72b-c5d428fe028d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5920b909-b79b-44d5-bcb4-1f187a134b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "86fc9777-3783-46fa-aab5-511a63deaa48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2491f61e-2b0e-4952-a8cf-ef178db7337f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e31c5c93-ac0e-4d7c-bb08-f44aab425bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc060cb7-1439-4390-922e-c3379a0c8939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2742ab25-9347-4178-99d2-bcd18e45e77d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "773d9234-e17c-428b-a49d-acbef13d6dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b35f03-653d-454d-839a-46ddc574ca37",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd83be5f-f69b-4677-a96f-7a93ea3b09d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "866fae26-866d-4610-9fb4-8cfc3ef2e6f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dbf051b-6801-441e-9a63-dd0dc52cdd5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f719e57d-b822-4f77-84a0-6dbad5552d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db8ee756-6341-450f-b68e-ee5b44ef49f4",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd18dd4-8b63-4284-84c2-f9b165fccce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77c87968-d16f-475a-ad87-763243a9de53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ce5326-9862-40e5-8903-ef57b28a00eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c8e162c-e6df-4d62-9871-3591289b070a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d6aa99f-d4c5-4b7e-9cad-00879554d65d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2601cfed-4533-45a2-877b-b1b3d0779b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75cb4989-7e96-42c5-ab74-32adb82540b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0219802b-4248-4e23-b073-1a7f4c2e7e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8b55471-bf0a-400b-8a8a-66d4f1bb8688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50fc53e4-341e-4d14-a38d-fa179185b711",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc50d85-f161-43ff-b7c5-1edfe8ce3809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b56e8d01-d94e-468c-a180-a9133ed3cf14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d263bf04-d395-436d-a0e0-60eab9d70ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab7af478-d7bf-4376-ac8b-46fe147446c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe93eaa7-ae60-4cae-9e71-59309332fea1",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c503880-5260-4afb-924b-b42f208f7c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aa1ad0b-8148-462c-805d-e8a9cce866c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c27da5f3-81f1-4078-b02b-bb77201ea66a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "37cb7c5f-6ef4-4281-9a07-e87b9d755472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f0083b-f40b-44e1-8427-a2eac1c2389c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "952cf7e3-95b1-4fd4-ad07-fb6af70e61a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "437f9422-75d4-4ae1-9085-dedecaf70bb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ae90cc-2159-4b88-9ad0-287354c24e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6d5f7038-e0e7-4f69-8cdc-4c7595674ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "703c7a7a-db67-4b18-9c61-e0fbd775aa10",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d821e967-4812-4898-a890-332f972ea7e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f3cc290-533e-4323-bc4b-309fd0a62a48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46a9a59-d53e-4b55-826e-d50d25dcda4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ef0d5f9-e1d1-4c20-9a53-9c16297423e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc6368b1-6dc6-4413-8fc3-a6a2d00b16f3",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d1af97-219f-4d57-b901-1ff8e0069987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6599e63-302f-4e5d-8127-f1c092931d8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601e80d2-a785-424e-a35a-4a09cd443b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "629af9de-e53e-4bb9-96b3-a12ffbe1afb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa5964f-96aa-48a6-85dc-737573fa0df9",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ecd5ef0-32d4-4278-86ea-fe46d9bd1d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce818c36-45fe-4bba-abb6-fc5c5048c950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc406550-2148-4715-9a34-e045bb70b42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "090d02f8-98ff-4e11-a54b-a74eb6418f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac71831-2edd-476a-abc1-3e6c74ad7971",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97214b50-6d00-4e42-8ef3-402f78712f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c628f467-1130-4655-b12f-b00ae590741e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3d1736-3d9a-4ccd-b2bc-55fb697dc81c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "258c904c-ec8f-441d-bf3a-b3df8a13f3fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d2aaf0-b7d3-4472-bd5a-0c0a6c1fe995",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd9d699-0997-4e05-a35a-09b139e3ddd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "959b73a3-7683-411e-abfd-12fdd9665719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d34f1463-170a-4e24-85a9-c7c4dd31c7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdec49aa-c115-4cf9-9a8f-33f5679db3ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2357dc5-dbae-48bc-a93a-b414e78fa560",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3fea67-9ea0-4693-a686-dad1fd6c627c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8c370c7-2190-468b-8462-eb5ff87a030a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e4ca7ad-e0ca-4a1b-94c2-790953d6cb5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c6d51749-a656-4a80-97d2-2e4aa7206ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe73531-3fa6-49a5-9e33-c358da3b409c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c17548a7-3d9f-4be7-8816-42502ed46618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdc38740-4e5f-45dd-90bb-827a6f92a88c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb7d6d0-2256-4f5f-8a71-aac46868e0eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a03e0de4-03e3-4e0a-bda3-e75a0a0444cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a699d4-e074-47f1-909d-5a14d97a77ee",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a7ffd1-1249-4f13-9556-3163511351f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fdf7715-d980-420b-8b7d-ad8a67f4ecfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8994ec84-992a-416d-affc-320b9521a357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b644cc6e-4c2c-4e7c-b6b8-b829ca4a3034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c25d3a92-70e6-4e6e-8ede-90624641636c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8abdbf-2bf5-4528-b844-37653dcb1b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "862c4e39-8c19-4464-9694-9b7ae58794e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f41079a-7b3a-4641-8da8-95c1d5ab5596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8991cdf7-6c26-496f-b644-10a48320b77f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b0435f-4d05-43ee-bb23-b94ab74f2bf5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f880e31-5a9b-495c-9913-9f03f5cf258f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "268266b1-693b-4fd4-9593-d9c0e43144c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "052a276f-feb5-4dd6-bd09-218c705a1708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd1f51a6-1880-49b6-b671-dc8ae4c2c36e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "252b2f7f-752a-452d-90a8-9013548974e6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a8eac0-b5df-47e7-a47b-83c3bf1ebf29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61024c3d-96fa-4469-814e-a8293287e510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dbf008c-f9b5-401c-b1f1-f0b9ae2ddea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e0e4add-2f0b-4bd5-9299-210007b34711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d20cb98-b761-4e54-a0d9-b7ca6c33d943",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "117ea6b0-a913-42ce-81d5-276f0c03ec31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89caaff8-fbe9-4a05-a7ab-8c4a8a761bc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49dc113b-3642-4df0-bfe6-b65006203a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac09ec1a-04a6-4863-bde6-138effd65333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c4cba7-98f3-4090-8435-77dcdd6b9484",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac59eb7e-7cd1-4817-b76d-2b8d9e4e7d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77da9476-871d-461e-b15e-18bf3f42af5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0289dbaf-cc1c-4344-bfa6-a2b122db68dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d549af59-3926-4a3f-8ecc-062f6afef5ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d24c478-978f-43cd-85d7-fd133f931d76",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3adb8765-0f97-4f3b-bbdb-73d533a31a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ac9b05d-cb61-429a-8794-ca5ceebd4f6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca29a440-4dfa-4234-afc8-778adeaee9df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e625252-30c2-4816-a210-c76f50834757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "061aa59a-3393-4fc5-8c86-0e7ae391c509",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4ff430-4bbc-4d9a-9f0f-6693cb0359f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc5f7016-2680-41d5-ba3b-bff6d5d406a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed20f96-be82-4bb6-8dd0-bf256a7b78b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "048fe4bd-02b5-48c9-aac9-b3a2de6a499e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3146419d-018c-4b2f-88b4-bf1264b6dbba",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60851b67-73da-44f8-bd12-64c54b946a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fc11f2c-8e0d-4ed5-9804-c01a8de9d459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "411a1e05-6632-4455-94a5-908fb463eeac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f3a460f-c214-4b5e-92f5-f1244a81bbc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f03bde55-9d26-427c-b538-83ba92204152",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b20dbe7-3b5c-49e6-a671-170dc209e8cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9798bd2-712d-4b0d-8e27-36a50f0c96b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae82613-3eaf-497a-89da-67403400ae03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7ec2b638-7524-4502-a4ea-b67b7bcd382d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b3f6c1-6bcc-4657-9bb6-735e369e3df2",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf76f47d-6149-4587-8dbf-192457080d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "826f2c1f-4ace-4db9-b7ff-608be127fbe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9eeadba-d92e-4a90-99fa-198dc8bc3fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e83f2538-19b4-4b0d-ad0a-f41026799ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee3cf31e-5171-4f5d-a57f-cf8205d416be",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d699b16-7dfa-4fcb-982a-f4dd35e47547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e846868f-0b2a-421e-890d-8867f273e9ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64cfa8c3-8493-4f16-ac53-149ed5af01ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea770ee5-a980-4052-8514-9f695e4c9774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16977027-816c-47fa-a896-02d97948babd",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45129785-3e44-4926-89c0-94d4a4f8df81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea26238-4dba-4455-9138-dd14b3ce1931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c487ae39-202f-4ea5-b922-0c7d6439cccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "57922194-e5ee-4f7d-93a4-5f36238378f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fbe921e-b990-4d03-aee7-a77d5ba62df7",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a8b569-5121-454d-9744-e66c48e49a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d65e0be9-d8ca-4281-af26-731a0fd2ad02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086ecb4f-639b-4f6c-af88-5b4c418da43e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f52eb2b-384a-4343-abc5-c7b82de771e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63270b84-81fa-46d2-b386-e0ba3c48ff7d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d8840c-1659-4875-97c7-85bedd467f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1e2202c-a038-4bfb-b0e7-685f4acdf729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "977e6be1-d9ec-4af6-ac1f-e47e6be2306d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e20eb185-66b5-457c-9e72-66227a6b0878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c77361-df23-4ec4-9c07-c5cd9890a7a2",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be407047-481f-49ce-a0d2-682ff2bb4ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c2f9518-f69e-431c-a3d1-a4cfae973d06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b62e07f0-e07e-48c9-ae9e-5932088d420c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "359b0b2f-ef84-42c5-873b-c8799102b640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ed2439-09c2-4e88-82d9-549c1e84428a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f40c28b-84c4-4e13-a3b2-013f1c0dadb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b81f6c0a-bb01-46bd-9ba1-683d2b2ac18a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4184b9a0-8dfd-4863-95f5-df3278f1ce97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9e605bf1-2850-4476-8761-1dd77a068d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4fe1499-721d-4bee-b7ea-bda747607a72",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd7077f-9995-4935-8c83-820309b60eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fcc82fb-9f49-4451-bbde-991e747bb8f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2eded34-db1b-4245-b33f-30f2b4da51de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8009ce0a-5ca6-4d0c-8aa1-82f0844f0476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b4ca5b-cdb6-4c53-a146-b7798e2a00f8",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcee12eb-cf41-4755-a46f-f74310fc5740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d2ae411-1005-4fbb-869e-31afa0f20bc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f779f5dc-d523-4520-8ebd-decfa6b67b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b18248b8-ecaa-4ee0-aebc-1dc21cece3d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5302374f-547f-4e2b-a586-edbf5aa93327",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "504366bb-00da-4941-8ed4-17877373c520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83bf9768-8e8f-4c6a-ab6d-f818eb7952cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37e12be3-39ed-4af3-9dd7-d0ecfcd2ccbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "67473f78-6d36-4166-acb9-ef4468ef0503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d8c6b5-deaf-4fb7-9652-44a776ba71b4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2476ec58-4109-420b-9359-4a072c7f1578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e9e12fb-2320-4a8d-a898-2b3ce4761e8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e93df41-2759-4e40-b546-d33be8d8fbbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1eab78c-711a-4bb2-adaa-04c9bda0e7d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f6fac3-bee8-4344-8f59-74fae65d35d2",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "747617e0-9c1a-4d9c-98c4-2ae1c009cf59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d99a0d3c-a8de-4305-9001-c8bc7e96832c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a45e41-c880-4e1a-99a8-4a6d012bc39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "319d6f79-9e06-4449-bab9-c0321f2359d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "064c91c5-2a2a-4cf6-8d83-730a8a2794f7",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1229c2f4-0a63-47ce-a7b6-485282d1f7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07f07df6-c1ce-422d-9ef5-afcae9d1bab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba1a44f-9433-472f-86c0-3c3615a0af0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6656083a-0fc3-43e7-965d-01a7c4daa748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee2a428b-c57d-4274-8dc2-713a78f553f4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caba2237-3536-48ae-ab31-920f828a3128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c77c2e27-8f11-403a-8bdc-3f0e9d6bbb9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7efd3299-9c49-415e-acf2-b85475fc95f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a78bbb70-97dd-4e15-a59c-5176a118872b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd02a86-ac9d-4ef1-84aa-4890f9bdd738",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "074a38ea-8cee-4783-acba-6ef0e331a298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4066b38-da75-4373-b0bc-e528925af9c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2289c0-9523-4669-b456-36365d9a80d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "78851089-17ce-447e-be09-2d5cd32edcf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e64eaa9-bfee-4c09-a83a-9e9884f8b107",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3befcaf-73bf-4be5-86c2-6af43fa96e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d9c1b2f-bf4b-40d0-9be3-1c62b8d95438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e7ee32-fdf6-4861-8767-9ce845ed9ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a26c9de-6ee6-4398-9fb7-31464fe0ef77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "161f9417-2046-4305-bbfa-9c97effa438f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b8279a5-6d3c-4301-8de6-24829b967e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd1ceece-bd05-4905-a2e5-87ba12262510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a39ccb-5a01-4896-adb6-88f14a59c5cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "404282ad-7959-4582-bcfb-e41620ad06b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70aa5417-3179-4e11-bdcd-1d0b59999358",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc527937-69ce-4927-b204-cd734792c4cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5c83bd4-85ff-45e4-b6a5-f2448317067e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55cdf2d5-883e-4b1b-a980-eda7a85f7260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "392a022c-3925-41a4-bce9-689bcac262a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1435fe-5605-40c4-a753-1293367e2e61",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc938788-39a1-45db-b875-ad294daddca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ecd55e0-89c3-4907-a843-8e57f9684d80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7be9f39f-7a8f-4999-839a-e995e26c287d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "022d2b41-5d58-4db8-81d2-77dc9e42938e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f408d6-35f6-403e-8bc8-f6ddbcc81e5f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec9d069b-fc37-4e78-9766-f49ecfafd26d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce7a9da2-7e11-458a-9a99-538b823b7f4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17bf1adf-18b8-4f59-a7a4-5d5133dc5dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "daf95597-95f9-4cfc-89cc-a6f1f4c93af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ffb28aa-4f5e-4092-86d5-eaa3b7c178c3",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de8114e8-79bb-4287-9ce1-02a31322c076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7575c3a-0cf4-49fa-b39a-cc3ea036280e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b16f9a-a584-4f07-8660-5e214295b53b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4fedbd6c-9a32-436b-a304-a7a333601ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31478bd1-8b09-4be6-885b-4119d1cafb84",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b406e1-defc-4a86-b04a-37e0af04a507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a2378c0-ac00-40a0-a937-3468e7e1dc46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dae8bbc-003d-4621-9dcd-495a424018dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "26381ffe-041a-4d79-8598-f7a2235fa8d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e45bb7-fbca-498d-b9ee-b136af545a00",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c367bbba-cbef-443b-9706-53035c2cb09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4816208e-01ad-4088-81b7-9c249f47f369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be32f0e0-f591-469f-ab83-d149f1521568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3babafb9-b508-4076-b7db-b1ccb5643e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "275eefea-adf7-49c5-adbf-fd8360fc3bbe",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c41eca53-e1fc-4298-9686-9e3e2f795493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6386b89-db3c-4f60-a31d-e5b88bdc6619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128ef23d-dfa9-4ee8-b348-a96c9389bb19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8ffcc2b-6583-4834-ae6d-941056726c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f158b8-2371-498d-aa26-aa7f6cc6efcb",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f58a6f1e-e661-48bd-809a-4b3587fbbe72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a98ae48a-8802-4bd4-9b94-abe493934b36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed937827-1649-4246-ae40-5e1c3724ee73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e108f7ca-0158-4218-ac06-23148d7f374a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "90af7299-88e1-46db-880a-8aaae8a49aed",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6d24c45a-7c6d-4a66-b69b-66ebbda05cd0",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19dcf6bc-c26b-4809-ac4c-2b8c22f97308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2431936a-5020-415c-a39c-411806a532d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e21966-bef1-479e-93cf-1b5f96fa01e1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8bcad4f9-32f3-4d8e-87fa-27d15461c069"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3d2e2ed-1285-4e1c-b2eb-2bb03caf6587",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a1a5a05-5c35-474f-a878-db191e15714b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "623f83a8-900b-4ce2-92a8-b55a6240bedc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "001fd02f-e55d-46f9-b1c6-4bf9ef2b52b5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "73003627-4e1e-4c14-8674-3a131d903943",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "087a4c30-d31d-40a8-a67f-2232a9d850d6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f9dc3d50-7627-4c3c-8688-bc1f57f6b24c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "901e7aea-1434-4325-aaf7-33f7c9145b57"
                }
              }
            ]
          },
          {
            "id": "148fde60-b272-4c5d-bc0e-418d8d39780d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1a9af626-0531-4cef-8265-1f5b73fbf182",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "273fcb39-c159-4e62-ac66-2fb33960557c",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e6aa633-a6c1-44ba-8097-e99917c26078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "957393ed-e437-4b2a-9199-96b9392e7b4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5a5e17-c626-428d-8b30-d1d8db69e659",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "226cca36-3abf-4639-a7fd-a18829ebd262"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "956e0f7b-662d-4ae7-9523-80a6310679df",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e10bd4f-7fcc-4645-a251-9793018d7f30",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "de851503-5522-4d41-a407-6858f32febea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa9054f1-e02a-4bd5-9855-01d17d6c2aff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "77c7bcf8-03fa-4c51-aaeb-4d69fc6b30d6"
                    }
                  }
                ]
              },
              {
                "id": "9bbc3188-517a-4e80-8dd0-3d1fdd79af98",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c59f440-d06b-4a30-b902-94cbdc2a6be8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2846a040-798b-403b-9345-d96560195752"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ebf02c0c-ce8e-4f92-879e-1dd04eb88336",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5fe5e37e-97d6-4060-9b77-cfa5ed0665ec"
                    }
                  }
                ]
              },
              {
                "id": "cd07e0f6-0284-4b34-9afb-2e0410f5ef2d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3b534cf-e17e-4bdd-9272-d60f9cf78430",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e91b0f88-d9d5-43be-901c-0e69be35d983"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "29b8d901-50aa-4d1e-88e6-45febb18cee3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "402fa8db-44ee-4c82-89f0-7cec7902258b"
                    }
                  }
                ]
              },
              {
                "id": "e1ad69c1-da10-41f6-8e91-04bda70fdb79",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "46ec1650-1162-41dd-a187-9c570929bb82",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1e9c407f-69b3-4a3a-9089-23aab87097f5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1716334-7ab9-483a-9238-50e48c668e5e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "1bc43087-1d1b-40e1-9467-5211e6f53c36"
                    }
                  }
                ]
              },
              {
                "id": "7fe63c0f-e331-4e4a-a0d7-39772fd0ba21",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a5fd09b-22f0-49b9-bf47-420bcbe00fc1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b3f47258-a5fd-4024-a234-204197c122ba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87ee6ed0-a263-425f-858b-ffb36761bd47",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ee5bb7a7-e346-46b9-85da-fc33ccbe6a18"
                    }
                  }
                ]
              },
              {
                "id": "ebbcc0b0-480f-4d85-b57a-0788f069c3b6",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7cb2477-ddaa-40ea-9ff4-2caf79270640",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ca416a00-c51b-48d0-b2af-15a5169846d2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0903fef-b3e5-4e4b-a4c5-92f86ce51ebc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "268bed63-4ede-495b-a490-17e0b42e45a6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5b6e9b02-dbfb-4e56-b91a-f856ba671ce0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5727c868-f605-455a-96e1-e870038384cd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5eb3720a-cdd6-4d23-992c-e04e4cc16cd5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0fe8447c-5028-429e-a56a-2684ab562fad"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d833abb7-c2d9-4f59-91eb-5b835d18283d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5c07a22b-a0ce-4c49-930d-a6d3ec348912"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9b7c8792-58a6-49ee-8723-3d61ba3568da",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a030aca4-9137-4615-9e2e-edf67f9c8ae5"
            }
          }
        ]
      },
      {
        "id": "6d6444da-3fac-45fe-ada8-bead0bf0acac",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a2903a8f-4834-446e-b8ea-cdcb0ab274c4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2afb6cd3-03a5-42a7-9d8a-a25e1482731e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a015b94f-9fed-49bc-b37c-475c93d1a71e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97db568a-5f9c-4f62-8586-68974bc17afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bac119ce-75a4-4be4-a43d-5aa0d80c97f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f7e2c70-5e20-4f97-84bb-f3caf06488f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e69ce0d3-a486-4d5b-87d1-b8a23969beaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6717ac26-e548-4a50-9c4f-4661903d5c45",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0fb0def-ec76-4f10-a530-9b21203f6bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "791658c0-b131-42bf-b5ca-9ba51002d591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b538d7c-a5f7-457c-acdb-b15f944c53a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9d1e308-30ad-4464-9afa-b24d439134f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b11b03c-4e05-4468-a9c3-d016134bedf9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28476567-e3c4-4077-bb6d-e913dff84ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2898a380-be5e-4f6c-9b3e-b7357416737c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e87106-921a-4338-a37e-6ee2a0cbb051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1369c382-59ef-4619-826e-3d419ca79403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e66f757e-9def-4446-9e7c-02a9b32cc23f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc50cc3-467a-4276-80ac-482d9034b16b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "503d580e-7cdc-4119-be97-b87ddfdc5449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a2fed31-7339-462c-a931-6c767a2a18cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e52645c-b40c-43ac-9ec9-01a308a8c4ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75fe9fa2-70e9-4017-b8fe-88c05e8b945a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa005919-38c1-4f9a-a039-61de61f94957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bad3b8d-1453-4e1a-a5a8-e91e882d958f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f8e6ce4-c5c8-4210-956e-d9e53fe09c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b7fd0e1-6048-491a-9300-a6de867ecfc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051be9e6-be66-4fbc-bee8-fa1da53dec60",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed5ad11-19c1-4dc8-b138-df731f57f347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "696acc1c-ecf1-4d61-b10f-b9de60dcddf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b6f5134-7a9c-4798-b999-89c4351ade3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "365939d3-e205-4131-943d-cb36c110caec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d835f7-5f38-40f3-9a7e-973b52699aa4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df3f03d-4a10-4f30-9f29-02d891316d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1379104-23bb-490e-808a-bfbe99bd283b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfdb6f8c-1a7d-4459-8da3-1de8280f3fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad8ba6d7-9e60-4448-8dd7-36f32875e1ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f113d5b-fc67-45d7-b1e2-b903a88dae15",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b3482a-a52e-42f9-9644-5f4eb3c7fd6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80c78e77-c4e8-4297-8924-390d423456f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9687be5-0866-4382-827d-99a101bd3069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b7126f4-c767-4af4-90e7-27b55ddca135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21694b56-8651-4bfd-aafd-e79a418ab94c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2287ee-8bf8-4055-a1ae-a652ed72685d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40cd2283-4ed7-4a70-b302-2e6f90d34015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b32acc1-cc12-4a85-a1f6-c39e9a032f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "17f4f42a-da70-4b0b-b8f2-0b0c72902cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e30e995-5ad2-442f-b701-84e324dd6293",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70667255-4abf-481a-a87e-379247452c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88555d83-fdb1-4c50-9736-4af07a00baa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "359c7224-1f99-48c8-980b-367a33780eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bc60c28-953d-406f-9fba-90e12ad4d2b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1beaf45b-d3b0-41ec-8b43-b8390791729a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba4a4c7-76dc-4199-abda-a5521c444f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe2681d1-16f5-4a41-800d-f4ab8c48c95b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e252a6-6ace-4331-96a3-6f24e461670c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8497a44c-fb1c-431e-9a05-e91e0f726f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b1bdf06-ce53-433c-89d4-3593dfa62292",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09db1598-9d26-422a-b9fb-cb50a5ce0b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb323188-c1ad-4817-be36-01f025856cc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a37ecb9-26cb-4787-beae-46f80fa92069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "59908e65-a0fd-4be1-8a38-5a727546dc03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dcea3d0-dcd8-4695-a9bd-4a58733e64e3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba04b22-fe74-47b1-89cc-119f87f97697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a68019de-5a03-43cb-8ade-81ca1996384d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7245d577-cf99-4633-86c2-ea4de711bf3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1374bc8e-9ed7-4f38-a059-bf2bc97355c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c6b602-8108-4476-bb37-fdf534ff7d80",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3ff58e-4f86-432e-9f57-4378c8fb7e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "125c2a19-126f-4fa5-b843-f60cd68ebba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc08e96-eb4b-490c-8a21-47f3d78887bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f61208e6-3299-4098-9acd-24c05e86b706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1982ec6d-5267-437a-95fa-453ad4c6de23",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec7d6be-af51-41ae-80c0-3502ee29a92d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2195234b-867c-4749-9884-ee5642bf7041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46cd88c8-fbad-4428-b291-e9257103594a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "38e3462c-5fe2-435c-b5d0-3963c0781dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc57554-81f6-4396-b87d-8de843b3ecd8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4984169-3d8d-4779-b922-7cedfd64f332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acfa2eb6-6fec-4f8a-a8c7-5d0aa112ceb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7fc2cdb-a3d7-4a3f-b143-90748a3d26bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "89c1a082-fdd4-47e1-926b-6e0f2c1a859c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c0ea6a-e353-43a8-b8c7-764517403839",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5fc8270-ca3b-4513-a053-4a2a4f1243a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3b2e632-d79e-4c35-9734-9e992a89fdc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85d480d-1e30-4919-975d-94d6a07894c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "679aef4b-84b4-4579-9ea5-5bf2e1b7a12e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f150a94-9546-4665-bc3a-b458304311e4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ac624e-d803-45cc-9f43-9d3caf885b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5517911-40ac-4a6b-990b-9d6003e2e176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32755553-9873-4368-a587-cf96537dc805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e8f3cbc-1abc-46e5-aef2-b4087c39bd41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c0c0e55-c219-4d09-9c1b-236b92a354b7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beff2804-fc1f-4bf5-bf49-dc4be1c00f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c806697-a725-463f-9bb6-6d6142920e7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a437da2-229f-4cc4-8d26-14c2c323d0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee1c60d7-b3ea-423b-867c-7667980a3252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230376fb-c13e-4f46-b0b1-7a0d40bef8aa",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f86d2e-20db-4963-8556-b6b42a35866d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f1f8b77-11c1-4dc0-b68c-c9256952fde2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe3db15-2a68-4163-9da5-f392aaafd650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33735785-49ba-45cb-9bc6-2b145af29631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee2da25-5dee-4caf-b85f-0a2f15efffcf",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb1ef20-b010-4df2-bae6-acc97155bff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b524696-8380-48cb-928c-938e38875610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1de1e45-da25-46c6-b3c5-b8bb3f760771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9272464d-82a2-41c6-8c4d-565f50e4a05e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475160b1-1676-43e2-aca7-2f42e3fdbd71",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb8de39-4376-4cd9-bba2-8b9a39d59a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "234ce253-5931-4c40-8e88-b59e1487f090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a255f3e1-33d5-4814-84e9-ce4952c7d681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a272e834-0821-461c-9a36-5503cb1a95be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf4625f-7a4c-4829-8df3-ec88cce378e4",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7933634a-9445-4232-98c9-8b085ac6b6bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6055ddcd-59ce-4166-8db9-de0c46b5c381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd2ebb9-20c4-4c28-9531-ea2d4be0a985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fd80aa1-31a0-43ea-9034-3001965cf0ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "621b9857-c230-4104-a227-e61157bc070f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fefbbc4-1e39-4feb-8772-57d41794a0e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2db02325-62b1-402d-b5d9-a230b419126b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa136ca-0f87-4b05-8aba-d8db018308b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2abbd09d-fe08-4f45-acaa-d7e26e8c6efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efba320d-f1ec-409e-93eb-1b41b9ed2c8e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa9a18f9-6f15-47ed-ab7a-495664890596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "500a72dc-488b-4aa3-89a9-0ad7fe73c679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3796987-2117-4a1b-8fe4-dbf630afa7cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "381de92a-381e-4211-85ef-1f15ae736811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7b5344-7d8d-4f41-9508-9b2b4e966b5f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ceda216-b14f-4035-a8cc-5ba126885fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11d88705-a115-4777-aa15-ad5cddeb8407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60827d15-399f-474b-ab53-5f0605094b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f81b9dd-f91e-4831-8ee7-ba0caeedf063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc9ae20-1871-4cb2-9e2f-e8524af65652",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9abad4ad-3ed4-4bf3-ad8b-ff57afb71f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01bc0535-b4bc-4d4a-88be-7353ae35025f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc274d3-a3e3-4fa7-9e43-e60cc009cd87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a54d1d0b-df12-46bb-af22-e23945fd8caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b54e5fb-32c9-4b1c-8843-df7e3229896a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb28a344-7f5a-4308-b146-b69e04ddecf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99070b95-72c2-4b6f-a51f-046230aa2a8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c4970f-e893-4388-a619-5a0d86af428a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab4538ce-89d0-4e03-a6e8-a0456326b6b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3189dcd2-ecf4-4410-a5e0-0b552c4d5a17",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e122f09-4d3c-4ffc-886b-049f7d790274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53e5d50c-c73e-4dc4-b0af-fe2c0dc06e2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f5b832-75a6-499f-b488-3fc271b9739a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81e80b9e-f244-4ecc-b3b0-7e9504420e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c6967ad-9389-466b-b9e8-e61cf7ebd71b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7ed41f-98ba-4156-9776-a5913e77f38d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d61f103-27a9-4077-a531-ccb86ad50e43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e2dae39-305b-409d-9f2a-fbaf769d4152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39cd57c4-703c-41a8-a56c-35175c6366e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ee27e4-e715-41a0-ab47-42b94e2d67f2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e4a689-d033-4823-9709-010b646e8b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62adbefc-4168-4b2c-9d89-533b5c37faea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a1615e-d636-4337-984f-92d8be86a0e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c331fc3-ab21-4440-ac8f-01becd84d9fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "284f4924-fb29-47a3-a73e-594b992f06f5",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d567f51-2286-46ce-964f-f293a594f716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dccff2b-67bb-4dd5-8c63-767a6859869c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b9952f4-9cc0-4ed9-a6af-4cafd24d69aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "511ba12d-08cb-4a76-a1a7-885164aa5a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf49f32-9393-42cd-a17a-497f2ebfcc19",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e7213be-3d72-4c12-8ae0-8aa781af6774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e91c1b9-407f-4d6f-93a2-be1dbb532929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0857c473-d3d6-4dee-80b8-15f46282bf14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e6bd80e-a5fa-48aa-91ca-40133af80b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a2b1b04-aa35-42a2-a4a4-fbc6956029ec",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1d66ad-65d9-43e6-a490-969d4f9a2a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9ddac93-a177-4e71-8108-5b2e70da495d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b250ab84-8f4a-403e-8097-428e5cd10878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19afd1fa-6a71-4671-945c-6444d98ec784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f568f96-bacc-4a85-bcc7-6a38a24531dd",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "451c85e3-187f-440d-93e7-3ed2d597a6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13cb004c-1001-4b13-8865-205cce6fc4ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0910fcf9-0750-42e2-b8f3-321e1e0db188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e0e9a54-0cf6-421b-b56e-c195e730a464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77092348-9689-4d67-b757-5d14a767053b",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c43779a2-6b15-4fe0-acd6-6cb34abd0a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80f4c3ed-b7d1-4d12-9148-3f606e6e4b43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45695acb-824e-4992-8641-b2eb59f84a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dcb0dba-4fee-494b-8c7b-ae745216e5e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3b664a4-93d8-4336-98c0-20a3b788e3cf",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b9b6181-1dd8-4194-9211-e67f9b89992e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "240f7841-1412-417d-9723-cd37f229c193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d4e72c0-f291-4deb-af84-8299a23f8deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6ab9b69-18cf-4af5-bd36-b491178aa05d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2f0e1881-a981-4b25-a729-63abc5a7e3ef",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4cac6ae7-3bac-4080-8763-8d27738e8551",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e8930c-9fda-43ed-8aa6-b85dea0ff508",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d977081a-2910-4b65-8937-c6f0251e08e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee963e9c-41fc-46d3-b1d5-1f595f044331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9505c685-0d17-4344-b318-b290b352c6a4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06890b13-1bf8-45bf-b7f0-7713c26b14da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2fe67e04-5e8c-4cb2-8fa8-58ccf5ef3410"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a545a770-4733-4fe7-9df3-d1dab09af35a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "046f02b7-91aa-422b-9abc-bafec3313a06"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cd38a9a2-4ae4-4d4c-bf98-300366a76926",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "56e098d0-b443-4909-bc31-809d0de9ebe5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "08525a22-67ab-436d-9b1a-d7543e11f754",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8a5b1774-d68e-4f8f-a78f-83507fd6a1a9"
            }
          }
        ]
      },
      {
        "id": "0d78dfc3-42c2-4927-996c-6b8aa0c93d01",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "92cd8e6c-dba9-42a6-a109-617c51a1e18a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "09243336-ab92-45da-8cf4-9e7e842df36a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0cea5928-95f6-485e-875e-7ef33e5869f8",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a2fb98c-c926-4d18-87e1-7d888cbb6327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "242cf0d8-fb5a-427d-81df-043df75ac52b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ed0b32-ef2c-4fe2-9b2b-07f746c03e8c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35846b28-2872-40c2-899c-76af52d6cd33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4d00ba6-770b-458d-bbcc-ffebc89a53e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "882d7b3c-fbdc-4fd8-a00e-95e57b9a49d6",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea77d8e-17bd-4657-bdab-13eedf7552f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9464eee7-78e2-4253-a67f-5d1f0b8bdbe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd48cc8-a718-4276-8899-0b2a774b3048",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5fe105-aebe-4f84-9fc9-a3671807c52e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b24f7d9-bde7-4fb5-b8fc-8bf8d713f0fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591b0156-787a-4dd9-8ce3-c1a8c14b6c92",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa031e87-4cf1-47a7-94c5-33b92092c99d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c09b7264-e304-42a0-8b17-16192b451695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36550517-8aa4-41af-83dd-6add2062729b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb25c88-2c16-4c4c-a9d9-b068aea96fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3584f5b9-b15c-4751-82fd-826d1e42617d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59021704-7fd5-4ed9-bd68-df2615a43668",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "554c97a4-84dd-498c-9ef4-8ade0767fbcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "853ef783-4d6f-4edf-8320-09014177160f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be2388b6-b195-4b95-9312-2fa59d22c255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eab2c617-6e65-4150-bc9e-1fe099b51996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc72ff9-608f-41c5-ac56-117a4d940138",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f5d7d9-5a5c-4595-96ba-be3827665bf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a535aa34-4273-4956-94e5-0c9c387bd570"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5035c5a-5442-4d72-8bfb-402e8ee26c2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76210874-aa18-4a10-a8b4-a43eef2b2923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886e94ea-4636-4c67-8b38-54fa19897eb3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1351b423-9d4c-46c5-b029-cc1cfa4bfb6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79f05e0d-4304-47ce-8cbd-84cf1c82d648"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93fccd9-ad4f-46c8-946d-4622338c633b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "694b97e4-9838-4744-a604-e2c4f470a4d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe93046-7318-4240-b74b-501ca390d097",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b00739-c3bd-410e-9f7c-e810b7ed0eee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a3c5b91-57de-418f-9f8a-7091f0dbccf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "220c7d80-8828-4d7c-b23d-59ee779db7c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77ffa5e5-15bc-409d-bb6a-91fa34c662a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09beae3a-e734-43fe-a52d-f22866fec03f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0052401-beb9-462a-a8d8-95fdfcdb9396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7e97d34-4a33-4757-ae36-ec5dfbdf141a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a960780-3467-4592-ac8a-ad1aa1634115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "944f7224-9afd-43a7-919d-8dd6cbe79e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4258599-9364-41f6-8845-47904ed9dec4",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "549ac4d6-9290-435a-8930-17ac72da2bd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1636e313-21cd-4581-bccc-7553734fb417"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be53ff71-a2f1-48a1-9090-af14ddbfb5bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "714f7df2-9026-4def-ab98-f593db03be86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5dd5bb9-67da-4a9b-a71d-876bc28812ff",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e145bd7-560a-4eea-822d-1ca6bf880067",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d60acf0a-1906-43a4-9807-a7f364d75a59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a7a740-b7a8-4d9a-8854-43e799ff5f42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ae7433f-8792-4155-a575-6a7862db1042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033847bd-3a39-4587-b327-a2d48058b848",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebfc690b-3599-4529-b3a7-514461c89b6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27ca6533-d88d-4977-9dc3-dce4f5d4240d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72124e35-4e93-44ce-859f-997408d4e335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b958cb8a-dabd-4ef1-9f40-fa2d53f0e144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8932dae0-ad8a-4021-ac61-afb3a60d9cb1",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "145a66a1-557b-487b-8622-00172588867d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1464adc-d705-4ac6-bc1f-007c058c41c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba8e1b82-9e8c-4729-9fec-3976f34e2458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6673013-765f-45fb-a010-b3a0a4894714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5299824a-9dac-4be1-9d8b-9ab110b5b7ac",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "226bf24d-4bac-43b0-b4f4-71b74ab55c2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5372a0ea-dfca-4cd4-99ca-092971b239ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ff7afc-1dba-4a32-802d-cd52ecd0f4e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b150896-e666-4db3-b902-6b0e70deef7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59032227-d808-4f5f-9b26-7c24f93fed8b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "241e99be-27ae-4722-a58a-b485bef3e2d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc137089-16e5-46b0-baed-81740caa1226"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea9686c6-61b6-4fa7-802a-7508f0eae6af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4150275-36ae-41e7-b84c-2c53c63717ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31fbbbef-e0c8-42ec-96ec-a51a4674c5cb",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7870da0-a306-41c5-97a8-a78fdfc5b1de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "891d5b42-0193-4d4c-9aa7-f9a981c4ec8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3fa51d7-0d19-4061-a336-52903ee16e68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fd5a669-35ea-47f3-a87d-0f4eaebc8e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b2efb75-cf13-44df-968f-da078b582845",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7afff6c-0d97-4d88-a8ef-cdf2f83f2b59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "490ec7f4-550e-44ef-8d9f-e9ddc4b99745"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dfacce6-dc99-476d-8100-2801348816ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24aa2ea2-7761-434a-8fcf-3a5e0dc9a708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3825371b-1905-4dd2-8c11-9057ce83c922",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa8a5e0-2855-482c-b3fe-965a50145287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f7a940d-f991-417b-8855-8738792f3b04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d74aca9-a61a-41cd-ba5b-c39daac7425b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2435bf7c-1711-4ff1-af87-504d2a5dc7e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217a085a-bf0d-4343-956a-7900e0083fff",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "140f01b2-2763-43f2-ad6a-8210a2cbeab1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cef7d804-52e2-4a77-ae48-067fa9448a3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8242120a-792a-464f-8bc4-519e0f263028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83c203cf-cb47-4dc9-ac64-82896553f27a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "016bdb12-dc09-44b6-815b-56784921ebf5",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5524cd32-e66c-48c3-a681-26db19db4e32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c55bb311-666d-41c1-a922-8fa0be691f17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eff3163-0fd1-497c-ae92-590155d60f1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "541951fe-942c-4c3e-bb43-95e823bcd017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ee0384-9de5-4427-84b9-277aac46ab39",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc5b61a-485b-40b7-b8a1-467e27e64790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba48f3b7-6e14-4a3c-b18d-8625ca22058e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb58cd8e-2967-479a-a598-e1ca69c3fe29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e991c0e-db0d-4fe6-8b41-d7c1013c3b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2860e06c-a1b2-46c8-af65-1ead257d449b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b59e12-48d4-422d-a840-c00189d99c36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7947dea6-bf02-4f55-9d33-d766b6b19e35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77c54ef-9205-4280-9c63-50e86a426fae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f207d14d-979d-424c-a20a-043e5dec352e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de4dda0a-2f46-4a56-bf79-1fdfa72dff86",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "055b3032-bcd0-4ffb-addc-00c65446fcaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40bc66e5-c86d-4cf7-a875-32b139df8a86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f7f42b-1c72-46ff-a2cc-d9450a65d534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86d133d0-f1a7-4569-9ac7-9591fe0fd261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd92b0d-fc6d-4800-b06b-44a906b5481d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a23351-b198-47aa-9662-f39e9838a8ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "656eb0f4-1468-455a-b337-4e5082d86633"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa698b94-1203-40ff-9fa1-38fee9de9d39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4b7cb9c-feda-4f69-844d-4fef4a9dc6a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f5ff9a-7bdc-4ce0-90bf-25566089cac9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa77dca-d089-46c9-b8e0-9bbcfe6a4494",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "621706a1-04af-4873-9e6f-f5a971aaedd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8abe4292-548a-45b9-b0b3-60c266aac654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f63bcf46-5e9f-441d-9014-f6339d487795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b9f7c8-65d4-48d1-a510-dba23b09487a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77253494-8348-41f6-8063-4dd34d0498d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a000ddb3-b6ca-41f0-9c4f-afb152f62649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd20166f-8795-4279-a8bb-12dcc3ac878d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5529c6c-698f-4b6a-8ed2-2bc396c670df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc030b4-f4b8-4b6f-ad69-c697e86b6343",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29046246-3197-4940-96c6-37a60c2a82b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fa6f94e-cd58-4185-ae0b-30fd9c23d165"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a61cec32-6dfe-40df-8719-b295a1b2014b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "860ef694-ed93-4441-b22c-b23064c747e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84b8365-1a90-4387-b69d-178a161ce018",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d894da5-f132-4b33-8f70-7370dbd30207",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fc59e36-cf44-475c-a054-1409ed696274"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ba92f1-a787-4b3c-bcf3-3dd32ec93758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "476c4e9d-dfde-46b1-8793-b39abb89be41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a91d4dc-da9d-4cdf-932d-2376934b6137",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc0c818e-5fb5-44e2-8eed-5f5845c5fdc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1f029dc-89d3-4007-b18c-20e03024a2a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08c9ba5-0d4e-4b23-8a26-1bbc19d3abf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "160d0bf4-78d0-4e81-ba84-471db6905bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db86a863-bf1f-44d6-be68-c7681abbed12",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4606224a-be1e-44db-96fd-a15cde564b4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ee79622-24fe-42bc-878b-338cabff0e8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca043d15-d154-4ea5-953f-e6fcaa4664a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b079bc5-b24b-43a1-8a4a-4c7920f18454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e708cd-ffd9-43d3-a293-9c1e2ac79110",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623d2fea-56f4-4398-9bfc-3e7d8e523757",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1106f726-a20b-42e8-b0c3-d15d2f1df471"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48157e3e-1b55-4d4b-96ab-4987c3608949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b23f43ea-a501-46fa-8858-09aae7328349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf42077-f6df-4277-982e-a5004acff184",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67fa3305-d8a5-42f2-9a58-0a4c0da61b45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba312cf0-fce6-4c48-830e-dd40ba936914"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc6cbac-7ed3-48b9-9405-825ff0e0f5b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "285a6712-b193-4a75-8bf1-bbfbfedab9aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc5584b-5f57-467a-8803-78160019fd3f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a14b04f8-d0cc-48a1-803a-71094294e685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9adb4f77-c367-4484-bf43-8a33033f0a50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "922013b0-9bc1-4c55-98e0-f65e613f91c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12d1ce59-2e3d-4949-93a4-2b081dcb4054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd778f84-e0f2-4d68-a667-3b401d9267db",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655f04cd-9d6a-4615-8102-86f6ea0b630d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd0fe23c-3c9d-44be-887f-a789996e7e08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb589d0-e91f-491a-b16c-24c723687c03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6ad6ebb-74ae-4c9d-8863-21d5bef5ee9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e1ced2-2265-4cfd-8ebc-25c67642a6b9",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c506df74-a0e9-4e5d-b9d8-00b7cf15d4db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cd5ce11-7847-47ca-8015-7f31a8721df0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef2e10d-1e80-4eae-a489-beb71528603c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ca3b7b7-cd43-4373-b766-a68392adb427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7480bea8-6639-4bd3-aa19-d18e8b744307",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533ad03a-645d-4029-b67b-06b744566ae8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01add12f-7e2a-406d-bd38-d2addc3e94cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d696db71-d3cf-422c-9e32-865ada060246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07da703e-cdf6-4623-b04d-305e008b603e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ee5e4b-3087-4c76-a4d7-7ef833665535",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdfdc52e-944a-4df4-9cb1-246dc443adae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bc3f4ad-3816-42df-9ac1-bc8741ac1cb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc69a9d2-d5b5-4e31-81b3-83aa79f6dbc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eccf599-4516-4a81-aa1c-28e8cce7044b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3560a4-1176-4d2a-8987-c4e6ec320f08",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "938d4b8f-95c6-48c5-b42e-f2e70481be36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "facc4306-4f38-4c47-a242-b8877d9ddb17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "920ca039-65ae-4a77-a212-a9ed40b53c7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f105453-f2f6-4310-9c1c-7e76433447a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c61515-53b9-4053-b35f-879dd7b4baf8",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c287ae-7702-47d1-a92b-58ca42906632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b16a38e5-e990-4b9f-81b8-b6c83ac5abf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d090cb-a145-43d9-9d4b-bc3d301cf131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "393369e1-c1f4-4886-80f6-c57ade3ba4c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f79fa52a-9e95-4189-8d08-4b690db3d833",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d09c8205-8a23-4c5b-9ac6-c1c4983786eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c918d30-79a1-4652-876c-f622d004f9ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3dfe1a-4c98-4d5e-b895-295b89895246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99b27bcd-1b51-472e-9f72-f454df4e7211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "808b320a-818f-419f-b070-1e647feab9d5",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0998fe8-e962-43d9-9b90-1a5ff8d45c98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18ef89f1-0db8-4ccc-b493-6b272252ff82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e2aa7a-fdd4-427d-b5ac-a94b289c598b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c603500c-88ca-4de1-9cd2-03a84db48e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b522cc-b457-48a4-b074-9a664548c2c8",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01aa64f1-06cb-4b16-b198-98d528957491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81f715e2-96d2-450e-aec4-5bdbc0fa2306"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e9eef6a-596b-4314-997c-52322227633c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f333be08-35f4-470e-9397-0f41c5841a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b79912c7-4aa9-4fb5-b774-485d5496e93b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "316bba82-05d7-418e-b737-2ee4b29c3dd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7309adc3-a306-49c9-8427-1e20ad6830b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a885fa2b-8dcb-495c-8627-a962f152cc38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8876a48-6560-4d4e-9c61-17f9d7c1dfda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dddf3475-2569-44c4-b49b-259feb3c19cc",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7a860f-46dc-42e2-9697-8b3b5a4db87f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "386665ca-a2ee-4b38-99ba-3420a6bd81c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b713ae-ce27-499a-8b5b-eabededef712",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ed8aff1-e4ac-4fe8-ba0d-91ba9dc76120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79870952-61c4-4c7b-964e-83f081b642ee",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bda96c2-69dc-4497-9f6c-a7c1781399c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea02bf67-7a17-4c12-bcd7-01e16ae2327b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66acb993-5723-45c5-a30e-89edbf521652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d046360-bf7b-45b1-a919-4ac07f433fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec6efc0-ea57-40f5-8cca-02530732ccd7",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b818be-770e-4a2f-877f-3ab0fe31bfcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "316f78f5-bc95-4a23-a1f8-30a69fa27557"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "580551ea-db14-4677-a50e-5f7af2278985",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f84ee2b4-e392-4594-a8dc-c358838d4d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15af80d-749c-4177-b5af-dab2dc5f55db",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a5aa74-4fa2-4cfa-95a0-739320882c74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ea5486d-43bd-4367-8785-d7fef20303f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa123e4-13ba-47e1-aa72-3960c77f1095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2e4c518-497c-4d41-a876-1a0f86fe37e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a2390a-3082-41e8-a9bc-fcfcc03a7b6a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfcba0d0-670a-4041-8e37-18c801c84983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2715e958-13c4-4dc6-99b4-744a5bc5a61c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc298489-17e3-45a1-821a-3d917df78f19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8035b20-ace3-4cb0-98ec-509577c8bad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f666afe5-a2c6-4297-b23e-a41126d6996a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72d781ca-f825-4af9-a9ba-694e24f3e675",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a21eeff6-0b3c-4a87-ab5b-a0ebe89df194"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc137e0-7f6a-4bb4-b53b-a5d7ae496d93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfd1a4b2-3695-4aac-85bf-1f472ac4a1a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a3c160-5b88-46b2-a560-4a17dad13e22",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56fd31a0-4973-49ec-9123-248a7e392abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81017fd8-49e5-4073-808b-e3044c2db8ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10b319a-de92-4c69-a339-c32e22d7409a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da625903-6b30-4b91-bcf9-28a37c75e613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "278cf379-97ca-4d4a-a704-020a25450c55",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6258ad55-a1ee-41eb-a2bb-e7d65f954669",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45a97b05-a842-4fef-a525-3b4c7cc2494b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a83998-8869-4849-b8c9-26f22ab89f57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5458248-7ff9-41ea-a39e-940d21824bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7ca9be-1471-480d-945d-3ec736bced40",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2632137-4f7c-4c46-9dfe-e1c285789a78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c770d4c-e55b-4045-b6ac-3679746c9098"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c682fa86-7b80-4a8b-8c9e-6be521dda64a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df77bc15-e920-4a1c-bcd7-b2ac5196a073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f2f3e1b-ca8d-4dff-aa50-ae1d4cdfb504",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af185d3f-107b-4920-a508-e3c3e1e29c94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8af5a31-1ae6-4862-bc8c-916258f6307c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2425bafd-8af7-4b43-baa6-2809d2371131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b7d7aaf-a8b8-4cb1-b460-c20982a78216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aacc3cb9-1ea2-46e0-9831-b05f38d56b50",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3576172d-a78c-438d-8ce4-f3a385fa3284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "370e8dad-41c4-4120-8b0b-5a652d99d6ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9769e9d-d39f-4c8c-8c8c-ee6ad7167405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c151ccd-5fe3-477a-9103-160185c8d3ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f8bc41-0b54-4876-81af-e4f42cdd66db",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca4865c4-5122-4451-a878-c3352922121e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89aa7b63-4416-4bdd-a015-553a4c5062de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a03c6a1-f2bc-46c7-bf66-da3324b24fd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b1ceb59-bca1-4420-8600-f814fb099c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22cf45db-ec23-4f51-9509-e7f8fc9fd15c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa96664-a4b4-40fe-b91a-5a76faac0ec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fb16d0a-d016-4528-a8b9-1aefcc256d0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dddf40b-1223-40a2-964a-66db013d3a1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "962b5a42-edd2-40a8-95d3-deddfea4d640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11bbebcf-0719-45b0-9a82-b6708cc5ab2d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b26a3ed4-7c73-41e9-9399-3309d1003ed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad520702-18fc-4d75-8ff7-ea6a6a080f5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9730443-20ae-4c17-a75f-a40f0ad2e51c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8958916d-b90b-4774-9129-250cb59d7fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da7b24bc-35f6-4e63-8c8c-03711d66bae2",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d74c8418-606a-4cb0-963c-ea1833e45e57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cade6fb-45c3-43de-9d7b-4357444ff8aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cda6e4b-50a6-485f-a219-20465502b66a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bd703be-d8ea-496c-90fb-774ee3f64149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa98cc04-4bb7-4b17-83d2-aa1e9b757eee",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba25fc3-07e7-4773-92fe-2ee4fe3c06d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c33f0866-0ffd-4e75-9af5-f252505cc6cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "342e162c-cd59-4d3c-8f8e-ef9d3439bdc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6f21ad3-a004-4631-9c9b-878c24680fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be78ce40-a7a8-46b8-9cf5-7f073b2a5f4b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af2ddb21-4fa3-4fcd-8c5c-9f556b3b4767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5010e00a-18c5-4bb5-9137-d0dc630f6f29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30358d9e-4d86-4bc6-9082-8a18ab471aca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dda77abd-02df-424d-b600-af78b5d6b02f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17df6f08-513a-4ac5-81ca-28f32e0b375e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b033a2cc-bf5a-41b8-ac66-1fbf357bbd59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8812cf5c-abaf-4a27-a0d1-fa7489edeec3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f62ad361-ed99-4ea5-a7c2-c3c0ef542627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cddc9cb8-ef4d-46e8-a5a3-93e264dc1911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dbd442d-da07-4845-8336-c6eff1e318d8",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "566818be-b8f4-4f42-8ca6-56df57e8e194",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1798f8e2-90cc-4f39-acd7-d3316f508c9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb7d558-df23-4893-bbd8-091edab51f13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dc0f73a-9525-4c0d-bb54-18e099c0cf01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57abd6af-6fe8-4dd2-8e08-5e37a2b2f13f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b52c4b-6787-4998-aa82-b35634ffff8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02ed4c41-7772-4ebd-a172-6a266e3b5e24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa9e6b66-a5b4-42c8-9780-2b46203070b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31275d4b-2ce5-4f28-851a-90f775bd5897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f9c812-3bfa-45da-9d6e-25269e583196",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e984aec6-8b0c-487e-a261-79128d1f4601",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a270ca25-3555-41e1-a0fe-12367054ce1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef36870-a8c7-4807-b932-0c57ef3eaa85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af90f3a1-7744-44bf-8ab8-12faf817fffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0d0eef-aaad-4b5d-a348-22b00d17a7ca",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c8d1e96-4746-4fa3-969b-5b7385d5a3a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4fa889f-aa65-429f-b44c-1cc2ce0099b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dcf749a-aab0-44bf-a7b4-70e105dc0e2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a02d1fbe-541c-4431-9d94-203715adab79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e99e94-ffaf-4f72-8641-08ac7919e559",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e0ba30-cd59-49bb-82f1-02f667cc2bc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2f67b23-0941-4263-ac24-d5bf6807176e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d969b79-8c7c-4cc3-9ade-a5f55c4dacc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca49b939-4979-49da-9a82-71b5d1ad3a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78acea29-5b34-402e-985b-ed1e9a75d63f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deecffd9-d227-49f5-91c1-a35ee1ea68db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6138dc34-37cf-4677-bf1b-3bbf84e2f9fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e5ec16-311d-4507-94be-812e5e244f38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbde311d-4937-4042-a813-240c000e1148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ed1c56-f485-47b3-bb37-644d75dcec6d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fcbf22d-7117-4a3a-901d-3912bbcaffcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cfc8e93-f1d8-4cd5-b38e-0b260080de04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "582231c9-0421-43d0-a4b9-45b3764c7384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dc481c9-36e5-4080-b0ea-55ed95189947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb5e2cce-f3fe-49ee-b1ea-6f1e3fe7ab3e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09fc7e3b-b592-468f-93f3-c4ec37f64602",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff7d8c2b-e85d-4ac6-8783-7c4d2a268c7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a7d705-36e7-45ea-b86f-372d8fa499d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3039cc17-b558-40cb-8c68-8d59d7b21d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35306c78-9d6b-4054-8fd3-33551aaf81c5",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe77627e-ae82-43a3-a90b-89a00fe31696",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fd8b58d-97d3-486c-95ec-e8ebddded9cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b738d267-d9d2-4d59-98ac-584576fbfb8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "668906c0-cc45-4e66-91bb-04789777f343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d9c0040-1adb-4b1d-b70b-72d4af577d0f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "489f7494-4221-48db-a558-ceb3d6fccfed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7817fb0-0e19-4a24-a9bc-90c4b8181ca8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbad57ce-28a1-47ab-bd99-6d56331237c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4ba6a06-f0ff-454e-8dd4-a6de2cea49dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c4a791-091e-49c1-96cc-90da89baabef",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ef1bf4-f37a-4a17-b7d3-634721c722ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cd800c5-7244-4ce3-8a18-229b09e372af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4202a112-18b8-4dbf-8a60-0b6a53593210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9545e2db-1273-4dd5-8dfe-ad4fd1dc97ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b66a213-adaf-4d31-b4da-19a11d13c7e6",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ffab429-5a52-4da7-8a8b-72122cfd6cd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe0c167d-68ba-4f36-8aa6-a13a89e04c78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04830cfa-d325-43ba-884e-16dbcc2d0dd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33227f88-457e-4b8e-9159-2c6a7be24a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8309450-6410-4fa5-ac7c-f7eb05df1036",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28547da-bb53-4719-ac07-d621c4d2d8a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a526c0c-2762-493a-8b78-679b0183956e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b16f51f-40f0-43bc-ac68-3560a8c10636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce8d9265-896c-4a8c-8a7d-4c684eb92273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2cf41b7-6d21-4a11-b8b2-898099419075",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "313db43a-d7bf-48bc-91ee-8d9b955a3ada",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "258acf69-fc75-4c45-b1a6-ccfeaf835f49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e54dcf-dcba-4cbd-b822-09b62929b967",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f4a051d-2c31-4ea7-aaf6-92d61e97b373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9f995c-b0bc-4558-a715-66be29d6444b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e75b05db-2a58-413b-939a-209683e2005a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c3fccfc-72f9-4bc8-be68-34460d2c8461"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "045c4bfb-1e27-4861-af5d-deebcbeaec39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca86644e-0d13-4362-b994-caaea7dac364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd902c1a-8998-42f6-a008-7509cdcc2fef",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5065b82c-b0f1-4765-babe-aaed2ae3027e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "400cfcf2-2be1-4446-9817-f44040dd22bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "739a04fe-1ba2-4563-a3ce-d16a9eb7ca7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af3590bd-da34-4594-bf1c-a85388029b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf138c6-48b1-47ee-b4cb-3a6f13edfbf3",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a16ad47d-81d5-46d5-bde4-e35e289c9341",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e437bf6-7a5d-4ee4-981c-c98e52cdeaea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20975eb-4324-4edc-aead-54b0ffc7aa2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bff3ad64-ebe7-4fc9-ab54-133d572e6cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a93050d-f890-4774-a7b5-928cce4326c9",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a92f5bf-7aca-4fb7-960c-7c1579ae1fc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68260439-f5f6-4586-9cd2-a80f37afcd5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a14272d8-b915-43b7-8850-452588719d54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aafd9c3e-a3e6-4fea-ab9a-6d47e55e05ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ed509f-4720-4b9a-97b5-dcf64748910c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86991316-0195-4342-a1c5-546d97a1cccf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91a85bb3-0a88-4c04-9e31-4e6924c32f61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c31a9777-4e57-4052-8c64-b638701e1204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4a0a2ec-1da5-4a37-ae43-07d07aaf225f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8fe2c50-8bcd-41da-87ad-1149c630d47a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d22cb0c2-4746-48a7-ac94-c35a08ac0418",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a82a2f91-cc0e-478d-b750-a78e82962418"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3367a87-da79-43ad-b915-feee5c924ff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b03a6b2d-180c-4a96-aa65-f3eaab8cc24b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6bf556-b987-4e52-b44e-073e62d5fca3",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8489f46-ae09-4f7e-b861-711d3a4e753d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fcb38c6-d4b1-4b08-9f65-18da7ac67f2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "445dbfc0-fbf1-4078-b1c4-1000a7c51eb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a603134-a4bc-4d08-9601-77d139f92890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d6c6437-a841-4ab7-a3d3-9115a48ce61c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073e9a15-b3b9-4211-914f-81205181fc29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0d59b89-539d-46ea-a468-be3939210d4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a89a93d-3381-4094-9a73-c06be16cdbef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faf7e66f-b5c0-4b5e-aa31-c815983746a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1901d56-5932-42eb-a350-712eba8129b3",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a54041f0-7e4a-47e9-87e7-b0999cd8a7dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c95cbfa5-5e86-492f-bd50-29c56500fd4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6dc1b4-8a9f-4880-99b7-f1da4040b8e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a014fcd-d151-4a8e-bfe5-80ec033df14f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab84bf3-34f7-478e-a8f3-857ebdb248b8",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8418ccd7-ea0a-46a5-b48c-b7d8fb0e6d98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4183fbc-1fdc-4afe-a7d7-209819c8f379"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12310886-3c21-47d5-b2b8-40605ef1f12f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed78da1b-eac7-4edc-a4f7-258c6c8c0174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbc2d797-c06c-4e51-bd40-428e9f97e24b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0210330c-1f4f-4447-8767-a55407892cb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd22479d-4da1-4f90-8ee3-5ecb7b7c6648"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e0b3f1c-c130-4950-bfc1-7340b60514c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37f21c66-72ca-43e3-9ec2-d7352bacf09e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79eafc53-3b73-4ceb-9ac1-ea661f5e0e7a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed3545d-15ed-4e47-8b2e-d399fa6bf865",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6cd75e5-3f98-4377-9d6a-833a2c2146d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee82add-ac27-4117-a0b4-52bde5da5f07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87045db4-4939-4b74-a27b-48226043b1de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9011ddaf-64c1-4406-aa70-88222308ac1b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5122a20a-a2b9-4091-84e4-d10481a0e94a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2969606f-d199-4fa7-ba7b-895a326e3739"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c69a37-da1a-4cd8-88bc-8f72349d3e9f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccd09f8a-ad9f-403d-a74b-a02eb4d156c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f62ea47-8d23-4d51-a9d9-f86c9624a335",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4193fe1-e2af-4f65-b2f6-ab8386c65b6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c38e2ad-5467-4650-8724-52fa476612b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d430994-9165-45c3-bdba-60ab738c156d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a9b6b2a-b700-44b9-b756-029b37021ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c1d71b-8fc0-435c-bfb1-7104162efc7e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "584b0d77-98e1-480f-9882-4122981a9c10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fd9253d-5294-453a-b565-a80f098e830c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d540dc08-31bf-49b6-bc50-a693687b0c65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f3aa604-8cda-4053-bc31-e67f1ebf17c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c782fab7-0da0-4602-9178-159e9fa53f87",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a92fab-dc4a-437e-a657-6b45000c1a69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb3c11a5-973b-41d8-8992-2a0086ee9117"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d9a65f-35ce-4dc9-9e9a-c3693c6ae8bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "987950f1-b056-417f-8927-abcf3d435df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e85ae68d-aa6f-491b-af2c-96d3ce53373a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5826ee14-7993-4f8f-ae10-abc379f03c9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbd56bc0-7cf0-4ae7-92fe-ea0b74853f13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e53e56e-44da-4941-a846-be18c5e1cecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2842ce30-b31b-4620-a1fb-965127fc9625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1633c51-4e6c-422b-9554-e50d74c6b065",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd57a5a5-2766-4082-86b7-ea28678aead2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b443e08b-b090-43dc-a0b9-83672ff235c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08e89e9-e667-4113-864d-53c680ca3524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83d09a16-9a83-41f2-90ef-8e66b987a060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba56a2b-df07-4c8d-8418-82ea51770d05",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa76b52-d3df-4109-a5df-9f7c8f95f247",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7856e16d-fdb6-4f71-88f3-a9a51e96dee6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0faa38fe-0e6f-4dea-b80c-317a3431ed3c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9f983f9-05aa-4f85-a6e7-da1a74039151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af9cb44-a2c3-42cd-9740-ea844b0d2f67",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e73700a6-22ec-4bf4-b830-ef235fc234fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59be6ac9-acad-4531-8a0d-44fb94d69d27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "359064d2-bcec-4fd0-90e9-af1da893b26e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99430f32-0de4-4612-97b8-29b3a19c7e63"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0823efc6-5412-40e5-9db8-cedbca93134b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f102f3d8-6763-4b09-a2ad-4c3c916b0106"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d5ce59e-b2ed-4bc9-abeb-a09ba53e112f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f2a4125c-c5ca-4ba2-aae0-72a5123af121"
                    }
                  }
                ]
              },
              {
                "id": "0f1a6db9-ca27-4635-a165-afb19bba0633",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9cba20f9-42f9-41ab-846d-550aed50c4e7",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f9a460-2ba6-4a3a-b759-d02388dc4b4a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "eb184972-861b-494d-883c-987637fb2e65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "841ab050-9e51-4481-9519-f02caba47bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2fd45ab0-c78c-4993-9e31-3844150a037f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "32621c99-842d-4d52-b90c-4bc86c9f16fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "649b8d92-690a-46d1-8aca-27dde59bfd92"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c91d9e59-6c5a-4329-9081-7689203b5678",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "842472e4-b576-4264-a0d7-751ff1a07ad8"
                    }
                  }
                ]
              },
              {
                "id": "352583ec-c29c-44a3-916b-46fbd54742ed",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "7f5c8db6-915c-4d5b-a747-e8bd92c2db41",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3293c88-d192-41bc-a1f3-9f9b0bd17805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ad47e5c8-efb5-47db-a7b6-4928c7894b24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d0f5415-4fe4-4bfb-8055-159aa13d5320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9569f2b-54ea-4ef7-b7e8-422d1b6771ef"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "081d8e1a-d49a-48ba-8e02-5dae332c32df",
            "name": "Positive Testing",
            "item": [
              {
                "id": "854eb8a7-c47e-458d-bc8a-a1dd60a0cd64",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8086bce3-4efe-491e-b694-6a9351984275",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b739b495-9f28-4c5b-92d3-89ef46088cf2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41b785e7-8cb8-4ad0-a15b-c73a48e9c1af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ead0b35-cf50-4e7d-8d77-0f56a634f806"
                    }
                  }
                ]
              },
              {
                "id": "5db270e8-732e-49c5-8430-5fd98a9e59a0",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3fae61e4-ca46-42d4-acd2-9c947e4760cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ba0a2eeb-180c-4c40-bb04-8b2bc74af22d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93b43e0c-de80-4528-aabd-fb964710cfad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6507ad38-fda1-47bd-811b-30dfc110af3e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "906bb740-8b09-4cf4-9c58-6fc883dccb4e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3276b594-34ab-4ac7-a7cd-6a92ace81951"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2cfb92d5-ce3d-4d27-81c7-23982f529e97",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8bed8961-d8b8-4a4c-8a77-4f12e8f240b3"
            }
          }
        ]
      },
      {
        "id": "f65eab6f-8413-4775-a541-05c596076a1d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "349747cb-6c47-4266-9b1a-2da3bf911eda",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ffc9576d-edd7-4706-9f31-f3d3e2e760c8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2dd4dabe-5fa4-4636-ad13-066add1bf13e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb390349-a131-4c8c-9376-edaf0c757e9d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d4d92ab3-e3f5-408f-b2ec-7f5ec652f3a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd3832c1-5dc5-4722-95f0-665c76e6b9e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0cdf0f8b-3ede-4f57-a3ec-fcd801301800"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0eca703-6cd6-4c84-80a4-179cf5fee682",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8efdde2b-9fbd-4261-ad9a-d8ef55510886"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6baa216f-9d21-4031-9aa6-40a7a49fa52a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5673acc4-2c51-4d4f-9281-9fc05f126f8a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6a841426-101c-467a-a84d-feb9e02c234c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d92b4c1d-367e-435f-a6cb-687532f6c743"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd6de51c-2e48-42ca-b103-a328750e04ee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9bad7c2b-a903-480f-93d9-301ad8a46b35"
            }
          }
        ]
      },
      {
        "id": "5816a848-1c59-45b8-82cb-78e62e78020c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e66ab34a-627e-4f2c-af49-a6ee85788f45",
            "name": "Negative Testing",
            "item": [
              {
                "id": "455e258c-72db-43fc-8fb1-3fa6130f0e8d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fb015872-61f7-443a-ae59-2230a3505d65",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed37e0d-6dfc-4cd2-a3b8-11d3f4669d5a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62703cc6-435d-472a-8bd6-27117d82439b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7dc3064-32d7-442d-9fbe-bd06bdcd68e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ffeed1ec-1530-4062-af7f-c222ec4c0e5c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d047d62-5dab-4632-9a1d-36c5a60acd1a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2c59fc0-0c94-4ee7-adef-0523a5972bae"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5cc2201a-c050-4a8b-b03c-3cc5626c42e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b05a2ed9-74da-4db6-b7eb-54483fba5865"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3197c4ee-ece8-4c66-a5e9-bdd2c4999d5b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0255d790-8ca1-487e-bec5-e0c8c3ac329f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fbf5267c-c5ad-4d28-a879-7e39e7966c05",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f27cadac-cbc2-4f1f-aa8f-d02bd0b64f59"
            }
          }
        ]
      },
      {
        "id": "a869da8d-d06b-4482-92be-2527800a1e0d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e217bbcb-ade3-4985-a2c4-95dbc0921906",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c9004088-0703-4e1d-9a68-3bcc7f7bc28d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c19e17e8-a4dd-4787-aea2-3916308ec750",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72a0ac7-b718-4450-9310-f4dced55251c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "413083f6-f8b5-4e01-a511-1ae8d694c655"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a5b8a3-3397-4ee7-a4cc-a1b3310627c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52db955f-56bf-4bcd-b54f-ea3e17551992"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0867aa1-681c-4239-ae2d-247cd78e362e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d23449b-7865-4324-8c49-b1d5b8b84e5b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0a0bbb9-4b62-49b8-863b-9272cfc96b6e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c68a7401-db88-46c8-b87b-2e97ad886770"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "84c8c3a2-bf2a-43b4-bfaf-8aba5331304f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "de9cac50-9da6-4f50-8fd2-81834b0137d8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a1684a6b-4672-4229-8de5-48459cd2c6e0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "401efcad-6d68-4671-905f-92a868246991"
            }
          }
        ]
      },
      {
        "id": "3f802cb1-c936-453f-b325-cc4041c812f0",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "75517e45-5561-4dfe-86d2-96557a26aef8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "af5b4f2d-6ec8-400c-a772-4bd5d892c046",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "95e85720-45a4-4c74-9136-491d3b90d2c1",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "76451cf6-c71a-48f7-bf49-01f8fdeaf451",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "653dc195-3680-4ab4-a64d-a8a3b423ba75",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 104.31349206349206,
      "responseMin": 10,
      "responseMax": 5719,
      "responseSd": 446.89083853218125,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1716165447488,
      "completed": 1716165482080
    },
    "executions": [
      {
        "id": "0d0948be-6d81-41a6-a3eb-713759bb639d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a2b93c6b-658c-4f22-ad3e-9ced5e5d8806",
          "httpRequestId": "e5f7eb55-ce8f-4d24-8d41-4ff16a4f6d86"
        },
        "item": {
          "id": "0d0948be-6d81-41a6-a3eb-713759bb639d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d29f7df5-8998-42dc-ad86-90215ef38e5f",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 0
        }
      },
      {
        "id": "e2ef0732-1a1c-4d11-a402-a9e8ab29e625",
        "cursor": {
          "ref": "83c47580-e298-4829-890e-58bc49cadc0d",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "54208a3c-f28f-42c7-919d-a2edde844fcc"
        },
        "item": {
          "id": "e2ef0732-1a1c-4d11-a402-a9e8ab29e625",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ef1d316d-27d0-4b3b-a59f-3807af615099",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "bef5292c-0014-4015-97d3-be6fd4c732da",
        "cursor": {
          "ref": "5342cedf-beff-48d1-968b-331647ef5a69",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "3d4cc702-567c-4ef0-90e9-3390c82c4e7a"
        },
        "item": {
          "id": "bef5292c-0014-4015-97d3-be6fd4c732da",
          "name": "did_json"
        },
        "response": {
          "id": "c62c3232-acec-49a8-b85a-8cf7c0aab40b",
          "status": "OK",
          "code": 200,
          "responseTime": 311,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae6776e6-f973-4858-9ba4-a8629c53a82f",
        "cursor": {
          "ref": "8fde4922-d9c7-4b23-8f19-a7cd91a62fa1",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4b46cce7-9400-4157-a1dd-8d1549f07b36"
        },
        "item": {
          "id": "ae6776e6-f973-4858-9ba4-a8629c53a82f",
          "name": "did:invalid"
        },
        "response": {
          "id": "5cb38ad1-2e12-4c87-a125-8976f80afc62",
          "status": "Not Found",
          "code": 404,
          "responseTime": 316,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae6776e6-f973-4858-9ba4-a8629c53a82f",
        "cursor": {
          "ref": "8fde4922-d9c7-4b23-8f19-a7cd91a62fa1",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4b46cce7-9400-4157-a1dd-8d1549f07b36"
        },
        "item": {
          "id": "ae6776e6-f973-4858-9ba4-a8629c53a82f",
          "name": "did:invalid"
        },
        "response": {
          "id": "5cb38ad1-2e12-4c87-a125-8976f80afc62",
          "status": "Not Found",
          "code": 404,
          "responseTime": 316,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a1c1eb-0c3f-4c6a-abf0-e573da751f7a",
        "cursor": {
          "ref": "b5a7515d-8598-420e-aee9-573a565d00c1",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c04521bc-6e60-4fdd-a50a-005d43e5a2eb"
        },
        "item": {
          "id": "47a1c1eb-0c3f-4c6a-abf0-e573da751f7a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7b0c0cfe-ea03-4b9b-ba93-f367e1bfce81",
          "status": "Not Found",
          "code": 404,
          "responseTime": 40,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b76fe6e-99d5-44ad-865d-5609b6e8832a",
        "cursor": {
          "ref": "dd216915-6c30-42bb-ae32-2c825ce69fa9",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ed69b5ef-8603-40d3-8dc7-ed8c62ee7e8d"
        },
        "item": {
          "id": "9b76fe6e-99d5-44ad-865d-5609b6e8832a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7011de09-5136-423f-bb87-56f1c7872af9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 38,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e524ede-5931-4e0a-b8c8-a8be53a4f073",
        "cursor": {
          "ref": "d8f5b7be-902e-40aa-b2a5-1c5cc62c18ec",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "29fec547-e506-4ad1-933b-1a481a387be7"
        },
        "item": {
          "id": "2e524ede-5931-4e0a-b8c8-a8be53a4f073",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "327901bf-8a7c-4e37-ad35-248e771e2d10",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d1d2b5-cbf4-4833-bdfd-fa390a830647",
        "cursor": {
          "ref": "127d4008-4d4e-4de4-82f5-07c9329f5e72",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2d7c187f-b0b6-4ea0-8f28-97fd05a85d9d"
        },
        "item": {
          "id": "27d1d2b5-cbf4-4833-bdfd-fa390a830647",
          "name": "identifiers"
        },
        "response": {
          "id": "e96e1ec7-f6c2-497b-acbb-5759642b767e",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5534d0-a615-461f-9f5e-2bfe2ea02249",
        "cursor": {
          "ref": "0d35e45c-3eb9-4a23-bb90-4dff8c3e1b1e",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "efdc7f69-7638-4c26-b7e5-18ac89fcf62c"
        },
        "item": {
          "id": "3c5534d0-a615-461f-9f5e-2bfe2ea02249",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6865bb99-c549-412b-ae06-ac9934e96ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d359e605-8a5d-4b4c-b7a9-149b87f7b716",
        "cursor": {
          "ref": "a0020eab-983f-4d86-aa78-ccd2a0598134",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ef54bbc2-1aab-4018-aa1d-25b47b9dde7d"
        },
        "item": {
          "id": "d359e605-8a5d-4b4c-b7a9-149b87f7b716",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2ff5bd88-d60c-4287-8252-c5004773efa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99069eaa-e2f4-4339-b75c-377768277c53",
        "cursor": {
          "ref": "0280fe9c-93f3-4a0a-a6ac-cfd516f1ed19",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "86f51b19-3c57-4b94-a7ec-98d38b9aeb46"
        },
        "item": {
          "id": "99069eaa-e2f4-4339-b75c-377768277c53",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "325075d4-d86a-40b2-be3f-682ffe827524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8139f665-c257-403d-b81c-83630c9fce61",
        "cursor": {
          "ref": "76bcdf59-7ab8-4de9-b10f-70416ee6be97",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a3428099-4fe4-4832-80d7-7d6c191c0c02"
        },
        "item": {
          "id": "8139f665-c257-403d-b81c-83630c9fce61",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "4b45e326-763c-4486-a308-2ce49ebb4ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc9ee8ae-2c75-4f50-8ab0-74cef59e7ecc",
        "cursor": {
          "ref": "1c1e7780-c91b-49d2-ad71-1985d298ec97",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7ece8288-30bc-4c90-a5ba-cf7a69f26d8d"
        },
        "item": {
          "id": "cc9ee8ae-2c75-4f50-8ab0-74cef59e7ecc",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "613d50c3-1a62-41e0-8526-3b5259c947f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4754182b-8f79-4c41-a580-3b92b63fee29",
        "cursor": {
          "ref": "756baef1-6cee-40f1-be54-5ed29173d5c9",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a98ba8c7-47dd-44f4-a8ee-96ef28023533"
        },
        "item": {
          "id": "4754182b-8f79-4c41-a580-3b92b63fee29",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "43bd6f61-5185-45cd-82e6-d5a1f58be2cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f9650c5-430a-4bf1-a627-c0f3110837b9",
        "cursor": {
          "ref": "93717ccc-139e-4760-8baf-dd0e276dfcb1",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "6f9bc919-4a1a-478d-b6bd-88fa76ac149c"
        },
        "item": {
          "id": "6f9650c5-430a-4bf1-a627-c0f3110837b9",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "7b46ff23-04db-4026-b0c9-00f7754b4f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae3edb3-bd34-43a0-89ca-d1dadfc47f95",
        "cursor": {
          "ref": "edda450b-4a11-475f-9960-f6f21176cdf0",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "5c1011dc-9459-4c57-bd2e-cf2e2a0d32c0"
        },
        "item": {
          "id": "bae3edb3-bd34-43a0-89ca-d1dadfc47f95",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a918cd52-6a91-4276-9e91-b879de18f63c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6e3e8e-eb40-4a49-8a2c-89507cddea23",
        "cursor": {
          "ref": "248be1a6-4878-47e4-960c-bad0e073ffb1",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a66e687b-5639-4a1b-af40-c7dd1c5a34f1"
        },
        "item": {
          "id": "0a6e3e8e-eb40-4a49-8a2c-89507cddea23",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e396b683-371b-4c34-b5ae-a6beb2b15563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba0f3493-6e21-460c-9a6a-2f8cd3c20e65",
        "cursor": {
          "ref": "447f00b4-72f3-4300-98f4-d3376951d938",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7f2b6769-fbee-4bf5-b479-e6104bd27d77"
        },
        "item": {
          "id": "ba0f3493-6e21-460c-9a6a-2f8cd3c20e65",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6d630189-aa05-470c-8324-0de9d7e9da8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f04f096-65d9-4798-8c6f-1b00e1958d85",
        "cursor": {
          "ref": "e7b516c3-9e0a-4e65-bbe6-b9e1fef0b00e",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3bb2656d-fbb1-435b-baf2-deaaa1f37ed4"
        },
        "item": {
          "id": "4f04f096-65d9-4798-8c6f-1b00e1958d85",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "310ad0f3-73ea-4dd1-9b7c-3907f68b90e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac9b9e5e-9910-4246-a9f4-ec1f48659010",
        "cursor": {
          "ref": "6c96b368-daac-4edd-b108-9040487e5c46",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "dd38cdd6-1baa-4f00-9036-174534f66fc2"
        },
        "item": {
          "id": "ac9b9e5e-9910-4246-a9f4-ec1f48659010",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "ef049c03-a5ee-429e-9ff6-8deacc47f77c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "223ceb93-83d1-4150-8632-6a8e17ee77b1",
        "cursor": {
          "ref": "521b9c43-280f-4f76-892a-6980d687995c",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "2bc67416-7c4b-4757-9a73-61f69dd81ba4"
        },
        "item": {
          "id": "223ceb93-83d1-4150-8632-6a8e17ee77b1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "1f1a45f0-9308-409b-9cf0-687cd7f7a2e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e37dc25f-5f2d-44b2-bd53-112e3ea89fe8",
        "cursor": {
          "ref": "9f32d0a1-2caf-416e-998a-16fa6001d28e",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b6ee6aae-44fa-4eae-8ba5-4567eb68c83a"
        },
        "item": {
          "id": "e37dc25f-5f2d-44b2-bd53-112e3ea89fe8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "65fd4f13-6733-4b32-8075-9d01e0375985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7455d444-4f23-4f95-952b-8e9178d513ea",
        "cursor": {
          "ref": "c31066a4-6188-4b93-89d4-76867d30d824",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7ab0cfcd-6e6c-42cd-b4b7-50c11300a44c"
        },
        "item": {
          "id": "7455d444-4f23-4f95-952b-8e9178d513ea",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e794656d-6e40-41c7-91f0-3881937d5100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89917594-2416-4cb5-8157-70168e8cbc35",
        "cursor": {
          "ref": "37e0da91-595b-41e4-b6e8-e9b40f9831b1",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b6618e5a-32ac-4b85-9a8b-2b9ecdbc3f2c"
        },
        "item": {
          "id": "89917594-2416-4cb5-8157-70168e8cbc35",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b374d229-4b5f-4fa3-9747-f50981fa41b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b124272-b842-44b5-a0cd-a4a552ac294c",
        "cursor": {
          "ref": "ff17ecba-0d27-4057-a7de-5af25bbaf6e1",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b537d72e-14fa-4884-88a3-24160ad7e061"
        },
        "item": {
          "id": "7b124272-b842-44b5-a0cd-a4a552ac294c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "00eceb10-5fa1-467d-8710-26d67a4e3ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa198aed-3e3a-432a-aba7-d95135ea6f7c",
        "cursor": {
          "ref": "0577f7b9-9b5b-48cf-bbc6-c59a658c0820",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "867b44da-e9ea-4f9f-97eb-51e2c203c00f"
        },
        "item": {
          "id": "fa198aed-3e3a-432a-aba7-d95135ea6f7c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "330e7cec-43cb-4701-8e47-c4a63591261a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33918d8-1150-488c-8930-8c255dc3ee1a",
        "cursor": {
          "ref": "c428aa67-654a-444d-b4a9-6984fadecd20",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "84b7483c-820b-47e7-be53-fd776648d9e6"
        },
        "item": {
          "id": "c33918d8-1150-488c-8930-8c255dc3ee1a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "4667a791-bc85-49d8-aa2a-c4c41299ba97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00efbca4-d135-4fdf-846a-552b66c4d199",
        "cursor": {
          "ref": "265de57c-357e-4042-a34a-bea7273ffd18",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "cced8a11-5f71-42f2-a947-337173adbb22"
        },
        "item": {
          "id": "00efbca4-d135-4fdf-846a-552b66c4d199",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "977b776b-7f8b-4424-9761-476cb4a4c0be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b193750-64f2-4bad-86fe-706fce00586c",
        "cursor": {
          "ref": "4353184d-1baa-402b-9b09-71e0b9558443",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "627bdaf0-3000-4c27-9453-be7853012abb"
        },
        "item": {
          "id": "0b193750-64f2-4bad-86fe-706fce00586c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1b1d7d68-c7d9-41ce-8f36-fd3d03db7304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "749a61f6-9be0-48c9-90ef-785b634e17da",
        "cursor": {
          "ref": "85b9b58f-7b8c-46c9-b2d0-6dc285f27029",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "cc6813bc-a3fa-4197-99c2-e0bafa50498e"
        },
        "item": {
          "id": "749a61f6-9be0-48c9-90ef-785b634e17da",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "05a19ab2-ef47-484d-b47a-f3acb7e7035c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81496fab-3888-4d4e-bce1-3b7fac0e0ce7",
        "cursor": {
          "ref": "8f09fefc-12d4-49c9-bb57-ffc14ea9724a",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "4d0bc07d-fc3b-4f76-a20a-09b5275fd6a5"
        },
        "item": {
          "id": "81496fab-3888-4d4e-bce1-3b7fac0e0ce7",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ff4320bc-530f-4808-a1b1-0d2b89a85756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50c1e14-c977-4aad-bdb7-119fb297f389",
        "cursor": {
          "ref": "6fd0d950-31e4-4824-919c-9f0b04515733",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5bc2c5b1-d060-40bd-a5ca-af1d65a4cc7f"
        },
        "item": {
          "id": "d50c1e14-c977-4aad-bdb7-119fb297f389",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d2941efb-5c9d-4172-b514-b9316c861630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e304b56c-87ba-4013-9c14-6d4b73c217f5",
        "cursor": {
          "ref": "217d2b5f-0e8e-4337-a731-c562f0467022",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "5bd6028e-1db0-47c5-aec3-f71097c4e5af"
        },
        "item": {
          "id": "e304b56c-87ba-4013-9c14-6d4b73c217f5",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "144b5220-2b5d-435d-bcac-a41c9deddba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e007fb69-1a01-4b15-9134-4e157b9c593f",
        "cursor": {
          "ref": "281ce2d0-2263-48f1-8bf5-74dbd0a36a86",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b7005302-a8e2-4693-81c4-dd881e0ce295"
        },
        "item": {
          "id": "e007fb69-1a01-4b15-9134-4e157b9c593f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5c5cca34-74e0-4337-9142-f53cee7108a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c398064-7533-4a6d-b1eb-9372d2abd0c9",
        "cursor": {
          "ref": "75987e5a-4a0a-4097-9ca2-95d88211c6a8",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "12145cca-1bdc-4193-b802-26fe14c592e9"
        },
        "item": {
          "id": "6c398064-7533-4a6d-b1eb-9372d2abd0c9",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "139864bd-ef01-4e93-bd4e-34c1c95474c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f245a76-9bd4-473b-97a4-61dab7f6dd7c",
        "cursor": {
          "ref": "40e6e3b5-b930-4edd-88c1-a7e6bd2cc4e2",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "3353ee60-7acc-4468-bc15-0afaf66097c2"
        },
        "item": {
          "id": "2f245a76-9bd4-473b-97a4-61dab7f6dd7c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "6d65f15d-24fb-4217-8074-2096f78f3a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c78d697-813c-4c70-b03f-db28c193d11a",
        "cursor": {
          "ref": "d0f98f28-d567-4aef-b1d0-f1151ca282cc",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "57a97ee4-b985-476e-9f3c-a20df90d08c4"
        },
        "item": {
          "id": "4c78d697-813c-4c70-b03f-db28c193d11a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "eb2d2cff-417d-4f52-94c3-00f00501bd06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d76aee-96c4-42a9-af06-97ec2d931c3d",
        "cursor": {
          "ref": "9d61b18a-a249-463d-93f0-44feca10b7aa",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "31f5b1ed-afc5-4499-93d6-fc2f3ed634e4"
        },
        "item": {
          "id": "54d76aee-96c4-42a9-af06-97ec2d931c3d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2d52bf12-29d6-4a47-97a4-6c0ebfdfc04b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8363dec1-7bcc-4cc6-ad08-78a3264004c3",
        "cursor": {
          "ref": "68b40e38-19f7-4525-9830-18dc85a1f68d",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5b868b9b-6269-48fe-b119-eca827dd241b"
        },
        "item": {
          "id": "8363dec1-7bcc-4cc6-ad08-78a3264004c3",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a1696dd1-0a2e-49a6-add4-31ba0005c93f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "506506bb-5e86-4176-a846-6803b47132c9",
        "cursor": {
          "ref": "e28fb1ef-b75c-4a34-873c-e186d7827f88",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "631ac5f8-b2fa-46e0-8d77-8a1f7dad2824"
        },
        "item": {
          "id": "506506bb-5e86-4176-a846-6803b47132c9",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a4ad1706-1d27-477a-bfed-b8efceb35a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c0708a1-ad80-4ecb-8947-7132c76a9b60",
        "cursor": {
          "ref": "34e97dc9-f55e-4071-8dce-6bf0f59a0efb",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "fc28f1fe-e069-4c1c-9ebd-285a8044d852"
        },
        "item": {
          "id": "0c0708a1-ad80-4ecb-8947-7132c76a9b60",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "90ca3663-5410-44b4-9c87-905bb0a07098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2530e5-bb85-444b-a4f9-35c87a5003da",
        "cursor": {
          "ref": "e961aab6-bff1-4172-a52e-a07d9af678e2",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "80f28cdb-ff61-459d-b580-eaf615a17ecc"
        },
        "item": {
          "id": "8e2530e5-bb85-444b-a4f9-35c87a5003da",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b74f2305-eb4d-4bcb-b631-eb37e42c4fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "157a11b7-cac0-4ea5-b03f-86681713d0bf",
        "cursor": {
          "ref": "d4f9831a-63e1-4c42-a110-c60971fb2fb1",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c200e975-3c16-400f-a678-d4c69becfcdd"
        },
        "item": {
          "id": "157a11b7-cac0-4ea5-b03f-86681713d0bf",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "22b01811-4c7d-4927-9a07-93da57501ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c62ce7d6-74d8-4776-8c51-8f1dc48b0b18",
        "cursor": {
          "ref": "81b64fce-7d1f-4add-b3d1-72a47993c20f",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "74b307b9-e40e-449e-a732-ec9d3d99d990"
        },
        "item": {
          "id": "c62ce7d6-74d8-4776-8c51-8f1dc48b0b18",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "557a0d21-7b4d-4d0b-8d5e-70758de5f073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecebf71d-9b34-44d8-8dda-3b1101a27e0c",
        "cursor": {
          "ref": "6bf40a1d-6113-4cf2-9a6e-72f6f48836ed",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0a74605a-b60b-4e23-a266-33464393de52"
        },
        "item": {
          "id": "ecebf71d-9b34-44d8-8dda-3b1101a27e0c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "74f06981-805d-41f6-9e62-5e45e2e3f4ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e478406-e4de-4002-838d-2ed1f2be5487",
        "cursor": {
          "ref": "2ace987f-e4aa-42fa-b2c1-8ffa636f8d7c",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c172e11e-282d-4567-953d-4df4fb18b3e7"
        },
        "item": {
          "id": "7e478406-e4de-4002-838d-2ed1f2be5487",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a9d90c7e-9f7e-4a3f-97d4-eb49a1cd49ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b831ef93-4f51-4208-83b3-0e6f3fdea4e8",
        "cursor": {
          "ref": "5e837c79-2b2e-4909-ba73-245d816c0e46",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "af8afd4d-81d3-43f2-ad69-53d72071053a"
        },
        "item": {
          "id": "b831ef93-4f51-4208-83b3-0e6f3fdea4e8",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "fc44ce01-44e7-400b-9126-769c3878b9cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77807f5f-8901-4eca-ac0b-8a83be7b7612",
        "cursor": {
          "ref": "5e293658-d2ba-4e09-8834-cabc32c1b6eb",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9c6009ea-382e-4af4-ba1f-17dc34e1b59e"
        },
        "item": {
          "id": "77807f5f-8901-4eca-ac0b-8a83be7b7612",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ff931c3b-e8f8-42b4-bf27-543322a1523c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c90c11e8-d87e-4ae1-a754-a121f1b31fd6",
        "cursor": {
          "ref": "e641bfc2-8ce0-46dc-b870-b505c42e3ca7",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "06d907cf-8df0-4b55-94d0-11709e82ad35"
        },
        "item": {
          "id": "c90c11e8-d87e-4ae1-a754-a121f1b31fd6",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "467ca8d5-0e96-4133-9493-11e68abd9a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c348692-6182-48c8-a1e0-51913f442b6c",
        "cursor": {
          "ref": "64934c92-5626-4f76-9e04-665d3f558504",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "fcbfb9df-f5a7-46eb-aaa4-6fad9e7c19bd"
        },
        "item": {
          "id": "9c348692-6182-48c8-a1e0-51913f442b6c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8ab9e810-ca34-4e2e-9f40-d1f014c6bb83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23553da-fb86-44d6-97f5-4684236aba11",
        "cursor": {
          "ref": "42b7ac90-e065-473b-9c7a-2c604f71e8d8",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "038c62e8-73a7-4157-bdf2-9e269987a7e5"
        },
        "item": {
          "id": "b23553da-fb86-44d6-97f5-4684236aba11",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b292cf5b-d5c0-4100-bdd0-f50305b12cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2491f61e-2b0e-4952-a8cf-ef178db7337f",
        "cursor": {
          "ref": "6c028f2c-3a02-4cd9-8af9-ae2da03d9f6d",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5591fbc3-df12-4f09-a91e-c7fff5c6478e"
        },
        "item": {
          "id": "2491f61e-2b0e-4952-a8cf-ef178db7337f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "956bf675-6088-41b1-b77e-cf2f7e7f1fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b35f03-653d-454d-839a-46ddc574ca37",
        "cursor": {
          "ref": "78c26513-4e98-48b1-bfa9-ee285b1467d0",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "fcc7fb4a-77ab-462e-ac40-3de30db6d591"
        },
        "item": {
          "id": "97b35f03-653d-454d-839a-46ddc574ca37",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d3ebd267-5fd0-4b52-8c35-50dffbee25fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db8ee756-6341-450f-b68e-ee5b44ef49f4",
        "cursor": {
          "ref": "1c339f8e-d441-4ae5-93da-a1419678f983",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "bfd3e9dd-e640-46fb-9e29-4add2307deed"
        },
        "item": {
          "id": "db8ee756-6341-450f-b68e-ee5b44ef49f4",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b3a55d95-6073-4c72-8da5-9138e1514198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d6aa99f-d4c5-4b7e-9cad-00879554d65d",
        "cursor": {
          "ref": "93c53516-4685-4e71-a1a4-8ba930240144",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "fa360722-7c56-4956-94f1-4a20bd6d649d"
        },
        "item": {
          "id": "8d6aa99f-d4c5-4b7e-9cad-00879554d65d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7ef56b96-bf4b-4535-9f71-7203d1b9cd7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50fc53e4-341e-4d14-a38d-fa179185b711",
        "cursor": {
          "ref": "ac71130d-792e-4f9b-8d40-8f4a2929975a",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7446deb5-1fe7-4765-9fa6-6292afc488e6"
        },
        "item": {
          "id": "50fc53e4-341e-4d14-a38d-fa179185b711",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "9ef24006-0ecf-4633-9d27-14711df9c445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe93eaa7-ae60-4cae-9e71-59309332fea1",
        "cursor": {
          "ref": "575647e1-25e8-42e7-94f3-1b4f98c33bd2",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3bd33fd6-4522-4eab-b18c-934f4c2f3210"
        },
        "item": {
          "id": "fe93eaa7-ae60-4cae-9e71-59309332fea1",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ba9c4e15-f786-4b2e-a085-64bd6471f53d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f0083b-f40b-44e1-8427-a2eac1c2389c",
        "cursor": {
          "ref": "09fe6988-2599-4b9f-bddc-ecf4c6e124a2",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "bfe9ce91-8605-4daa-8b8f-9b83fc352909"
        },
        "item": {
          "id": "b4f0083b-f40b-44e1-8427-a2eac1c2389c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4a3ba52c-6b7e-4abe-8419-8ffa9e55801f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703c7a7a-db67-4b18-9c61-e0fbd775aa10",
        "cursor": {
          "ref": "7baf678f-f81b-43ba-9d41-780997624970",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c9dfc794-8482-4575-8633-a814d61220f9"
        },
        "item": {
          "id": "703c7a7a-db67-4b18-9c61-e0fbd775aa10",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "dc42a119-b73b-49af-b61a-61f9024bf240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 142,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc6368b1-6dc6-4413-8fc3-a6a2d00b16f3",
        "cursor": {
          "ref": "f1549ef6-dd41-4a2a-b8f3-450ba86ff504",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "8d60f20c-3e90-4206-92d6-2c4828f912ab"
        },
        "item": {
          "id": "bc6368b1-6dc6-4413-8fc3-a6a2d00b16f3",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f152392c-2476-4999-ac25-258ffa02b2a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa5964f-96aa-48a6-85dc-737573fa0df9",
        "cursor": {
          "ref": "cea954ab-3fdc-4d57-b8c5-fbfef7f89ade",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "94b9ac66-11e8-40fc-b815-594c86345f39"
        },
        "item": {
          "id": "0fa5964f-96aa-48a6-85dc-737573fa0df9",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "08a8ffed-3806-494b-9a42-289171c41d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 229,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac71831-2edd-476a-abc1-3e6c74ad7971",
        "cursor": {
          "ref": "6017ec42-28f9-4485-b42d-b4cdb986b7a4",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f955e3e8-124e-4a39-a3d4-7dda7a872852"
        },
        "item": {
          "id": "fac71831-2edd-476a-abc1-3e6c74ad7971",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "671c5986-f3f0-4ae0-9166-5bbdfac6103c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 182,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d2aaf0-b7d3-4472-bd5a-0c0a6c1fe995",
        "cursor": {
          "ref": "04c24300-99df-4316-9425-019dc8960369",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "487ec237-4040-4597-8600-c7da32ea5ddd"
        },
        "item": {
          "id": "45d2aaf0-b7d3-4472-bd5a-0c0a6c1fe995",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7a9eb867-061f-44db-9ec5-391333e5031d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2357dc5-dbae-48bc-a93a-b414e78fa560",
        "cursor": {
          "ref": "1a084109-108d-4d78-9dcf-94dfe9f6edfc",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ec9fe5b0-bb3b-4dc9-86df-af9ec6a0daec"
        },
        "item": {
          "id": "a2357dc5-dbae-48bc-a93a-b414e78fa560",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "80cc37ad-3d8c-47d9-94bb-8a392284c90d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe73531-3fa6-49a5-9e33-c358da3b409c",
        "cursor": {
          "ref": "e2a6b321-6760-4d28-a6dd-4c965dd939c4",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d5f6a07b-39fa-45da-9d4a-d28dfacceff7"
        },
        "item": {
          "id": "4fe73531-3fa6-49a5-9e33-c358da3b409c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "40f1db6a-82a1-48e6-a62e-d8d1748037af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a699d4-e074-47f1-909d-5a14d97a77ee",
        "cursor": {
          "ref": "b24b0771-fe54-495e-8d53-5e3fb3311692",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b91992a2-70fc-45ba-8a5a-32f59fbc2108"
        },
        "item": {
          "id": "e5a699d4-e074-47f1-909d-5a14d97a77ee",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e045e1ce-db79-45d9-aa6d-de8b4ffa46fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c25d3a92-70e6-4e6e-8ede-90624641636c",
        "cursor": {
          "ref": "70a85b51-0eb4-44fd-9945-45c8bd63b56e",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b3898f00-8c56-4423-a66e-4297a9095e90"
        },
        "item": {
          "id": "c25d3a92-70e6-4e6e-8ede-90624641636c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "27bbd673-a3af-47fc-84bd-a243350dec73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 152,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b0435f-4d05-43ee-bb23-b94ab74f2bf5",
        "cursor": {
          "ref": "5eba420a-c430-4ed4-9f81-f7647d413090",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "023c208c-05e0-4116-87ef-4d6f027887ed"
        },
        "item": {
          "id": "47b0435f-4d05-43ee-bb23-b94ab74f2bf5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "09b30ad7-f498-4318-ad0c-469d3ddf6344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "252b2f7f-752a-452d-90a8-9013548974e6",
        "cursor": {
          "ref": "fee2e2f8-8f20-42a8-b49c-aa674119dbf7",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "0f44b611-88a1-4897-a720-bfacc35904c3"
        },
        "item": {
          "id": "252b2f7f-752a-452d-90a8-9013548974e6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a34bf872-15c0-405f-8a01-097dbafda1d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 845,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d20cb98-b761-4e54-a0d9-b7ca6c33d943",
        "cursor": {
          "ref": "f7df05da-9dc7-4e8f-b58c-971007e78437",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f8e4d1d6-66dc-4da1-a1a5-e269ca6aa0d6"
        },
        "item": {
          "id": "9d20cb98-b761-4e54-a0d9-b7ca6c33d943",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a0f81df5-71ec-460d-ad66-8f972bbe956d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c4cba7-98f3-4090-8435-77dcdd6b9484",
        "cursor": {
          "ref": "1de697f7-7cb1-492d-a16e-411d29698443",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "407277a6-d154-41a0-b2ea-631089cbd40f"
        },
        "item": {
          "id": "51c4cba7-98f3-4090-8435-77dcdd6b9484",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "6c70a716-1e1f-47a2-8214-eb49702e9420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d24c478-978f-43cd-85d7-fd133f931d76",
        "cursor": {
          "ref": "141c3ab5-8662-4e70-9544-989ff177455c",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "41e04eeb-0ef8-4ae5-8b0a-d1debc818312"
        },
        "item": {
          "id": "1d24c478-978f-43cd-85d7-fd133f931d76",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "078ffb05-cfd0-4cef-85e1-108550704119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "061aa59a-3393-4fc5-8c86-0e7ae391c509",
        "cursor": {
          "ref": "2e31b52d-2cbf-4267-9632-ec13bbe26f04",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "58162463-176c-4aaf-9d07-751a3c3ef5fb"
        },
        "item": {
          "id": "061aa59a-3393-4fc5-8c86-0e7ae391c509",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "147575d0-8889-4e43-b4dc-a0320fa27874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3146419d-018c-4b2f-88b4-bf1264b6dbba",
        "cursor": {
          "ref": "c9edca9b-105c-4cfe-bf0f-fb287c6a7e49",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "4661d35b-d8a4-4ac4-b291-a5973e1e2799"
        },
        "item": {
          "id": "3146419d-018c-4b2f-88b4-bf1264b6dbba",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "35cb79c1-e4be-4d96-9505-4b4e4281e0f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f03bde55-9d26-427c-b538-83ba92204152",
        "cursor": {
          "ref": "0e656168-f21f-4b95-a286-c1071905dbb4",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3bb6d92f-50bd-4d0a-b634-87c2d11a0f64"
        },
        "item": {
          "id": "f03bde55-9d26-427c-b538-83ba92204152",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "2e9d0b99-6333-4c22-bac5-a5578509bede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b3f6c1-6bcc-4657-9bb6-735e369e3df2",
        "cursor": {
          "ref": "86189d16-a543-4982-915c-ded2e0b4b828",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "5e105667-1a76-4721-9d17-6bf40a7ef149"
        },
        "item": {
          "id": "59b3f6c1-6bcc-4657-9bb6-735e369e3df2",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d932d867-8918-422c-81e2-426b83695c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee3cf31e-5171-4f5d-a57f-cf8205d416be",
        "cursor": {
          "ref": "3ceea88c-4514-42eb-860f-0d9e89b0d37b",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "61dcab95-88e7-45d0-ac98-273c32a29f34"
        },
        "item": {
          "id": "ee3cf31e-5171-4f5d-a57f-cf8205d416be",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "99747bfc-877a-4ff2-8f56-907e3bc49f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16977027-816c-47fa-a896-02d97948babd",
        "cursor": {
          "ref": "e19b87de-1849-49db-b35d-032aeeee116e",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3e7fd6f7-7efd-4e31-96cb-f96fb2868f92"
        },
        "item": {
          "id": "16977027-816c-47fa-a896-02d97948babd",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "0e43f43d-d500-4763-b607-55784691877a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fbe921e-b990-4d03-aee7-a77d5ba62df7",
        "cursor": {
          "ref": "656e6efc-4ac5-42de-a82f-ab6d79f4fa69",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "e72ccad3-5732-4daf-8d53-66841c88f93f"
        },
        "item": {
          "id": "7fbe921e-b990-4d03-aee7-a77d5ba62df7",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d5ed14c4-422d-4ec3-85d7-bbe38e78730b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63270b84-81fa-46d2-b386-e0ba3c48ff7d",
        "cursor": {
          "ref": "7b541a70-0b94-44ac-808a-a11f4d9cb4c4",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "9f2726f6-47c3-4883-895f-d9505309b9b4"
        },
        "item": {
          "id": "63270b84-81fa-46d2-b386-e0ba3c48ff7d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "9f98956a-4573-4987-8763-b5a4c58396d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c77361-df23-4ec4-9c07-c5cd9890a7a2",
        "cursor": {
          "ref": "387d859a-4bea-406c-a49e-a31653202e45",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "1aecb9ab-d3b2-4cbf-be24-7b030d958619"
        },
        "item": {
          "id": "e2c77361-df23-4ec4-9c07-c5cd9890a7a2",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ad4e7385-9a3b-43fc-ac03-e1fe6e4759ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ed2439-09c2-4e88-82d9-549c1e84428a",
        "cursor": {
          "ref": "53d0a4e0-5c5a-4303-8d76-777ee907ed2e",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "1e961b5e-7f95-4cbe-b326-6f0050dcd65f"
        },
        "item": {
          "id": "d3ed2439-09c2-4e88-82d9-549c1e84428a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8648c8d9-2f65-41a9-9ccb-961b5b329880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4fe1499-721d-4bee-b7ea-bda747607a72",
        "cursor": {
          "ref": "c6b6a3f8-bd6c-49b4-bcb0-9bf4f813ed36",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "9074f18a-d407-46a5-8bdb-910af5f7097d"
        },
        "item": {
          "id": "d4fe1499-721d-4bee-b7ea-bda747607a72",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "24f9153f-2da2-412c-a1f0-1611f62ca6d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b4ca5b-cdb6-4c53-a146-b7798e2a00f8",
        "cursor": {
          "ref": "89c63200-99b8-45d5-9573-70aabfe7426e",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "988ec2ab-7925-4178-8d56-9c22719002d1"
        },
        "item": {
          "id": "31b4ca5b-cdb6-4c53-a146-b7798e2a00f8",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0b956fab-ace4-48b3-81cd-15b95df8aee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5302374f-547f-4e2b-a586-edbf5aa93327",
        "cursor": {
          "ref": "96bdaf37-a349-42a5-aac3-7a8869afd94f",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c5f86c21-9279-4007-8f76-05b862ea6ebb"
        },
        "item": {
          "id": "5302374f-547f-4e2b-a586-edbf5aa93327",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4ef41a83-1691-4c34-af2b-6d9cb31a6ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d8c6b5-deaf-4fb7-9652-44a776ba71b4",
        "cursor": {
          "ref": "031c2af7-d5a3-4adf-a42a-41a2c025d39c",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "88b15949-f6f1-4354-a4e4-5a562d6d8da7"
        },
        "item": {
          "id": "a6d8c6b5-deaf-4fb7-9652-44a776ba71b4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4b84e5d9-6833-47f8-b5e7-b1b5cadec612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f6fac3-bee8-4344-8f59-74fae65d35d2",
        "cursor": {
          "ref": "dbbf032a-6ae7-464f-a1f5-19d3a4318573",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "5239fc5c-ec6d-4646-87f1-db5d934734d6"
        },
        "item": {
          "id": "b2f6fac3-bee8-4344-8f59-74fae65d35d2",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "41c2e0f4-891e-453f-8505-cd5b9a909629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064c91c5-2a2a-4cf6-8d83-730a8a2794f7",
        "cursor": {
          "ref": "200340fd-581b-427c-b775-2e117574d252",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "5be936c2-4426-4774-b33a-6bc5baf0b587"
        },
        "item": {
          "id": "064c91c5-2a2a-4cf6-8d83-730a8a2794f7",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e17a7b25-865b-4139-8df3-60656e0ecd5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee2a428b-c57d-4274-8dc2-713a78f553f4",
        "cursor": {
          "ref": "a9f701b6-f65c-4bfb-a6af-5200c0cb3ff6",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9669867a-b300-483d-b675-4e1d9c5ed33b"
        },
        "item": {
          "id": "ee2a428b-c57d-4274-8dc2-713a78f553f4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "dbd6327f-d4fd-48a6-a7ed-f332ccaf2d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd02a86-ac9d-4ef1-84aa-4890f9bdd738",
        "cursor": {
          "ref": "e86e419d-36f7-4adb-84f6-cc979a261c40",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "1e89f9b2-b9fc-4c05-9897-7b520e34cbfa"
        },
        "item": {
          "id": "3cd02a86-ac9d-4ef1-84aa-4890f9bdd738",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "991451e6-8e76-4ef9-85a6-e8a781175cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e64eaa9-bfee-4c09-a83a-9e9884f8b107",
        "cursor": {
          "ref": "9544959f-a7c9-43f4-a2eb-432bc0084141",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1bef96bb-989c-41b9-94cc-ed9643965856"
        },
        "item": {
          "id": "8e64eaa9-bfee-4c09-a83a-9e9884f8b107",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a34154bd-5ae2-47c2-a8ac-a6f7b7350d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161f9417-2046-4305-bbfa-9c97effa438f",
        "cursor": {
          "ref": "0001fa78-a51e-4455-b5c7-19bc3a82077c",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "90376daa-21e0-4007-914a-8b16c223b714"
        },
        "item": {
          "id": "161f9417-2046-4305-bbfa-9c97effa438f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "27660936-6097-4f63-b99e-f327c93a54fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70aa5417-3179-4e11-bdcd-1d0b59999358",
        "cursor": {
          "ref": "12ccc98d-e33b-484a-a2df-78e2acbf983b",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "17a7e3fa-7509-4ff2-b005-9ca94435feae"
        },
        "item": {
          "id": "70aa5417-3179-4e11-bdcd-1d0b59999358",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0977e18d-a5fb-4649-b6c1-b76ad4064ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1435fe-5605-40c4-a753-1293367e2e61",
        "cursor": {
          "ref": "6d32dfe9-b964-4e87-926e-ee7b808e23db",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6b1cdec9-0c95-4ef9-abf6-e68b56f3d0bb"
        },
        "item": {
          "id": "ec1435fe-5605-40c4-a753-1293367e2e61",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "27383ca9-b8e8-4206-bd26-1fa9b68d245a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f408d6-35f6-403e-8bc8-f6ddbcc81e5f",
        "cursor": {
          "ref": "0ad5e7e6-09d1-4e49-b551-b2803d7310e2",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1ea28a78-28af-44ec-928c-b6ca82e12221"
        },
        "item": {
          "id": "76f408d6-35f6-403e-8bc8-f6ddbcc81e5f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4969dc5f-8a50-4426-a121-0ed831e827ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ffb28aa-4f5e-4092-86d5-eaa3b7c178c3",
        "cursor": {
          "ref": "d770f134-137f-4383-b61b-7650a8e9433d",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "454a97fc-9bef-4075-99b3-8c1ca0a65835"
        },
        "item": {
          "id": "3ffb28aa-4f5e-4092-86d5-eaa3b7c178c3",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "60f88b97-3a91-4d0c-a509-18108f9a4f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31478bd1-8b09-4be6-885b-4119d1cafb84",
        "cursor": {
          "ref": "1c155b68-95a1-46d6-913c-962da48a40b1",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "6e8177f8-22d5-425b-8676-1e044f94703e"
        },
        "item": {
          "id": "31478bd1-8b09-4be6-885b-4119d1cafb84",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "3fbbe8bd-fde6-40c9-846d-3249ac8e13bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e45bb7-fbca-498d-b9ee-b136af545a00",
        "cursor": {
          "ref": "bd519ba1-6fb0-4b99-b3c2-2beb9701deb9",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "14ba3eeb-ea06-4c5c-9fb3-b77627a4df25"
        },
        "item": {
          "id": "42e45bb7-fbca-498d-b9ee-b136af545a00",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "0fe0a81f-e5ec-4c22-afd4-72e46b4cf895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "275eefea-adf7-49c5-adbf-fd8360fc3bbe",
        "cursor": {
          "ref": "4e981f20-25e5-458f-a22c-4ef191db67d4",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "32ce296d-9809-4775-bc66-47acc7a98823"
        },
        "item": {
          "id": "275eefea-adf7-49c5-adbf-fd8360fc3bbe",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b62e9de1-2795-4a65-8f0f-d94a36e835b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f158b8-2371-498d-aa26-aa7f6cc6efcb",
        "cursor": {
          "ref": "3a9c13df-09a0-4dba-826b-db48299196e0",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f3e6de0a-386d-4b6d-bcc1-da900e4b4819"
        },
        "item": {
          "id": "f3f158b8-2371-498d-aa26-aa7f6cc6efcb",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "fcac615b-135c-498a-b73e-ca72baf6647d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d24c45a-7c6d-4a66-b69b-66ebbda05cd0",
        "cursor": {
          "ref": "02e9fb4e-1ea8-42dc-ac54-9ace578aef19",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "482426ee-b1a3-4bfd-9d0e-dd631db9e266"
        },
        "item": {
          "id": "6d24c45a-7c6d-4a66-b69b-66ebbda05cd0",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "8d4fbb50-88f8-48e9-9a57-dd099dcd48dd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "273fcb39-c159-4e62-ac66-2fb33960557c",
        "cursor": {
          "ref": "c24e8588-d4da-4f58-bf09-cdb93b494ebf",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c5cb0db1-6761-411a-b463-56782e865fdf"
        },
        "item": {
          "id": "273fcb39-c159-4e62-ac66-2fb33960557c",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "89864a05-1686-478c-b394-231e4d484624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "956e0f7b-662d-4ae7-9523-80a6310679df",
        "cursor": {
          "ref": "3e331c4c-15b0-4c6f-ae1e-1964858cdc99",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "15b57726-993e-42f9-9940-efb712c1fcaa"
        },
        "item": {
          "id": "956e0f7b-662d-4ae7-9523-80a6310679df",
          "name": "credentials_issue"
        },
        "response": {
          "id": "82292afc-cefd-46cb-a062-0ea49595fc53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "9bbc3188-517a-4e80-8dd0-3d1fdd79af98",
        "cursor": {
          "ref": "8bf30a50-edb1-4ef0-95f7-c28f9fe0dd63",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "672b4ff1-de15-4a1b-b805-6d45e1d608d6"
        },
        "item": {
          "id": "9bbc3188-517a-4e80-8dd0-3d1fdd79af98",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6b9c27f6-fa47-4fab-8062-a7af42ef560b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "cd07e0f6-0284-4b34-9afb-2e0410f5ef2d",
        "cursor": {
          "ref": "e55ae73b-c16c-4b09-9e2c-ae226ee76674",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5e57f811-f3c2-47df-8024-dbf666341067"
        },
        "item": {
          "id": "cd07e0f6-0284-4b34-9afb-2e0410f5ef2d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7126ebad-132e-486a-afcf-00c5a75d2674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "e1ad69c1-da10-41f6-8e91-04bda70fdb79",
        "cursor": {
          "ref": "42607bfe-a68c-4212-b846-caba604c021f",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "54b0e616-1b7d-4e79-b6c1-d551f1d638ac"
        },
        "item": {
          "id": "e1ad69c1-da10-41f6-8e91-04bda70fdb79",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8e5bd200-1482-4f28-a1a0-db55d4ac72d2",
          "status": "Created",
          "code": 201,
          "responseTime": 5719,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe63c0f-e331-4e4a-a0d7-39772fd0ba21",
        "cursor": {
          "ref": "9779efa3-692e-441e-951b-62d60e40c7c7",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "08df0f25-978a-480e-aa04-307a0c808dc1"
        },
        "item": {
          "id": "7fe63c0f-e331-4e4a-a0d7-39772fd0ba21",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "10011932-7718-4b64-aec5-3739a8a3b56f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "ebbcc0b0-480f-4d85-b57a-0788f069c3b6",
        "cursor": {
          "ref": "974ceb4e-099f-4557-90dc-bff2e321fafa",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7ab60cf3-09e8-413e-a6b3-ba81753b52ef"
        },
        "item": {
          "id": "ebbcc0b0-480f-4d85-b57a-0788f069c3b6",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f11b862d-611b-4390-8c9a-b1f4d4691511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "a015b94f-9fed-49bc-b37c-475c93d1a71e",
        "cursor": {
          "ref": "271df1a1-421b-4889-aa8d-4a03bad1c2f2",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "097f6fdb-8469-4b4c-8b7a-d4aae083b328"
        },
        "item": {
          "id": "a015b94f-9fed-49bc-b37c-475c93d1a71e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c75cbe17-4463-468f-a51d-66a1935db6b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6717ac26-e548-4a50-9c4f-4661903d5c45",
        "cursor": {
          "ref": "302d7d80-fc46-4dfc-b8f5-4ebb2222a4e3",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "7cdf934f-5f5d-49eb-a10e-bfb00ef00f11"
        },
        "item": {
          "id": "6717ac26-e548-4a50-9c4f-4661903d5c45",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f47d64b0-3eba-4ebb-ac89-445a0704a734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b11b03c-4e05-4468-a9c3-d016134bedf9",
        "cursor": {
          "ref": "817f8824-35ef-4137-84b7-0346156184de",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "29542280-65b5-4405-b949-d0182e3349af"
        },
        "item": {
          "id": "2b11b03c-4e05-4468-a9c3-d016134bedf9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3ddedad0-772d-4aa5-a82e-16a0ac02399d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66f757e-9def-4446-9e7c-02a9b32cc23f",
        "cursor": {
          "ref": "0af31210-3114-4263-a3c1-334c029eec82",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "bc77ee09-18cc-4172-b6c4-d1fa530044d8"
        },
        "item": {
          "id": "e66f757e-9def-4446-9e7c-02a9b32cc23f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f572c866-0e0b-4fc6-a0e1-49f81c8da6f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75fe9fa2-70e9-4017-b8fe-88c05e8b945a",
        "cursor": {
          "ref": "af71ab9f-413f-4052-aed2-41d97086a3eb",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "16f84476-2432-413f-a01a-7d838e89787f"
        },
        "item": {
          "id": "75fe9fa2-70e9-4017-b8fe-88c05e8b945a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4ae6ed95-61d0-42b9-82ae-11ef81858d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051be9e6-be66-4fbc-bee8-fa1da53dec60",
        "cursor": {
          "ref": "954308ad-9a12-41de-9e1b-f9c98a7f8831",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "709ba0b9-5b95-46ad-955e-5d22625d3c10"
        },
        "item": {
          "id": "051be9e6-be66-4fbc-bee8-fa1da53dec60",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b444cdd7-b1c4-4908-b975-c7dc5b75ba49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d835f7-5f38-40f3-9a7e-973b52699aa4",
        "cursor": {
          "ref": "85b821d8-a3ab-4c36-a720-cdf602e1aaef",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d08ea1eb-278e-4fd6-bcf4-7966135fd0f8"
        },
        "item": {
          "id": "78d835f7-5f38-40f3-9a7e-973b52699aa4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "17fb9d89-0a17-4c55-af55-82cb1d101609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f113d5b-fc67-45d7-b1e2-b903a88dae15",
        "cursor": {
          "ref": "5ac30299-18de-407f-a5ad-5e6920c18f81",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "86109bb1-5652-414c-be71-791d496efb73"
        },
        "item": {
          "id": "3f113d5b-fc67-45d7-b1e2-b903a88dae15",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4eac4220-4761-4012-a4aa-ac7b8f493ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21694b56-8651-4bfd-aafd-e79a418ab94c",
        "cursor": {
          "ref": "c4e7e94b-8700-4d7e-abf4-7e5979e76d4d",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8495aa4e-5d46-4f0a-a468-48d2ef2b01cb"
        },
        "item": {
          "id": "21694b56-8651-4bfd-aafd-e79a418ab94c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4f01ce8e-b000-4fb0-b79c-be3cbc02516c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e30e995-5ad2-442f-b701-84e324dd6293",
        "cursor": {
          "ref": "8af8c892-90e7-4628-9b3a-24bb5347818c",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ae36a60f-c10f-416a-8f90-927ac097aa24"
        },
        "item": {
          "id": "2e30e995-5ad2-442f-b701-84e324dd6293",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "31cddb4c-0861-4e80-b72f-41ee678f7837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1beaf45b-d3b0-41ec-8b43-b8390791729a",
        "cursor": {
          "ref": "4fd98af7-6497-4fd0-a1c3-10c24c2c09a6",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "57a24699-e998-4b47-a84e-211c52709776"
        },
        "item": {
          "id": "1beaf45b-d3b0-41ec-8b43-b8390791729a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ab0cc238-86d2-459a-9229-a07cd26bfb53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b1bdf06-ce53-433c-89d4-3593dfa62292",
        "cursor": {
          "ref": "9a2061b3-71f1-4345-ae03-6c75a30c0ae8",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "0c71c778-1749-4ed5-895a-4d29fed6689f"
        },
        "item": {
          "id": "2b1bdf06-ce53-433c-89d4-3593dfa62292",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "82b5ce12-07f7-44cf-9ab9-e03579134d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dcea3d0-dcd8-4695-a9bd-4a58733e64e3",
        "cursor": {
          "ref": "4664a4be-4072-4610-ab64-c20f25163772",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d84bb248-e110-4c17-849f-e447507ed00b"
        },
        "item": {
          "id": "5dcea3d0-dcd8-4695-a9bd-4a58733e64e3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "37cf66e8-4ea1-4a62-9c73-3ff789db28b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c6b602-8108-4476-bb37-fdf534ff7d80",
        "cursor": {
          "ref": "ae8dc3b6-c965-4c26-9209-5f692c8b1a7c",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "978814e2-15be-4b2c-9a40-0177a962b5f0"
        },
        "item": {
          "id": "a6c6b602-8108-4476-bb37-fdf534ff7d80",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "07bb1b38-f732-4b94-b3f0-91f96b111e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1982ec6d-5267-437a-95fa-453ad4c6de23",
        "cursor": {
          "ref": "7ecee6d0-d5ee-4500-a14f-054f56d9b322",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "3fe14091-10dc-4785-b9da-2f68be78d257"
        },
        "item": {
          "id": "1982ec6d-5267-437a-95fa-453ad4c6de23",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b4b416a6-9a95-4d17-9a82-9b15b75718a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc57554-81f6-4396-b87d-8de843b3ecd8",
        "cursor": {
          "ref": "217830a5-06e1-4456-ac6d-c1604d5b814d",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "ffc99158-2050-44b6-8848-20d3101c57b1"
        },
        "item": {
          "id": "cdc57554-81f6-4396-b87d-8de843b3ecd8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9217c0a2-d7fe-40d1-80d6-af261e232700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c0ea6a-e353-43a8-b8c7-764517403839",
        "cursor": {
          "ref": "dee17cac-2612-4e06-8b8d-98f6554910e7",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8135f676-2f60-4df4-9229-b5a9f1333de5"
        },
        "item": {
          "id": "03c0ea6a-e353-43a8-b8c7-764517403839",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "af7dab40-04a2-4c76-9fda-16ac56d1a7e2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "3f150a94-9546-4665-bc3a-b458304311e4",
        "cursor": {
          "ref": "81d233fb-3d03-44c9-9790-3dde85202649",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ec6829f9-97fa-43cd-a362-f54884269bb3"
        },
        "item": {
          "id": "3f150a94-9546-4665-bc3a-b458304311e4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1a3ba737-2d84-4172-9bab-19c7f864ff36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c0c0e55-c219-4d09-9c1b-236b92a354b7",
        "cursor": {
          "ref": "b5002d89-083c-4021-ada4-adee9844f1b3",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "75e9b82a-b30c-49e1-b1fb-092f953ce0cb"
        },
        "item": {
          "id": "5c0c0e55-c219-4d09-9c1b-236b92a354b7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "66a9c1c8-e2b4-4eab-b449-85f682aa6e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 135,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230376fb-c13e-4f46-b0b1-7a0d40bef8aa",
        "cursor": {
          "ref": "93fdd25f-00e4-4bd7-acd6-b66f8cc977ec",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e712ff39-2149-4a85-b802-68f7ab4d680f"
        },
        "item": {
          "id": "230376fb-c13e-4f46-b0b1-7a0d40bef8aa",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "435c5168-60e5-4c34-a2a3-c9f183292628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee2da25-5dee-4caf-b85f-0a2f15efffcf",
        "cursor": {
          "ref": "e677fa4c-17c2-4d79-9a07-ce70feec5a5a",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "0c4758ff-5cc4-49cd-8d97-5111ababc722"
        },
        "item": {
          "id": "7ee2da25-5dee-4caf-b85f-0a2f15efffcf",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2d774456-c389-43f7-b0e4-2a517a8e3983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475160b1-1676-43e2-aca7-2f42e3fdbd71",
        "cursor": {
          "ref": "33d85dc6-2df5-4c2f-b590-32b4932044a7",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e7285f45-7c19-4eea-a562-88599cdf6931"
        },
        "item": {
          "id": "475160b1-1676-43e2-aca7-2f42e3fdbd71",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3faeeda2-b393-4811-8908-f7d16b1647cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf4625f-7a4c-4829-8df3-ec88cce378e4",
        "cursor": {
          "ref": "1ac314eb-b36b-4dfd-81b0-a62102281938",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a990de84-63d4-46dd-a802-1facf43b0723"
        },
        "item": {
          "id": "8cf4625f-7a4c-4829-8df3-ec88cce378e4",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "04c6e687-aa28-425c-a552-c74157b4da90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "621b9857-c230-4104-a227-e61157bc070f",
        "cursor": {
          "ref": "74598f4b-6aa9-46a8-aab7-99134d2cd479",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a7bdfd1c-43b8-40b4-aea2-78ec178d1b40"
        },
        "item": {
          "id": "621b9857-c230-4104-a227-e61157bc070f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "608aff18-869d-4758-ba97-9a5a3a4ae70e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efba320d-f1ec-409e-93eb-1b41b9ed2c8e",
        "cursor": {
          "ref": "202a221d-e91c-494e-a628-8ecdb402a563",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "27d44d12-0481-4e77-aa3c-3f3297530f4a"
        },
        "item": {
          "id": "efba320d-f1ec-409e-93eb-1b41b9ed2c8e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "757128e8-f670-4ec3-b7b7-d675c371978f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "8d7b5344-7d8d-4f41-9508-9b2b4e966b5f",
        "cursor": {
          "ref": "148e31b1-a1d1-498c-a6ca-76d454406ffe",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "aec6af3b-6219-4983-8379-e8ad8337d8fd"
        },
        "item": {
          "id": "8d7b5344-7d8d-4f41-9508-9b2b4e966b5f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "11fced7f-1ff9-42d2-adfb-fa99206424df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc9ae20-1871-4cb2-9e2f-e8524af65652",
        "cursor": {
          "ref": "53838ee1-ef0f-4319-a8db-657e4fb87da0",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "bc3a8fd9-0eeb-442d-98d7-d9de466ecb4d"
        },
        "item": {
          "id": "9cc9ae20-1871-4cb2-9e2f-e8524af65652",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "95367e33-84e3-47a3-bc13-630640488536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b54e5fb-32c9-4b1c-8843-df7e3229896a",
        "cursor": {
          "ref": "770577e7-6d42-4c7c-a399-377b3a372b07",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5e526028-5b0c-45ba-b0d5-f71b33910e2f"
        },
        "item": {
          "id": "9b54e5fb-32c9-4b1c-8843-df7e3229896a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f9c39c00-8537-4e4c-8ee8-6ee9b8a3a31b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3189dcd2-ecf4-4410-a5e0-0b552c4d5a17",
        "cursor": {
          "ref": "668efe21-636f-4a3c-a5f0-19a696267ffa",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "6b1c480b-396b-49e8-a3e4-52493928749a"
        },
        "item": {
          "id": "3189dcd2-ecf4-4410-a5e0-0b552c4d5a17",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "62919f9e-00d5-4987-9d27-562e15000de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c6967ad-9389-466b-b9e8-e61cf7ebd71b",
        "cursor": {
          "ref": "e23a151c-3e44-4f64-8a06-628650df98e7",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9ddf025c-c612-4ff4-9846-8f144474c33b"
        },
        "item": {
          "id": "8c6967ad-9389-466b-b9e8-e61cf7ebd71b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2709c00e-b23f-4d8c-89c3-cb6012e6bbe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ee27e4-e715-41a0-ab47-42b94e2d67f2",
        "cursor": {
          "ref": "ed613f33-95e6-41ba-bd77-6336251ca881",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "26a411c0-b82c-47da-8185-3fc19a787c00"
        },
        "item": {
          "id": "56ee27e4-e715-41a0-ab47-42b94e2d67f2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9160964f-a214-43cd-8409-e8c5545a28e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "284f4924-fb29-47a3-a73e-594b992f06f5",
        "cursor": {
          "ref": "2842c144-b878-4bb7-886d-9858f88e8c17",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "2af3cc2d-5d92-4f2f-b548-ae164966d868"
        },
        "item": {
          "id": "284f4924-fb29-47a3-a73e-594b992f06f5",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "286ab88f-ec5c-4d96-99cd-1a6cbb5aeef8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "1bf49f32-9393-42cd-a17a-497f2ebfcc19",
        "cursor": {
          "ref": "ce33d395-504f-4499-b2c1-dae1a5632b76",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "15723cca-35e2-431c-b401-2dd4407ccd7d"
        },
        "item": {
          "id": "1bf49f32-9393-42cd-a17a-497f2ebfcc19",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d78c75f1-5b58-4aaa-a3bc-683abc8253ee",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "6a2b1b04-aa35-42a2-a4a4-fbc6956029ec",
        "cursor": {
          "ref": "02189a9b-05c0-46f0-bc56-bf61f63cca69",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0bedea82-f6da-4fb4-99bd-80b563b27ee0"
        },
        "item": {
          "id": "6a2b1b04-aa35-42a2-a4a4-fbc6956029ec",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "1ee1646d-4c01-452a-b6e4-cee60183f3e9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "3f568f96-bacc-4a85-bcc7-6a38a24531dd",
        "cursor": {
          "ref": "fed752c0-d595-44fc-bb8e-5b2070a146ae",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "68e03e4b-1383-4907-aa6f-4e998b4379ca"
        },
        "item": {
          "id": "3f568f96-bacc-4a85-bcc7-6a38a24531dd",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b831c745-9613-4c98-83be-e5323a5cda47",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 33,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "77092348-9689-4d67-b757-5d14a767053b",
        "cursor": {
          "ref": "ae8bfa2e-4dbb-4041-8150-eb4c9ce768d8",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3e1c60b6-8ca3-4ee1-b070-e9761ace2233"
        },
        "item": {
          "id": "77092348-9689-4d67-b757-5d14a767053b",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "5ab93c01-535a-4d4a-b84f-ae5c61c7466f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "a3b664a4-93d8-4336-98c0-20a3b788e3cf",
        "cursor": {
          "ref": "786102a8-9dd6-4145-bb85-bdfd5b727b88",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9628f2a2-c488-4ace-b81b-0d18a999920d"
        },
        "item": {
          "id": "a3b664a4-93d8-4336-98c0-20a3b788e3cf",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "ce83ba39-577b-48b1-a626-69c967aecc37",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "4cac6ae7-3bac-4080-8763-8d27738e8551",
        "cursor": {
          "ref": "e597af07-5f1b-4a04-a219-994ae3c465cc",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "aba59bbc-7d19-4342-8138-4e62c54a517e"
        },
        "item": {
          "id": "4cac6ae7-3bac-4080-8763-8d27738e8551",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c953114d-de41-4d44-97a6-2b01ed3f2fd4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cea5928-95f6-485e-875e-7ef33e5869f8",
        "cursor": {
          "ref": "3290f6e9-3543-4ea2-b071-48bd86a3fbbc",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "61d03aba-848d-43a4-8ee2-26c93c7ba1b7"
        },
        "item": {
          "id": "0cea5928-95f6-485e-875e-7ef33e5869f8",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "94460ab1-cc6c-4765-b127-c7068c0cf33a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ed0b32-ef2c-4fe2-9b2b-07f746c03e8c",
        "cursor": {
          "ref": "6f58c832-a93d-48f3-a8e0-fc8e1cb10c29",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "97b16f7a-0d1a-4916-b361-b1b7d4a2e255"
        },
        "item": {
          "id": "72ed0b32-ef2c-4fe2-9b2b-07f746c03e8c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "eed451c9-63ee-4a09-a08e-896c5927110b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "882d7b3c-fbdc-4fd8-a00e-95e57b9a49d6",
        "cursor": {
          "ref": "50ae4814-e053-421b-9427-3bce8be8b65b",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0fb2ed94-b3d9-46bc-baa9-2459ab7ff935"
        },
        "item": {
          "id": "882d7b3c-fbdc-4fd8-a00e-95e57b9a49d6",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "5a1b9250-0881-436b-84ab-ce80892cccf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd48cc8-a718-4276-8899-0b2a774b3048",
        "cursor": {
          "ref": "427bcc1d-d1a9-4c61-b489-7fe1451590c3",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8c0a0943-9a39-41d0-99d5-abfea2930d1f"
        },
        "item": {
          "id": "3dd48cc8-a718-4276-8899-0b2a774b3048",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ced06977-3290-4534-8cac-fb90fabddc9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591b0156-787a-4dd9-8ce3-c1a8c14b6c92",
        "cursor": {
          "ref": "e40401d9-3a8a-4249-9c7f-bf6b547fb603",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "98d7e1f2-1883-4c4e-9033-7f47ba64ec9b"
        },
        "item": {
          "id": "591b0156-787a-4dd9-8ce3-c1a8c14b6c92",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a3d8edc5-f0e3-449a-8607-16335cb0e04e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36550517-8aa4-41af-83dd-6add2062729b",
        "cursor": {
          "ref": "2ac7e1c0-cb3a-499d-9b2a-877ee82b8b75",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "90238d8a-ed09-4c2d-a894-bee01aa86bdc"
        },
        "item": {
          "id": "36550517-8aa4-41af-83dd-6add2062729b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f6c64719-fc0b-45b1-8351-6bcbed805baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59021704-7fd5-4ed9-bd68-df2615a43668",
        "cursor": {
          "ref": "2ce58b55-c668-49ce-909d-687652e40bfb",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "cae169e8-0fb3-467e-8e98-b60f34bc69af"
        },
        "item": {
          "id": "59021704-7fd5-4ed9-bd68-df2615a43668",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1c3e4a82-3b09-433a-9aa4-b8a533efd0a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc72ff9-608f-41c5-ac56-117a4d940138",
        "cursor": {
          "ref": "6d1f467d-01f2-4787-b17b-1a16d415c034",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "2b196490-0b22-456a-8dd3-1ec090e7dbdf"
        },
        "item": {
          "id": "5bc72ff9-608f-41c5-ac56-117a4d940138",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "19a49b7b-fb56-449f-9482-5c68387fdb72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886e94ea-4636-4c67-8b38-54fa19897eb3",
        "cursor": {
          "ref": "c422f344-33b7-4019-ac1c-d962aa6dab7c",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "6d569577-6ec0-4bdd-857c-350c4358060b"
        },
        "item": {
          "id": "886e94ea-4636-4c67-8b38-54fa19897eb3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1cdd7c5c-f487-48b2-9c49-98f9f747988d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe93046-7318-4240-b74b-501ca390d097",
        "cursor": {
          "ref": "bc7902b1-f36a-42e5-ba53-aec92f96d9b2",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0222fb2c-538f-4bb5-9927-8a14be140a30"
        },
        "item": {
          "id": "dbe93046-7318-4240-b74b-501ca390d097",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "85c425dd-e401-4f5b-b9d0-691aa0223424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09beae3a-e734-43fe-a52d-f22866fec03f",
        "cursor": {
          "ref": "d17328b2-7d4a-4775-a289-2c59148a4291",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a53f15dd-54c5-423b-b70e-dc2f3c90a1a8"
        },
        "item": {
          "id": "09beae3a-e734-43fe-a52d-f22866fec03f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "14a33fa5-4b93-488b-9c87-aad68477e3ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4258599-9364-41f6-8845-47904ed9dec4",
        "cursor": {
          "ref": "493fc883-ee7e-459c-86c5-d46e2cde06fa",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a59377ab-6b12-41c2-91ef-6c7b4c8bd448"
        },
        "item": {
          "id": "a4258599-9364-41f6-8845-47904ed9dec4",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ee095a62-b04d-48b0-bc12-930968a4cdda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5dd5bb9-67da-4a9b-a71d-876bc28812ff",
        "cursor": {
          "ref": "a388e8b4-4973-47e8-be54-20c3d7d7ddf6",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f89a4f8f-4559-4afd-89c1-0c8e91d16967"
        },
        "item": {
          "id": "f5dd5bb9-67da-4a9b-a71d-876bc28812ff",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "4f2ee78e-a73d-4455-bc18-44dfc205c326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033847bd-3a39-4587-b327-a2d48058b848",
        "cursor": {
          "ref": "74dfff9a-273c-4ae6-97c1-fb76933a7aa8",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "75f9edc8-4633-4d07-8f13-336a9e13de46"
        },
        "item": {
          "id": "033847bd-3a39-4587-b327-a2d48058b848",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e3bfd62a-dad1-4984-a491-e3fea6972d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8932dae0-ad8a-4021-ac61-afb3a60d9cb1",
        "cursor": {
          "ref": "324a17b1-0de5-494a-b901-b395b0a66429",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "ea0ca6b2-0f73-45fa-b9ba-0216d997acae"
        },
        "item": {
          "id": "8932dae0-ad8a-4021-ac61-afb3a60d9cb1",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3249323a-854f-45e2-b0d8-7951af592152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5299824a-9dac-4be1-9d8b-9ab110b5b7ac",
        "cursor": {
          "ref": "5c5b8bb6-3834-432a-a359-3ff27bec4c67",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "c091fc1a-e5b0-44c0-8b1f-851a812f058c"
        },
        "item": {
          "id": "5299824a-9dac-4be1-9d8b-9ab110b5b7ac",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8f1972ac-dfd2-49c2-8d3b-e4d0d40f5bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59032227-d808-4f5f-9b26-7c24f93fed8b",
        "cursor": {
          "ref": "274e1b69-29df-456a-af8f-8384615cf324",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "35774f5f-8fd7-447e-aab2-b55357f03ef6"
        },
        "item": {
          "id": "59032227-d808-4f5f-9b26-7c24f93fed8b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0b6d48c8-bdb7-4f9d-844d-48874b8a272b",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "31fbbbef-e0c8-42ec-96ec-a51a4674c5cb",
        "cursor": {
          "ref": "4e019164-7825-40bf-a43e-3441b49cdf56",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "fcb5c0b6-40b2-49f5-b8d8-f8e511f21f45"
        },
        "item": {
          "id": "31fbbbef-e0c8-42ec-96ec-a51a4674c5cb",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "efffcb38-2544-4c40-a0ca-76d77461086c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2efb75-cf13-44df-968f-da078b582845",
        "cursor": {
          "ref": "aa9e0d0d-5f40-4587-9569-11ac77889957",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e6b0c36e-2420-49eb-bda3-1aed48e30722"
        },
        "item": {
          "id": "8b2efb75-cf13-44df-968f-da078b582845",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3fd90ed4-8c2f-4436-8e99-a6607df7a822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3825371b-1905-4dd2-8c11-9057ce83c922",
        "cursor": {
          "ref": "8e4a1093-187a-428f-b869-64215571e23f",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6138cbd0-b9e7-41bc-88f6-e592e967970f"
        },
        "item": {
          "id": "3825371b-1905-4dd2-8c11-9057ce83c922",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "230b8f27-4154-49ef-9c85-28d59ff4e67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217a085a-bf0d-4343-956a-7900e0083fff",
        "cursor": {
          "ref": "d2ab1a1d-18f4-4811-89c5-fea81b5950e6",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "3d4f8bcd-e9b6-4933-a4e7-3c0289a49e0d"
        },
        "item": {
          "id": "217a085a-bf0d-4343-956a-7900e0083fff",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "c083333b-ee66-4e92-8280-77e03767c8c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "016bdb12-dc09-44b6-815b-56784921ebf5",
        "cursor": {
          "ref": "a37749c0-21da-44aa-967e-33274b19ed1a",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c2c8973f-9f48-41bc-ae3d-9ba84b8c8238"
        },
        "item": {
          "id": "016bdb12-dc09-44b6-815b-56784921ebf5",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "76b31c3b-59da-4aa9-a581-913257668dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ee0384-9de5-4427-84b9-277aac46ab39",
        "cursor": {
          "ref": "b78c4c53-101f-4a51-88d9-51597e094e87",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "98409318-91e7-480d-8533-a8baba91894b"
        },
        "item": {
          "id": "26ee0384-9de5-4427-84b9-277aac46ab39",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "54b78940-b410-480f-9646-7e679b00f7c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2860e06c-a1b2-46c8-af65-1ead257d449b",
        "cursor": {
          "ref": "24e76fd3-e83e-471a-9db6-171c248badee",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3a889998-c6ad-459b-bb4d-196930882350"
        },
        "item": {
          "id": "2860e06c-a1b2-46c8-af65-1ead257d449b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b964b7ea-8dca-4daa-8b48-17d258a867cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de4dda0a-2f46-4a56-bf79-1fdfa72dff86",
        "cursor": {
          "ref": "45bb0153-d0e1-4d28-bcd6-26a4bddea22c",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e940db4c-f70d-47ad-99cd-e03e18cd433a"
        },
        "item": {
          "id": "de4dda0a-2f46-4a56-bf79-1fdfa72dff86",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1ebd70f5-b840-452d-896f-c1596ec20c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd92b0d-fc6d-4800-b06b-44a906b5481d",
        "cursor": {
          "ref": "25ee4abd-408e-4d78-aade-2facb7b72694",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "3954ab70-4037-45ff-b8f9-51e9b96f3c0f"
        },
        "item": {
          "id": "8fd92b0d-fc6d-4800-b06b-44a906b5481d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1c73a957-e785-4916-9fa8-6ddf9433fe86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f5ff9a-7bdc-4ce0-90bf-25566089cac9",
        "cursor": {
          "ref": "319f39e8-5221-4555-9231-15eba06f4356",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "836eb331-70e9-4efd-ae65-e9ffd1a98726"
        },
        "item": {
          "id": "c5f5ff9a-7bdc-4ce0-90bf-25566089cac9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ecaff419-99fa-49d3-92d7-163e7c7cfab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b9f7c8-65d4-48d1-a510-dba23b09487a",
        "cursor": {
          "ref": "8891aed3-519f-45a5-b72a-3f29a13762ef",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "27f2973c-666f-4567-9ba3-518212a3645a"
        },
        "item": {
          "id": "d2b9f7c8-65d4-48d1-a510-dba23b09487a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1ff7dc8a-f942-4d45-8bbe-596f1c36badb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc030b4-f4b8-4b6f-ad69-c697e86b6343",
        "cursor": {
          "ref": "f37ed9ed-8308-4789-b66f-377737d5b7d0",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "70512fcb-8bb8-4cc2-891f-ffe2779ee035"
        },
        "item": {
          "id": "3bc030b4-f4b8-4b6f-ad69-c697e86b6343",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "309cbe8c-ccd9-4237-8ed2-0bb45013c7ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84b8365-1a90-4387-b69d-178a161ce018",
        "cursor": {
          "ref": "5932663e-fc0e-4724-a894-e4a83485c438",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "7387e583-7869-4557-b682-ad82efc846d9"
        },
        "item": {
          "id": "c84b8365-1a90-4387-b69d-178a161ce018",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7a41517d-fefe-4f77-85ad-79094e382aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a91d4dc-da9d-4cdf-932d-2376934b6137",
        "cursor": {
          "ref": "bce07e54-db89-453c-aeff-d16189d95989",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "57a73af3-c3a5-414b-b1bc-6320fca11d1b"
        },
        "item": {
          "id": "8a91d4dc-da9d-4cdf-932d-2376934b6137",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a152547e-564a-40db-b693-0627c4cbb85f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db86a863-bf1f-44d6-be68-c7681abbed12",
        "cursor": {
          "ref": "4e74aac3-0795-4083-af81-1fd00869b6d9",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "0f44cd48-1aaf-4294-91a9-a81ab2aba90f"
        },
        "item": {
          "id": "db86a863-bf1f-44d6-be68-c7681abbed12",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "04650578-ef51-4e18-a64c-dbbc46e5f0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e708cd-ffd9-43d3-a293-9c1e2ac79110",
        "cursor": {
          "ref": "d9e22df1-f8e3-4b75-8cb4-400bcc30a7a4",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "c651d7f6-6587-4331-90ae-e640261c623d"
        },
        "item": {
          "id": "87e708cd-ffd9-43d3-a293-9c1e2ac79110",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "154cb36f-15fd-4455-9233-fd47eafedd4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf42077-f6df-4277-982e-a5004acff184",
        "cursor": {
          "ref": "db13f146-a327-42ac-8264-afae2a512a08",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f6f2c254-a6a6-4132-822a-6289adfd6129"
        },
        "item": {
          "id": "8bf42077-f6df-4277-982e-a5004acff184",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1aa239dd-6621-4e90-84d0-3022b18992fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc5584b-5f57-467a-8803-78160019fd3f",
        "cursor": {
          "ref": "e6e16d51-9255-4a95-8e5a-07822ba811e3",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "504f1df6-b6fc-4d10-b546-a5bb8c0e8847"
        },
        "item": {
          "id": "7fc5584b-5f57-467a-8803-78160019fd3f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "2a740b80-12ce-440f-9bff-c6c6fb8e6871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd778f84-e0f2-4d68-a667-3b401d9267db",
        "cursor": {
          "ref": "09adbf46-3ecf-4df7-84cf-7b4753027940",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f02e1524-71fb-4bbc-b79c-7f56664a1f00"
        },
        "item": {
          "id": "cd778f84-e0f2-4d68-a667-3b401d9267db",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9cc97c9e-062b-498e-90fe-01fedc6771e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e1ced2-2265-4cfd-8ebc-25c67642a6b9",
        "cursor": {
          "ref": "1c389cd3-4f1e-4314-a7c4-0d8c7f821184",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "62d0f5f4-c150-48fa-9ccd-06e6aa7f9ce3"
        },
        "item": {
          "id": "89e1ced2-2265-4cfd-8ebc-25c67642a6b9",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e047cf98-7ca4-467d-b8ee-a2a29f247450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7480bea8-6639-4bd3-aa19-d18e8b744307",
        "cursor": {
          "ref": "7a10b969-5997-4dbd-b6f1-5490e69706e7",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f11d7907-1b3d-4e6d-a788-0af5295f4622"
        },
        "item": {
          "id": "7480bea8-6639-4bd3-aa19-d18e8b744307",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "68830f9f-929c-495b-a975-efd8d16e42ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ee5e4b-3087-4c76-a4d7-7ef833665535",
        "cursor": {
          "ref": "a40c7579-fe86-46a8-9628-0d0ea707793c",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "6f1c4cb5-c418-4c40-b8f7-3cf52338444c"
        },
        "item": {
          "id": "12ee5e4b-3087-4c76-a4d7-7ef833665535",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1768914a-6bdb-48be-b122-ffb440d1a584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3560a4-1176-4d2a-8987-c4e6ec320f08",
        "cursor": {
          "ref": "8bb90dbb-00fc-45a9-b768-da94bf5fa997",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d25c5450-76e0-43c4-8f6a-aeddcc78f1cc"
        },
        "item": {
          "id": "6d3560a4-1176-4d2a-8987-c4e6ec320f08",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a21ca43a-031f-44e7-9567-fd0ce71ab558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c61515-53b9-4053-b35f-879dd7b4baf8",
        "cursor": {
          "ref": "84797425-0b30-4028-ba8f-d746f7e79a4f",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "292f033a-8d7b-4fd2-8d8d-29ac3e1f99cd"
        },
        "item": {
          "id": "62c61515-53b9-4053-b35f-879dd7b4baf8",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "39501a67-5bd0-4eeb-8ac1-f4b65c6ea27f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f79fa52a-9e95-4189-8d08-4b690db3d833",
        "cursor": {
          "ref": "a636d133-783d-458a-aca2-811c5b612fe1",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9aeb872a-3b1a-4a28-b621-b1ec767b1402"
        },
        "item": {
          "id": "f79fa52a-9e95-4189-8d08-4b690db3d833",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "56ce8df4-e170-4581-b033-313580b5c928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808b320a-818f-419f-b070-1e647feab9d5",
        "cursor": {
          "ref": "b449b71f-d0e1-452c-9dfa-3d7b2d107019",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "221563c2-c243-48ff-b1e8-d85ab2400a03"
        },
        "item": {
          "id": "808b320a-818f-419f-b070-1e647feab9d5",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "dfc24dbf-268d-43e6-9747-6ed076fe7fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b522cc-b457-48a4-b074-9a664548c2c8",
        "cursor": {
          "ref": "30e1ad61-7cad-4f9f-a4c8-ae87eaf90adc",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "33cd4e3a-6ff0-4d8b-9acd-e5e8bf2b3cac"
        },
        "item": {
          "id": "70b522cc-b457-48a4-b074-9a664548c2c8",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0ede97ca-31da-4f33-91b9-864a6d56746e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b79912c7-4aa9-4fb5-b774-485d5496e93b",
        "cursor": {
          "ref": "6883096f-34e0-419d-b170-d34bd75dd689",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d4db9dc6-0bb0-430e-9f11-cf496ebf2587"
        },
        "item": {
          "id": "b79912c7-4aa9-4fb5-b774-485d5496e93b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8d72285d-054e-40b2-b97b-0158593a0bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dddf3475-2569-44c4-b49b-259feb3c19cc",
        "cursor": {
          "ref": "24d4961f-665d-44cb-921a-5c0bd4d92463",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "bb269375-ef33-4175-bf08-57cfc876d1a3"
        },
        "item": {
          "id": "dddf3475-2569-44c4-b49b-259feb3c19cc",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6d8407c5-d392-4648-a695-3e809d93cf73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79870952-61c4-4c7b-964e-83f081b642ee",
        "cursor": {
          "ref": "9b9fc298-534d-495a-8cc1-95e8d782a421",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0e796eb6-fc83-48cd-8500-b2917a0c85b6"
        },
        "item": {
          "id": "79870952-61c4-4c7b-964e-83f081b642ee",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "201ca6d7-7341-4906-9e13-af19b462a452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec6efc0-ea57-40f5-8cca-02530732ccd7",
        "cursor": {
          "ref": "197f5cc6-60a0-418b-a303-876304deea05",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a5e62c22-cd66-4294-9666-4098959d8a0c"
        },
        "item": {
          "id": "aec6efc0-ea57-40f5-8cca-02530732ccd7",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "302bdd21-7b96-42eb-be57-9895eba21e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15af80d-749c-4177-b5af-dab2dc5f55db",
        "cursor": {
          "ref": "1f07a780-8e2b-4e47-81c9-30cbc504a0cd",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "466c21d4-1398-47bf-b916-3de111defd58"
        },
        "item": {
          "id": "d15af80d-749c-4177-b5af-dab2dc5f55db",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c6683e35-3555-4b53-a4e7-866d25989c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a2390a-3082-41e8-a9bc-fcfcc03a7b6a",
        "cursor": {
          "ref": "73ab3cb6-297c-4c50-a5d8-6715fc4de266",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f37c9279-1dcb-41da-989e-8c44355ebebd"
        },
        "item": {
          "id": "52a2390a-3082-41e8-a9bc-fcfcc03a7b6a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a50afc49-2b65-4a52-a1e3-937bcbd16654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f666afe5-a2c6-4297-b23e-a41126d6996a",
        "cursor": {
          "ref": "82987ce5-6865-46ea-a39c-56a165e72b43",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7715a229-58f8-4d6a-ab53-9156865f574f"
        },
        "item": {
          "id": "f666afe5-a2c6-4297-b23e-a41126d6996a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "71256159-e355-4d42-b747-98eec65e8d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a3c160-5b88-46b2-a560-4a17dad13e22",
        "cursor": {
          "ref": "edce4b6a-c34d-41e4-8c12-d9e4c3c9895d",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d0905628-d57b-4418-9dc3-3be8c25c5f10"
        },
        "item": {
          "id": "81a3c160-5b88-46b2-a560-4a17dad13e22",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1fd1303b-fbbe-4c03-9c5c-c2ecd7f37193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "278cf379-97ca-4d4a-a704-020a25450c55",
        "cursor": {
          "ref": "9dead070-5c4f-4b5f-b0f0-b29d40f4c9a2",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a593c37b-0833-4dde-b0d9-828e66a9c715"
        },
        "item": {
          "id": "278cf379-97ca-4d4a-a704-020a25450c55",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2bf90e37-8d72-47d0-a1ac-56857d624fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7ca9be-1471-480d-945d-3ec736bced40",
        "cursor": {
          "ref": "f7558a7a-1e6e-4ef8-b2a9-ca3cc2c857ef",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "841e9a3b-f830-424c-ae13-3247ce87cd4c"
        },
        "item": {
          "id": "5c7ca9be-1471-480d-945d-3ec736bced40",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1a68decb-7409-4591-88c0-d71370f8f439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f2f3e1b-ca8d-4dff-aa50-ae1d4cdfb504",
        "cursor": {
          "ref": "cada9575-a952-4f38-bfd5-d16fe8787117",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "2327267b-84ca-4d74-a0cd-3fa8295a5251"
        },
        "item": {
          "id": "0f2f3e1b-ca8d-4dff-aa50-ae1d4cdfb504",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d09f2cb3-1a32-4cdd-87c9-c06a65a0b422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aacc3cb9-1ea2-46e0-9831-b05f38d56b50",
        "cursor": {
          "ref": "d6c825ce-7365-49f4-b709-20a50493ad25",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "48734289-7f0d-4e8e-b833-704077187024"
        },
        "item": {
          "id": "aacc3cb9-1ea2-46e0-9831-b05f38d56b50",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "1f996302-b07b-4086-bf33-8dfe558743e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f8bc41-0b54-4876-81af-e4f42cdd66db",
        "cursor": {
          "ref": "fda55ffd-2fe2-40bd-a2f8-bf93f3f0009b",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e32f6b4a-ed98-446d-9809-385b632e3329"
        },
        "item": {
          "id": "72f8bc41-0b54-4876-81af-e4f42cdd66db",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5b0cbb8c-62d5-4c31-bdaf-11846525261e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22cf45db-ec23-4f51-9509-e7f8fc9fd15c",
        "cursor": {
          "ref": "0783396c-1fc2-43b4-a108-ae53e2919132",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b4300723-8bfd-4be2-958f-731c5fbc5426"
        },
        "item": {
          "id": "22cf45db-ec23-4f51-9509-e7f8fc9fd15c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e78db581-9436-412a-9505-370da6d03e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11bbebcf-0719-45b0-9a82-b6708cc5ab2d",
        "cursor": {
          "ref": "c520c351-c8b3-4fd6-9ffd-9ace8fc5182e",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "53096593-d37f-4fb7-9c23-ffc12d013376"
        },
        "item": {
          "id": "11bbebcf-0719-45b0-9a82-b6708cc5ab2d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e42b1d2b-f905-434c-a024-eeafd9b9afbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da7b24bc-35f6-4e63-8c8c-03711d66bae2",
        "cursor": {
          "ref": "2dce56e0-7545-4fdd-a568-8f4c3d797877",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e62eb434-7116-4113-a347-325a3ea1bc47"
        },
        "item": {
          "id": "da7b24bc-35f6-4e63-8c8c-03711d66bae2",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f33977c2-c16e-462a-8ccd-dc460a3fbd40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa98cc04-4bb7-4b17-83d2-aa1e9b757eee",
        "cursor": {
          "ref": "f46bd84d-75ee-49e2-acb5-c6124c635d61",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4704e26e-9a60-4875-9083-fe05467fa8b8"
        },
        "item": {
          "id": "fa98cc04-4bb7-4b17-83d2-aa1e9b757eee",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2bab1963-e6fa-42c7-beae-c6f027b5e7ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be78ce40-a7a8-46b8-9cf5-7f073b2a5f4b",
        "cursor": {
          "ref": "ae5850cf-80e9-45db-b06a-47efc7598fe4",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "28991e68-1309-4517-999e-687c1929ff1e"
        },
        "item": {
          "id": "be78ce40-a7a8-46b8-9cf5-7f073b2a5f4b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "90694c55-519f-4477-a2d5-2857d6014bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17df6f08-513a-4ac5-81ca-28f32e0b375e",
        "cursor": {
          "ref": "6a10fecc-90f4-40b2-ae56-150e9840ec16",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "fe106729-0e33-4d8b-9492-9cac953d8170"
        },
        "item": {
          "id": "17df6f08-513a-4ac5-81ca-28f32e0b375e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7d2cebe2-db4d-40c6-aa62-f66dcde74519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dbd442d-da07-4845-8336-c6eff1e318d8",
        "cursor": {
          "ref": "dfc7ac9d-236c-4d35-ae09-c79010c920c1",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7350fdff-51a1-49f6-b34b-c35855e25d73"
        },
        "item": {
          "id": "8dbd442d-da07-4845-8336-c6eff1e318d8",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2f6246ef-f143-41b8-93d0-0a95fe4199b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57abd6af-6fe8-4dd2-8e08-5e37a2b2f13f",
        "cursor": {
          "ref": "43b5ca40-cce8-4071-8cf0-266752bf97d7",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "25dd166d-16c3-47cd-9728-2ea1063371b7"
        },
        "item": {
          "id": "57abd6af-6fe8-4dd2-8e08-5e37a2b2f13f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1c67d0af-dffd-43d5-8484-b300fe507d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f9c812-3bfa-45da-9d6e-25269e583196",
        "cursor": {
          "ref": "aae9e20c-2fe1-47b6-abc0-d2313f896d67",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3084a397-5840-42ce-9c2d-91345b629251"
        },
        "item": {
          "id": "f7f9c812-3bfa-45da-9d6e-25269e583196",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "81818929-e3a2-4ca1-b24f-7420a4de752c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0d0eef-aaad-4b5d-a348-22b00d17a7ca",
        "cursor": {
          "ref": "380766e3-9acb-417d-855e-760392862e2e",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "03ec0f95-f104-491e-8be7-2ce4faf5f1d1"
        },
        "item": {
          "id": "6e0d0eef-aaad-4b5d-a348-22b00d17a7ca",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "4e588115-fc65-4f67-984f-3cf849f53c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e99e94-ffaf-4f72-8641-08ac7919e559",
        "cursor": {
          "ref": "c7e73821-bdab-460f-8741-a69a7934d7d0",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "bab51c69-5475-44c6-b4c8-581e0532ee3b"
        },
        "item": {
          "id": "10e99e94-ffaf-4f72-8641-08ac7919e559",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7731d43a-5f76-4a28-b66c-cd03c33deaa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78acea29-5b34-402e-985b-ed1e9a75d63f",
        "cursor": {
          "ref": "47737947-0de6-41ef-98b4-7914aacee0e1",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b17b8d88-fa05-4e9c-8b85-14f4b2bb2168"
        },
        "item": {
          "id": "78acea29-5b34-402e-985b-ed1e9a75d63f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "3709b09e-feec-49a6-aadb-be9028286de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ed1c56-f485-47b3-bb37-644d75dcec6d",
        "cursor": {
          "ref": "fa5445de-657f-4395-a2f0-89abe406f200",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5961f688-7c15-40ef-90f0-5d272f772f4a"
        },
        "item": {
          "id": "64ed1c56-f485-47b3-bb37-644d75dcec6d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "92327ada-ddb2-4b97-af1b-d12e19a130d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb5e2cce-f3fe-49ee-b1ea-6f1e3fe7ab3e",
        "cursor": {
          "ref": "7f25c477-40b6-44e2-8953-455e59bb91cd",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "83582d17-4431-47f2-8361-51888a2592c3"
        },
        "item": {
          "id": "fb5e2cce-f3fe-49ee-b1ea-6f1e3fe7ab3e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "4d5e36a2-2665-4736-9a41-168c12c9e618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35306c78-9d6b-4054-8fd3-33551aaf81c5",
        "cursor": {
          "ref": "3b4a1109-2308-428f-81c6-c5c9df72f124",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "9c8ed3ed-1e7f-4b69-8544-0a22d6a8894a"
        },
        "item": {
          "id": "35306c78-9d6b-4054-8fd3-33551aaf81c5",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2b63b0cd-3b22-4685-9ebf-6a3a5305d97b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d9c0040-1adb-4b1d-b70b-72d4af577d0f",
        "cursor": {
          "ref": "6ae91b02-e164-4593-b297-22c3e56dc03e",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a01c9d03-ba7e-45f7-92b9-23a33637a0af"
        },
        "item": {
          "id": "3d9c0040-1adb-4b1d-b70b-72d4af577d0f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "fec4f4b3-94a1-4969-b21b-4c941757c3c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c4a791-091e-49c1-96cc-90da89baabef",
        "cursor": {
          "ref": "383866b0-03f3-430d-9471-7cfcb37675ad",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "831d84d5-fb69-4bfd-a4dd-db96142b09cf"
        },
        "item": {
          "id": "99c4a791-091e-49c1-96cc-90da89baabef",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "de135386-e100-475b-8eeb-9c4273310eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b66a213-adaf-4d31-b4da-19a11d13c7e6",
        "cursor": {
          "ref": "48c4bcdb-3d73-4e82-99f9-93e072f51487",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9ac53a50-3573-414c-bfc9-ea60e9a146a0"
        },
        "item": {
          "id": "9b66a213-adaf-4d31-b4da-19a11d13c7e6",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "2e56cf61-832e-4dd0-8a0e-3d774ede0227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8309450-6410-4fa5-ac7c-f7eb05df1036",
        "cursor": {
          "ref": "9730ed66-3365-4928-a657-8151616efb32",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "51c9040c-377c-4c7c-a067-d52c9130fb7b"
        },
        "item": {
          "id": "d8309450-6410-4fa5-ac7c-f7eb05df1036",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "18bd6227-453c-445a-874f-41e66777084e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2cf41b7-6d21-4a11-b8b2-898099419075",
        "cursor": {
          "ref": "2df7498d-8141-47cf-bd43-561e823bd2fa",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0ce9c99d-2787-4a06-9ddb-da7ac69ab71f"
        },
        "item": {
          "id": "d2cf41b7-6d21-4a11-b8b2-898099419075",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5e41d71a-c084-4a6b-b7e4-1a4e11419ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9f995c-b0bc-4558-a715-66be29d6444b",
        "cursor": {
          "ref": "78d2d938-2674-42e9-83bc-5c2e302631bf",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "8fff4d8d-c4c2-47d9-bf78-801603b90607"
        },
        "item": {
          "id": "1c9f995c-b0bc-4558-a715-66be29d6444b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "f6b0c54d-a62a-4bd8-afc7-69eb29947945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd902c1a-8998-42f6-a008-7509cdcc2fef",
        "cursor": {
          "ref": "aa278475-ed15-441f-983d-422dbeb1892c",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "38e0559e-d558-4498-ae4a-280761ef1608"
        },
        "item": {
          "id": "cd902c1a-8998-42f6-a008-7509cdcc2fef",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "0458d9fe-0723-45f4-86c2-814cedea61d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf138c6-48b1-47ee-b4cb-3a6f13edfbf3",
        "cursor": {
          "ref": "f9baaacc-2265-429a-89ec-ac5b626d0f39",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "26b74c47-7f4a-4488-9c2d-78552f34cc7c"
        },
        "item": {
          "id": "9cf138c6-48b1-47ee-b4cb-3a6f13edfbf3",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "cee5afb7-88c2-4823-802a-3fa7f2229b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a93050d-f890-4774-a7b5-928cce4326c9",
        "cursor": {
          "ref": "1b218251-21ea-4600-b929-9794493f515e",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "60ed4321-d4f7-4641-a224-d6f45f9dfc3d"
        },
        "item": {
          "id": "2a93050d-f890-4774-a7b5-928cce4326c9",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "92767ef8-de05-4aeb-bc79-8aa3a834c468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ed509f-4720-4b9a-97b5-dcf64748910c",
        "cursor": {
          "ref": "a96a2f83-990a-4ffe-a0c0-da4163823e2a",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "bf6f83f6-9cfc-4d22-8b28-8f59e41e8d9a"
        },
        "item": {
          "id": "77ed509f-4720-4b9a-97b5-dcf64748910c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c88ba14e-98bf-4437-b352-30601c7a7790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8fe2c50-8bcd-41da-87ad-1149c630d47a",
        "cursor": {
          "ref": "a3e22add-33f3-4810-a971-377892aa1d90",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2636dabf-117b-436c-8e5b-4d1c5abf8cc1"
        },
        "item": {
          "id": "b8fe2c50-8bcd-41da-87ad-1149c630d47a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "45f4c95b-e1e0-4421-8326-a56a31547a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6bf556-b987-4e52-b44e-073e62d5fca3",
        "cursor": {
          "ref": "f0021ee7-92b4-417e-818d-8a93d83085e1",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ab622b85-9696-46ab-8738-68239a575829"
        },
        "item": {
          "id": "de6bf556-b987-4e52-b44e-073e62d5fca3",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d26fd289-cbe8-44e9-afdc-ffc56ce23261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d6c6437-a841-4ab7-a3d3-9115a48ce61c",
        "cursor": {
          "ref": "2706f957-9e6c-4509-893c-1a25f74a07a6",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a82d81f6-4cc2-409f-b319-51c16b1dad1f"
        },
        "item": {
          "id": "4d6c6437-a841-4ab7-a3d3-9115a48ce61c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "46559c6c-4386-4577-88c1-38fd3a5800a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1901d56-5932-42eb-a350-712eba8129b3",
        "cursor": {
          "ref": "4a3a4eab-e9e7-4bfd-80d8-3a70730f2839",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "14879a4e-93cf-429d-bdc4-1b047194afc2"
        },
        "item": {
          "id": "d1901d56-5932-42eb-a350-712eba8129b3",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "74838d23-4c15-4bc3-ad60-6b93d82dda9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab84bf3-34f7-478e-a8f3-857ebdb248b8",
        "cursor": {
          "ref": "47df74dc-0661-453c-904d-252045544cfe",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "011b2dcb-d162-4e18-969b-a8fef8022542"
        },
        "item": {
          "id": "7ab84bf3-34f7-478e-a8f3-857ebdb248b8",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b9b07f6f-6459-4bf3-b413-222d14302cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc2d797-c06c-4e51-bd40-428e9f97e24b",
        "cursor": {
          "ref": "7103e5e8-530c-428d-8b54-01f126ff2642",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "bdec3b90-907e-4626-a939-7448887f4ad4"
        },
        "item": {
          "id": "dbc2d797-c06c-4e51-bd40-428e9f97e24b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8307f9e9-846a-48ee-9481-cfecd5dbde40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79eafc53-3b73-4ceb-9ac1-ea661f5e0e7a",
        "cursor": {
          "ref": "272624c2-1838-4794-89fa-93a059bb7f1b",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "62020d78-6823-482b-9d01-8067ab5fcbf3"
        },
        "item": {
          "id": "79eafc53-3b73-4ceb-9ac1-ea661f5e0e7a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "6d47863e-52ed-4b94-8a6c-e8c6d0954f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9011ddaf-64c1-4406-aa70-88222308ac1b",
        "cursor": {
          "ref": "8a5ba8ce-f8eb-4165-99f2-cf24e6bbaed9",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "44694825-8896-4509-8b3e-7060c4d750f6"
        },
        "item": {
          "id": "9011ddaf-64c1-4406-aa70-88222308ac1b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "dc528c6d-84af-4efa-a014-f47451012b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f62ea47-8d23-4d51-a9d9-f86c9624a335",
        "cursor": {
          "ref": "9205a437-8896-42e3-a1b2-54ceb19fba14",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "57f1bbaa-f36a-47d6-a7c2-351dd44362dd"
        },
        "item": {
          "id": "8f62ea47-8d23-4d51-a9d9-f86c9624a335",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "70d39347-ac96-4265-b2f7-7f65770bee13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c1d71b-8fc0-435c-bfb1-7104162efc7e",
        "cursor": {
          "ref": "6484bb75-43ea-4be5-b2dd-9edc7ebe972f",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e6768e78-3cec-4c09-9eaf-eda56c3b93a5"
        },
        "item": {
          "id": "17c1d71b-8fc0-435c-bfb1-7104162efc7e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7eaaf75a-b19b-4c5d-9b38-4e44d6ce631e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c782fab7-0da0-4602-9178-159e9fa53f87",
        "cursor": {
          "ref": "1b380236-80cd-4e7d-8975-71ab3f6e7ef9",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1e739394-75c0-463d-91c4-b36e312426a4"
        },
        "item": {
          "id": "c782fab7-0da0-4602-9178-159e9fa53f87",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ce9036c9-1704-4d20-b416-77d349ceeb59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e85ae68d-aa6f-491b-af2c-96d3ce53373a",
        "cursor": {
          "ref": "1cdbbd7e-8a0e-4686-817e-00c2a9d4f2af",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "8769717a-ca8a-413e-abee-03aef70f912b"
        },
        "item": {
          "id": "e85ae68d-aa6f-491b-af2c-96d3ce53373a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "01513ae9-1259-4760-aeea-b34fca675f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1633c51-4e6c-422b-9554-e50d74c6b065",
        "cursor": {
          "ref": "8cf3c26e-c722-4b96-bbb2-af2b9adf34d6",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "8e992e06-158f-4dce-9709-577453e578b1"
        },
        "item": {
          "id": "e1633c51-4e6c-422b-9554-e50d74c6b065",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e7fa0930-b70f-4737-9d3e-3befebf444c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba56a2b-df07-4c8d-8418-82ea51770d05",
        "cursor": {
          "ref": "1165afc1-b78d-4f34-9951-b7f4d4fa3d05",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "03ae404c-2abd-4bba-b27f-aaae9769e691"
        },
        "item": {
          "id": "6ba56a2b-df07-4c8d-8418-82ea51770d05",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "da461b03-0f17-4052-9c0c-7de16e393e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af9cb44-a2c3-42cd-9740-ea844b0d2f67",
        "cursor": {
          "ref": "550eed95-f749-4bda-ae07-10ac1a0524b9",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "e247c599-3aa9-4a5d-9349-a89ace8d9a36"
        },
        "item": {
          "id": "7af9cb44-a2c3-42cd-9740-ea844b0d2f67",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5717c752-bf28-4a8a-8a42-0d98057e1f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cba20f9-42f9-41ab-846d-550aed50c4e7",
        "cursor": {
          "ref": "8d9339ca-7497-41b9-9d88-4d71edec6653",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "513223cd-e113-428a-95ba-9d640edb7d9c"
        },
        "item": {
          "id": "9cba20f9-42f9-41ab-846d-550aed50c4e7",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ee8258fc-597b-4a60-963f-49f96cbb16c1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5c8db6-915c-4d5b-a747-e8bd92c2db41",
        "cursor": {
          "ref": "2e904c70-0081-4491-94c7-5e4d2d389c85",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b6a8286a-4445-4d88-9bb8-2a05ea41ac0d"
        },
        "item": {
          "id": "7f5c8db6-915c-4d5b-a747-e8bd92c2db41",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "87e0a54e-c7d2-43fb-b03e-3dcadf9b2a40",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "854eb8a7-c47e-458d-bc8a-a1dd60a0cd64",
        "cursor": {
          "ref": "b68d7a60-b9bb-40a5-bebf-882e4e494d9a",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "78e0863e-ae1c-42f2-b4d8-df0976cb337d"
        },
        "item": {
          "id": "854eb8a7-c47e-458d-bc8a-a1dd60a0cd64",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3c2d5479-d4a0-42e9-8084-590e229a01e9",
          "status": "OK",
          "code": 200,
          "responseTime": 3030,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db270e8-732e-49c5-8430-5fd98a9e59a0",
        "cursor": {
          "ref": "945c321a-adf9-4b26-b044-1ec42751c6a5",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "a06b387b-4080-4f5a-b328-b02eb7e81ca1"
        },
        "item": {
          "id": "5db270e8-732e-49c5-8430-5fd98a9e59a0",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ea12cf17-b2b7-447e-8abe-d187cdd6abad",
          "status": "OK",
          "code": 200,
          "responseTime": 2743,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd4dabe-5fa4-4636-ad13-066add1bf13e",
        "cursor": {
          "ref": "1c6891c0-c5a1-40e0-a42e-b6c3dcbc4ca3",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "31659d27-d7af-41c1-a990-184792f2557b"
        },
        "item": {
          "id": "2dd4dabe-5fa4-4636-ad13-066add1bf13e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "afbd1435-6b36-4ee3-8be9-c16ba5845d81",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd4dabe-5fa4-4636-ad13-066add1bf13e",
        "cursor": {
          "ref": "1c6891c0-c5a1-40e0-a42e-b6c3dcbc4ca3",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "31659d27-d7af-41c1-a990-184792f2557b"
        },
        "item": {
          "id": "2dd4dabe-5fa4-4636-ad13-066add1bf13e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "afbd1435-6b36-4ee3-8be9-c16ba5845d81",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb015872-61f7-443a-ae59-2230a3505d65",
        "cursor": {
          "ref": "fcf12800-7891-49a4-bfdc-0ef12cd39905",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7864179a-d76b-4424-96ae-19411582cb54"
        },
        "item": {
          "id": "fb015872-61f7-443a-ae59-2230a3505d65",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5fb9ca5e-9fd1-40ef-b4e5-d4905be25567",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c19e17e8-a4dd-4787-aea2-3916308ec750",
        "cursor": {
          "ref": "7ec72efc-2ec3-4719-9aa6-ec10bbde819c",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b416854f-6421-4ef1-9a77-758385fbc964"
        },
        "item": {
          "id": "c19e17e8-a4dd-4787-aea2-3916308ec750",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b84219df-85c2-4067-b209-829900aed7fe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}